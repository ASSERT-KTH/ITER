bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  encoding  =  TarUtils.restrictByNotNullOrUndefined();  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  encoding  =  TarUtils.restrictByNotNullOrUndefined();  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	encoding  =  TarUtils.restrictByNotNullOrUndefined();	  encoding    =    encoding.restrictByNotNullOrUndefined();    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
2	[BUG]  [BUGGY]  encoding  =  zipEncoding.restrictByNotNullOrUndefined();  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  encoding  =  zipEncoding.restrictByNotNullOrUndefined();  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	encoding  =  zipEncoding.restrictByNotNullOrUndefined();	  encoding    =    encoding.restrictByNotNullOrUndefined();    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
3	[BUG]  [BUGGY]  encoding  =  TarArchiveEntry.restrictByNotNullOrUndefined();  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  encoding  =  TarArchiveEntry.restrictByNotNullOrUndefined();  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	encoding  =  TarArchiveEntry.restrictByNotNullOrUndefined();	  encoding    =    encoding.restrictByNotNullOrUndefined();    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
4	[BUG]  [BUGGY]  encoding  =  TarEncoding.restrictByNotNullOrUndefined();  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  encoding  =  TarEncoding.restrictByNotNullOrUndefined();  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	encoding  =  TarEncoding.restrictByNotNullOrUndefined();	  encoding    =    encoding.restrictByNotNullOrUndefined();    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
5	[BUG]  [BUGGY]  encoding  =  ZipEncoding.restrictByNotNullOrUndefined();  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  encoding  =  ZipEncoding.restrictByNotNullOrUndefined();  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	encoding  =  ZipEncoding.restrictByNotNullOrUndefined();	  encoding    =    encoding.restrictByNotNullOrUndefined();    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
6	[BUG]  [BUGGY]  if(name.length()  <  =  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  <  =  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  <  =  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    <    =    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()!=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix.length()!=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    <    =    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	3	7	replace
8	[BUG]  [BUGGY]  if(prefix.length()!=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()!=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()!=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    <    =    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	3	7	replace
9	[BUG]  [BUGGY]  if(name.length()  <  =  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  <  =  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  <  =  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    <    =    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix.length()  >=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    <    =    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	3	3	replace
11	[BUG]  [BUGGY]  if(prefix.length()  >=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()  >=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    <    =    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	3	3	replace
12	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    <    =    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	3	7	replace
13	[BUG]  [BUGGY]  if(name.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    <    =    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	3	7	replace
14	[BUG]  [BUGGY]  [FE]  IOException  [FE]        ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  <  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  <  0)  {	  if(prefix.length()    >=    0)    {    if(prefix.length()    <    0)    {    	compilable	  [FE]  IOException  	90	1	replace
15	[BUG]  [BUGGY]  if(name.length()  <  0)  {  [FE]  IOException  [FE]        ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  <  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  <  0)  {	  if(prefix.length()    >=    0)    {    if(prefix.length()    <    0)    {    	compilable	  [FE]  IOException  	90	1	replace
16	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(!name.endsWith( "/ "))  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(!name.endsWith( "/ "))  {	  if(prefix.length()    >=    0)    {    if(prefix.length()    <    0)    {    	compilable	  [FE]  ComparisonFailure  	90	3	replace
17	[BUG]  [BUGGY]  if(!name.endsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(!name.endsWith( "/ "))  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(!name.endsWith( "/ "))  {	  if(prefix.length()    >=    0)    {    if(prefix.length()    <    0)    {    	compilable	  [FE]  ComparisonFailure  	90	3	replace
18	[BUG]  [BUGGY]  name  =  fileName.substring(0,  prefix.length());  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  fileName.substring(0,  prefix.length());  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  fileName.substring(0,  prefix.length());	  name    =    fileName.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
19	[BUG]  [BUGGY]  name  =  prefix.substring(0,  fileName.length()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  prefix.substring(0,  fileName.length()  -  1);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  prefix.substring(0,  fileName.length()  -  1);	  name    =    fileName.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
20	[BUG]  [BUGGY]  name  =  fileName.substring(0,  prefix.length()  -  2);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  fileName.substring(0,  prefix.length()  -  2);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  fileName.substring(0,  prefix.length()  -  2);	  name    =    fileName.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
21	[BUG]  [BUGGY]  name  =  fileName.substring(0,  header.length()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  fileName.substring(0,  header.length()  -  1);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  fileName.substring(0,  header.length()  -  1);	  name    =    fileName.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
22	[BUG]  [BUGGY]  name  =  fileName.substring(0,  prefix.length()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  fileName.substring(0,  prefix.length()  +  1);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  fileName.substring(0,  prefix.length()  +  1);	  name    =    fileName.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
23	[BUG]  [BUGGY]  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
24	[BUG]  [BUGGY]  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  ==  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  ==  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
25	[BUG]  [BUGGY]  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  >=  '/')  {  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  >=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  >=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
26	[BUG]  [BUGGY]  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  If(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  If(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    If(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  ';'  expected	49	None	add
27	[BUG]  [BUGGY]  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  >>  '/')  {  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  >>  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  >>  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
28	[BUG]  [BUGGY]  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(Prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(Prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    if(Prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
29	[BUG]  [BUGGY]  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  [Delete]  '/')  {  [CE]  ')'  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  [Delete]  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  [Delete]  '/')  {	  	non-compiled	[CE]  ')'  expected	49	None	add
30	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  name.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  &&  name.length()  >=  0)  {	  if(name.length()    >=    0)    {    	compilable	  [FE]  ComparisonFailure  	33	3	replace
31	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length()  >=  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  name.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  name.length()  >=  0)  {	  if(name.length()    >=    0)    {    	compilable	  [FE]  ComparisonFailure  	33	3	replace
32	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix  ==  null  ||  prefix.length()  >  0)  {	  if(prefix    ==    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  IOException  	62	1	replace
33	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  >  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix  ==  null  ||  prefix.length()  >  0)  {	  if(prefix    ==    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  IOException  	62	1	replace
34	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name  ==  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name  ==  null  &&  prefix.length()  >  0)  {	  if(prefix    ==    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  IOException  	62	1	replace
35	[BUG]  [BUGGY]  if(name  ==  null  &&  prefix.length()  >  0)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name  ==  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name  ==  null  &&  prefix.length()  >  0)  {	  if(prefix    ==    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  IOException  	62	1	replace
36	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name  ==  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name  ==  null  ||  prefix.length()  >  0)  {	  if(prefix    ==    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  IOException  	62	1	replace
37	[BUG]  [BUGGY]  if(name  ==  null  ||  prefix.length()  >  0)  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name  ==  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name  ==  null  ||  prefix.length()  >  0)  {	  if(prefix    ==    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  IOException  	62	1	replace
38	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
39	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
40	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
41	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  ||  prefix.length()  ==  0)  {	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    }    	compilable	  [FE]  ComparisonFailure  	99	3	replace
43	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  ||  prefix.length()  ==  0)  {	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    }    	compilable	  [FE]  ComparisonFailure  	99	3	replace
44	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null)  {	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    }    	compilable	  [FE]  ComparisonFailure  	99	3	replace
45	[BUG]  [BUGGY]  if(prefix!=  null)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null)  {	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    }    	compilable	  [FE]  ComparisonFailure  	99	3	replace
46	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()  <  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  ||  prefix.length()  <  0)  {	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    }    	compilable	  [FE]  ComparisonFailure  	99	3	replace
47	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  <  0)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()  <  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  ||  prefix.length()  <  0)  {	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    }    	compilable	  [FE]  ComparisonFailure  	99	3	replace
48	[BUG]  [BUGGY]  [FE]  IOException  [FE]              ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  ||  prefix.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix  ==  null  ||  prefix.length()!=  0)  {	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    }    	compilable	  [FE]  IOException  	99	1	replace
49	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()!=  0)  {  [FE]  IOException  [FE]              ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  ||  prefix.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix  ==  null  ||  prefix.length()!=  0)  {	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    }    	compilable	  [FE]  IOException  	99	1	replace
50	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getName()));  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getName()));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getName()));	  file.getParent().replaceChild(header,    new    File(encoding.getSimpleName()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
51	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getSimpleName()),  name);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getSimpleName()),  name);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getSimpleName()),  name);	  file.getParent().replaceChild(header,    new    File(encoding.getSimpleName()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
52	[BUG]  [BUGGY]  file.getParent().replaceChild(parent,  new  File(encoding.getSimpleName()));  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(parent,  new  File(encoding.getSimpleName()));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(parent,  new  File(encoding.getSimpleName()));	  file.getParent().replaceChild(header,    new    File(encoding.getSimpleName()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
53	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getSimpleName()  +  1));  [CE]  class,  interface,  or  enum  expected  [FE]                                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getSimpleName()  +  1));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getSimpleName()  +  1));	  file.getParent().replaceChild(header,    new    File(encoding.getSimpleName()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
54	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getSimpleName()),  prefix);  [CE]  class,  interface,  or  enum  expected  [FE]                                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getSimpleName()),  prefix);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getSimpleName()),  prefix);	  file.getParent().replaceChild(header,    new    File(encoding.getSimpleName()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
55	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getSimpleName()),  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getSimpleName()),  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getSimpleName()),  encoding);	  file.getParent().replaceChild(header,    new    File(encoding.getSimpleName()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
56	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getSimpleName(),  prefix));  [CE]  class,  interface,  or  enum  expected  [FE]                                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getSimpleName(),  prefix));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getSimpleName(),  prefix));	  file.getParent().replaceChild(header,    new    File(encoding.getSimpleName()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
57	[BUG]  [BUGGY]  nameLength  -=  encoding.length();  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  -=  encoding.length();  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  -=  encoding.length();	  nameLength    +=    encoding.length();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
58	[BUG]  [BUGGY]  nameLength  +=  encoding.length()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  +=  encoding.length()  +  1;  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  +=  encoding.length()  +  1;	  nameLength    +=    encoding.length();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
59	[BUG]  [BUGGY]  nameLength  +=  encoding.length()  *  2;  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  +=  encoding.length()  *  2;  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  +=  encoding.length()  *  2;	  nameLength    +=    encoding.length();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
60	[BUG]  [BUGGY]  nameLength  +=  header.length();  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  +=  header.length();  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  +=  header.length();	  nameLength    +=    encoding.length();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
61	[BUG]  [BUGGY]  nameLength  +=  encoding.length()  *  4;  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  +=  encoding.length()  *  4;  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  +=  encoding.length()  *  4;	  nameLength    +=    encoding.length();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
62	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	54	7	replace
63	[BUG]  [BUGGY]  if(name.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	54	7	replace
64	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()!=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()!=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	54	3	replace
65	[BUG]  [BUGGY]  if(name.length()!=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()!=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()!=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	54	3	replace
66	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  >  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	54	7	replace
67	[BUG]  [BUGGY]  if(name.length()  >  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  >  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	54	7	replace
68	[BUG]  [BUGGY]  [FE]  IOException  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix.length()  >  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  IOException  	54	1	replace
69	[BUG]  [BUGGY]  if(prefix.length()  >  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  IOException  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()  >  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  IOException  	54	1	replace
70	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  >=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	54	3	replace
71	[BUG]  [BUGGY]  if(name.length()  >=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  >=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	54	3	replace
72	[BUG]  [BUGGY]  if(name!=  null  &&  prefix.length()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  prefix.length()  <  =  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null  &&  prefix.length()  <  =  0)  {	  if(prefix!=    null    &&    prefix.length()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
73	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()  <  =  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  ||  prefix.length()  <  =  0)  {	  if(prefix!=    null    &&    prefix.length()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
74	[BUG]  [BUGGY]  [FE]  IOException  [FE]                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  <  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  &&  prefix.length()  <  0)  {	  if(prefix!=    null    &&    prefix.length()    <    =    0)    {    	compilable	  [FE]  IOException  	89	1	replace
75	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  <  0)  {  [FE]  IOException  [FE]                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  <  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  prefix.length()  <  0)  {	  if(prefix!=    null    &&    prefix.length()    <    =    0)    {    	compilable	  [FE]  IOException  	89	1	replace
76	[BUG]  [BUGGY]  if  (prefix!=  null  &&  prefix.length()!=  0)  {  if  (prefix!=  null  &&  prefix.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix!=  null  &&  prefix.length()!=  0)  {  if  (prefix!=  null  &&  prefix.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix!=    null    &&    prefix.length()!=    0)    {    if  (prefix!=  null  &&  prefix.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
77	[BUG]  [BUGGY]  if  (prefix!=  null  &&  prefix.length()!=  0)  {  if  (prefix!=  null  &&  prefix.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix!=  null  &&  prefix.length()!=  0)  {  if  (prefix!=  null  &&  prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix!=    null    &&    prefix.length()!=    0)    {    if  (prefix!=  null  &&  prefix.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
78	[BUG]  [BUGGY]  if  (prefix!=  null  &&  prefix.length()!=  0)  {  if  (prefix!=  null  &&  prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix!=  null  &&  prefix.length()!=  0)  {  if  (prefix!=  null  &&  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix!=    null    &&    prefix.length()!=    0)    {    if  (prefix!=  null  &&  prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
79	[BUG]  [BUGGY]  if  (prefix!=  null  &&  prefix.length()!=  0)  {  if  (prefix  ==  null  &&  prefix.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix!=  null  &&  prefix.length()!=  0)  {  if  (prefix  ==  null  &&  prefix.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix!=    null    &&    prefix.length()!=    0)    {    if  (prefix  ==  null  &&  prefix.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
80	[BUG]  [BUGGY]  if  (prefix!=  null  &&  prefix.length()!=  0)  {  if  (prefix!=  null  &&  prefix.length()  >>  0)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix!=  null  &&  prefix.length()!=  0)  {  if  (prefix!=  null  &&  prefix.length()  >>  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix!=    null    &&    prefix.length()!=    0)    {    if  (prefix!=  null  &&  prefix.length()  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
81	[BUG]  [BUGGY]  if  (prefix!=  null  &&  prefix.length()!=  0)  {  if  (prefix  >=  null  &&  prefix.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix!=  null  &&  prefix.length()!=  0)  {  if  (prefix  >=  null  &&  prefix.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix!=    null    &&    prefix.length()!=    0)    {    if  (prefix  >=  null  &&  prefix.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
82	[BUG]  [BUGGY]  if  (prefix!=  null  &&  prefix.length()!=  0)  {  if  (prefix  ==  null  &&  prefix.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix!=  null  &&  prefix.length()!=  0)  {  if  (prefix  ==  null  &&  prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix!=    null    &&    prefix.length()!=    0)    {    if  (prefix  ==  null  &&  prefix.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
83	[BUG]  [BUGGY]  if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()    ==    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
84	[BUG]  [BUGGY]  if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  If  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  If  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()    ==    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    If  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  ';'  expected	43	None	add
85	[BUG]  [BUGGY]  if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if  (prefix.length()!=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if  (prefix.length()!=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()    ==    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    if  (prefix.length()!=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
86	[BUG]  [BUGGY]  if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)  >=  '/')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)  >=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()    ==    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)  >=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
87	[BUG]  [BUGGY]  if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if  (prefix.length()  >=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if  (prefix.length()  >=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()    ==    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    if  (prefix.length()  >=  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
88	[BUG]  [BUGGY]  if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if  (Prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if  (Prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()    ==    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    if  (Prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
89	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name  ==  null  ||  prefix.length()  ==  0)  {	  if(prefix    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	93	3	replace
90	[BUG]  [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name  ==  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name  ==  null  ||  prefix.length()  ==  0)  {	  if(prefix    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	93	3	replace
91	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name!=  null  ||  prefix.length()  ==  0)  {	  if(prefix    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	93	3	replace
92	[BUG]  [BUGGY]  if(name!=  null  ||  prefix.length()  ==  0)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null  ||  prefix.length()  ==  0)  {	  if(prefix    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	93	3	replace
93	[BUG]  [BUGGY]  [FE]  IOException  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  &&  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix  ==  null  &&  prefix.length()  ==  0)  {	  if(prefix    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  IOException  	93	1	replace
94	[BUG]  [BUGGY]  if(prefix  ==  null  &&  prefix.length()  ==  0)  {  [FE]  IOException  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  &&  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix  ==  null  &&  prefix.length()  ==  0)  {	  if(prefix    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  IOException  	93	1	replace
95	[BUG]  [BUGGY]  [FE]  IOException  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name  ==  null  ||  name.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name  ==  null  ||  name.length()  ==  0)  {	  if(prefix    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  IOException  	93	1	replace
96	[BUG]  [BUGGY]  if(name  ==  null  ||  name.length()  ==  0)  {  [FE]  IOException  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name  ==  null  ||  name.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name  ==  null  ||  name.length()  ==  0)  {	  if(prefix    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  IOException  	93	1	replace
97	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  >  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	48	7	replace
98	[BUG]  [BUGGY]  if(name.length()  >  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  >  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	48	7	replace
99	[BUG]  [BUGGY]  [FE]  IOException  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix.length()  >  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  IOException  	48	1	replace
100	[BUG]  [BUGGY]  if(prefix.length()  >  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  IOException  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()  >  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  IOException  	48	1	replace
101	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()!=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()!=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	48	3	replace
102	[BUG]  [BUGGY]  if(name.length()!=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()!=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()!=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	48	3	replace
103	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  ||  prefix.length()  >=  0)  {	  if(prefix!=    null    &&    prefix.length()    >=    0)    {    	compilable	  [FE]  ComparisonFailure  	75	3	replace
104	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  >=  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  ||  prefix.length()  >=  0)  {	  if(prefix!=    null    &&    prefix.length()    >=    0)    {    	compilable	  [FE]  ComparisonFailure  	75	3	replace
105	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name!=  null  &&  prefix.length()  >=  0)  {	  if(prefix!=    null    &&    prefix.length()    >=    0)    {    	compilable	  [FE]  ComparisonFailure  	75	3	replace
106	[BUG]  [BUGGY]  if(name!=  null  &&  prefix.length()  >=  0)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null  &&  prefix.length()  >=  0)  {	  if(prefix!=    null    &&    prefix.length()    >=    0)    {    	compilable	  [FE]  ComparisonFailure  	75	3	replace
107	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name!=  null)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    if(prefix    ==    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	68	3	replace
108	[BUG]  [BUGGY]  if(name!=  null)  {  [FE]  ComparisonFailure  [FE]          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    if(prefix    ==    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	68	3	replace
109	[BUG]  [BUGGY]  name  =  prefix  + "/ "  +  name;  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  prefix  + "/ "  +  name;  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  prefix  + "/ "  +  name;	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    }    name    =    prefix    +       "/   "    +    name;    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
110	[BUG]  [BUGGY]  Name  name  =  prefix  + "/ "  +  name;  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  Name  name  =  prefix  + "/ "  +  name;  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	Name  name  =  prefix  + "/ "  +  name;	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    }    name    =    prefix    +       "/   "    +    name;    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
111	[BUG]  [BUGGY]  names.add(prefix  + "/ "  +  name;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  names.add(prefix  + "/ "  +  name;  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	names.add(prefix  + "/ "  +  name;	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    }    name    =    prefix    +       "/   "    +    name;    	non-compiled	[CE]  	21	None	replace
112	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
113	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
114	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
115	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  nameLength);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  nameLength);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  nameLength);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
116	[BUG]  [BUGGY]  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
117	[BUG]  [BUGGY]  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)  ==  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)  ==  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
118	[BUG]  [BUGGY]  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)  >=  '/')  {  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)  >=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)  >=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
119	[BUG]  [BUGGY]  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  If(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  If(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    If(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  ';'  expected	51	None	add
120	[BUG]  [BUGGY]  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)  >>  '/')  {  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)  >>  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)  >>  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
121	[BUG]  [BUGGY]  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(Prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(Prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    if(Prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
122	[BUG]  [BUGGY]  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)  [Delete]  '/')  {  [CE]  ')'  expected  [FE]                StringIndexOutOfBoundsException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)  [Delete]  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)  [Delete]  '/')  {	  	non-compiled	[CE]  ')'  expected	51	None	add
123	[BUG]  [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  name.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  if(name!=  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    &&    name.length()    >    0)    {    if(name!=  null  &&  name.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
124	[BUG]  [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  if(name  ==  null  &&  name.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  if(name  ==  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    &&    name.length()    >    0)    {    if(name  ==  null  &&  name.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
125	[BUG]  [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  if(name  >=  null  &&  name.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  if(name  >=  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    &&    name.length()    >    0)    {    if(name  >=  null  &&  name.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
126	[BUG]  [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  If(name!=  null  &&  name.length()  >  0)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  If(name!=  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    &&    name.length()    >    0)    {    If(name!=  null  &&  name.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	57	None	add
127	[BUG]  [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  if(name  >>  null  &&  name.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  if(name  >>  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    &&    name.length()    >    0)    {    if(name  >>  null  &&  name.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
128	[BUG]  [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  if(name  [BUGGY]  null  &&  name.length()  >  0)  {  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  if(name  [BUGGY]  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    &&    name.length()    >    0)    {    if(name  [BUGGY]  null  &&  name.length()  >  0)  {	  	non-compiled	[CE]  ')'  expected	57	None	add
129	[BUG]  [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  if(name  [Delete]  null  &&  name.length()  >  0)  {  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  if(name  [Delete]  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    &&    name.length()    >    0)    {    if(name  [Delete]  null  &&  name.length()  >  0)  {	  	non-compiled	[CE]  ')'  expected	57	None	add
130	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  ||  prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name!=  null  ||  prefix.length()  >=  0)  {	  if(name!=    null    ||    prefix.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	66	3	replace
131	[BUG]  [BUGGY]  if(name!=  null  ||  prefix.length()  >=  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  ||  prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null  ||  prefix.length()  >=  0)  {	  if(name!=    null    ||    prefix.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	66	3	replace
132	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath(),  name));  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath(),  name));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getPath(),  name));	  file.getParent().replaceChild(header,    new    File(encoding.getPath(),    prefix));    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
133	[BUG]  [BUGGY]  file.getParent().replaceChild(parent,  new  File(encoding.getPath(),  prefix));  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(parent,  new  File(encoding.getPath(),  prefix));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(parent,  new  File(encoding.getPath(),  prefix));	  file.getParent().replaceChild(header,    new    File(encoding.getPath(),    prefix));    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
134	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath(),  prefix),  name);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath(),  prefix),  name);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getPath(),  prefix),  name);	  file.getParent().replaceChild(header,    new    File(encoding.getPath(),    prefix));    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
135	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath(),  oldStyle));  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath(),  oldStyle));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getPath(),  oldStyle));	  file.getParent().replaceChild(header,    new    File(encoding.getPath(),    prefix));    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
136	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getName(),  prefix));  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getName(),  prefix));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getName(),  prefix));	  file.getParent().replaceChild(header,    new    File(encoding.getPath(),    prefix));    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
137	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getURL(),  prefix));  [CE]  class,  interface,  or  enum  expected  [FE]                                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getURL(),  prefix));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getURL(),  prefix));	  file.getParent().replaceChild(header,    new    File(encoding.getPath(),    prefix));    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
138	[BUG]  [BUGGY]  file.getParent().replaceChild(prefix,  new  File(encoding.getPath(),  header));  [CE]  class,  interface,  or  enum  expected  [FE]                                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(prefix,  new  File(encoding.getPath(),  header));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(prefix,  new  File(encoding.getPath(),  header));	  file.getParent().replaceChild(header,    new    File(encoding.getPath(),    prefix));    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
139	[BUG]  [BUGGY]  If  (prefix.length()  ==  0)  {  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  If  (prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	If  (prefix.length()  ==  0)  {	  if    (prefix.length()!=    0)    {    If    (prefix.length()!=    0)    {    	non-compiled	[CE]  ';'  expected	18	None	replace
140	[BUG]  [BUGGY]  If  (prefix.length()!=  0)  {  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  If  (prefix.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	If  (prefix.length()!=  0)  {	  if    (prefix.length()!=    0)    {    If    (prefix.length()!=    0)    {    	non-compiled	[CE]  ';'  expected	18	None	replace
141	[BUG]  [BUGGY]  If  (prefix.length()  >=  0)  {  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  If  (prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	If  (prefix.length()  >=  0)  {	  if    (prefix.length()!=    0)    {    If    (prefix.length()!=    0)    {    	non-compiled	[CE]  ';'  expected	18	None	replace
142	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  name.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  &&  name.length()!=  0)  {	  if(name.length()!=    0)    {    	compilable	  [FE]  ComparisonFailure  	35	3	replace
143	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length()!=  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  name.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  name.length()!=  0)  {	  if(name.length()!=    0)    {    	compilable	  [FE]  ComparisonFailure  	35	3	replace
144	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  name.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  ||  name.length()!=  0)  {	  if(name.length()!=    0)    {    	compilable	  [FE]  ComparisonFailure  	35	3	replace
145	[BUG]  [BUGGY]  if(prefix!=  null  ||  name.length()!=  0)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  name.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  ||  name.length()!=  0)  {	  if(name.length()!=    0)    {    	compilable	  [FE]  ComparisonFailure  	35	3	replace
146	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()!=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix.length()!=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    <    =    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	7	replace
147	[BUG]  [BUGGY]  if(prefix.length()!=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()!=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()!=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    <    =    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	7	replace
148	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix.length()  >=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    <    =    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	2	3	replace
149	[BUG]  [BUGGY]  if(prefix.length()  >=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()  >=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    <    =    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	2	3	replace
150	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  <  =  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()  <  =  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  ||  prefix.length()  <  =  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    <    =    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
151	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  ||  prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    <    =    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	2	3	replace
152	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  ||  prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    <    =    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	2	3	replace
153	[BUG]  [BUGGY]  if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()    ==    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
154	[BUG]  [BUGGY]  if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  If  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  If  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()    ==    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    If  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  ';'  expected	41	None	add
155	[BUG]  [BUGGY]  if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if  (prefix.length()!=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if  (prefix.length()!=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()    ==    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    if  (prefix.length()!=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
156	[BUG]  [BUGGY]  if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)  >=  '/')  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)  >=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()    ==    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)  >=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
157	[BUG]  [BUGGY]  if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if  (Prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if  (Prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()    ==    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    if  (Prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
158	[BUG]  [BUGGY]  names.add(prefix  + "/ "  +  name);  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  names.add(prefix  + "/ "  +  name);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	names.add(prefix  + "/ "  +  name);	  if(name.length()    >    0)    {    if(name.length()    >    0)    <    name    =    prefix    +       "/   "    +    name;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
159	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  ==  0  ||  prefix.length()  ==  0)  {	  if(name.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	46	3	replace
160	[BUG]  [BUGGY]  if(name.length()  ==  0  ||  prefix.length()  ==  0)  {  [FE]  ComparisonFailure  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  ==  0  ||  prefix.length()  ==  0)  {	  if(name.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	46	3	replace
161	[BUG]  [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
162	[BUG]  [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  ==  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  ==  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
163	[BUG]  [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  >=  '/')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  >=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  >=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
164	[BUG]  [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  If(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  If(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    If(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  ';'  expected	47	None	add
165	[BUG]  [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  >>  '/')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  >>  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)  >>  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
166	[BUG]  [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
167	[BUG]  [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  Prefix.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  Prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  Prefix.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
168	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  ||  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name!=  null  ||  name.length()  >  0)  {	  if(name!=    null    &&    name.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	58	3	replace
169	[BUG]  [BUGGY]  if(name!=  null  ||  name.length()  >  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  ||  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null  ||  name.length()  >  0)  {	  if(name!=    null    &&    name.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	58	3	replace
170	[BUG]  [BUGGY]  [FE]  IOException  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  name.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name!=  null  &&  name.length()  ==  0)  {	  if(name!=    null    &&    name.length()    >    0)    {    	compilable	  [FE]  IOException  	58	1	replace
171	[BUG]  [BUGGY]  if(name!=  null  &&  name.length()  ==  0)  {  [FE]  IOException  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  name.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null  &&  name.length()  ==  0)  {	  if(name!=    null    &&    name.length()    >    0)    {    	compilable	  [FE]  IOException  	58	1	replace
172	[BUG]  [BUGGY]  [FE]  IOException  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name  ==  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name  ==  null  &&  name.length()  >  0)  {	  if(name!=    null    &&    name.length()    >    0)    {    	compilable	  [FE]  IOException  	58	1	replace
173	[BUG]  [BUGGY]  if(name  ==  null  &&  name.length()  >  0)  {  [FE]  IOException  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name  ==  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name  ==  null  &&  name.length()  >  0)  {	  if(name!=    null    &&    name.length()    >    0)    {    	compilable	  [FE]  IOException  	58	1	replace
174	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
175	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
176	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
177	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
178	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  name);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  name);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
179	[BUG]  [BUGGY]  if(prefix  ==  null  &&  prefix.length()  >  0)  {  if(prefix  ==  null  &&  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  &&  prefix.length()  >  0)  {  if(prefix  ==  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix    ==    null    &&    prefix.length()    >    0)    {    if(prefix  ==  null  &&  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
180	[BUG]  [BUGGY]  if(prefix  ==  null  &&  prefix.length()  >  0)  {  if(prefix!=  null  &&  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  &&  prefix.length()  >  0)  {  if(prefix!=  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix    ==    null    &&    prefix.length()    >    0)    {    if(prefix!=  null  &&  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
181	[BUG]  [BUGGY]  if(prefix  ==  null  &&  prefix.length()  >  0)  {  if(prefix  >=  null  &&  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  &&  prefix.length()  >  0)  {  if(prefix  >=  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix    ==    null    &&    prefix.length()    >    0)    {    if(prefix  >=  null  &&  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
182	[BUG]  [BUGGY]  if(prefix  ==  null  &&  prefix.length()  >  0)  {  if(Prefix  ==  null  &&  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  &&  prefix.length()  >  0)  {  if(Prefix  ==  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix    ==    null    &&    prefix.length()    >    0)    {    if(Prefix  ==  null  &&  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
183	[BUG]  [BUGGY]  if(prefix  ==  null  &&  prefix.length()  >  0)  {  If(prefix  ==  null  &&  prefix.length()  >  0)  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  &&  prefix.length()  >  0)  {  If(prefix  ==  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix    ==    null    &&    prefix.length()    >    0)    {    If(prefix  ==  null  &&  prefix.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	61	None	add
184	[BUG]  [BUGGY]  if(prefix  ==  null  &&  prefix.length()  >  0)  {  if(prefix  ==  null  &&  Prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  &&  prefix.length()  >  0)  {  if(prefix  ==  null  &&  Prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix    ==    null    &&    prefix.length()    >    0)    {    if(prefix  ==  null  &&  Prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
185	[BUG]  [BUGGY]  if(prefix  ==  null  &&  prefix.length()  >  0)  {  if(prefix  >>  null  &&  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  &&  prefix.length()  >  0)  {  if(prefix  >>  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix    ==    null    &&    prefix.length()    >    0)    {    if(prefix  >>  null  &&  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
186	[BUG]  [BUGGY]  If(prefix!=  null  &&  prefix.length()  >  0)  {  [CE]  ';'  expected  [FE]                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  If(prefix!=  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	If(prefix!=  null  &&  prefix.length()  >  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    If(prefix!=    null    &&    prefix.length()    >    0)    {    	non-compiled	[CE]  ';'  expected	71	None	replace
187	[BUG]  [BUGGY]  If(prefix  ==  null  &&  prefix.length()  >  0)  {  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  If(prefix  ==  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	If(prefix  ==  null  &&  prefix.length()  >  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    If(prefix!=    null    &&    prefix.length()    >    0)    {    	non-compiled	[CE]  ';'  expected	71	None	replace
188	[BUG]  [BUGGY]  If(name!=  null  &&  name.length()  >  0)  {  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  If(name!=  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	If(name!=  null  &&  name.length()  >  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    If(prefix!=    null    &&    prefix.length()    >    0)    {    	non-compiled	[CE]  ';'  expected	71	None	replace
189	[BUG]  [BUGGY]  If(prefix!=  null  &&  name.length()  >  0)  {  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  If(prefix!=  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	If(prefix!=  null  &&  name.length()  >  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    If(prefix!=    null    &&    prefix.length()    >    0)    {    	non-compiled	[CE]  ';'  expected	71	None	replace
190	[BUG]  [BUGGY]  If(name  ==  null  &&  name.length()  >  0)  {  [CE]  ';'  expected  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  If(name  ==  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	If(name  ==  null  &&  name.length()  >  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    If(prefix!=    null    &&    prefix.length()    >    0)    {    	non-compiled	[CE]  ';'  expected	71	None	replace
191	[BUG]  [BUGGY]  If(name!=  null  &&  prefix.length()  >  0)  {  [CE]  ';'  expected  [FE]                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  If(name!=  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	If(name!=  null  &&  prefix.length()  >  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    If(prefix!=    null    &&    prefix.length()    >    0)    {    	non-compiled	[CE]  ';'  expected	71	None	replace
192	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name!=  null  &&  prefix.length()  ==  0)  {	  if(name!=    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	56	3	replace
193	[BUG]  [BUGGY]  if(name!=  null  &&  prefix.length()  ==  0)  {  [FE]  ComparisonFailure  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null  &&  prefix.length()  ==  0)  {	  if(name!=    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	56	3	replace
194	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  ==  0  ||  name.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	96	3	replace
195	[BUG]  [BUGGY]  if(name.length()  ==  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  ==  0  ||  name.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	96	3	replace
196	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  &&  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  >  0  &&  name.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	96	3	replace
197	[BUG]  [BUGGY]  if(name.length()  >  0  &&  name.charAt(name.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  &&  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  >  0  &&  name.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	96	3	replace
198	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()!=  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()!=  0  ||  name.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	96	3	replace
199	[BUG]  [BUGGY]  if(name.length()!=  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()!=  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()!=  0  ||  name.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	96	3	replace
200	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >=  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  >=  0  ||  name.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	96	3	replace
201	[BUG]  [BUGGY]  if(name.length()  >=  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >=  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  >=  0  ||  name.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	96	3	replace
202	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	96	3	replace
203	[BUG]  [BUGGY]  if(prefix.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	96	3	replace
204	[BUG]  [BUGGY]  [FE]  IOException  [FE]              ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  &&  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix.length()  >  0  &&  name.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  IOException  	96	1	replace
205	[BUG]  [BUGGY]  if(prefix.length()  >  0  &&  name.charAt(name.length()  -  1)!=  '/')  {  [FE]  IOException  [FE]              ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  &&  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()  >  0  &&  name.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  IOException  	96	1	replace
206	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath()  +  1));  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath()  +  1));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getPath()  +  1));	  file.getParent().replaceChild(header,    new    File(encoding.getPath()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
207	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath()),  name);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath()),  name);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getPath()),  name);	  file.getParent().replaceChild(header,    new    File(encoding.getPath()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
208	[BUG]  [BUGGY]  file.getParent().replaceChild(parent,  new  File(encoding.getPath()));  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(parent,  new  File(encoding.getPath()));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(parent,  new  File(encoding.getPath()));	  file.getParent().replaceChild(header,    new    File(encoding.getPath()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
209	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getAbsolutePath()));  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getAbsolutePath()));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getAbsolutePath()));	  file.getParent().replaceChild(header,    new    File(encoding.getPath()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
210	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getURL()));  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getURL()));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getURL()));	  file.getParent().replaceChild(header,    new    File(encoding.getPath()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
211	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath()),  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath()),  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getPath()),  encoding);	  file.getParent().replaceChild(header,    new    File(encoding.getPath()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
212	[BUG]  [BUGGY]  nameLength  +=  encoding.charAt(prefix  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  +=  encoding.charAt(prefix  -  1);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  +=  encoding.charAt(prefix  -  1);	  nameLength    +=    encoding.charAt(nameLength    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
213	[BUG]  [BUGGY]  nameLength  +=  prefix.charAt(nameLength  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  +=  prefix.charAt(nameLength  -  1);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  +=  prefix.charAt(nameLength  -  1);	  nameLength    +=    encoding.charAt(nameLength    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
214	[BUG]  [BUGGY]  nameLength  +=  encoding.charAt(nameLength  -  1));  [CE]  [FE]                            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  +=  encoding.charAt(nameLength  -  1));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  +=  encoding.charAt(nameLength  -  1));	  nameLength    +=    encoding.charAt(nameLength    -    1);    	non-compiled	[CE]  	87	None	replace
215	[BUG]  [BUGGY]  nameLength  -=  encoding.charAt(nameLength  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  -=  encoding.charAt(nameLength  -  1);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  -=  encoding.charAt(nameLength  -  1);	  nameLength    +=    encoding.charAt(nameLength    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
216	[BUG]  [BUGGY]  nameLength  +=  encoding.charAt(nameLength  -  2);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  +=  encoding.charAt(nameLength  -  2);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  +=  encoding.charAt(nameLength  -  2);	  nameLength    +=    encoding.charAt(nameLength    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
217	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  ==  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix.length()  ==  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {	  if    (prefix.length()    ==    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	44	7	replace
218	[BUG]  [BUGGY]  if(prefix.length()  ==  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  ==  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()  ==  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {	  if    (prefix.length()    ==    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	44	7	replace
219	[BUG]  [BUGGY]  If(prefix.length()  >  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  If(prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	If(prefix.length()  >  0)  {	  if(prefix.length()    >=    0)    {    If(prefix.length()    >=    0)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
220	[BUG]  [BUGGY]  If(name.length()  >=  0)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  If(name.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	If(name.length()  >=  0)  {	  if(prefix.length()    >=    0)    {    If(prefix.length()    >=    0)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
221	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(prefix!=  null  &&  name.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(prefix!=  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    name.length()    >    0)    {    if(prefix!=  null  &&  name.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
222	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(prefix  ==  null  &&  name.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(prefix  ==  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    name.length()    >    0)    {    if(prefix  ==  null  &&  name.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
223	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(prefix  >=  null  &&  name.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(prefix  >=  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    name.length()    >    0)    {    if(prefix  >=  null  &&  name.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
224	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  If(prefix!=  null  &&  name.length()  >  0)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  If(prefix!=  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    name.length()    >    0)    {    If(prefix!=  null  &&  name.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	76	None	add
225	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(prefix  >>  null  &&  name.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(prefix  >>  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    name.length()    >    0)    {    if(prefix  >>  null  &&  name.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
226	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(Prefix!=  null  &&  name.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(Prefix!=  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    name.length()    >    0)    {    if(Prefix!=  null  &&  name.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
227	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(prefix  [Delete]  null  &&  name.length()  >  0)  {  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  if(prefix  [Delete]  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    name.length()    >    0)    {    if(prefix  [Delete]  null  &&  name.length()  >  0)  {	  	non-compiled	[CE]  ')'  expected	76	None	add
228	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  ||  name.length()  >  0)  {	  if(prefix!=    null    &&    name.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	77	3	replace
229	[BUG]  [BUGGY]  if(prefix!=  null  ||  name.length()  >  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  ||  name.length()  >  0)  {	  if(prefix!=    null    &&    name.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	77	3	replace
230	[BUG]  [BUGGY]  [FE]  IOException  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix  ==  null  &&  name.length()  >  0)  {	  if(prefix!=    null    &&    name.length()    >    0)    {    	compilable	  [FE]  IOException  	77	1	replace
231	[BUG]  [BUGGY]  if(prefix  ==  null  &&  name.length()  >  0)  {  [FE]  IOException  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  &&  name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix  ==  null  &&  name.length()  >  0)  {	  if(prefix!=    null    &&    name.length()    >    0)    {    	compilable	  [FE]  IOException  	77	1	replace
232	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  ==  0  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix.length()  ==  0  ||  prefix.length()  ==  0)  {	  if    (prefix.length()    ==    0)    {    if    (Prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	38	3	replace
233	[BUG]  [BUGGY]  if(prefix.length()  ==  0  ||  prefix.length()  ==  0)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  ==  0  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()  ==  0  ||  prefix.length()  ==  0)  {	  if    (prefix.length()    ==    0)    {    if    (Prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	38	3	replace
234	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  ==  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	98	7	replace
235	[BUG]  [BUGGY]  if(name.length()  ==  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  ==  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	98	7	replace
236	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  &&  prefix.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  >  0  &&  prefix.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	98	7	replace
237	[BUG]  [BUGGY]  if(name.length()  >  0  &&  prefix.charAt(name.length()  -  1)!=  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  &&  prefix.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  >  0  &&  prefix.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	98	7	replace
238	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	98	7	replace
239	[BUG]  [BUGGY]  if(prefix.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	98	7	replace
240	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()!=  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()!=  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	98	3	replace
241	[BUG]  [BUGGY]  if(name.length()!=  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()!=  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()!=  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	98	3	replace
242	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >=  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  >=  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	98	3	replace
243	[BUG]  [BUGGY]  if(name.length()  >=  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >=  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  >=  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	98	3	replace
244	[BUG]  [BUGGY]  if(name!=  null  ||  prefix.length()  >  0)  {  if(name!=  null  ||  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  ||  prefix.length()  >  0)  {  if(name!=  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    ||    prefix.length()    >    0)    {    if(name!=  null  ||  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
245	[BUG]  [BUGGY]  if(name!=  null  ||  prefix.length()  >  0)  {  if(name  ==  null  ||  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  ||  prefix.length()  >  0)  {  if(name  ==  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    ||    prefix.length()    >    0)    {    if(name  ==  null  ||  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
246	[BUG]  [BUGGY]  if(name!=  null  ||  prefix.length()  >  0)  {  if(name  >=  null  ||  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  ||  prefix.length()  >  0)  {  if(name  >=  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    ||    prefix.length()    >    0)    {    if(name  >=  null  ||  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
247	[BUG]  [BUGGY]  if(name!=  null  ||  prefix.length()  >  0)  {  If(name!=  null  ||  prefix.length()  >  0)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  ||  prefix.length()  >  0)  {  If(name!=  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    ||    prefix.length()    >    0)    {    If(name!=  null  ||  prefix.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	65	None	add
248	[BUG]  [BUGGY]  if(name!=  null  ||  prefix.length()  >  0)  {  if(name  >>  null  ||  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  ||  prefix.length()  >  0)  {  if(name  >>  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    ||    prefix.length()    >    0)    {    if(name  >>  null  ||  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
249	[BUG]  [BUGGY]  if(name!=  null  ||  prefix.length()  >  0)  {  if(name  [BUGGY]  null  ||  prefix.length()  >  0)  {  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  ||  prefix.length()  >  0)  {  if(name  [BUGGY]  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    ||    prefix.length()    >    0)    {    if(name  [BUGGY]  null  ||  prefix.length()  >  0)  {	  	non-compiled	[CE]  ')'  expected	65	None	add
250	[BUG]  [BUGGY]  if(name!=  null  ||  prefix.length()  >  0)  {  if(name  [Delete]  null  ||  prefix.length()  >  0)  {  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  ||  prefix.length()  >  0)  {  if(name  [Delete]  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    ||    prefix.length()    >    0)    {    if(name  [Delete]  null  ||  prefix.length()  >  0)  {	  	non-compiled	[CE]  ')'  expected	65	None	add
251	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  ||  prefix.length()!=  0)  {	  if(prefix.length()    >=    0)    {    if(prefix.length()!=    0)    {    	compilable	  [FE]  ComparisonFailure  	7	3	replace
252	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()!=  0)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  ||  prefix.length()!=  0)  {	  if(prefix.length()    >=    0)    {    if(prefix.length()!=    0)    {    	compilable	  [FE]  ComparisonFailure  	7	3	replace
253	[BUG]  [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    ==    0)    {    if(name.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
254	[BUG]  [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    ==    0)    {    if(name.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
255	[BUG]  [BUGGY]  if(name.length()  ==  0)  {  if(name.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0)  {  if(name.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    ==    0)    {    if(name.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
256	[BUG]  [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)  ==  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    ==    0)    {    if(name.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)  ==  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
257	[BUG]  [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  ==  0  ||  prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  ==  0  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    ==    0)    {    if(name.length()  ==  0  ||  prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
258	[BUG]  [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  'n')  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  'n')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    ==    0)    {    if(name.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  'n')  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
259	[BUG]  [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  ==  0  ||  name.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  ==  0  ||  name.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    ==    0)    {    if(name.length()  ==  0  ||  name.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
260	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
261	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
262	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
263	[BUG]  [BUGGY]  If  (prefix!=  null  ||  prefix.length()  ==  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  If  (prefix!=  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	If  (prefix!=  null  ||  prefix.length()  ==  0)  {	  if    (prefix.length()    ==    0)    {    If    (prefix.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
264	[BUG]  [BUGGY]  If  (name.length()  ==  0)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  If  (name.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	If  (name.length()  ==  0)  {	  if    (prefix.length()    ==    0)    {    If    (prefix.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
265	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    name);    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
266	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    name);    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
267	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    name);    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
268	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix    ==    null    ||    prefix.length()    ==    0)    {    if(prefix  ==  null  ||  prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
269	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(prefix!=  null  ||  prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(prefix!=  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix    ==    null    ||    prefix.length()    ==    0)    {    if(prefix!=  null  ||  prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
270	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(prefix  ==  null  ||  prefix.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(prefix  ==  null  ||  prefix.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix    ==    null    ||    prefix.length()    ==    0)    {    if(prefix  ==  null  ||  prefix.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
271	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  If(prefix  ==  null  ||  prefix.length()  ==  0)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  If(prefix  ==  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix    ==    null    ||    prefix.length()    ==    0)    {    If(prefix  ==  null  ||  prefix.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	92	None	add
272	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(prefix  ==  null  ||  prefix.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(prefix  ==  null  ||  prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix    ==    null    ||    prefix.length()    ==    0)    {    if(prefix  ==  null  ||  prefix.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
273	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(Prefix  ==  null  ||  prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(Prefix  ==  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix    ==    null    ||    prefix.length()    ==    0)    {    if(Prefix  ==  null  ||  prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
274	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(prefix  >=  null  ||  prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(prefix  >=  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix    ==    null    ||    prefix.length()    ==    0)    {    if(prefix  >=  null  ||  prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
275	[BUG]  [BUGGY]  if(prefix.length()  <  0)  {  if(prefix.length()  <  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  <  0)  {  if(prefix.length()  <  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    <    0)    {    if(prefix.length()  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
276	[BUG]  [BUGGY]  if(prefix.length()  <  0)  {  if(Prefix.length()  <  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  <  0)  {  if(Prefix.length()  <  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    <    0)    {    if(Prefix.length()  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
277	[BUG]  [BUGGY]  if(prefix.length()  <  0)  {  if(prefix.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  <  0)  {  if(prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    <    0)    {    if(prefix.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
278	[BUG]  [BUGGY]  if(prefix.length()  <  0)  {  If(prefix.length()  <  0)  {  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  <  0)  {  If(prefix.length()  <  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    <    0)    {    If(prefix.length()  <  0)  {	  	non-compiled	[CE]  ';'  expected	4	None	add
279	[BUG]  [BUGGY]  if(prefix.length()  <  0)  {  if(name.length()  <  0)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  <  0)  {  if(name.length()  <  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    <    0)    {    if(name.length()  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
280	[BUG]  [BUGGY]  if(prefix.length()  <  0)  {  if(prefix.length()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  <  0)  {  if(prefix.length()  <  =  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    <    0)    {    if(prefix.length()  <  =  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
281	[BUG]  [BUGGY]  if(name!=  null  &&  prefix.length  >  0)  {  [CE]  cannot  find  symbol  length  [FE]        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  prefix.length  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null  &&  prefix.length  >  0)  {	  if(prefix!=    null    &&    prefix.length    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	91	None	replace
282	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length  >  0)  {  [CE]  cannot  find  symbol  length  [FE]          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  name.length  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  name.length  >  0)  {	  if(prefix!=    null    &&    prefix.length    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	91	None	replace
283	[BUG]  [BUGGY]  if(name!=  null  &&  name.length  >  0)  {  [CE]  cannot  find  symbol  length  [FE]            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  name.length  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null  &&  name.length  >  0)  {	  if(prefix!=    null    &&    prefix.length    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	91	None	replace
284	[BUG]  [BUGGY]  if(prefix  ==  null  &&  prefix.length  >  0)  {  [CE]  cannot  find  symbol  length  [FE]              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  &&  prefix.length  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix  ==  null  &&  prefix.length  >  0)  {	  if(prefix!=    null    &&    prefix.length    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	91	None	replace
285	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length  >  0)  {  [CE]  cannot  find  symbol  length  [FE]                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  ||  prefix.length  >  0)  {	  if(prefix!=    null    &&    prefix.length    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	91	None	replace
286	[BUG]  [BUGGY]  if(name  ==  null  &&  prefix.length  >  0)  {  [CE]  cannot  find  symbol  length  [FE]                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name  ==  null  &&  prefix.length  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name  ==  null  &&  prefix.length  >  0)  {	  if(prefix!=    null    &&    prefix.length    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	91	None	replace
287	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (name!=  null  &&  prefix.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if  (name!=  null  &&  prefix.length()!=  0)  {	  if    (prefix!=    null    &&    prefix.length()!=    0)    {    	compilable	  [FE]  IOException  	83	1	replace
288	[BUG]  [BUGGY]  if  (name!=  null  &&  prefix.length()!=  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (name!=  null  &&  prefix.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if  (name!=  null  &&  prefix.length()!=  0)  {	  if    (prefix!=    null    &&    prefix.length()!=    0)    {    	compilable	  [FE]  IOException  	83	1	replace
289	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  if(prefix!=  null  &&  prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  if(prefix!=  null  &&  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    ==    0)    {    if(prefix!=  null  &&  prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
290	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  if(prefix  ==  null  &&  prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  if(prefix  ==  null  &&  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    ==    0)    {    if(prefix  ==  null  &&  prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
291	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  if(prefix  >=  null  &&  prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  if(prefix  >=  null  &&  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    ==    0)    {    if(prefix  >=  null  &&  prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
292	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  if(prefix!=  null  &&  prefix.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  if(prefix!=  null  &&  prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    ==    0)    {    if(prefix!=  null  &&  prefix.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
293	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  If(prefix!=  null  &&  prefix.length()  ==  0)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  If(prefix!=  null  &&  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    ==    0)    {    If(prefix!=  null  &&  prefix.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	63	None	add
294	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  if(prefix  >>  null  &&  prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  if(prefix  >>  null  &&  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    ==    0)    {    if(prefix  >>  null  &&  prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
295	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  if(Prefix!=  null  &&  prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  if(Prefix!=  null  &&  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    ==    0)    {    if(Prefix!=  null  &&  prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
296	[BUG]  [BUGGY]  if(name.length()!=  0)  {  if(name.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()!=  0)  {  if(name.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()!=    0)    {    if(name.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
297	[BUG]  [BUGGY]  if(name.length()!=  0)  {  if(name.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()!=  0)  {  if(name.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()!=    0)    {    if(name.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
298	[BUG]  [BUGGY]  if(name.length()!=  0)  {  if(name.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()!=  0)  {  if(name.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()!=    0)    {    if(name.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
299	[BUG]  [BUGGY]  if(name.length()!=  0)  {  if(name.length()  >>  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()!=  0)  {  if(name.length()  >>  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()!=    0)    {    if(name.length()  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
300	[BUG]  [BUGGY]  if(name.length()!=  0)  {  If(name.length()!=  0)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()!=  0)  {  If(name.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()!=    0)    {    If(name.length()!=  0)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
301	[BUG]  [BUGGY]  if(name.length()!=  0)  {  if(name.length()  [BUGGY]  0)  {  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()!=  0)  {  if(name.length()  [BUGGY]  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()!=    0)    {    if(name.length()  [BUGGY]  0)  {	  	non-compiled	[CE]  ')'  expected	34	None	add
302	[BUG]  [BUGGY]  name  =  prefix.substring(0,  fileName.length()  -  fileName.length());  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  prefix.substring(0,  fileName.length()  -  fileName.length());  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  prefix.substring(0,  fileName.length()  -  fileName.length());	  name    =    fileName.substring(0,    fileName.length()    -    prefix.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
303	[BUG]  [BUGGY]  name  =  fileName.substring(0,  prefix.length()  -  fileName.length());  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  fileName.substring(0,  prefix.length()  -  fileName.length());  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  fileName.substring(0,  prefix.length()  -  fileName.length());	  name    =    fileName.substring(0,    fileName.length()    -    prefix.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
304	[BUG]  [BUGGY]  name  =  fileName.substring(0,  fileName.length()  -  prefix.length()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  fileName.substring(0,  fileName.length()  -  prefix.length()  -  1);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  fileName.substring(0,  fileName.length()  -  prefix.length()  -  1);	  name    =    fileName.substring(0,    fileName.length()    -    prefix.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
305	[BUG]  [BUGGY]  name  =  name.substring(0,  prefix.length()  -  fileName.length());  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  name.substring(0,  prefix.length()  -  fileName.length());  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  name.substring(0,  prefix.length()  -  fileName.length());	  name    =    fileName.substring(0,    fileName.length()    -    prefix.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
306	[BUG]  [BUGGY]  name  =  fileName.substring(0,  fileName.length()  -  prefix.length()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  fileName.substring(0,  fileName.length()  -  prefix.length()  +  1);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  fileName.substring(0,  fileName.length()  -  prefix.length()  +  1);	  name    =    fileName.substring(0,    fileName.length()    -    prefix.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
307	[BUG]  [BUGGY]  name  =  oldStyle.substring(0,  fileName.length()  -  prefix.length());  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  oldStyle.substring(0,  fileName.length()  -  prefix.length());  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  oldStyle.substring(0,  fileName.length()  -  prefix.length());	  name    =    fileName.substring(0,    fileName.length()    -    prefix.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
308	[BUG]  [BUGGY]  name  =  fileName.substring(0,  fileName.length()  -  prefix.length()  -  2);  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  fileName.substring(0,  fileName.length()  -  prefix.length()  -  2);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  fileName.substring(0,  fileName.length()  -  prefix.length()  -  2);	  name    =    fileName.substring(0,    fileName.length()    -    prefix.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
309	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
310	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
311	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
312	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
313	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
314	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  ||  prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	50	3	replace
315	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  ||  prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	50	3	replace
316	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  ==  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix.length()  ==  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if    (prefix.length()    ==    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	42	7	replace
317	[BUG]  [BUGGY]  if(prefix.length()  ==  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  ==  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()  ==  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if    (prefix.length()    ==    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	42	7	replace
318	[BUG]  [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
319	[BUG]  [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)  ==  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)  ==  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
320	[BUG]  [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)  >=  '/')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)  >=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)  >=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
321	[BUG]  [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  If(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  If(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    If(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  ';'  expected	97	None	add
322	[BUG]  [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)  >>  '/')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)  >>  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)  >>  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
323	[BUG]  [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
324	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  if(prefix!=  null  &&  prefix.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  if(prefix!=  null  &&  prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    >=    0)    {    if(prefix!=  null  &&  prefix.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
325	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  if(prefix!=  null  &&  prefix.length()  >>  0)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  if(prefix!=  null  &&  prefix.length()  >>  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    >=    0)    {    if(prefix!=  null  &&  prefix.length()  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
326	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  if(prefix  ==  null  &&  prefix.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  if(prefix  ==  null  &&  prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    >=    0)    {    if(prefix  ==  null  &&  prefix.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
327	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  if(prefix!=  null  &&  prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  if(prefix!=  null  &&  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    >=    0)    {    if(prefix!=  null  &&  prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
328	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  if(prefix  >=  null  &&  prefix.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  if(prefix  >=  null  &&  prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    >=    0)    {    if(prefix  >=  null  &&  prefix.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
329	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  If(prefix!=  null  &&  prefix.length()  >=  0)  {  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  If(prefix!=  null  &&  prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    >=    0)    {    If(prefix!=  null  &&  prefix.length()  >=  0)  {	  	non-compiled	[CE]  ';'  expected	74	None	add
330	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  if(prefix!=  null  &&  prefix.length()  [Delete]  0)  {  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  if(prefix!=  null  &&  prefix.length()  [Delete]  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    >=    0)    {    if(prefix!=  null  &&  prefix.length()  [Delete]  0)  {	  	non-compiled	[CE]  ')'  expected	74	None	add
331	[BUG]  [BUGGY]  name  =  fileName.substring(0,  fileName.length());  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  fileName.substring(0,  fileName.length());  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  fileName.substring(0,  fileName.length());	  name    =    fileName.substring(0,    fileName.length()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
332	[BUG]  [BUGGY]  name  =  fileName.substring(0,  fileName.length()  -  2);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  fileName.substring(0,  fileName.length()  -  2);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  fileName.substring(0,  fileName.length()  -  2);	  name    =    fileName.substring(0,    fileName.length()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
333	[BUG]  [BUGGY]  name  =  fileName.substring(0,  fileName.length()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  fileName.substring(0,  fileName.length()  +  1);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  fileName.substring(0,  fileName.length()  +  1);	  name    =    fileName.substring(0,    fileName.length()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
334	[BUG]  [BUGGY]  if(name.length()  >=  0)  {  if(name.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >=  0)  {  if(name.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >=    0)    {    if(name.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
335	[BUG]  [BUGGY]  if(name.length()  >=  0)  {  if(name.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >=  0)  {  if(name.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >=    0)    {    if(name.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
336	[BUG]  [BUGGY]  if(name.length()  >=  0)  {  if(name.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >=  0)  {  if(name.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >=    0)    {    if(name.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
337	[BUG]  [BUGGY]  if(name.length()  >=  0)  {  if(name.length()  >>  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >=  0)  {  if(name.length()  >>  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >=    0)    {    if(name.length()  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
338	[BUG]  [BUGGY]  if(name.length()  >=  0)  {  If(name.length()  >=  0)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >=  0)  {  If(name.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >=    0)    {    If(name.length()  >=  0)  {	  	non-compiled	[CE]  ';'  expected	32	None	add
339	[BUG]  [BUGGY]  if(name.length()  >=  0)  {  if(name.length()  [Delete]  0)  {  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >=  0)  {  if(name.length()  [Delete]  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >=    0)    {    if(name.length()  [Delete]  0)  {	  	non-compiled	[CE]  ')'  expected	32	None	add
340	[BUG]  [BUGGY]  if(name.length()  >=  0)  {  if(name.length()  [BUGGY]  0)  {  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >=  0)  {  if(name.length()  [BUGGY]  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >=    0)    {    if(name.length()  [BUGGY]  0)  {	  	non-compiled	[CE]  ')'  expected	32	None	add
341	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getMode()  +  1));  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getMode()  +  1));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getMode()  +  1));	  file.getParent().replaceChild(header,    new    File(encoding.getMode()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
342	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getMode(),  prefix));  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getMode(),  prefix));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getMode(),  prefix));	  file.getParent().replaceChild(header,    new    File(encoding.getMode()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
343	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getMode(),  name));  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getMode(),  name));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getMode(),  name));	  file.getParent().replaceChild(header,    new    File(encoding.getMode()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
344	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getMode(),  oldStyle));  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getMode(),  oldStyle));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getMode(),  oldStyle));	  file.getParent().replaceChild(header,    new    File(encoding.getMode()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
345	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getMode()),  name);  [CE]  class,  interface,  or  enum  expected  [FE]                                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getMode()),  name);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getMode()),  name);	  file.getParent().replaceChild(header,    new    File(encoding.getMode()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
346	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  ||  name.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name!=  null  ||  name.length()  ==  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    if(prefix    [Delete]    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	73	3	replace
347	[BUG]  [BUGGY]  if(name!=  null  ||  name.length()  ==  0)  {  [FE]  ComparisonFailure  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  ||  name.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null  ||  name.length()  ==  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    if(prefix    [Delete]    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	73	3	replace
348	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  >  0)  {  if(prefix!=  null  ||  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()  >  0)  {  if(prefix!=  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    ||    prefix.length()    >    0)    {    if(prefix!=  null  ||  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
349	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  >  0)  {  if(prefix  ==  null  ||  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()  >  0)  {  if(prefix  ==  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    ||    prefix.length()    >    0)    {    if(prefix  ==  null  ||  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
350	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  >  0)  {  if(prefix  >=  null  ||  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()  >  0)  {  if(prefix  >=  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    ||    prefix.length()    >    0)    {    if(prefix  >=  null  ||  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
351	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  >  0)  {  If(prefix!=  null  ||  prefix.length()  >  0)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()  >  0)  {  If(prefix!=  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    ||    prefix.length()    >    0)    {    If(prefix!=  null  ||  prefix.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	59	None	add
352	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  >  0)  {  if(prefix  >>  null  ||  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()  >  0)  {  if(prefix  >>  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    ||    prefix.length()    >    0)    {    if(prefix  >>  null  ||  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
353	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  >  0)  {  if(Prefix!=  null  ||  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()  >  0)  {  if(Prefix!=  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    ||    prefix.length()    >    0)    {    if(Prefix!=  null  ||  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
354	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  >  0)  {  if(prefix  [Delete]  null  ||  prefix.length()  >  0)  {  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  ||  prefix.length()  >  0)  {  if(prefix  [Delete]  null  ||  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    ||    prefix.length()    >    0)    {    if(prefix  [Delete]  null  ||  prefix.length()  >  0)  {	  	non-compiled	[CE]  ')'  expected	59	None	add
355	[BUG]  [BUGGY]  nameLength  +=  prefix.length()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  +=  prefix.length()  +  1;  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  +=  prefix.length()  +  1;	  nameLength    +=    prefix.length();    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
356	[BUG]  [BUGGY]  nameLength  +=  prefix.length()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  +=  prefix.length()  -  1;  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  +=  prefix.length()  -  1;	  nameLength    +=    prefix.length();    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
357	[BUG]  [BUGGY]  nameLength  -=  prefix.length();  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  -=  prefix.length();  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  -=  prefix.length();	  nameLength    +=    prefix.length();    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
358	[BUG]  [BUGGY]  nameLength  +=  prefix.length()  *  2;  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  +=  prefix.length()  *  2;  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  +=  prefix.length()  *  2;	  nameLength    +=    prefix.length();    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
359	[BUG]  [BUGGY]  nameLength  +=  prefix.length()  +  2;  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  +=  prefix.length()  +  2;  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  +=  prefix.length()  +  2;	  nameLength    +=    prefix.length();    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
360	[BUG]  [BUGGY]  nameLength  +=  prefix.length()  -  2;  [CE]  class,  interface,  or  enum  expected  [FE]                                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  +=  prefix.length()  -  2;  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  +=  prefix.length()  -  2;	  nameLength    +=    prefix.length();    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
361	[BUG]  [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  if(name!=  null  &&  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  if(name!=  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    &&    prefix.length()    >    0)    {    if(name!=  null  &&  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
362	[BUG]  [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  &&  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  if(name  ==  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    &&    prefix.length()    >    0)    {    if(name  ==  null  &&  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
363	[BUG]  [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  if(name  >=  null  &&  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  if(name  >=  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    &&    prefix.length()    >    0)    {    if(name  >=  null  &&  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
364	[BUG]  [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  If(name!=  null  &&  prefix.length()  >  0)  {  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  If(name!=  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    &&    prefix.length()    >    0)    {    If(name!=  null  &&  prefix.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	55	None	add
365	[BUG]  [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  if(name  >>  null  &&  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  if(name  >>  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    &&    prefix.length()    >    0)    {    if(name  >>  null  &&  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
366	[BUG]  [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  if(name  [BUGGY]  null  &&  prefix.length()  >  0)  {  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  if(name  [BUGGY]  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    &&    prefix.length()    >    0)    {    if(name  [BUGGY]  null  &&  prefix.length()  >  0)  {	  	non-compiled	[CE]  ')'  expected	55	None	add
367	[BUG]  [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  if(name!=  null  &&  Prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  if(name!=  null  &&  Prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    &&    prefix.length()    >    0)    {    if(name!=  null  &&  Prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
368	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
369	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)  ==  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  name.charAt(name.length()  -  1)  ==  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
370	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)  >=  '/')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)  >=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  name.charAt(name.length()  -  1)  >=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
371	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  If(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  If(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    If(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  ';'  expected	95	None	add
372	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)  >>  '/')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)  >>  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  name.charAt(name.length()  -  1)  >>  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
373	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)  [Delete]  '/')  {  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)  [Delete]  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  name.charAt(name.length()  -  1)  [Delete]  '/')  {	  	non-compiled	[CE]  ')'  expected	95	None	add
374	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)  [BUGGY]  '/')  {  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)  [BUGGY]  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  name.charAt(name.length()  -  1)  [BUGGY]  '/')  {	  	non-compiled	[CE]  ')'  expected	95	None	add
375	[BUG]  [BUGGY]  If(name.length()  >  0)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  If(name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	If(name.length()  >  0)  {	  if(name.length()    >    0)    {    If(name.length()    >    0)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
376	[BUG]  [BUGGY]  if(prefix.length()  >  0)  {  If(name.length()  >  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0)  {  If(name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()  >  0)  {  If(name.length()  >  0)  {	  if(name.length()    >    0)    {    If(name.length()    >    0)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
377	[BUG]  [BUGGY]  if(prefix!=  null)  {  If(prefix.length()  >  0)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null)  {  If(prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null)  {  If(prefix.length()  >  0)  {	  if(name.length()    >    0)    {    If(name.length()    >    0)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
378	[BUG]  [BUGGY]  if(prefix.length()  >  0)  {  If(prefix.length()  >  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0)  {  If(prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()  >  0)  {  If(prefix.length()  >  0)  {	  if(name.length()    >    0)    {    If(name.length()    >    0)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
379	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
380	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)  ==  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)  ==  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
381	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)  >=  '/')  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)  >=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)  >=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
382	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  If(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  If(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    If(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  ';'  expected	53	None	add
383	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)  >>  '/')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)  >>  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)  >>  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
384	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)  [Delete]  '/')  {  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)  [Delete]  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)  [Delete]  '/')  {	  	non-compiled	[CE]  ')'  expected	53	None	add
385	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)  [BUGGY]  '/')  {  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)  [BUGGY]  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)  [BUGGY]  '/')  {	  	non-compiled	[CE]  ')'  expected	53	None	add
386	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(!name.endsWith( ".java "))  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(!name.endsWith( ".java "))  {	  if    (prefix.length()    ==    0)    {    if    (prefix.length()    {    0)    {    	compilable	  [FE]  ComparisonFailure  	94	3	replace
387	[BUG]  [BUGGY]  if(!name.endsWith( ".java "))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(!name.endsWith( ".java "))  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(!name.endsWith( ".java "))  {	  if    (prefix.length()    ==    0)    {    if    (prefix.length()    {    0)    {    	compilable	  [FE]  ComparisonFailure  	94	3	replace
388	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(!name.endsWith( ".js "))  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(!name.endsWith( ".js "))  {	  if    (prefix.length()    ==    0)    {    if    (prefix.length()    {    0)    {    	compilable	  [FE]  ComparisonFailure  	94	3	replace
389	[BUG]  [BUGGY]  if(!name.endsWith( ".js "))  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(!name.endsWith( ".js "))  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(!name.endsWith( ".js "))  {	  if    (prefix.length()    ==    0)    {    if    (prefix.length()    {    0)    {    	compilable	  [FE]  ComparisonFailure  	94	3	replace
390	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  offset);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  offset);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  offset);	  file.getParent().replaceChild(header,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
391	[BUG]  [BUGGY]  file.getParent().replaceChild(parent,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(parent,  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(parent,  encoding);	  file.getParent().replaceChild(header,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
392	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  prefix);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  prefix);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  prefix);	  file.getParent().replaceChild(header,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
393	[BUG]  [BUGGY]  file.getParent().replaceChild(file,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(file,  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(file,  encoding);	  file.getParent().replaceChild(header,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
394	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  name);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  name);	  file.getParent().replaceChild(header,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
395	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  encoding,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  encoding,  name);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  encoding,  name);	  file.getParent().replaceChild(header,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
396	[BUG]  [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isExtended?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
397	[BUG]  [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isDir?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
398	[BUG]  [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  name  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
399	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parsePrefix(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
400	[BUG]  [BUGGY]  if(prefix!=  null)  {  if(name.length()  >  0)  <  name  =  prefix  + "/ "  +  name;  }  [CE]  >  expected  [FE]                ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null)  {  if(name.length()  >  0)  <  name  =  prefix  + "/ "  +  name;  }  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null)  {  if(name.length()  >  0)  <  name  =  prefix  + "/ "  +  name;  }	  if(name.length()    >    0)    {    if(name.length()    >    0)    <    name    =    prefix    +       "/   "    +    name;    	non-compiled	[CE]  >  expected	23	None	replace
401	[BUG]  [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  >  0)  <  name  =  prefix  + "/ "  +  name;  }  [CE]  >  expected  [FE]                  ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  >  0)  <  name  =  prefix  + "/ "  +  name;  }  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  ==  0)  {  if(name.length()  >  0)  <  name  =  prefix  + "/ "  +  name;  }	  if(name.length()    >    0)    {    if(name.length()    >    0)    <    name    =    prefix    +       "/   "    +    name;    	non-compiled	[CE]  >  expected	23	None	replace
402	[BUG]  [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  >  0)  <  prefix  + "/ "  +  name;  }  [CE]  >  expected  [FE]                    ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  >  0)  <  prefix  + "/ "  +  name;  }  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  ==  0)  {  if(name.length()  >  0)  <  prefix  + "/ "  +  name;  }	  if(name.length()    >    0)    {    if(name.length()    >    0)    <    name    =    prefix    +       "/   "    +    name;    	non-compiled	[CE]  >  expected	23	None	replace
403	[BUG]  [BUGGY]  if(name.length()  >  0)  {  name  =  prefix  + "/ "  +  name;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0)  {  name  =  prefix  + "/ "  +  name;  }  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  >  0)  {  name  =  prefix  + "/ "  +  name;  }	  if(name.length()    >    0)    {    if(name.length()    >    0)    <    name    =    prefix    +       "/   "    +    name;    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
404	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix  ==  null  &&  prefix.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if  (prefix  ==  null  &&  prefix.length()!=  0)  {	  if    (prefix!=    null    &&    prefix.length()!=    0)    {    	compilable	  [FE]  IOException  	83	1	replace
405	[BUG]  [BUGGY]  if  (prefix  ==  null  &&  prefix.length()!=  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix  ==  null  &&  prefix.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if  (prefix  ==  null  &&  prefix.length()!=  0)  {	  if    (prefix!=    null    &&    prefix.length()!=    0)    {    	compilable	  [FE]  IOException  	83	1	replace
406	[BUG]  [BUGGY]  if(prefix!=  null)  {  If(prefix.length()  >=  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null)  {  If(prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null)  {  If(prefix.length()  >=  0)  {	  if(prefix.length()    >=    0)    {    If(prefix.length()    >=    0)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
407	[BUG]  [BUGGY]  If(prefix!=  null)  {  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  If(prefix!=  null)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	If(prefix!=  null)  {	  if(prefix.length()    >=    0)    {    If(prefix.length()    >=    0)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
408	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  name.length()  <  =  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  name.length()  <  =  0)  {	  if(prefix!=    null    &&    prefix.length()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
409	[BUG]  [BUGGY]  name  =  fileName.substring(0,  fileName.length())+  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  fileName.substring(0,  fileName.length())+  1;  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  fileName.substring(0,  fileName.length())+  1;	  name    =    fileName.substring(0,    fileName.length()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
410	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
411	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(Name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(Name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    if(Name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
412	[BUG]  [BUGGY]  if(prefix!=  null)  {  if  (prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null)  {  if  (prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null)  {  if  (prefix.length()  ==  0)  {	  if    (prefix.length()    ==    0)    {    if    (prefix.length()    {    0)    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
413	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if  (prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null)  {  if  (prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix  ==  null)  {  if  (prefix.length()  ==  0)  {	  if    (prefix.length()    ==    0)    {    if    (prefix.length()    {    0)    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
414	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  if(Name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  if(Name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    if(Name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
415	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    if(prefix.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
416	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  name.length()  >  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  &&  name.length()  >  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	54	7	replace
417	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length()  >  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  name.length()  >  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  name.length()  >  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	54	7	replace
418	[BUG]  [BUGGY]  nameLength  +=  name.length();  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  +=  name.length();  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  +=  name.length();	  nameLength    +=    encoding.length();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
419	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  DEFAULT_FILE_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  DEFAULT_FILE_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
420	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
421	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
422	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null)  {  if(name.length()  >  0)  {  }  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null)  {  if(name.length()  >  0)  {  }	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    }    	compilable	  [FE]  ComparisonFailure  	99	3	replace
423	[BUG]  [BUGGY]  if(prefix!=  null)  {  if(name.length()  >  0)  {  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null)  {  if(name.length()  >  0)  {  }  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null)  {  if(name.length()  >  0)  {  }	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    }    	compilable	  [FE]  ComparisonFailure  	99	3	replace
424	[BUG]  [BUGGY]  [FE]  IOException  [FE]          ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix  ==  null)  {	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    }    	compilable	  [FE]  IOException  	99	1	replace
425	[BUG]  [BUGGY]  if(prefix  ==  null)  {  [FE]  IOException  [FE]          ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix  ==  null)  {	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    }    	compilable	  [FE]  IOException  	99	1	replace
426	[BUG]  [BUGGY]  if(name.length()  ==  0)  {  If(name.length()  ==  0)  {  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0)  {  If(name.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    ==    0)    {    If(name.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	45	None	add
427	[BUG]  [BUGGY]  if(name.length()  ==  0)  {  if(prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0)  {  if(prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    ==    0)    {    if(prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
428	[BUG]  [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    ==    0)    {    if(name.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
429	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
430	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
431	[BUG]  [BUGGY]  if(prefix!=  null  &&  Prefix.length  >  0)  {  [CE]  cannot  find  symbol  Prefix  [FE]        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  Prefix.length  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  Prefix.length  >  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    if(prefix!=    null    &&    Prefix.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  Prefix	78	None	replace
432	[BUG]  [BUGGY]  [FE]  IOException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0  &&  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  &&  prefix.length()  >  0  &&  name.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  IOException  	96	1	replace
433	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0  &&  name.charAt(name.length()  -  1)!=  '/')  {  [FE]  IOException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0  &&  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  prefix.length()  >  0  &&  name.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  IOException  	96	1	replace
434	[BUG]  [BUGGY]  if(name!=  null)  {  if(name.length()  >  0)  <  prefix  +   "/ "  +  name;  }  [CE]  >  expected  [FE]                  ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null)  {  if(name.length()  >  0)  <  prefix  +   "/ "  +  name;  }  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null)  {  if(name.length()  >  0)  <  prefix  +   "/ "  +  name;  }	  if(name.length()    >    0)    {    if(name.length()    >    0)    <    name    =    prefix    +       "/   "    +    name;    }    	non-compiled	[CE]  >  expected	24	None	replace
435	[BUG]  [BUGGY]  if(name!=  null)  {  if(name.length()  >  0)  <  name  =  prefix  +   "/ "  +  name;  }  [CE]  >  expected  [FE]                    ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null)  {  if(name.length()  >  0)  <  name  =  prefix  +   "/ "  +  name;  }  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null)  {  if(name.length()  >  0)  <  name  =  prefix  +   "/ "  +  name;  }	  if(name.length()    >    0)    {    if(name.length()    >    0)    <    name    =    prefix    +       "/   "    +    name;    }    	non-compiled	[CE]  >  expected	24	None	replace
436	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                      ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null)  {  if(name.length()  >  0)  {  name  =  prefix  +   "/ "  +  name;  }  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name!=  null)  {  if(name.length()  >  0)  {  name  =  prefix  +   "/ "  +  name;  }	  if(name.length()    >    0)    {    if(name.length()    >    0)    <    name    =    prefix    +       "/   "    +    name;    }    	compilable	  [FE]  ComparisonFailure  	24	3	replace
437	[BUG]  [BUGGY]  if(name!=  null)  {  if(name.length()  >  0)  {  name  =  prefix  +   "/ "  +  name;  }  [FE]  ComparisonFailure  [FE]                      ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null)  {  if(name.length()  >  0)  {  name  =  prefix  +   "/ "  +  name;  }  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null)  {  if(name.length()  >  0)  {  name  =  prefix  +   "/ "  +  name;  }	  if(name.length()    >    0)    {    if(name.length()    >    0)    <    name    =    prefix    +       "/   "    +    name;    }    	compilable	  [FE]  ComparisonFailure  	24	3	replace
438	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(file.getPath()));  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(file.getPath()));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(file.getPath()));	  file.getParent().replaceChild(header,    new    File(encoding.getPath()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
439	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath()),  prefix);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath()),  prefix);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getPath()),  prefix);	  file.getParent().replaceChild(header,    new    File(encoding.getPath()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
440	[BUG]  [BUGGY]  if(name!=  null)  {  If(name.length()  >  0)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null)  {  If(name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null)  {  If(name.length()  >  0)  {	  if(name.length()    >    0)    {    If(name.length()    >    0)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
441	[BUG]  [BUGGY]  if(prefix!=  null)  {  If(name.length()  >  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null)  {  If(name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null)  {  If(name.length()  >  0)  {	  if(name.length()    >    0)    {    If(name.length()    >    0)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
442	[BUG]  [BUGGY]  if(prefix  ==  null)  {  If(name.length()  >  0)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null)  {  If(name.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix  ==  null)  {  If(name.length()  >  0)  {	  if(name.length()    >    0)    {    If(name.length()    >    0)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
443	[BUG]  [BUGGY]  if(prefix  ==  null)  {  If(prefix.length()  >  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null)  {  If(prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix  ==  null)  {  If(prefix.length()  >  0)  {	  if(name.length()    >    0)    {    If(name.length()    >    0)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
444	[BUG]  [BUGGY]  if(name.length()  >=  0)  {  if(name.length()  <  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >=  0)  {  if(name.length()  <  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >=    0)    {    if(name.length()  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
445	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name  ==  null)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name  ==  null)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    if(prefix!=    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  IOException  	67	1	replace
446	[BUG]  [BUGGY]  if(name  ==  null)  {  [FE]  IOException  [FE]        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name  ==  null)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name  ==  null)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    if(prefix!=    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  IOException  	67	1	replace
447	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix  ==  null  ||  prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if    (prefix.length()    ==    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	42	3	replace
448	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix  ==  null  ||  prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if    (prefix.length()    ==    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	42	3	replace
449	[BUG]  [BUGGY]  [FE]  IOException  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()!=  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix.length()!=  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if    (prefix.length()    ==    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  IOException  	42	1	replace
450	[BUG]  [BUGGY]  if(prefix.length()!=  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  IOException  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()!=  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()!=  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if    (prefix.length()    ==    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  IOException  	42	1	replace
451	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  name.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  &&  name.length()  ==  0)  {	  if(name.length()    ==    0)    {    	compilable	  [FE]  IOException  	46	1	replace
452	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length()  ==  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  name.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  name.length()  ==  0)  {	  if(name.length()    ==    0)    {    	compilable	  [FE]  IOException  	46	1	replace
453	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(file.getMode()));  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(file.getMode()));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(file.getMode()));	  file.getParent().replaceChild(header,    new    File(encoding.getMode()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
454	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  ZipEncoding(encoding));  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  ZipEncoding(encoding));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  ZipEncoding(encoding));	  file.getParent().replaceChild(header,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
455	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  oldStyle);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  oldStyle);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  oldStyle);	  file.getParent().replaceChild(header,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
456	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  this.encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  this.encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  this.encoding);	  file.getParent().replaceChild(header,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
457	[BUG]  [BUGGY]  nameLength  +=  name.charAt(nameLength  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  +=  name.charAt(nameLength  -  1);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  +=  name.charAt(nameLength  -  1);	  nameLength    +=    encoding.charAt(nameLength    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
458	[BUG]  [BUGGY]  nameLength  +=  encoding.charAt(nameLength  -  1)+  1;  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  +=  encoding.charAt(nameLength  -  1)+  1;  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  +=  encoding.charAt(nameLength  -  1)+  1;	  nameLength    +=    encoding.charAt(nameLength    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
459	[BUG]  [BUGGY]  if(prefix!=  null)  {  If  (prefix.length()  ==  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null)  {  If  (prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null)  {  If  (prefix.length()  ==  0)  {	  if    (prefix.length()    ==    0)    {    If    (prefix.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
460	[BUG]  [BUGGY]  if(name!=  null)  {  If  (prefix.length()  ==  0)  {  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null)  {  If  (prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null)  {  If  (prefix.length()  ==  0)  {	  if    (prefix.length()    ==    0)    {    If    (prefix.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
461	[BUG]  [BUGGY]  If  (prefix!=  null  &&  prefix.length()  ==  0)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  If  (prefix!=  null  &&  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	If  (prefix!=  null  &&  prefix.length()  ==  0)  {	  if    (prefix.length()    ==    0)    {    If    (prefix.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
462	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
463	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  name);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
464	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  if(prefix  >>  null  &&  prefix.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  if(prefix  >>  null  &&  prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    >=    0)    {    if(prefix  >>  null  &&  prefix.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
465	[BUG]  [BUGGY]  name  =  prefix.substring(0,  fileName.length());  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  prefix.substring(0,  fileName.length());  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  prefix.substring(0,  fileName.length());	  name    =    fileName.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
466	[BUG]  [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(Name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(Name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    if(Name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
467	[BUG]  [BUGGY]  name  =  fileName.substring(0,  fileName.length()  -  header.length());  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  fileName.substring(0,  fileName.length()  -  header.length());  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  fileName.substring(0,  fileName.length()  -  header.length());	  name    =    fileName.substring(0,    fileName.length()    -    prefix.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
468	[BUG]  [BUGGY]  encoding  =  TarEncodingUtils.restrictByNotNullOrUndefined();  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  encoding  =  TarEncodingUtils.restrictByNotNullOrUndefined();  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	encoding  =  TarEncodingUtils.restrictByNotNullOrUndefined();	  encoding    =    encoding.restrictByNotNullOrUndefined();    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
469	[BUG]  [BUGGY]  encoding  =  ZipEncodingUtils.restrictByNotNullOrUndefined();  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  encoding  =  ZipEncodingUtils.restrictByNotNullOrUndefined();  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	encoding  =  ZipEncodingUtils.restrictByNotNullOrUndefined();	  encoding    =    encoding.restrictByNotNullOrUndefined();    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
470	[BUG]  [BUGGY]  Name[]  prefixes  =  new  Name[name.length()  ];  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  Name[]  prefixes  =  new  Name[name.length()  ];  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	Name[]  prefixes  =  new  Name[name.length()  ];	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    name    =    prefix    +       "/   "    +    name;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
471	[BUG]  [BUGGY]  Name[]  prefixes  =  getPrefixes();  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  Name[]  prefixes  =  getPrefixes();  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	Name[]  prefixes  =  getPrefixes();	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    name    =    prefix    +       "/   "    +    name;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
472	[BUG]  [BUGGY]  [FE]  IOException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  &&  prefix.length()  >  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  IOException  	48	1	replace
473	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  IOException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  prefix.length()  >  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  IOException  	48	1	replace
474	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  >=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	48	3	replace
475	[BUG]  [BUGGY]  if(name.length()  >=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  >=  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	48	3	replace
476	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(file.getPath(),  prefix));  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(file.getPath(),  prefix));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(file.getPath(),  prefix));	  file.getParent().replaceChild(header,    new    File(encoding.getPath(),    prefix));    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
477	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  <  =  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  <  =  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  prefix.length()  <  =  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    <    =    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
478	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  <  =  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  <  =  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  prefix.length()  <  =  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    <    =    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
479	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  <  =  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  <  =  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  prefix.length()  <  =  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    <    =    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
480	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(fileName.getSimpleName()));  [CE]  class,  interface,  or  enum  expected  [FE]                              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(fileName.getSimpleName()));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(fileName.getSimpleName()));	  file.getParent().replaceChild(header,    new    File(encoding.getSimpleName()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
481	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(file.getName()));  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(file.getName()));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(file.getName()));	  file.getParent().replaceChild(header,    new    File(encoding.getSimpleName()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
482	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(file.getSimpleName()));  [CE]  class,  interface,  or  enum  expected  [FE]                                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(file.getSimpleName()));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(file.getSimpleName()));	  file.getParent().replaceChild(header,    new    File(encoding.getSimpleName()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
483	[BUG]  [BUGGY]  file.getName().replaceChild(header,  new  File(encoding.getSimpleName()));  [CE]  class,  interface,  or  enum  expected  [FE]                                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getName().replaceChild(header,  new  File(encoding.getSimpleName()));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getName().replaceChild(header,  new  File(encoding.getSimpleName()));	  file.getParent().replaceChild(header,    new    File(encoding.getSimpleName()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
484	[BUG]  [BUGGY]  if(prefix!=  null)  {  if  (Prefix.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null)  {  if  (Prefix.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null)  {  if  (Prefix.length()!=  0)  {	  if    (prefix.length()!=    0)    {    if    (Prefix.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
485	[BUG]  [BUGGY]  if(prefix!=  null)  {  if  (Prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null)  {  if  (Prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null)  {  if  (Prefix.length()  ==  0)  {	  if    (prefix.length()!=    0)    {    if    (Prefix.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
486	[BUG]  [BUGGY]  [FE]  IOException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  &&  prefix.length()  >  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  IOException  	52	1	replace
487	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  IOException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  prefix.length()  >  0  &&  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  IOException  	52	1	replace
488	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  MAX_NAMELEN):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
489	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(encoding,  header,  offset);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(encoding,  header,  offset);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(encoding,  header,  offset);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
490	[BUG]  [BUGGY]  if  (prefix!=  null  &&  prefix.length()!=  0)  {  If  (prefix!=  null  &&  prefix.length()!=  0)  {  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix!=  null  &&  prefix.length()!=  0)  {  If  (prefix!=  null  &&  prefix.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix!=    null    &&    prefix.length()!=    0)    {    If  (prefix!=  null  &&  prefix.length()!=  0)  {	  	non-compiled	[CE]  ';'  expected	82	None	add
491	[BUG]  [BUGGY]  [FE]  IOException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  &&  prefix.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix.length()  >  0  &&  prefix.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  IOException  	98	1	replace
492	[BUG]  [BUGGY]  if(prefix.length()  >  0  &&  prefix.charAt(name.length()  -  1)!=  '/')  {  [FE]  IOException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  >  0  &&  prefix.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()  >  0  &&  prefix.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  IOException  	98	1	replace
493	[BUG]  [BUGGY]  [FE]  IOException  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0  &&  prefix.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  &&  prefix.length()  >  0  &&  prefix.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  IOException  	98	1	replace
494	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0  &&  prefix.charAt(name.length()  -  1)!=  '/')  {  [FE]  IOException  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0  &&  prefix.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  prefix.length()  >  0  &&  prefix.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  IOException  	98	1	replace
495	[BUG]  [BUGGY]  if(prefix!=  null)  {  If  (prefix.length()!=  0)  {  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null)  {  If  (prefix.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null)  {  If  (prefix.length()!=  0)  {	  if    (prefix.length()!=    0)    {    If    (prefix.length()!=    0)    {    	non-compiled	[CE]  ';'  expected	18	None	replace
496	[BUG]  [BUGGY]  if(name!=  null)  {  If  (prefix.length()!=  0)  {  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null)  {  If  (prefix.length()!=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null)  {  If  (prefix.length()!=  0)  {	  if    (prefix.length()!=    0)    {    If    (prefix.length()!=    0)    {    	non-compiled	[CE]  ';'  expected	18	None	replace
497	[BUG]  [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  if(prefix.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    if(prefix.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
498	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  DEFAULT_FILE_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  DEFAULT_FILE_MODE);	  file.getParent().replaceChild(header,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
499	[BUG]  [BUGGY]  nameLength  /=  encoding.length();  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  /=  encoding.length();  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  /=  encoding.length();	  nameLength    +=    encoding.length();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
500	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  DEFAULT_FILE_  [CE]  [FE]                              IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  DEFAULT_FILE_  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  DEFAULT_FILE_	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  	106	None	replace
501	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  DEFAULT_DIR_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
502	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  DEFAULT_D  [CE]  [FE]                                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  DEFAULT_D  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  DEFAULT_D	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE,    encoding);    	non-compiled	[CE]  	106	None	replace
503	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  name.length()  >  0  &&  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  &&  name.length()  >  0  &&  name.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	96	3	replace
504	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length()  >  0  &&  name.charAt(name.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  name.length()  >  0  &&  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  name.length()  >  0  &&  name.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    	compilable	  [FE]  ComparisonFailure  	96	3	replace
505	[BUG]  [BUGGY]  if(name.length()  <  =  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  <  =  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  <  =  0  ||  name.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
506	[BUG]  [BUGGY]  if(name.length()!=  0)  {  if(name.length()  [Delete]  0)  {  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()!=  0)  {  if(name.length()  [Delete]  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()!=    0)    {    if(name.length()  [Delete]  0)  {	  	non-compiled	[CE]  ')'  expected	34	None	add
507	[BUG]  [BUGGY]  [FE]  IOException  [FE]            ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.endsWith( "/ "))  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.endsWith( "/ "))  {	  if    (prefix.length()    ==    0)    {    if    (Prefix.length()    ==    0)    {    	compilable	  [FE]  IOException  	38	1	replace
508	[BUG]  [BUGGY]  if(name.endsWith( "/ "))  {  [FE]  IOException  [FE]            ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.endsWith( "/ "))  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.endsWith( "/ "))  {	  if    (prefix.length()    ==    0)    {    if    (Prefix.length()    ==    0)    {    	compilable	  [FE]  IOException  	38	1	replace
509	[BUG]  [BUGGY]  [FE]  IOException  [FE]              ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.endsWith( ".js "))  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.endsWith( ".js "))  {	  if    (prefix.length()    ==    0)    {    if    (Prefix.length()    ==    0)    {    	compilable	  [FE]  IOException  	38	1	replace
510	[BUG]  [BUGGY]  if(name.endsWith( ".js "))  {  [FE]  IOException  [FE]              ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.endsWith( ".js "))  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.endsWith( ".js "))  {	  if    (prefix.length()    ==    0)    {    if    (Prefix.length()    ==    0)    {    	compilable	  [FE]  IOException  	38	1	replace
511	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(!name.endsWith( ".prototype "))  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(!name.endsWith( ".prototype "))  {	  if    (prefix.length()    ==    0)    {    if    (Prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	38	3	replace
512	[BUG]  [BUGGY]  if(!name.endsWith( ".prototype "))  {  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(!name.endsWith( ".prototype "))  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(!name.endsWith( ".prototype "))  {	  if    (prefix.length()    ==    0)    {    if    (Prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	38	3	replace
513	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  header.length  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  &&  header.length  >  0)  {	  if(prefix!=    null    &&    prefix.length    >    0)    {    	compilable	  [FE]  ComparisonFailure  	91	3	replace
514	[BUG]  [BUGGY]  if(prefix!=  null  &&  header.length  >  0)  {  [FE]  ComparisonFailure  [FE]        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  header.length  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  header.length  >  0)  {	  if(prefix!=    null    &&    prefix.length    >    0)    {    	compilable	  [FE]  ComparisonFailure  	91	3	replace
515	[BUG]  [BUGGY]  if(prefix!=  null  &&  oldStyle  >  0)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  oldStyle  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  oldStyle  >  0)  {	  if(prefix!=    null    &&    prefix.length    >    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	91	None	replace
516	[BUG]  [BUGGY]  if(name.length()  >  0)  <  prefix  +   "/ "  +  name;  }  [CE]  >  expected  [FE]                  ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0)  <  prefix  +   "/ "  +  name;  }  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  >  0)  <  prefix  +   "/ "  +  name;  }	  if(name.length()    >    0)    {    if(name.length()    >    0)    <    name    =    prefix    +       "/   "    +    name;    }    	non-compiled	[CE]  >  expected	24	None	replace
517	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0  ||  prefix.charAt(prefix.length())!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  ==  0  ||  prefix.charAt(prefix.length())!=  '/')  {	  if    (prefix.length()    ==    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	44	7	replace
518	[BUG]  [BUGGY]  if(name.length()  ==  0  ||  prefix.charAt(prefix.length())!=  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0  ||  prefix.charAt(prefix.length())!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  ==  0  ||  prefix.charAt(prefix.length())!=  '/')  {	  if    (prefix.length()    ==    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	44	7	replace
519	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    name);    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
520	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    name);    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
521	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getMode()),  prefix);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getMode()),  prefix);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getMode()),  prefix);	  file.getParent().replaceChild(header,    new    File(encoding.getMode()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
522	[BUG]  [BUGGY]  encoding  =  encoding.restrictByNotNullOrUndefined(prefix);  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  encoding  =  encoding.restrictByNotNullOrUndefined(prefix);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	encoding  =  encoding.restrictByNotNullOrUndefined(prefix);	  encoding    =    encoding.restrictByNotNullOrUndefined();    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
523	[BUG]  [BUGGY]  encoding  =  encoding.restrictByNotNullOrUndefined(header);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  encoding  =  encoding.restrictByNotNullOrUndefined(header);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	encoding  =  encoding.restrictByNotNullOrUndefined(header);	  encoding    =    encoding.restrictByNotNullOrUndefined();    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
524	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
525	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null)  {  if(name.length()  >  0)  {  }  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name!=  null)  {  if(name.length()  >  0)  {  }	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    }    name    =    prefix    +       "/   "    +    name;    	compilable	  [FE]  ComparisonFailure  	21	3	replace
526	[BUG]  [BUGGY]  if(name!=  null)  {  if(name.length()  >  0)  {  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null)  {  if(name.length()  >  0)  {  }  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null)  {  if(name.length()  >  0)  {  }	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    }    name    =    prefix    +       "/   "    +    name;    	compilable	  [FE]  ComparisonFailure  	21	3	replace
527	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
528	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  DEFAULT_NAMELEN);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  DEFAULT_NAMELEN);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  DEFAULT_NAMELEN);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
529	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  name.endsWith( "/ "))  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name!=  null  &&  name.endsWith( "/ "))  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    if(prefix!=    null    &&    Prefix.length()    >    0)    {    	compilable	  [FE]  IOException  	78	1	replace
530	[BUG]  [BUGGY]  if(name!=  null  &&  name.endsWith( "/ "))  {  [FE]  IOException  [FE]        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  name.endsWith( "/ "))  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null  &&  name.endsWith( "/ "))  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    if(prefix!=    null    &&    Prefix.length()    >    0)    {    	compilable	  [FE]  IOException  	78	1	replace
531	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  name.endsWith( ".js "))  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name!=  null  &&  name.endsWith( ".js "))  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    if(prefix    [Delete]    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  IOException  	73	1	replace
532	[BUG]  [BUGGY]  if(name!=  null  &&  name.endsWith( ".js "))  {  [FE]  IOException  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  name.endsWith( ".js "))  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null  &&  name.endsWith( ".js "))  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    if(prefix    [Delete]    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  IOException  	73	1	replace
533	[BUG]  [BUGGY]  name  = "/ "  +  fileName.substring(0,  fileName.length()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  = "/ "  +  fileName.substring(0,  fileName.length()  -  1);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  = "/ "  +  fileName.substring(0,  fileName.length()  -  1);	  name    =    fileName.substring(0,    fileName.length()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
534	[BUG]  [BUGGY]  name  =  fileName.substring(0,  header.length());  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  fileName.substring(0,  header.length());  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  fileName.substring(0,  header.length());	  name    =    fileName.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
535	[BUG]  [BUGGY]  if(name!=  null  &&  name.length()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  &&  name.length()  <  =  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null  &&  name.length()  <  =  0)  {	  if(name!=    null    &&    name.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
536	[BUG]  [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  prefix.charAt(prefix.length())!=  '/')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  prefix.charAt(prefix.length())!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  prefix.charAt(prefix.length())!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
537	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  if(prefix!=  null  &&  prefix.length()  {  0)  {  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  if(prefix!=  null  &&  prefix.length()  {  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    ==    0)    {    if(prefix!=  null  &&  prefix.length()  {  0)  {	  	non-compiled	[CE]  ')'  expected	63	None	add
538	[BUG]  [BUGGY]  nameLength  +=  encoding.charAt(offset  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  nameLength  +=  encoding.charAt(offset  -  1);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  +=  encoding.charAt(offset  -  1);	  nameLength    +=    encoding.charAt(nameLength    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
539	[BUG]  [BUGGY]  If(name!=  null)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  If(name!=  null)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	If(name!=  null)  {	  if(name.length()    >    0)    {    If(name.length()    >    0)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
540	[BUG]  [BUGGY]  If(name!=  null  &&  name.endsWith( "/ "))  {  [CE]  [FE]                ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  If(name!=  null  &&  name.endsWith( "/ "))  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	If(name!=  null  &&  name.endsWith( "/ "))  {	  if(name.length()    >    0)    {    If(name.length()    >    0)    {    	non-compiled	[CE]  	22	None	replace
541	[BUG]  [BUGGY]  if(name!=  null  ||  prefix.length()  >  0)  {  if(name!=  null  ||  Prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name!=  null  ||  prefix.length()  >  0)  {  if(name!=  null  ||  Prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=    null    ||    prefix.length()    >    0)    {    if(name!=  null  ||  Prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
542	[BUG]  [BUGGY]  if(name.length()  >  0)  <  prefix  +   "/ "  +  name;  [CE]  >  expected  [FE]                ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0)  <  prefix  +   "/ "  +  name;  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  >  0)  <  prefix  +   "/ "  +  name;	  if(name.length()    >    0)    {    if(name.length()    >    0)    <    name    =    prefix    +       "/   "    +    name;    	non-compiled	[CE]  >  expected	23	None	replace
543	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  &&  prefix.length()  ==  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if    (prefix.length()    ==    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	42	7	replace
544	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  prefix.length()  ==  0  &&  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if    (prefix.length()    ==    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	42	7	replace
545	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  }  [CE]  class,  interface,  or  enum  expected  [FE]        ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  }  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  prefix.length()  >  0)  {  }	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
546	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  if(prefix!=  null  &&  prefix.length()  <  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  if(prefix!=  null  &&  prefix.length()  <  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    >=    0)    {    if(prefix!=  null  &&  prefix.length()  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
547	[BUG]  [BUGGY]  If(prefix  ==  null)  {  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  If(prefix  ==  null)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	If(prefix  ==  null)  {	  if(prefix.length()    >=    0)    {    If(prefix.length()    >=    0)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
548	[BUG]  [BUGGY]  if(prefix  ==  null  &&  prefix.length()  >  0)  {  if(prefix  {  null  &&  prefix.length()  >  0)  {  [CE]  ')'  expected  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  &&  prefix.length()  >  0)  {  if(prefix  {  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix    ==    null    &&    prefix.length()    >    0)    {    if(prefix  {  null  &&  prefix.length()  >  0)  {	  	non-compiled	[CE]  ')'  expected	61	None	add
549	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(name.length())!=  '/')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(name.length())!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    name.charAt(name.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  name.charAt(name.length())!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
550	[BUG]  [BUGGY]  name  =  fileName.substring(0,  fileName.length()  -  prefix.length()  -  4);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  fileName.substring(0,  fileName.length()  -  prefix.length()  -  4);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  fileName.substring(0,  fileName.length()  -  prefix.length()  -  4);	  name    =    fileName.substring(0,    fileName.length()    -    prefix.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
551	[BUG]  [BUGGY]  name  =  fileName.substring(0,  fileName.length()  -  prefix.length()  -  3);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  name  =  fileName.substring(0,  fileName.length()  -  prefix.length()  -  3);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  fileName.substring(0,  fileName.length()  -  prefix.length()  -  3);	  name    =    fileName.substring(0,    fileName.length()    -    prefix.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
552	[BUG]  [BUGGY]  if(prefix.length()  <  0)  {  for(prefix.length()  <  0)  {  [CE]  not  a  statement  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix.length()  <  0)  {  for(prefix.length()  <  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    <    0)    {    for(prefix.length()  <  0)  {	  	non-compiled	[CE]  not  a  statement	4	None	add
553	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(prefix.length())!=  '/')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  name.charAt(prefix.length())!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  name.charAt(prefix.length())!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
554	[BUG]  [BUGGY]  if(prefix  ==  null  &&  prefix.length()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  &&  prefix.length()  <  =  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix  ==  null  &&  prefix.length()  <  =  0)  {	  if(prefix!=    null    &&    prefix.length()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
555	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE):    TarUtils.parseName(header,    offset,    PREFIXLEN,    encoding);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
556	[BUG]  [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  Prefix.charAt(name.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  if(name.length()  >  0  ||  Prefix.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0    ||    prefix.charAt(name.length()    -    1)!=    '/')    {    if(name.length()  >  0  ||  Prefix.charAt(name.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
557	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath(),  DEFAULT_DIR_MODE));  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath(),  DEFAULT_DIR_MODE));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getPath(),  DEFAULT_DIR_MODE));	  file.getParent().replaceChild(header,    new    File(encoding.getPath(),    prefix));    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
558	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath(),  DEFAULT_FILE_MODE));  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath(),  DEFAULT_FILE_MODE));  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getPath(),  DEFAULT_FILE_MODE));	  file.getParent().replaceChild(header,    new    File(encoding.getPath(),    prefix));    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
559	[BUG]  [BUGGY]  if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if  (prefix.length()  ==  0  ||  Prefix.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  if  (prefix.length()  ==  0  ||  Prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()    ==    0    ||    prefix.charAt(prefix.length()    -    1)!=    '/')    {    if  (prefix.length()  ==  0  ||  Prefix.charAt(prefix.length()  -  1)!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
560	[BUG]  [BUGGY]  If  (prefix!=  null  &&  prefix.length()  >=  0)  {  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  If  (prefix!=  null  &&  prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	If  (prefix!=  null  &&  prefix.length()  >=  0)  {	  if    (prefix.length()!=    0)    {    If    (prefix.length()!=    0)    {    	non-compiled	[CE]  ';'  expected	18	None	replace
561	[BUG]  [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  {  0)  {  [CE]  ')'  expected  [FE]    IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  {  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    ==    0)    {    if(name.length()  {  0)  {	  	non-compiled	[CE]  ')'  expected	45	None	add
562	[BUG]  [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  >>  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  ==  0)  {  if(name.length()  >>  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    ==    0)    {    if(name.length()  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
563	[BUG]  [BUGGY]  if(prefix  >=  null  ||  prefix.length()  ==  0)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  >=  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix  >=  null  ||  prefix.length()  ==  0)  {	  if(prefix    ==    null    ||    prefix.length()    ==    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	93	None	replace
564	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  ||  prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix  ==  null  ||  prefix.length()  >=  0)  {	  if(prefix    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	93	3	replace
565	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  >=  0)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  ||  prefix.length()  >=  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix  ==  null  ||  prefix.length()  >=  0)  {	  if(prefix    ==    null    ||    prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	93	3	replace
566	[BUG]  [BUGGY]  if(name.length()  <  =  0  ||  prefix.charAt(prefix.length())!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.length()  <  =  0  ||  prefix.charAt(prefix.length())!=  '/')  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  <  =  0  ||  prefix.charAt(prefix.length())!=  '/')  {	  if(prefix.length()    <    =    0    ||    name.charAt(prefix.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
567	[BUG]  [BUGGY]  [FE]  IOException  [FE]        ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.endsWith( ".java "))  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.endsWith( ".java "))  {	  if    (prefix.length()    ==    0)    {    if    (prefix.length()    {    0)    {    	compilable	  [FE]  IOException  	94	1	replace
568	[BUG]  [BUGGY]  if(name.endsWith( ".java "))  {  [FE]  IOException  [FE]        ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(name.endsWith( ".java "))  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.endsWith( ".java "))  {	  if    (prefix.length()    ==    0)    {    if    (prefix.length()    {    0)    {    	compilable	  [FE]  IOException  	94	1	replace
569	[BUG]  [BUGGY]  final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  isDirectory?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
570	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    DEFAULT_FILE_MODE):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
571	[BUG]  [BUGGY]  naming  =  prefix  +   "/ "  +  name;  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  naming  =  prefix  +   "/ "  +  name;  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	naming  =  prefix  +   "/ "  +  name;	  if(name.length()    >    0)    {    if(name.length()    >    0)    {    name    =    prefix    +       "/   "    +    name;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
572	[BUG]  [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                            IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  header?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	  final    String    prefix    =    oldStyle?    TarUtils.parseName(header,    offset,    PREFIXLEN):    TarUtils.parseName(header,    offset,    DEFAULT_DIR_MODE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
573	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(prefix  {  null  ||  prefix.length()  ==  0)  {  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  if(prefix  {  null  ||  prefix.length()  ==  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix    ==    null    ||    prefix.length()    ==    0)    {    if(prefix  {  null  ||  prefix.length()  ==  0)  {	  	non-compiled	[CE]  ')'  expected	92	None	add
574	[BUG]  [BUGGY]  if(Prefix!=  null  &&  prefix.length()  >  0)  {  [CE]  cannot  find  symbol  Prefix  [FE]                  IOException      [CONTEXT]      case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(     "/     ")){  name  =  name  +       "/     ";  }      [BUGGY]  if(Prefix!=  null  &&  prefix.length()  >  0)  {  [BUGGY]      name  =  prefix  +       "/     "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(Prefix!=  null  &&  prefix.length()  >  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    if(Prefix!=    null    &&    prefix.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  Prefix	72	None	replace
