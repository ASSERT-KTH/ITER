bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IOException  [CONTEXT]  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  [BUGGY]  if  (prefix.length()  ==  0)  {  [BUGGY]  name  =  prefix  +   "/ "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if  (prefix.length()  ==  0)  {	if  (prefix.length()  >  0){  	compilable	  [FE]  ComparisonFailure  	7	3	replace
2	[BUG]  [BUGGY]  if  (prefix.length()  ==  0)  {  [FE]  ComparisonFailure  [FE]    IOException  [CONTEXT]  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  [BUGGY]  if  (prefix.length()  ==  0)  {  [BUGGY]  name  =  prefix  +   "/ "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if  (prefix.length()  ==  0)  {	if  (prefix.length()  >  0){  	compilable	  [FE]  ComparisonFailure  	7	3	replace
3	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException  [CONTEXT]  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  [BUGGY]  if  (prefix.length()!=  0)  {  [BUGGY]  name  =  prefix  +   "/ "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if  (prefix.length()!=  0)  {	if  (prefix.length()  >  0){  	compilable	  [FE]  IOException  	7	1	replace
4	[BUG]  [BUGGY]  if  (prefix.length()!=  0)  {  [FE]  IOException  [FE]      IOException  [CONTEXT]  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  [BUGGY]  if  (prefix.length()!=  0)  {  [BUGGY]  name  =  prefix  +   "/ "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if  (prefix.length()!=  0)  {	if  (prefix.length()  >  0){  	compilable	  [FE]  IOException  	7	1	replace
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        IOException  [CONTEXT]  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  [BUGGY]  if(name.length()  >  0)  {  [BUGGY]  name  =  prefix  +   "/ "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  >  0)  {	if  (prefix.length()  >  0){  	compilable	  [FE]  ComparisonFailure  	7	3	replace
6	[BUG]  [BUGGY]  if(name.length()  >  0)  {  [FE]  ComparisonFailure  [FE]        IOException  [CONTEXT]  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  [BUGGY]  if(name.length()  >  0)  {  [BUGGY]  name  =  prefix  +   "/ "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  >  0)  {	if  (prefix.length()  >  0){  	compilable	  [FE]  ComparisonFailure  	7	3	replace
7	[BUG]  [BUGGY]    [CE]  class,  interface,  or  enum  expected  [FE]          IOException  [CONTEXT]  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  [BUGGY]    [BUGGY]  name  =  prefix  +   "/ "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	  	if  (prefix.length()  >  0){  	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
8	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException  [CONTEXT]  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  [BUGGY]  name  =  prefix  +   "/ "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  &&  prefix.length()  >  0)  {	if  (prefix.length()  >  0){  	compilable	  [FE]  IOException  	7	1	replace
9	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  [FE]  IOException  [FE]    IOException  [CONTEXT]  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  [BUGGY]  name  =  prefix  +   "/ "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  prefix.length()  >  0)  {	if  (prefix.length()  >  0){  	compilable	  [FE]  IOException  	7	1	replace
10	[BUG]  [BUGGY]  if(prefix.length()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException  [CONTEXT]  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  [BUGGY]  if(prefix.length()  <  =  0)  {  [BUGGY]  name  =  prefix  +   "/ "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()  <  =  0)  {	if  (prefix.length()  >  0){  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      IOException  [CONTEXT]  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  [BUGGY]  if(prefix.length()  >=  0)  {  [BUGGY]  name  =  prefix  +   "/ "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix.length()  >=  0)  {	if  (prefix.length()  >  0){  	compilable	  [FE]  ComparisonFailure  	7	3	replace
12	[BUG]  [BUGGY]  if(prefix.length()  >=  0)  {  [FE]  ComparisonFailure  [FE]      IOException  [CONTEXT]  case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith( "/ ")){  name  =  name  +   "/ ";  }  [BUGGY]  if(prefix.length()  >=  0)  {  [BUGGY]  name  =  prefix  +   "/ "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()  >=  0)  {	if  (prefix.length()  >  0){  	compilable	  [FE]  ComparisonFailure  	7	3	replace
