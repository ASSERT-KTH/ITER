bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(name.length()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  <  =  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  <  =  0)  {	  if(prefix.length()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  if(prefix.length()  <  =  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix.length()  <  =  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()  <  =  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
3	[BUG]  [BUGGY]  if(prefix.length()  <  =  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix.length()  <  =  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()  <  =  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(prefix.length()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix.length()  <  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix.length()  <  0)  {	  if(prefix.length()    <    =    0)    {    	compilable	  [FE]  IOException  	10	1	replace
5	[BUG]  [BUGGY]  if(prefix.length()  <  0)  {  [FE]  IOException  [FE]              IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix.length()  <  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()  <  0)  {	  if(prefix.length()    <    =    0)    {    	compilable	  [FE]  IOException  	10	1	replace
6	[BUG]  [BUGGY]  if(prefix.length()  >=  0)  {  if(prefix.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix.length()  >=  0)  {  if(prefix.length()  >=  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >=    0)    {    if(prefix.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
7	[BUG]  [BUGGY]  if(prefix.length()  >=  0)  {  if(prefix.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix.length()  >=  0)  {  if(prefix.length()!=  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >=    0)    {    if(prefix.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
8	[BUG]  [BUGGY]  if(prefix.length()  >=  0)  {  if(prefix.length()  >>  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix.length()  >=  0)  {  if(prefix.length()  >>  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >=    0)    {    if(prefix.length()  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
9	[BUG]  [BUGGY]  if(prefix.length()  >=  0)  {  if(prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix.length()  >=  0)  {  if(prefix.length()  ==  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >=    0)    {    if(prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
10	[BUG]  [BUGGY]  if(prefix.length()  >=  0)  {  if(prefix.length()  [Delete]  0)  {  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix.length()  >=  0)  {  if(prefix.length()  [Delete]  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >=    0)    {    if(prefix.length()  [Delete]  0)  {	  	non-compiled	[CE]  ')'  expected	11	None	add
11	[BUG]  [BUGGY]  if(prefix.length()  >=  0)  {  if(prefix.length()  [BUGGY]  0)  {  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix.length()  >=  0)  {  if(prefix.length()  [BUGGY]  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >=    0)    {    if(prefix.length()  [BUGGY]  0)  {	  	non-compiled	[CE]  ')'  expected	11	None	add
12	[BUG]  [BUGGY]  if(prefix.length()  >=  0)  {  If(prefix.length()  >=  0)  {  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix.length()  >=  0)  {  If(prefix.length()  >=  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >=    0)    {    If(prefix.length()  >=  0)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
13	[BUG]  [BUGGY]  if  (prefix.length()!=  0)  {  if  (prefix.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if  (prefix.length()!=  0)  {  if  (prefix.length()!=  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()!=    0)    {    if  (prefix.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
14	[BUG]  [BUGGY]  if  (prefix.length()!=  0)  {  if  (prefix.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if  (prefix.length()!=  0)  {  if  (prefix.length()  >=  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()!=    0)    {    if  (prefix.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
15	[BUG]  [BUGGY]  if  (prefix.length()!=  0)  {  if  (prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if  (prefix.length()!=  0)  {  if  (prefix.length()  ==  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()!=    0)    {    if  (prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
16	[BUG]  [BUGGY]  if  (prefix.length()!=  0)  {  if  (prefix.length()  >>  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if  (prefix.length()!=  0)  {  if  (prefix.length()  >>  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()!=    0)    {    if  (prefix.length()  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
17	[BUG]  [BUGGY]  if  (prefix.length()!=  0)  {  if  (Prefix.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if  (prefix.length()!=  0)  {  if  (Prefix.length()!=  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()!=    0)    {    if  (Prefix.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
18	[BUG]  [BUGGY]  if  (prefix.length()!=  0)  {  If  (prefix.length()!=  0)  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if  (prefix.length()!=  0)  {  If  (prefix.length()!=  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()!=    0)    {    If  (prefix.length()!=  0)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
19	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if(name.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  >  0)  {  if(name.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0)    {    if(name.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
20	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if(name.length()  >  0)  {  name  =  prefix  +   "/ "  +  name;  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  >  0)  {  if(name.length()  >  0)  {  name  =  prefix  +   "/ "  +  name;  }  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0)    {    if(name.length()  >  0)  {  name  =  prefix  +   "/ "  +  name;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
21	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if(name.length()  >  0)  {  }  name  =  prefix  +   "/ "  +  name;  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  >  0)  {  if(name.length()  >  0)  {  }  name  =  prefix  +   "/ "  +  name;  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0)    {    if(name.length()  >  0)  {  }  name  =  prefix  +   "/ "  +  name;	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
22	[BUG]  [BUGGY]  if(name.length()  >  0)  {  If(name.length()  >  0)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  >  0)  {  If(name.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0)    {    If(name.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
23	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if(name.length()  >  0)  <  name  =  prefix  +   "/ "  +  name;  [CE]  >  expected  [FE]            ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  >  0)  {  if(name.length()  >  0)  <  name  =  prefix  +   "/ "  +  name;  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0)    {    if(name.length()  >  0)  <  name  =  prefix  +   "/ "  +  name;	  	non-compiled	[CE]  >  expected	5	None	add
24	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if(name.length()  >  0)  <  name  =  prefix  +   "/ "  +  name;  }  [CE]  >  expected  [FE]              ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  >  0)  {  if(name.length()  >  0)  <  name  =  prefix  +   "/ "  +  name;  }  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0)    {    if(name.length()  >  0)  <  name  =  prefix  +   "/ "  +  name;  }	  	non-compiled	[CE]  >  expected	5	None	add
25	[BUG]  [BUGGY]  encoding  =  encoding.restrictByNotNullOrUndefined();  [CE]  class,  interface,  or  enum  expected  [FE]              IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  encoding  =  encoding.restrictByNotNullOrUndefined();  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	encoding  =  encoding.restrictByNotNullOrUndefined();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
26	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  file.getParent().replaceChild(header,  encoding);  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  encoding);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
27	[BUG]  [BUGGY]  nameLength  +=  encoding.length();  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  nameLength  +=  encoding.length();  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  +=  encoding.length();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
28	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath()));  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath()));  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getPath()));	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
29	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath(),  prefix));  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getPath(),  prefix));  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getPath(),  prefix));	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
30	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getMode()));  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getMode()));  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getMode()));	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
31	[BUG]  [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getSimpleName()));  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  file.getParent().replaceChild(header,  new  File(encoding.getSimpleName()));  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	file.getParent().replaceChild(header,  new  File(encoding.getSimpleName()));	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
32	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  >=  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  >=  0)  {	  if(prefix.length()    >=    0)    {    	compilable	  [FE]  ComparisonFailure  	12	3	replace
33	[BUG]  [BUGGY]  if(name.length()  >=  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  >=  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  >=  0)  {	  if(prefix.length()    >=    0)    {    	compilable	  [FE]  ComparisonFailure  	12	3	replace
34	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()!=  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()!=  0)  {	  if(prefix.length()    >=    0)    {    	compilable	  [FE]  ComparisonFailure  	12	3	replace
35	[BUG]  [BUGGY]  if(name.length()!=  0)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()!=  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()!=  0)  {	  if(prefix.length()    >=    0)    {    	compilable	  [FE]  ComparisonFailure  	12	3	replace
36	[BUG]  [BUGGY]  if  (prefix.length()  ==  0)  {  if  (prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if  (prefix.length()  ==  0)  {  if  (prefix.length()  ==  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()    ==    0)    {    if  (prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
37	[BUG]  [BUGGY]  if  (prefix.length()  ==  0)  {  if  (prefix.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if  (prefix.length()  ==  0)  {  if  (prefix.length()!=  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()    ==    0)    {    if  (prefix.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
38	[BUG]  [BUGGY]  if  (prefix.length()  ==  0)  {  if  (Prefix.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if  (prefix.length()  ==  0)  {  if  (Prefix.length()  ==  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()    ==    0)    {    if  (Prefix.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
39	[BUG]  [BUGGY]  if  (prefix.length()  ==  0)  {  if  (prefix.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if  (prefix.length()  ==  0)  {  if  (prefix.length()  >=  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()    ==    0)    {    if  (prefix.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
40	[BUG]  [BUGGY]  if  (prefix.length()  ==  0)  {  If  (prefix.length()  ==  0)  {  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if  (prefix.length()  ==  0)  {  If  (prefix.length()  ==  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()    ==    0)    {    If  (prefix.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
41	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if    (prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	2	3	replace
42	[BUG]  [BUGGY]  if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if  (prefix.length()  ==  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if    (prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	2	3	replace
43	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  if    (prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	2	3	replace
44	[BUG]  [BUGGY]  if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if  (prefix.length()  ==  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  if    (prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	2	3	replace
45	[BUG]  [BUGGY]  [FE]  IOException  [FE]        ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  ==  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  ==  0)  {	  if    (prefix.length()    ==    0)    {    	compilable	  [FE]  IOException  	2	1	replace
46	[BUG]  [BUGGY]  if(name.length()  ==  0)  {  [FE]  IOException  [FE]        ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  ==  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  ==  0)  {	  if    (prefix.length()    ==    0)    {    	compilable	  [FE]  IOException  	2	1	replace
47	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	6	3	replace
48	[BUG]  [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	6	3	replace
49	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	7	replace
50	[BUG]  [BUGGY]  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]      ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()  >  0  ||  prefix.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	7	replace
51	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	7	replace
52	[BUG]  [BUGGY]  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	7	replace
53	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	6	3	replace
54	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  >  0  ||  name.charAt(prefix.length()  -  1)!=  '/')  {	  if(name.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	6	3	replace
55	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name!=  null  &&  prefix.length()  >  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  IOException  	9	1	replace
56	[BUG]  [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name!=  null  &&  prefix.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null  &&  prefix.length()  >  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  IOException  	9	1	replace
57	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name!=  null  &&  name.length()  >  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	9	3	replace
58	[BUG]  [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  [FE]  ComparisonFailure  [FE]      IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null  &&  name.length()  >  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	9	3	replace
59	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix!=  null  ||  prefix.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  ||  prefix.length()  >  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	9	3	replace
60	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.length()  >  0)  {  [FE]  ComparisonFailure  [FE]        IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix!=  null  ||  prefix.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  ||  prefix.length()  >  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	9	3	replace
61	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix  ==  null  &&  prefix.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix  ==  null  &&  prefix.length()  >  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  IOException  	9	1	replace
62	[BUG]  [BUGGY]  if(prefix  ==  null  &&  prefix.length()  >  0)  {  [FE]  IOException  [FE]          IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix  ==  null  &&  prefix.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix  ==  null  &&  prefix.length()  >  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  IOException  	9	1	replace
63	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  &&  prefix.length()  ==  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	9	3	replace
64	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  [FE]  ComparisonFailure  [FE]            IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix!=  null  &&  prefix.length()  ==  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  prefix.length()  ==  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	9	3	replace
65	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name!=  null  ||  prefix.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name!=  null  ||  prefix.length()  >  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	9	3	replace
66	[BUG]  [BUGGY]  if(name!=  null  ||  prefix.length()  >  0)  {  [FE]  ComparisonFailure  [FE]              IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name!=  null  ||  prefix.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name!=  null  ||  prefix.length()  >  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	9	3	replace
67	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(prefix!=  null  &&  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(prefix!=  null  &&  prefix.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    >    0)    {    if(prefix!=  null  &&  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
68	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(prefix  ==  null  &&  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(prefix  ==  null  &&  prefix.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    >    0)    {    if(prefix  ==  null  &&  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
69	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(prefix  >=  null  &&  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(prefix  >=  null  &&  prefix.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    >    0)    {    if(prefix  >=  null  &&  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
70	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(prefix  >>  null  &&  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(prefix  >>  null  &&  prefix.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    >    0)    {    if(prefix  >>  null  &&  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
71	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  If(prefix!=  null  &&  prefix.length()  >  0)  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  If(prefix!=  null  &&  prefix.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    >    0)    {    If(prefix!=  null  &&  prefix.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
72	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(Prefix!=  null  &&  prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(Prefix!=  null  &&  prefix.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    >    0)    {    if(Prefix!=  null  &&  prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
73	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(prefix  [Delete]  null  &&  prefix.length()  >  0)  {  [CE]  ')'  expected  [FE]                IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(prefix  [Delete]  null  &&  prefix.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    >    0)    {    if(prefix  [Delete]  null  &&  prefix.length()  >  0)  {	  	non-compiled	[CE]  ')'  expected	8	None	add
74	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  &&  prefix.length()  >=  0)  {	  if(prefix.length()    >=    0)    {    	compilable	  [FE]  ComparisonFailure  	12	3	replace
75	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix!=  null  &&  prefix.length()  >=  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  prefix.length()  >=  0)  {	  if(prefix.length()    >=    0)    {    	compilable	  [FE]  ComparisonFailure  	12	3	replace
76	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix!=  null  &&  name.length()  >  0)  {	  if(name.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	6	3	replace
77	[BUG]  [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix!=  null  &&  name.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  name.length()  >  0)  {	  if(name.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	6	3	replace
78	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(prefix!=  null  &&  Prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix!=  null  &&  prefix.length()  >  0)  {  if(prefix!=  null  &&  Prefix.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=    null    &&    prefix.length()    >    0)    {    if(prefix!=  null  &&  Prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
79	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if(prefix.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  >  0)  {  if(prefix.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0)    {    if(prefix.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
80	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if(Name.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  >  0)  {  if(Name.length()  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0)    {    if(Name.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
81	[BUG]  [BUGGY]  if(prefix.length()  >=  0)  {  if(Prefix.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix.length()  >=  0)  {  if(Prefix.length()  >=  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >=    0)    {    if(Prefix.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
82	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if  (prefix!=  null  &&  prefix.length()!=  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if  (prefix!=  null  &&  prefix.length()!=  0)  {	  if    (prefix.length()!=    0)    {    	compilable	  [FE]  IOException  	4	1	replace
83	[BUG]  [BUGGY]  if  (prefix!=  null  &&  prefix.length()!=  0)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if  (prefix!=  null  &&  prefix.length()!=  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if  (prefix!=  null  &&  prefix.length()!=  0)  {	  if    (prefix.length()!=    0)    {    	compilable	  [FE]  IOException  	4	1	replace
84	[BUG]  [BUGGY]  name  =  fileName.substring(0,  fileName.length()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]              IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  name  =  fileName.substring(0,  fileName.length()  -  1);  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  fileName.substring(0,  fileName.length()  -  1);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
85	[BUG]  [BUGGY]  name  =  fileName.substring(0,  prefix.length()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  name  =  fileName.substring(0,  prefix.length()  -  1);  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  fileName.substring(0,  prefix.length()  -  1);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
86	[BUG]  [BUGGY]  name  =  fileName.substring(0,  fileName.length()  -  prefix.length());  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  name  =  fileName.substring(0,  fileName.length()  -  prefix.length());  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	name  =  fileName.substring(0,  fileName.length()  -  prefix.length());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
87	[BUG]  [BUGGY]  nameLength  +=  encoding.charAt(nameLength  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  nameLength  +=  encoding.charAt(nameLength  -  1);  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  +=  encoding.charAt(nameLength  -  1);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
88	[BUG]  [BUGGY]  nameLength  +=  prefix.length();  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  nameLength  +=  prefix.length();  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	nameLength  +=  prefix.length();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
89	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix!=  null  &&  prefix.length()  <  =  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  prefix.length()  <  =  0)  {	  if(prefix.length()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
90	[BUG]  [BUGGY]  if(prefix.length()  >=  0)  {  if(prefix.length()  <  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix.length()  >=  0)  {  if(prefix.length()  <  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix.length()    >=    0)    {    if(prefix.length()  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
91	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.length  >  0)  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix!=  null  &&  prefix.length  >  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix!=  null  &&  prefix.length  >  0)  {	  if(prefix!=    null    &&    prefix.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	9	None	replace
92	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(prefix  ==  null  ||  prefix.length()  ==  0)  {	  if    (prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	2	3	replace
93	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(prefix  ==  null  ||  prefix.length()  ==  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(prefix  ==  null  ||  prefix.length()  ==  0)  {	  if    (prefix.length()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	2	3	replace
94	[BUG]  [BUGGY]  if  (prefix.length()  ==  0)  {  if  (prefix.length()  {  0)  {  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if  (prefix.length()  ==  0)  {  if  (prefix.length()  {  0)  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if    (prefix.length()    ==    0)    {    if  (prefix.length()  {  0)  {	  	non-compiled	[CE]  ')'  expected	1	None	add
95	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	6	3	replace
96	[BUG]  [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  >  0  ||  name.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	6	3	replace
97	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	add	if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	6	3	replace
98	[BUG]  [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()  >  0  ||  prefix.charAt(name.length()  -  1)!=  '/')  {	  if(name.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	6	3	replace
99	[BUG]  [BUGGY]  if(name.length()  >  0)  {  if(name.length()  >  0)  {  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  if(name.length()  >  0)  {  if(name.length()  >  0)  {  }  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	if(name.length()    >    0)    {    if(name.length()  >  0)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
100	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]              IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
101	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
102	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  encoding);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
103	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE,  name);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
104	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE):  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
105	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [CE]  class,  interface,  or  enum  expected  [FE]                        IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  PREFIXLEN):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
106	[BUG]  [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [CE]  class,  interface,  or  enum  expected  [FE]                          IOException    [CONTEXT]    case  FORMAT_POSIX:  default:  {  final  String  prefix  =  oldStyle  ?  TarUtils.parseName(header,  offset,  PREFIXLEN)  :  TarUtils.parseName(header,  offset,  PREFIXLEN,  encoding);    if  (isDirectory()  &&  !name.endsWith(   "/   ")){  name  =  name  +     "/   ";  }    [BUGGY]  final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);  [BUGGY]    name  =  prefix  +     "/   "  +  name;  }  }  }  }  [CLASS]  TarArchiveEntry  [METHOD]  parseTarHeader  [RETURN_TYPE]  void  final  byte[]  header  ZipEncoding  encoding  final  boolean  oldStyle  [VARIABLES]  byte[]  header  boolean  checkSumOK  isDir  isExtended  oldStyle  paxGNUSparse  preserveLeadingSlashes  starMode  starSparse  ZipEncoding  encoding  byte  linkFlag  String  fileName  groupName  link  linkName  magic  name  normalizedName  prefix  user  userName  version  xstarPrefix  File  file  int  DEFAULT_DIR_MODE  DEFAULT_FILE_MODE  MAX_NAMELEN  MILLIS_PER_SECOND  c  csOffset  devMajor  devMinor  devNo  groupId  i  length  mode  nameLength  offset  type  userId  long  chk  groupId  modTime  realSize  size  time  userId  value  TarArchiveEntry[]  EMPTY_TAR_ARCHIVE_ENTRIES  result  	projects/Compress38/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java	0.3779644730092272	1161	1161	1	replace	final  String  prefix  =  oldStyle?  TarUtils.parseName(header,  offset,  DEFAULT_FILE_MODE):  TarUtils.parseName(header,  offset,  DEFAULT_DIR_MODE,  encoding);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
