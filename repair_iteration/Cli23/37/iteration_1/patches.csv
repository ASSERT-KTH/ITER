bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(option.hasOpt())  {  [CE]  <identifier>  expected  [FE]        RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  if(option.hasOpt())  {  [BUGGY]    {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasOpt())  {	  if(option.hasLongOpt())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
2	[BUG]  [BUGGY]  if(option.hasLongOpt()  ||  option.hasLongOpt())  {  [CE]  <identifier>  expected  [FE]          RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  if(option.hasLongOpt()  ||  option.hasLongOpt())  {  [BUGGY]    {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasLongOpt()  ||  option.hasLongOpt())  {	  if(option.hasLongOpt())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
3	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(7);  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  StringBuffer  sb  =  new  StringBuffer(7);  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	StringBuffer  sb  =  new  StringBuffer(7);	      StringBuffer    sb    =    new    StringBuffer(10);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
4	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(5);  [CE]  <identifier>  expected  [FE]              RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  StringBuffer  sb  =  new  StringBuffer(5);  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	StringBuffer  sb  =  new  StringBuffer(5);	      StringBuffer    sb    =    new    StringBuffer(10);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
5	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(16);  [CE]  <identifier>  expected  [FE]              RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  StringBuffer  sb  =  new  StringBuffer(16);  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	StringBuffer  sb  =  new  StringBuffer(16);	      StringBuffer    sb    =    new    StringBuffer(8);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
6	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(32);  [CE]  <identifier>  expected  [FE]                RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  StringBuffer  sb  =  new  StringBuffer(32);  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	StringBuffer  sb  =  new  StringBuffer(32);	      StringBuffer    sb    =    new    StringBuffer(8);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
7	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(128);  [CE]  <identifier>  expected  [FE]                  RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  StringBuffer  sb  =  new  StringBuffer(128);  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	StringBuffer  sb  =  new  StringBuffer(128);	      StringBuffer    sb    =    new    StringBuffer(8);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
8	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultLongOptPrefix);  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  Option  option  =  options.getOption(defaultLongOptPrefix);  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultLongOptPrefix);	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
9	[BUG]  [BUGGY]  Option  option  =  options.getOption(option.getLongOpt());  [CE]  <identifier>  expected  [FE]              RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  Option  option  =  options.getOption(option.getLongOpt());  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(option.getLongOpt());	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
10	[BUG]  [BUGGY]  if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length()  -  1)!=  '/')  {  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length()  -  1)!=  '/')  {  [BUGGY]    {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length()  -  1)!=  '/')  {	  if(optBuf.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
11	[BUG]  [BUGGY]  if(optBuf.length()!=  0)  {  [CE]  <identifier>  expected  [FE]              RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  if(optBuf.length()!=  0)  {  [BUGGY]    {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf.length()!=  0)  {	  if(optBuf.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
12	[BUG]  [BUGGY]  if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length()  -  1)!=  ':')  {  [CE]  <identifier>  expected  [FE]                RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length()  -  1)!=  ':')  {  [BUGGY]    {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length()  -  1)!=  ':')  {	  if(optBuf.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
13	[BUG]  [BUGGY]  sb.append( "   "  +  defaultLongOptPrefix);  [CE]  <identifier>  expected  [FE]          RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  sb.append( "   "  +  defaultLongOptPrefix);  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append( "   "  +  defaultLongOptPrefix);	      sb.append(defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
14	[BUG]  [BUGGY]  sb.append( ", "  +  defaultLongOptPrefix);  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  sb.append( ", "  +  defaultLongOptPrefix);  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append( ", "  +  defaultLongOptPrefix);	      sb.append(defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
15	[BUG]  [BUGGY]  sb.append(defaultLongOptPrefix).append(option.getShortOpt());  [CE]  <identifier>  expected  [FE]        RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  sb.append(defaultLongOptPrefix).append(option.getShortOpt());  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(defaultLongOptPrefix).append(option.getShortOpt());	      sb.append(option.getShortOpt());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
16	[BUG]  [BUGGY]  Option  option  =  options.getOption(optBuf,  defaultLongOptPrefix);  [CE]  <identifier>  expected  [FE]          RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  Option  option  =  options.getOption(optBuf,  defaultLongOptPrefix);  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(optBuf,  defaultLongOptPrefix);	      Option    option    =    options.getOption(optBuf);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
17	[BUG]  [BUGGY]  option  =  options.getOption(defaultLongOptPrefix);  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  option  =  options.getOption(defaultLongOptPrefix);  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	option  =  options.getOption(defaultLongOptPrefix);	      Option    option    =    options.getOption(optBuf);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
18	[BUG]  [BUGGY]  sb.append(lpad).append(option.getLongOpt());  [CE]  <identifier>  expected  [FE]        RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  sb.append(lpad).append(option.getLongOpt());  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(lpad).append(option.getLongOpt());	      sb.append(defaultLongOptPrefix).append(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
19	[BUG]  [BUGGY]  sb.append(defaultNewLine).append(option.getLongOpt());  [CE]  <identifier>  expected  [FE]          RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  sb.append(defaultNewLine).append(option.getLongOpt());  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(defaultNewLine).append(option.getLongOpt());	      sb.append(defaultLongOptPrefix).append(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
20	[BUG]  [BUGGY]  sb.append(',').append(option.getLongOpt());  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  sb.append(',').append(option.getLongOpt());  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(',').append(option.getLongOpt());	      sb.append(defaultLongOptPrefix).append(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
21	[BUG]  [BUGGY]  option  =(Option)i.next();  [CE]  <identifier>  expected  [FE]        RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  option  =(Option)i.next();  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	option  =(Option)i.next();	      Option    option    =(Option)i.next();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  Option  option  =(Option)option.next();  [CE]  <identifier>  expected  [FE]          RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  Option  option  =(Option)option.next();  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =(Option)option.next();	      Option    option    =(Option)i.next();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
23	[BUG]  [BUGGY]  Option  option  =(Option)optList.next();  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  Option  option  =(Option)optList.next();  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =(Option)optList.next();	      Option    option    =(Option)i.next();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
24	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(6);  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  StringBuffer  sb  =  new  StringBuffer(6);  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	StringBuffer  sb  =  new  StringBuffer(6);	      StringBuffer    sb    =    new    StringBuffer(10);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
25	[BUG]  [BUGGY]  if(optBuf!=  null)  {  [CE]  <identifier>  expected  [FE]          RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  if(optBuf!=  null)  {  [BUGGY]    {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf!=  null)  {	  if(option.getLongOpt()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
26	[BUG]  [BUGGY]  sb.append(option.getDescription());  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  sb.append(option.getDescription());  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(option.getDescription());	      sb.append(option.getOpt());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
27	[BUG]  [BUGGY]  if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length()  -  1)!=  'n')  {  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length()  -  1)!=  'n')  {  [BUGGY]    {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length()  -  1)!=  'n')  {	  if(optBuf.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
28	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  defaultLongOptPrefix);  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  Option  option  =  options.getOption(option,  defaultLongOptPrefix);  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(option,  defaultLongOptPrefix);	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
29	[BUG]  [BUGGY]  sb.append(defaultNewLine);  [CE]  <identifier>  expected  [FE]          RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  sb.append(defaultNewLine);  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(defaultNewLine);	      sb.append(defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
30	[BUG]  [BUGGY]  if(option.hasLongOpt()  &&  defaultLongOptPrefix!=  null)  {  [CE]  <identifier>  expected  [FE]        RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  if(option.hasLongOpt()  &&  defaultLongOptPrefix!=  null)  {  [BUGGY]    {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasLongOpt()  &&  defaultLongOptPrefix!=  null)  {	  if(option.hasLongOpt())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
31	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultOptPrefix);  [CE]  <identifier>  expected  [FE]          RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  Option  option  =  options.getOption(defaultOptPrefix);  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultOptPrefix);	      Option    option    =    options.getOption(optBuf);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
32	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(40);  [CE]  <identifier>  expected  [FE]                RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  StringBuffer  sb  =  new  StringBuffer(40);  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	StringBuffer  sb  =  new  StringBuffer(40);	      StringBuffer    sb    =    new    StringBuffer(80);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
33	[BUG]  [BUGGY]  Options  option  =(Option)i.next();  [CE]  <identifier>  expected  [FE]        RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  Options  option  =(Option)i.next();  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Options  option  =(Option)i.next();	      Option    option    =(Option)i.next();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultLeftPad);  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  Option  option  =  options.getOption(defaultLeftPad);  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultLeftPad);	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
35	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultWidth);  [CE]  <identifier>  expected  [FE]              RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  Option  option  =  options.getOption(defaultWidth);  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultWidth);	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
36	[BUG]  [BUGGY]  sb.append( ", ").append(option.getLongOpt());  [CE]  <identifier>  expected  [FE]        RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  sb.append( ", ").append(option.getLongOpt());  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append( ", ").append(option.getLongOpt());	      sb.append(defaultLongOptPrefix).append(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
37	[BUG]  [BUGGY]  sb.append(defaultOptPrefix).append(option.getOpt());  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  sb.append(defaultOptPrefix).append(option.getOpt());  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(defaultOptPrefix).append(option.getOpt());	      sb.append(option.getOpt());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
38	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  sb.append(option.getOpt());  }  [CE]  <identifier>  expected  [FE]              RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  if(option.getOpt()!=  null)  {  sb.append(option.getOpt());  }  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.getOpt()!=  null)  {  sb.append(option.getOpt());  }	      sb.append(option.getOpt());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
39	[BUG]  [BUGGY]  sb.append(defaultOptPrefix);  [CE]  <identifier>  expected  [FE]                RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  sb.append(defaultOptPrefix);  [BUGGY]    if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(defaultOptPrefix);	      sb.append(option.getOpt());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
40	[BUG]  [BUGGY]  if(option.hasLongOpt()  ||  option.getLongOpt().equals(defaultLongOptPrefix))  {  [CE]  <identifier>  expected  [FE]        RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  if(option.hasLongOpt()  ||  option.getLongOpt().equals(defaultLongOptPrefix))  {  [BUGGY]    {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasLongOpt()  ||  option.getLongOpt().equals(defaultLongOptPrefix))  {	  if(option.hasLongOpt())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
41	[BUG]  [BUGGY]  if(option.hasLongOpt()  ||  option.getLongOpt()!=  null)  {  [CE]  <identifier>  expected  [FE]          RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  if(option.hasLongOpt()  ||  option.getLongOpt()!=  null)  {  [BUGGY]    {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasLongOpt()  ||  option.getLongOpt()!=  null)  {	  if(option.hasLongOpt())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
42	[BUG]  [BUGGY]  if(option.getOpt()!=  null  &&  defaultLongOptPrefix!=  null)  {  [CE]  <identifier>  expected  [FE]        RuntimeException    [CONTEXT]    List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);    [BUGGY]  if(option.getOpt()!=  null  &&  defaultLongOptPrefix!=  null)  {  [BUGGY]    {  optBuf.append(lpad).append(   "     "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.getOpt()!=  null  &&  defaultLongOptPrefix!=  null)  {	  if(option.getOpt()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
