bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(optBuf  ==  null)  {  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(optBuf  ==  null)  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf  ==  null)  {	  if(optBuf!=    null)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
2	[BUG]  [BUGGY]  if(option!=  null)  {  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option!=  null)  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option!=  null)  {	  if(optBuf!=    null)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
3	[BUG]  [BUGGY]  if(optBuf!=  null  ||  optBuf.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(optBuf!=  null  ||  optBuf.length()  ==  0)  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf!=  null  ||  optBuf.length()  ==  0)  {	  if(optBuf!=    null)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
4	[BUG]  [BUGGY]  sb.append(',').append(option.getOpt());  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(',').append(option.getOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(',').append(option.getOpt());	  sb.append(',').append(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
5	[BUG]  [BUGGY]  sb.append(',').append(option.getShortOpt());  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(',').append(option.getShortOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(',').append(option.getShortOpt());	  sb.append(',').append(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
6	[BUG]  [BUGGY]  if(optBuf.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(optBuf.length()  >  0)  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf.length()  >  0)  {	  if(optBuf.length()!=    0)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
7	[BUG]  [BUGGY]  if(optBuf.length()  >=  0)  {  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(optBuf.length()  >=  0)  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf.length()  >=  0)  {	  if(optBuf.length()!=    0)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
8	[BUG]  [BUGGY]  sb.append( "   "  +  defaultNewLine);  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append( "   "  +  defaultNewLine);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append( "   "  +  defaultNewLine);	  sb.append(   "       "    +    defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
9	[BUG]  [BUGGY]  sb.append( ": "  +  defaultLongOptPrefix);  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append( ": "  +  defaultLongOptPrefix);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append( ": "  +  defaultLongOptPrefix);	  sb.append(   "       "    +    defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
10	[BUG]  [BUGGY]  sb.append( "n "  +  defaultLongOptPrefix);  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append( "n "  +  defaultLongOptPrefix);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append( "n "  +  defaultLongOptPrefix);	  sb.append(   "       "    +    defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
11	[BUG]  [BUGGY]  sb.append(option.getSyntaxPrefix());  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(option.getSyntaxPrefix());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(option.getSyntaxPrefix());	  sb.append(defaultNewLine);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
12	[BUG]  [BUGGY]  sb.append(lpad).append(option.getShortOpt());  [CE]  <identifier>  expected  [FE]            RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(lpad).append(option.getShortOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(lpad).append(option.getShortOpt());	  sb.append(defaultLongOptPrefix).append(option.getShortOpt());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
13	[BUG]  [BUGGY]  sb.append(defaultNewLine).append(option.getShortOpt());  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(defaultNewLine).append(option.getShortOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(defaultNewLine).append(option.getShortOpt());	  sb.append(defaultLongOptPrefix).append(option.getShortOpt());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
14	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultNewLine,  defaultLongOptPrefix);  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(defaultNewLine,  defaultLongOptPrefix);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultNewLine,  defaultLongOptPrefix);	  Option    option    =    options.getOption(optBuf,    defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
15	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultLongOptPrefix,  defaultLongOptPrefix);  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(defaultLongOptPrefix,  defaultLongOptPrefix);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultLongOptPrefix,  defaultLongOptPrefix);	  Option    option    =    options.getOption(optBuf,    defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
16	[BUG]  [BUGGY]  Option  option  =  options.getOption(lpad,  defaultLongOptPrefix);  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(lpad,  defaultLongOptPrefix);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(lpad,  defaultLongOptPrefix);	  Option    option    =    options.getOption(optBuf,    defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
17	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultLongOptPrefix,  optBuf);  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(defaultLongOptPrefix,  optBuf);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultLongOptPrefix,  optBuf);	  Option    option    =    options.getOption(optBuf,    defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
18	[BUG]  [BUGGY]  if(option.hasLongOpt()  &&  option.getLongOpt().equals(defaultLongOptPrefix))  {  [CE]  <identifier>  expected  [FE]            RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.hasLongOpt()  &&  option.getLongOpt().equals(defaultLongOptPrefix))  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasLongOpt()  &&  option.getLongOpt().equals(defaultLongOptPrefix))  {	  if(option.hasLongOpt()    ||    option.getLongOpt().equals(defaultLongOptPrefix))    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
19	[BUG]  [BUGGY]  if(option.hasOpt()  ||  option.getOpt().equals(defaultLongOptPrefix))  {  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.hasOpt()  ||  option.getOpt().equals(defaultLongOptPrefix))  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasOpt()  ||  option.getOpt().equals(defaultLongOptPrefix))  {	  if(option.hasLongOpt()    ||    option.getLongOpt().equals(defaultLongOptPrefix))    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
20	[BUG]  [BUGGY]  if(option.hasLongOpt()  ||  defaultLongOptPrefix.equals(option.getLongOpt()))  {  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.hasLongOpt()  ||  defaultLongOptPrefix.equals(option.getLongOpt()))  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasLongOpt()  ||  defaultLongOptPrefix.equals(option.getLongOpt()))  {	  if(option.hasLongOpt()    ||    option.getLongOpt().equals(defaultLongOptPrefix))    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
21	[BUG]  [BUGGY]  if(optBuf.length()  ==  0  &&  optBuf.charAt(optBuf.length()  -  1)!=  'n')  {  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(optBuf.length()  ==  0  &&  optBuf.charAt(optBuf.length()  -  1)!=  'n')  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf.length()  ==  0  &&  optBuf.charAt(optBuf.length()  -  1)!=  'n')  {	  if(optBuf.length()    ==    0    ||    optBuf.charAt(optBuf.length()    -    1)!=    'n')    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
22	[BUG]  [BUGGY]  if(optBuf.length()!=  0  ||  optBuf.charAt(optBuf.length()  -  1)!=  'n')  {  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(optBuf.length()!=  0  ||  optBuf.charAt(optBuf.length()  -  1)!=  'n')  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf.length()!=  0  ||  optBuf.charAt(optBuf.length()  -  1)!=  'n')  {	  if(optBuf.length()    ==    0    ||    optBuf.charAt(optBuf.length()    -    1)!=    'n')    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
23	[BUG]  [BUGGY]  if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length())!=  'n')  {  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length())!=  'n')  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length())!=  'n')  {	  if(optBuf.length()    ==    0    ||    optBuf.charAt(optBuf.length()    -    1)!=    'n')    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
24	[BUG]  [BUGGY]  if(option.hasLongOpt()  &&  option.getLongOpt()!=  null)  {  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.hasLongOpt()  &&  option.getLongOpt()!=  null)  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasLongOpt()  &&  option.getLongOpt()!=  null)  {	  if(option.hasLongOpt()    ||    option.getLongOpt()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
25	[BUG]  [BUGGY]  if(option.hasLongOpt()  ||  option.getLongOpt()  ==  null)  {  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.hasLongOpt()  ||  option.getLongOpt()  ==  null)  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasLongOpt()  ||  option.getLongOpt()  ==  null)  {	  if(option.hasLongOpt()    ||    option.getLongOpt()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
26	[BUG]  [BUGGY]  if(option.hasOpt()  ||  option.getOpt()!=  null)  {  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.hasOpt()  ||  option.getOpt()!=  null)  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasOpt()  ||  option.getOpt()!=  null)  {	  if(option.hasLongOpt()    ||    option.getLongOpt()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
27	[BUG]  [BUGGY]  if(option.hasLongOpt()  ||  option.getLongOpt())  {  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.hasLongOpt()  ||  option.getLongOpt())  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasLongOpt()  ||  option.getLongOpt())  {	  if(option.hasLongOpt()    ||    option.hasLongOpt())    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
28	[BUG]  [BUGGY]  if(option.hasLongOpt()  &&  option.hasLongOpt())  {  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.hasLongOpt()  &&  option.hasLongOpt())  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasLongOpt()  &&  option.hasLongOpt())  {	  if(option.hasLongOpt()    ||    option.hasLongOpt())    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
29	[BUG]  [BUGGY]  if(option.hasOpt()  ||  option.hasLongOpt())  {  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.hasOpt()  ||  option.hasLongOpt())  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasOpt()  ||  option.hasLongOpt())  {	  if(option.hasLongOpt()    ||    option.hasLongOpt())    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
30	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultDescPad);  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(defaultDescPad);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultDescPad);	  Option    option    =    options.getOption(defaultLeftPad);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
31	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultLeftPad,  defaultWidth);  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(defaultLeftPad,  defaultWidth);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultLeftPad,  defaultWidth);	  Option    option    =    options.getOption(defaultLeftPad);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
32	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultNewLine);  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(defaultNewLine);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultNewLine);	  Option    option    =    options.getOption(defaultOptPrefix);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
33	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultSyntaxPrefix);  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(defaultSyntaxPrefix);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultSyntaxPrefix);	  Option    option    =    options.getOption(defaultOptPrefix);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
34	[BUG]  [BUGGY]  sb.append(option.getDescription()).append(defaultLongOptPrefix);  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(option.getDescription()).append(defaultLongOptPrefix);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(option.getDescription()).append(defaultLongOptPrefix);	  sb.append(option.getDescription());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
35	[BUG]  [BUGGY]  sb.append(option.getOffset());  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(option.getOffset());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(option.getOffset());	  if(option.getOpt()!=    null)    {    sb.append(option.getOpt());    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
36	[BUG]  [BUGGY]  if(option.getLongOpt())  {  [CE]  <identifier>  expected  [FE]            RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.getLongOpt())  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.getLongOpt())  {	  if(option.hasOpt())    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
37	[BUG]  [BUGGY]  if(option.getLongOpt()  <  defaultLongOptPrefix)  {  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.getLongOpt()  <  defaultLongOptPrefix)  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.getLongOpt()  <  defaultLongOptPrefix)  {	  if(option.hasOpt())    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
38	[BUG]  [BUGGY]  if(!option.hasLongOpt())  {  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(!option.hasLongOpt())  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(!option.hasLongOpt())  {	  if(option.hasOpt())    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
39	[BUG]  [BUGGY]  if(option.getLongOpt()!=  null  &&  defaultLongOptPrefix!=  null)  {  [CE]  <identifier>  expected  [FE]            RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.getLongOpt()!=  null  &&  defaultLongOptPrefix!=  null)  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.getLongOpt()!=  null  &&  defaultLongOptPrefix!=  null)  {	  if(option.getOpt()!=    null    &&    defaultLongOptPrefix!=    null)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
40	[BUG]  [BUGGY]  if(option.getOpt()!=  null  ||  defaultLongOptPrefix!=  null)  {  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.getOpt()!=  null  ||  defaultLongOptPrefix!=  null)  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.getOpt()!=  null  ||  defaultLongOptPrefix!=  null)  {	  if(option.getOpt()!=    null    &&    defaultLongOptPrefix!=    null)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
41	[BUG]  [BUGGY]  if(defaultLongOptPrefix!=  null  &&  option.getOpt()!=  null)  {  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(defaultLongOptPrefix!=  null  &&  option.getOpt()!=  null)  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(defaultLongOptPrefix!=  null  &&  option.getOpt()!=  null)  {	  if(option.getOpt()!=    null    &&    defaultLongOptPrefix!=    null)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
42	[BUG]  [BUGGY]  sb.append(lpad).append(defaultLongOptPrefix).append(option.getLongOpt());  [CE]  <identifier>  expected  [FE]            RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(lpad).append(defaultLongOptPrefix).append(option.getLongOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(lpad).append(defaultLongOptPrefix).append(option.getLongOpt());	  sb.append(lpad).append(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
43	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultLongOptPrefix,  defaultNewLine);  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(defaultLongOptPrefix,  defaultNewLine);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultLongOptPrefix,  defaultNewLine);	  Option    option    =    options.getOption(defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
44	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultLongOptPrefix  +  1);  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(defaultLongOptPrefix  +  1);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultLongOptPrefix  +  1);	  Option    option    =    options.getOption(defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
45	[BUG]  [BUGGY]  sb.append(defaultNewLine).append(option.getOpt());  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(defaultNewLine).append(option.getOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(defaultNewLine).append(option.getOpt());	  sb.append(defaultNewLine).append(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
46	[BUG]  [BUGGY]  sb.append(lpad).append(option.getOpt());  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(lpad).append(option.getOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(lpad).append(option.getOpt());	  sb.append(defaultOptPrefix).append(option.getOpt());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
47	[BUG]  [BUGGY]  sb.append(defaultLongOptPrefix).append(option.getOpt());  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(defaultLongOptPrefix).append(option.getOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(defaultLongOptPrefix).append(option.getOpt());	  sb.append(defaultOptPrefix).append(option.getOpt());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
48	[BUG]  [BUGGY]  option  =  options.getOption(option.getLongOpt());  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  option  =  options.getOption(option.getLongOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	option  =  options.getOption(option.getLongOpt());	  option    =    options.getOption(defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
49	[BUG]  [BUGGY]  option  =  options.getOption(defaultNewLine);  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  option  =  options.getOption(defaultNewLine);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	option  =  options.getOption(defaultNewLine);	  option    =    options.getOption(defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
50	[BUG]  [BUGGY]  Option  option  =(Option)option.getOption();  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =(Option)option.getOption();  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =(Option)option.getOption();	  Option    option    =(Option)option.next();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
51	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultWidth  -  1);  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(defaultWidth  -  1);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultWidth  -  1);	  Option    option    =    options.getOption(defaultWidth);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
52	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultWidth  +  1);  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(defaultWidth  +  1);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultWidth  +  1);	  Option    option    =    options.getOption(defaultWidth);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
53	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultWidth,  defaultLeftPad);  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(defaultWidth,  defaultLeftPad);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultWidth,  defaultLeftPad);	  Option    option    =    options.getOption(defaultWidth);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
54	[BUG]  [BUGGY]  if(option.hasLongOpt()  ||  defaultLongOptPrefix!=  null)  {  [CE]  <identifier>  expected  [FE]            RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.hasLongOpt()  ||  defaultLongOptPrefix!=  null)  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasLongOpt()  ||  defaultLongOptPrefix!=  null)  {	  if(option.hasLongOpt()    &&    defaultLongOptPrefix!=    null)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
55	[BUG]  [BUGGY]  if(!option.hasLongOpt()  &&  defaultLongOptPrefix!=  null)  {  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(!option.hasLongOpt()  &&  defaultLongOptPrefix!=  null)  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(!option.hasLongOpt()  &&  defaultLongOptPrefix!=  null)  {	  if(option.hasLongOpt()    &&    defaultLongOptPrefix!=    null)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
56	[BUG]  [BUGGY]  if(option.hasOpt()  &&  defaultLongOptPrefix!=  null)  {  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.hasOpt()  &&  defaultLongOptPrefix!=  null)  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasOpt()  &&  defaultLongOptPrefix!=  null)  {	  if(option.hasLongOpt()    &&    defaultLongOptPrefix!=    null)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
57	[BUG]  [BUGGY]  sb.append( ",n "  +  defaultLongOptPrefix);  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append( ",n "  +  defaultLongOptPrefix);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append( ",n "  +  defaultLongOptPrefix);	  sb.append(   ",   "    +    defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
58	[BUG]  [BUGGY]  sb.append( ",   "  +  defaultNewLine);  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append( ",   "  +  defaultNewLine);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append( ",   "  +  defaultNewLine);	  sb.append(   ",   "    +    defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
59	[BUG]  [BUGGY]  Option  option  =(Option)optList.get(0);  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =(Option)optList.get(0);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =(Option)optList.get(0);	  Option    option    =(Option)optList.next();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
60	[BUG]  [BUGGY]  Option  option  =(Option)optList.get(option);  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =(Option)optList.get(option);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =(Option)optList.get(option);	  Option    option    =(Option)optList.next();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
61	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  defaultNewLine);  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(option,  defaultNewLine);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(option,  defaultNewLine);	  Option    option    =    options.getOption(option,    defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
62	[BUG]  [BUGGY]  Option  option  =  options.getOption(option.getOpt());  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(option.getOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(option.getOpt());	  Option    option    =    options.getOption(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
63	[BUG]  [BUGGY]  Option  option  =  options.getOption(option.getLongOpt(),  defaultLongOptPrefix);  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(option.getLongOpt(),  defaultLongOptPrefix);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(option.getLongOpt(),  defaultLongOptPrefix);	  Option    option    =    options.getOption(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
64	[BUG]  [BUGGY]  Option  option  =  options.getOption(option.getDefaultLongOptPrefix());  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(option.getDefaultLongOptPrefix());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(option.getDefaultLongOptPrefix());	  Option    option    =    options.getOption(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
65	[BUG]  [BUGGY]  option  =(Option)option.next();  [CE]  <identifier>  expected  [FE]            RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  option  =(Option)option.next();  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	option  =(Option)option.next();	  option    =(Option)i.next();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
66	[BUG]  [BUGGY]  if(optBuf.length()!=  0  ||  optBuf.charAt(optBuf.length()  -  1)!=  '/')  {  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(optBuf.length()!=  0  ||  optBuf.charAt(optBuf.length()  -  1)!=  '/')  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf.length()!=  0  ||  optBuf.charAt(optBuf.length()  -  1)!=  '/')  {	  if(optBuf.length()    ==    0    ||    optBuf.charAt(optBuf.length()    -    1)!=    '/')    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
67	[BUG]  [BUGGY]  if(optBuf.length()  ==  0  &&  optBuf.charAt(optBuf.length()  -  1)!=  '/')  {  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(optBuf.length()  ==  0  &&  optBuf.charAt(optBuf.length()  -  1)!=  '/')  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf.length()  ==  0  &&  optBuf.charAt(optBuf.length()  -  1)!=  '/')  {	  if(optBuf.length()    ==    0    ||    optBuf.charAt(optBuf.length()    -    1)!=    '/')    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
68	[BUG]  [BUGGY]  if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length()  -  2)!=  '/')  {  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length()  -  2)!=  '/')  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length()  -  2)!=  '/')  {	  if(optBuf.length()    ==    0    ||    optBuf.charAt(optBuf.length()    -    1)!=    '/')    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
69	[BUG]  [BUGGY]  if(optBuf.length()  ==  0  &&  optBuf.charAt(optBuf.length()  -  1)!=  ':')  {  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(optBuf.length()  ==  0  &&  optBuf.charAt(optBuf.length()  -  1)!=  ':')  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf.length()  ==  0  &&  optBuf.charAt(optBuf.length()  -  1)!=  ':')  {	  if(optBuf.length()    ==    0    ||    optBuf.charAt(optBuf.length()    -    1)!=    ':')    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
70	[BUG]  [BUGGY]  if(optBuf.length()!=  0  ||  optBuf.charAt(optBuf.length()  -  1)!=  ':')  {  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(optBuf.length()!=  0  ||  optBuf.charAt(optBuf.length()  -  1)!=  ':')  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf.length()!=  0  ||  optBuf.charAt(optBuf.length()  -  1)!=  ':')  {	  if(optBuf.length()    ==    0    ||    optBuf.charAt(optBuf.length()    -    1)!=    ':')    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
71	[BUG]  [BUGGY]  if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length())!=  ':')  {  [CE]  <identifier>  expected  [FE]                        RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length())!=  ':')  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length())!=  ':')  {	  if(optBuf.length()    ==    0    ||    optBuf.charAt(optBuf.length()    -    1)!=    ':')    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
72	[BUG]  [BUGGY]  sb.append( ",n ").append(option.getLongOpt());  [CE]  <identifier>  expected  [FE]            RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append( ",n ").append(option.getLongOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append( ",n ").append(option.getLongOpt());	  sb.append(   ",   ").append(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
73	[BUG]  [BUGGY]  sb.append( ",').append(option.getLongOpt());  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append( ",').append(option.getLongOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append( ",').append(option.getLongOpt());	  sb.append(   ",   ").append(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
74	[BUG]  [BUGGY]  sb.append( ",' ".append(option.getLongOpt());  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append( ",' ".append(option.getLongOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append( ",' ".append(option.getLongOpt());	  sb.append(   ",   ").append(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
75	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultWidth,  defaultDescPad);  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(defaultWidth,  defaultDescPad);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultWidth,  defaultDescPad);	  Option    option    =    options.getOption(defaultWidth);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
76	[BUG]  [BUGGY]  sb.append(',').append(defaultLongOptPrefix);  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(',').append(defaultLongOptPrefix);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(',').append(defaultLongOptPrefix);	  sb.append(',').append(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
77	[BUG]  [BUGGY]  if(option.hasOpt())  {  sb.append(defaultOptPrefix).append(option.getOpt());  }  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.hasOpt())  {  sb.append(defaultOptPrefix).append(option.getOpt());  }  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasOpt())  {  sb.append(defaultOptPrefix).append(option.getOpt());  }	  sb.append(defaultOptPrefix).append(option.getOpt());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
78	[BUG]  [BUGGY]  Option  option  =  options.getOption(option.getDefaultLongOpt());  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(option.getDefaultLongOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(option.getDefaultLongOpt());	  Option    option    =    options.getOption(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
79	[BUG]  [BUGGY]  option  =  options.getOption(option);  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  option  =  options.getOption(option);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	option  =  options.getOption(option);	  option    =    options.getOption(defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
80	[BUG]  [BUGGY]  if(option.hasNumberOpt())  {  [CE]  <identifier>  expected  [FE]            RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.hasNumberOpt())  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasNumberOpt())  {	  if(option.hasOpt())    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
81	[BUG]  [BUGGY]  sb.append(option.getNewLine());  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(option.getNewLine());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(option.getNewLine());	  sb.append(defaultNewLine);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
82	[BUG]  [BUGGY]  sb.append(option.getDescription()).append('n');  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(option.getDescription()).append('n');  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(option.getDescription()).append('n');	  sb.append(option.getDescription());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
83	[BUG]  [BUGGY]  if(option.hasLongOpt()  ||  options.getLongOpt().equals(defaultLongOptPrefix))  {  [CE]  <identifier>  expected  [FE]            RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.hasLongOpt()  ||  options.getLongOpt().equals(defaultLongOptPrefix))  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasLongOpt()  ||  options.getLongOpt().equals(defaultLongOptPrefix))  {	  if(option.hasLongOpt()    ||    option.getLongOpt().equals(defaultLongOptPrefix))    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
84	[BUG]  [BUGGY]  if(option.getOpt()  ==  null  &&  defaultLongOptPrefix!=  null)  {  [CE]  <identifier>  expected  [FE]            RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.getOpt()  ==  null  &&  defaultLongOptPrefix!=  null)  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.getOpt()  ==  null  &&  defaultLongOptPrefix!=  null)  {	  if(option.getOpt()!=    null    &&    defaultLongOptPrefix!=    null)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
85	[BUG]  [BUGGY]  if(option.getOpt()!=  null  &&  defaultLongOptPrefix  ==  null)  {  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.getOpt()!=  null  &&  defaultLongOptPrefix  ==  null)  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.getOpt()!=  null  &&  defaultLongOptPrefix  ==  null)  {	  if(option.getOpt()!=    null    &&    defaultLongOptPrefix!=    null)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
86	[BUG]  [BUGGY]  if(option.hasLongOpt()  &&  defaultLongOptPrefix  ==  null)  {  [CE]  <identifier>  expected  [FE]            RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.hasLongOpt()  &&  defaultLongOptPrefix  ==  null)  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasLongOpt()  &&  defaultLongOptPrefix  ==  null)  {	  if(option.hasLongOpt()    &&    defaultLongOptPrefix!=    null)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
87	[BUG]  [BUGGY]  if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length())!=  '/')  {  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length())!=  '/')  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length())!=  '/')  {	  if(optBuf.length()    ==    0    ||    optBuf.charAt(optBuf.length()    -    1)!=    '/')    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
88	[BUG]  [BUGGY]  if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length()  -  2)!=  ':')  {  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length()  -  2)!=  ':')  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf.length()  ==  0  ||  optBuf.charAt(optBuf.length()  -  2)!=  ':')  {	  if(optBuf.length()    ==    0    ||    optBuf.charAt(optBuf.length()    -    1)!=    ':')    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
89	[BUG]  [BUGGY]  if(option.hasOpt()  ||  option.hasOpt())  {  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.hasOpt()  ||  option.hasOpt())  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasOpt()  ||  option.hasOpt())  {	  if(option.hasLongOpt()    ||    option.hasLongOpt())    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
90	[BUG]  [BUGGY]  sb.append(option.getDefaultLongOpt());  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(option.getDefaultLongOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(option.getDefaultLongOpt());	  if(option.getOpt()!=    null)    {    sb.append(option.getOpt());    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
91	[BUG]  [BUGGY]  sb.append(defaultNewLine).append(option.getDescription());  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(defaultNewLine).append(option.getDescription());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(defaultNewLine).append(option.getDescription());	  sb.append(defaultNewLine).append(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
92	[BUG]  [BUGGY]  sb.append(defaultNewLine).append(option.getLastOpt());  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(defaultNewLine).append(option.getLastOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(defaultNewLine).append(option.getLastOpt());	  sb.append(defaultNewLine).append(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
93	[BUG]  [BUGGY]  if(option.hasLongOpt()  ||  option.getLongOpt().equals(option.getLongOpt()))  {  [CE]  <identifier>  expected  [FE]            RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.hasLongOpt()  ||  option.getLongOpt().equals(option.getLongOpt()))  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasLongOpt()  ||  option.getLongOpt().equals(option.getLongOpt()))  {	  if(option.hasLongOpt()    ||    option.getLongOpt().equals(defaultLongOptPrefix))    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
94	[BUG]  [BUGGY]  if(optBuf!=  null  &&  optBuf.length()  >  0)  {  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(optBuf!=  null  &&  optBuf.length()  >  0)  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf!=  null  &&  optBuf.length()  >  0)  {	  if(optBuf!=    null)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
95	[BUG]  [BUGGY]  if(optBuf!=  null  &&  defaultLongOptPrefix!=  null)  {  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(optBuf!=  null  &&  defaultLongOptPrefix!=  null)  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf!=  null  &&  defaultLongOptPrefix!=  null)  {	  if(optBuf!=    null)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
96	[BUG]  [BUGGY]  if(optBuf!=  null  &&  option.hasLongOpt())  {  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(optBuf!=  null  &&  option.hasLongOpt())  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf!=  null  &&  option.hasLongOpt())  {	  if(optBuf!=    null)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
97	[BUG]  [BUGGY]  sb.append(',').append(option.getDescription());  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(',').append(option.getDescription());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(',').append(option.getDescription());	  sb.append(',').append(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
98	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultLongOptPrefix,  defaultLeftPad);  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(defaultLongOptPrefix,  defaultLeftPad);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultLongOptPrefix,  defaultLeftPad);	  Option    option    =    options.getOption(defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
99	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultLongOptPrefix,  i);  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(defaultLongOptPrefix,  i);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultLongOptPrefix,  i);	  Option    option    =    options.getOption(defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
100	[BUG]  [BUGGY]  Option  option  =(Option)option.clone();  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =(Option)option.clone();  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =(Option)option.clone();	  Option    option    =(Option)option.next();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
101	[BUG]  [BUGGY]  if(optBuf.length()  ==  0  ||  defaultLongOptPrefix.charAt(optBuf.length()  -  1)!=  '/')  {  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(optBuf.length()  ==  0  ||  defaultLongOptPrefix.charAt(optBuf.length()  -  1)!=  '/')  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf.length()  ==  0  ||  defaultLongOptPrefix.charAt(optBuf.length()  -  1)!=  '/')  {	  if(optBuf.length()    ==    0    ||    optBuf.charAt(optBuf.length()    -    1)!=    '/')    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
102	[BUG]  [BUGGY]  sb.append(defaultLeftPad).append(option.getLongOpt());  [CE]  <identifier>  expected  [FE]            RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(defaultLeftPad).append(option.getLongOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(defaultLeftPad).append(option.getLongOpt());	  sb.append(lpad).append(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
103	[BUG]  [BUGGY]  sb.append(defaultDecPad).append(option.getLongOpt());  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(defaultDecPad).append(option.getLongOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(defaultDecPad).append(option.getLongOpt());	  sb.append(lpad).append(option.getLongOpt());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
104	[BUG]  [BUGGY]  sb.append('   "  +  defaultLongOptPrefix);  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append('   "  +  defaultLongOptPrefix);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append('   "  +  defaultLongOptPrefix);	  sb.append(defaultOptPrefix);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
105	[BUG]  [BUGGY]  sb.append('n');  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append('n');  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append('n');	  sb.append(defaultOptPrefix);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
106	[BUG]  [BUGGY]  sb.append( ", ").append(option.getOpt());  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append( ", ").append(option.getOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append( ", ").append(option.getOpt());	  sb.append(defaultOptPrefix).append(option.getOpt());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
107	[BUG]  [BUGGY]  if(option.hasLongOptPrefix())  {  [CE]  <identifier>  expected  [FE]            RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(option.hasLongOptPrefix())  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(option.hasLongOptPrefix())  {	  if(option.hasOpt())    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
108	[BUG]  [BUGGY]  option  =  options.getOption(option.getOpt());  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  option  =  options.getOption(option.getOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	option  =  options.getOption(option.getOpt());	  option    =    options.getOption(defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
109	[BUG]  [BUGGY]  sb.append( ", ").append(option.getShortOpt());  [CE]  <identifier>  expected  [FE]            RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append( ", ").append(option.getShortOpt());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append( ", ").append(option.getShortOpt());	  sb.append(defaultLongOptPrefix).append(option.getShortOpt());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
110	[BUG]  [BUGGY]  sb.append(option.getShortOptPrefix());  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  sb.append(option.getShortOptPrefix());  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	sb.append(option.getShortOptPrefix());	  sb.append(option.getDescription());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
111	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultLongOptPrefix,  defaultBuf);  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(defaultLongOptPrefix,  defaultBuf);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultLongOptPrefix,  defaultBuf);	  Option    option    =    options.getOption(optBuf,    defaultLongOptPrefix);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
112	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultLeftPad,  defaultDescPad);  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  Option  option  =  options.getOption(defaultLeftPad,  defaultDescPad);  [BUGGY]      if  (option.getOpt()  ==  null)    {  {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	Option  option  =  options.getOption(defaultLeftPad,  defaultDescPad);	  Option    option    =    options.getOption(defaultLeftPad);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
113	[BUG]  [BUGGY]  if(optBuf.length()  ==  0  ||  defaultLongOptPrefix.charAt(optBuf.length()  -  1)!=  ':')  {  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      List  optList  =  options.helpOptions();  Collections.sort(optList,  getOptionComparator());  for  (Iterator  i  =  optList.iterator();  i.hasNext();)  {  Option  option  =  (Option)  i.next();  optBuf  =  new  StringBuffer(8);      [BUGGY]  if(optBuf.length()  ==  0  ||  defaultLongOptPrefix.charAt(optBuf.length()  -  1)!=  ':')  {  [BUGGY]      {  optBuf.append(lpad).append(     "       "  +  defaultLongOptPrefix).append(option.getLongOpt());  }  else  {  optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());  if  (option.hasLongOpt())  {  optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());  [CLASS]  HelpFormatter  OptionComparator  [METHOD]  renderOptions  [RETURN_TYPE]  StringBuffer  StringBuffer  sb  int  width  Options  options  int  leftPad  int  descPad  [VARIABLES]  Options  options  StringBuffer  optBuf  sb  boolean  Iterator  i  List  optList  prefixList  Option  option  String  DEFAULT_ARG_NAME  DEFAULT_LONG_OPT_PREFIX  DEFAULT_OPT_PREFIX  DEFAULT_SYNTAX_PREFIX  app  cmdLineSyntax  defaultArgName  defaultLongOptPrefix  defaultNewLine  defaultOptPrefix  defaultSyntaxPrefix  dpad  footer  header  lpad  name  newline  prefix  text  int  DEFAULT_DESC_PAD  DEFAULT_LEFT_PAD  DEFAULT_WIDTH  argPos  defaultDescPad  defaultLeftPad  defaultWidth  descPad  leftPad  max  nextLineTabStop  padding  width  x  Comparator  comparator  optionComparator  	projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java	1.0	732	733	2	replace	if(optBuf.length()  ==  0  ||  defaultLongOptPrefix.charAt(optBuf.length()  -  1)!=  ':')  {	  if(optBuf.length()    ==    0    ||    optBuf.charAt(optBuf.length()    -    1)!=    ':')    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
