projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedComparatoroptionComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedComparatoroptionComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedfinalComparatoroptionComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalComparatoroptionComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135if(optionComparator==null){optionComparator=newOptionComparator();}
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkNotNull(optionComparator);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135if(optionComparator==null){OptionComparatoroptionComparator=newOptionComparator();}
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(optionComparator!=null);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135if(optionComparator==null){protectedComparatoroptionComparator=newOptionComparator();}
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(optionComparator==null);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=null;
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isOptional());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator;
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator(this);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalComparatoroptionComparator=newOptionComparator(this.helpFormatter);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalComparatoroptionComparator=newOptionComparator(true);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalComparatoroptionComparator=newOptionComparator(System.err);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator(System.err);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator(System.out);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator(this.helpFormatter);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkNotNull(optionComparator,false);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135optionComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedOptionComparatoroptionComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalOptionComparatoroptionComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135parent=parent.getParent();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedstaticfinalComparatoroptionComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedfinalComparatoroptionComparator=newOptionComparator(this.helpFormatter);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedfinalComparatoroptionComparator=newOptionComparator(this.options);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator(System.err);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator(System.out);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedComparatoroptionComparator=newOptionComparator();}
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedComparatoroptionComparator=newOptionComparator(this.helpFormatter);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedComparatoroptionComparator=newOptionComparator(System.err);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedComparatoroptionComparator=newOptionComparator(System.out);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isEnabled());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isVarArgs());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isFunction());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.optionComparator==null);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.optionComparator!=null);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Context.reportCodeChange();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparator.this.start();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparator.this.start(this.optionComparator);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparator.getInstance().start(this);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator(this.options);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(optionComparator.isOptional());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isVoid());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.options!=null);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.options==null);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135safeAdd(newOptionComparator());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135parentFormatter==null){OptionComparatoroptionComparator=newOptionComparator();}
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalComparatoroptionComparator=newOptionComparator(this.options);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=defaultOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=this;
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedComparatoroptionComparator=newOptionComparator(this.options);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedComparatoroptionComparator=newOptionComparator(this.helpFormatter());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(optionComparator>=null);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isOptional()||!optionComparator.isOptional());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator(null);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135parent=parent.getParent();protectedComparatoroptionComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.startTime==System.currentTimeMillis());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.startTime==System.currentTimeMillis());this.startTime=System.currentTimeMillis();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.startTime<=System.currentTimeMillis());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.startTime==System.currentTimeMillis());this.startTime=System.currentTimeMillis()-1;
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135nulloptionComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator("options");
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalOptionComparatoroptionComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator("");
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isNull());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isFunction()||!optionComparator.isFunction());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isInterface());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator(this.helpFormatter,this.options);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator(this.helpFormatter,this.type);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator(this.helpFormatter,this.sourceName);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparator.getInstance().start(this,null);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparator.getInstance().start(this,this);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparator.getInstance().start(this,false);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedfinalParentFormatter{null){OptionComparatoroptionComparator=newOptionComparator();}
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedfinalparentFormatter==null){OptionComparatoroptionComparator=newOptionComparator();}
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkNotNull(optionComparator,true);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalComparatoroptionComparator=newOptionComparator(System.err,System.err);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalComparatoroptionComparator=newOptionComparator(System.err,null);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isImmutable());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isConstructor());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedfinalComparatoroptionComparator=newOptionComparator(this.helpFormatter());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedComparatoroptionComparator=newOptionComparator(this.helpFormatter(),this.options);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedfinalComparatoroptionComparator=newOptionComparator(this.helpFormatter(),this.options);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator(null,null);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.optionComparator>=null);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedfinalOptionComparatoroptionComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedOptionComparatoroptionComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135privateOptionComparatoroptionComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalOptionComparatoroptionComparator=newOptionComparator(this);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator(this,null);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135nullOptionComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135nulloptionComparator=newOptionComparator(this);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.startTime!=System.currentTimeMillis());this.startTime=System.currentTimeMillis();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.startTime>=System.currentTimeMillis());this.startTime=System.currentTimeMillis();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=this.defaultOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=getOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator(System.err,System.err);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator(System.err,null);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator(System.err,1);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135ensureCapacity(newOptionComparator());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135safeAdd(newOptionComparator(this));
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isVarArgs()||!optionComparator.isVarArgs());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isAll());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedstaticfinalComparatoroptionComparator=newOptionComparator(this.options);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedfinalComparatoroptionComparator=newOptionComparator(this.options,this.helpFormatter);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedfinalComparatoroptionComparator=newOptionComparator(this.options,this.options);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedfinalComparatoroptionComparator=newOptionComparator(this.options);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedComparatoroptionComparator=newOptionComparator(this.options,this.helpFormatter);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedfinalComparatoroptionComparator=newOptionComparator(this.options,this.helpFormatter);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135if(parent!=null){parent=parent.getParent();protectedComparatoroptionComparator=newOptionComparator();}
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedfinalComparatoroptionComparator=newOptionComparator(this.helpFormatter,this.options);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedstaticfinalComparatoroptionComparator=newOptionComparator(this.helpFormatter);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedfinalComparatoroptionComparator=newOptionComparator(this.helpFormatter,this.type);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isInitializing());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(optionComparator.isEnabled());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(optionComparator.isFunction());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.startTime!=System.currentTimeMillis());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.startTime>=System.currentTimeMillis());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.startTime<System.currentTimeMillis());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.startTime>>System.currentTimeMillis());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135if(this.startTime==System.currentTimeMillis()){Preconditions.checkState(this.startTime==System.currentTimeMillis());this.startTime=System.currentTimeMillis();}
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135this.startTime=System.currentTimeMillis();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedstaticfinalComparatoroptionComparator=newOptionComparator(true);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedstaticfinalComparatoroptionComparator=newOptionComparator(System.err);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isOptional()&&!optionComparator.isOptional());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isVarArgs()||!optionComparator.isOptional());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isNone()||!optionComparator.isOptional());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isConstructor()||!optionComparator.isOptional());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135parent=this.parent.getParent();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator("options",true);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator("options/");
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator(this.options,this.helpFormatter);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator(this.options,this.options);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator(this.options,this.methods);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.options!=null&&this.options.size()>0);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.options!=null,this.options.size());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalComparatoroptionComparator=newOptionComparator(this.options,this.helpFormatter);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalComparatoroptionComparator=newOptionComparator(this.options,this.options);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedComparatoroptionComparator=newOptionComparator(this.helpFormatter,this.options);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedComparatoroptionComparator=newOptionComparator(this.helpFormatter,this.type);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedfinalComparatoroptionComparator=newOptionComparator(this.helpFormatter,this.options);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalOptionComparatoroptionComparator=newOptionComparator(System.err);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalOptionComparatoroptionComparator=newOptionComparator(System.out);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135null.reportCodeChange();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Context.report(JSError.make(StandardError.class,sourceName));
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Context.report(JSError.make(StandardError.WARNING,e.getMessage()));
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparator.this.start(this.helpFormatter);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparator.this.start(this);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparator.this.start(null);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalOptionComparatoroptionComparator=newOptionComparator(System.err);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalOptionComparatoroptionComparator=newOptionComparator(System.out);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator(System.out,System.err);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator(System.out,System.currentTimeMillis());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator(System.out,System.out);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator("n");
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator(">");
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator(System.err,System.err);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator(System.err,null);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedfinalComparatoroptionComparator=newOptionComparator(System.err);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedComparatoroptionComparator=newOptionComparator(System.err,System.err);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedfinalComparatoroptionComparator=newOptionComparator(System.err,System.err);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator(System.out,System.err);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator(System.out,System.currentTimeMillis());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator(System.out,true);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalComparatoroptionComparator=newOptionComparator(this.helpFormatter,this.options);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalComparatoroptionComparator=newOptionComparator(this.helpFormatter,this.type);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparator.this.start(this.optionComparator,true);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparator.this.start(this.optionComparator,null);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparator.this.start(this.optionComparator,this.sourceName);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isEnabled()||!optionComparator.isEnabled());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isEnabled(),false);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedComparatoroptionComparator=newOptionComparator(System.out,System.err);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedComparatoroptionComparator=newOptionComparator(System.out,System.out);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedComparatoroptionComparator=newOptionComparator(System.out,true);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalComparatoroptionComparator=newOptionComparator(false);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalComparatoroptionComparator=newOptionComparator(false,true);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalComparatoroptionComparator=newOptionComparator(false,false);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalComparatoroptionComparator=newOptionComparator(false,null);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator(true);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135nullOptionComparatoroptionComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(optionComparator.isRequired());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(optionComparator.isNone());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparator.this.start(options);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.options!=null&&this.options.length>0);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135privatefinalComparatoroptionComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135safeOptionComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalOptionComparatoroptionComparator=newOptionComparator("");
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator(".options");
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedfinalComparatoroptionComparator=newOptionComparator(this.options,this.sourceName);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator(System.out,false);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedparentFormatter==null){OptionComparatoroptionComparator=newOptionComparator();}
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalparentFormatter==null){OptionComparatoroptionComparator=newOptionComparator();}
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isOptionalArg());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135if(parent!=null){parent=parent.getParent();protectedComparatoroptionComparator=newOptionComparator();}else{Preconditions.checkNotNull(optionComparator);}
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isDeclared());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isInvalid());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedfinalComparatoroptionComparator=newOptionComparator(this.helpFormatter);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135optionalComparator=newOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalComparatoroptionComparator=newOptionComparator(this.options,this.sourceName);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator("<");
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Context.report(JSError.make(SourceFormatter.DEFAULT_SOURCE_FIELD_NAME));
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Context.report(JSError.make(SourceFormatter.ERROR_INIT_ERROR,sourceName));
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Context.report(JSError.make(SourceFormatter.DEFAULT_SOURCE_ERROR,sourceName));
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.startTime<System.currentTimeMillis());this.startTime=System.currentTimeMillis();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparator.this.start(this.optionComparator,this.sourceStart);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isVoid()||!optionComparator.isOptional());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=nullDefaultOptionComparator();
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedfinalComparatoroptionComparator=newOptionComparator(this.helpFormatter,this.sourceName);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator(System.out,System.out);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isInternal());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(optionComparator!=null&&!optionComparator.isEnabled());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator(this.options,this.sourceName);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator(this,false);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator(this,true);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135SafeAdd(newOptionComparator());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135parent=parent.getParent(this);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135finalprotectedfinalComparatoroptionComparator=newOptionComparator(System.out,System.err);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalOptionComparatoroptionComparator=newOptionComparator(this.helpFormatter());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparator.this.start(this,this.optionComparator);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalOptionComparatoroptionComparator=newOptionComparator(this.helpFormatter);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135if(optionComparator!=null){protectedComparatoroptionComparator=newOptionComparator();}
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator(getFormatter());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalOptionComparatoroptionComparator=newOptionComparator(this.options);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isUnknown());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135if(this.helpFormatter!=null){finalComparatoroptionComparator=newOptionComparator(this.helpFormatter);}
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.options==null||this.options.size()==0);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.options==null||this.options.isEmpty());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isRequired());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparator.this.start(optionComparator);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparator.this.start(newHelpFormatterBuilder());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135if(optionComparator==null){finalComparatoroptionComparator=newOptionComparator(true);}
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135staticfinalComparatoroptionComparator=newOptionComparator(false);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(optionComparator.isVarArgs());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isOptional()||!optionComparator.isVarArgs());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isRequired()||!optionComparator.isOptional());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135protectedParentFormatter{null){OptionComparatoroptionComparator=newOptionComparator();}
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135parentFormatter==null){parentFormatter=newHelpFormatter();}
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator("options",options);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135validate(newOptionComparator());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135super.start(newOptionComparator());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isInstance());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(!optionComparator.isVoid()||!optionComparator.isVoid());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135parent=parent.getParent(parent);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.options!=null||this.options.size()==0);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135if(optionComparator==null){finalOptionComparatoroptionComparator=newOptionComparator();}
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135if(optionComparator==null){finalOptionComparatoroptionComparator=newOptionComparator();}else{protectedComparatoroptionComparator=newOptionComparator();}
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Context.report(JSError.make(sourceName,false));
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Context.report(JSError.make(sourceName,this.options,null));
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Context.report(JSError.make(sourceName,this.optionComparator));
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.optionComparator==optionComparator);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.optionComparator==OptionComparator.NULL);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.optionComparator!=null&&this.optionComparator.equals(optionComparator);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135Preconditions.checkState(this.optionComparator!=null&&this.optionComparator.isEnabled());
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135OptionComparatoroptionComparator=newOptionComparator(System.out,1);
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135if(this.options!=null){finalComparatoroptionComparator=newOptionComparator(this.options);}
projects/Cli23/src/java/org/apache/commons/cli/HelpFormatter.java135nulloptionComparator=newOptionComparator(this.options);
