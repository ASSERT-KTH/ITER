bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getLocalValue(left);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getLocalValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getLocalValue(left);	  Node    leftVal    =    NodeUtil.getNumberValue(left);    	non-compiled	[CE]  orphaned  case	39	None	replace
2	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getNumberValue(left,  parent);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getNumberValue(left,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getNumberValue(left,  parent);	  Node    leftVal    =    NodeUtil.getNumberValue(left);    	non-compiled	[CE]  orphaned  case	39	None	replace
3	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getLongValue(left);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getLongValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getLongValue(left);	  Node    leftVal    =    NodeUtil.getNumberValue(left);    	non-compiled	[CE]  orphaned  case	39	None	replace
4	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getNumberValue(n);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getNumberValue(n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getNumberValue(n);	  Node    leftVal    =    NodeUtil.getNumberValue(left);    	non-compiled	[CE]  orphaned  case	39	None	replace
5	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(parent,  null);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(parent,  null);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(parent,  null);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    null);    	non-compiled	[CE]  orphaned  case	54	None	replace
6	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(left,  parent);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(left,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFlattenedValue(left,  parent);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    null);    	non-compiled	[CE]  orphaned  case	54	None	replace
7	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  null,  parent);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  null,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  null,  parent);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    null);    	non-compiled	[CE]  orphaned  case	54	None	replace
8	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(parent,  null);  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(parent,  null);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFlattenedValue(parent,  null);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    null);    	non-compiled	[CE]  orphaned  case	54	None	replace
9	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(left,  null);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(left,  null);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFlattenedValue(left,  null);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    null);    	non-compiled	[CE]  orphaned  case	54	None	replace
10	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFullValue(left,  parent);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFullValue(left,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFullValue(left,  parent);	  Node    leftVal    =    NodeUtil.getFullValue(left);    	non-compiled	[CE]  orphaned  case	9	None	replace
11	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFullyQualifiedValue(left);  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFullyQualifiedValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFullyQualifiedValue(left);	  Node    leftVal    =    NodeUtil.getFullValue(left);    	non-compiled	[CE]  orphaned  case	9	None	replace
12	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFullValue(n);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFullValue(n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFullValue(n);	  Node    leftVal    =    NodeUtil.getFullValue(left);    	non-compiled	[CE]  orphaned  case	9	None	replace
13	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFullValue(left,  n);  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFullValue(left,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFullValue(left,  n);	  Node    leftVal    =    NodeUtil.getFullValue(left);    	non-compiled	[CE]  orphaned  case	9	None	replace
14	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(parent,  n);  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(parent,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLargerValue(parent,  n);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left,    n);    	non-compiled	[CE]  orphaned  case	47	None	replace
15	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  n,  parent);  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  n,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  n,  parent);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left,    n);    	non-compiled	[CE]  orphaned  case	47	None	replace
16	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getLargerValue(left,  parent);  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getLargerValue(left,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getLargerValue(left,  parent);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left,    n);    	non-compiled	[CE]  orphaned  case	47	None	replace
17	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getLargerValue(parent,  n);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getLargerValue(parent,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getLargerValue(parent,  n);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left,    n);    	non-compiled	[CE]  orphaned  case	47	None	replace
18	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getLargerValue(left,  n);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getLargerValue(left,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getLargerValue(left,  n);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left,    n);    	non-compiled	[CE]  orphaned  case	47	None	replace
19	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  true);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  true);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  true);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left,    false);    	non-compiled	[CE]  orphaned  case	29	None	replace
20	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(parent,  false);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(parent,  false);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullValue(parent,  false);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left,    false);    	non-compiled	[CE]  orphaned  case	29	None	replace
21	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFullValue(left,  true);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFullValue(left,  true);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFullValue(left,  true);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left,    false);    	non-compiled	[CE]  orphaned  case	29	None	replace
22	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  false,  parent);  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  false,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  false,  parent);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left,    false);    	non-compiled	[CE]  orphaned  case	29	None	replace
23	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFullValue(parent,  false);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFullValue(parent,  false);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFullValue(parent,  false);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left,    false);    	non-compiled	[CE]  orphaned  case	29	None	replace
24	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullyValue(left,  true);  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullyValue(left,  true);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullyValue(left,  true);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left,    false);    	non-compiled	[CE]  orphaned  case	29	None	replace
25	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(n);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFlattenedValue(n);	  Node    leftVal    =    NodeUtil.getFlattenedValue(parent);    	non-compiled	[CE]  orphaned  case	33	None	replace
26	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getLocalFlattenedValue(left);  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getLocalFlattenedValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getLocalFlattenedValue(left);	  Node    leftVal    =    NodeUtil.getFlattenedValue(parent);    	non-compiled	[CE]  orphaned  case	33	None	replace
27	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.findFlattenedValue(left);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.findFlattenedValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.findFlattenedValue(left);	  Node    leftVal    =    NodeUtil.getFlattenedValue(parent);    	non-compiled	[CE]  orphaned  case	33	None	replace
28	[BUG]  [BUGGY]  Node  leftVal  =  node.getFlattenedValue(parent);  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  node.getFlattenedValue(parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  node.getFlattenedValue(parent);	  Node    leftVal    =    NodeUtil.getFlattenedValue(parent);    	non-compiled	[CE]  orphaned  case	33	None	replace
29	[BUG]  [BUGGY]  TernaryValue  leftVal  =  left.getFirstChild();  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  left.getFirstChild();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  left.getFirstChild();	  TernaryValue    leftVal    =    NodeUtil.getFirstChild();    	non-compiled	[CE]  orphaned  case	40	None	replace
30	[BUG]  [BUGGY]  Node  rightVal  =  NodeUtil.getFlattenedValue(left);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  rightVal  =  NodeUtil.getFlattenedValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  rightVal  =  NodeUtil.getFlattenedValue(left);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(parent);    	non-compiled	[CE]  orphaned  case	30	None	replace
31	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLocalFlattenedValue(left);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLocalFlattenedValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLocalFlattenedValue(left);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(parent);    	non-compiled	[CE]  orphaned  case	30	None	replace
32	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFollowValue(parent);  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFollowValue(parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFollowValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getFollowValue(left);    	non-compiled	[CE]  orphaned  case	61	None	replace
33	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFollowValue(parent);  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFollowValue(parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFollowValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getFollowValue(left);    	non-compiled	[CE]  orphaned  case	61	None	replace
34	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFollowValue(left);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFollowValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFollowValue(left);	  TernaryValue    leftVal    =    NodeUtil.getFollowValue(left);    	non-compiled	[CE]  orphaned  case	61	None	replace
35	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFollowValue(left,  parent);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFollowValue(left,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFollowValue(left,  parent);	  TernaryValue    leftVal    =    NodeUtil.getFollowValue(left);    	non-compiled	[CE]  orphaned  case	61	None	replace
36	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFollowValue(left,  n);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFollowValue(left,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFollowValue(left,  n);	  TernaryValue    leftVal    =    NodeUtil.getFollowValue(left);    	non-compiled	[CE]  orphaned  case	61	None	replace
37	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(parent,  true);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(parent,  true);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getBooleanValue(parent,  true);	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left,    true);    	non-compiled	[CE]  orphaned  case	6	None	replace
38	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getBooleanValue(left,  false);  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getBooleanValue(left,  false);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getBooleanValue(left,  false);	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left,    true);    	non-compiled	[CE]  orphaned  case	6	None	replace
39	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(right,  false);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(right,  false);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getBooleanValue(right,  false);	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left,    true);    	non-compiled	[CE]  orphaned  case	6	None	replace
40	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLocalValue(left,  true);  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLocalValue(left,  true);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLocalValue(left,  true);	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left,    true);    	non-compiled	[CE]  orphaned  case	6	None	replace
41	[BUG]  [BUGGY]  TernaryValue  rightVal  =  NodeUtil.getBooleanValue(left,  false);  [CE]  orphaned  case  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  rightVal  =  NodeUtil.getBooleanValue(left,  false);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  rightVal  =  NodeUtil.getBooleanValue(left,  false);	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left,    true);    	non-compiled	[CE]  orphaned  case	6	None	replace
42	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getStringValue(left,  true);  [CE]  orphaned  case  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getStringValue(left,  true);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getStringValue(left,  true);	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left,    true);    	non-compiled	[CE]  orphaned  case	6	None	replace
43	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)/  1;  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)/  1;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)/  1;	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left)+    1;    	non-compiled	[CE]  orphaned  case	50	None	replace
44	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)+  2;  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)+  2;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)+  2;	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left)+    1;    	non-compiled	[CE]  orphaned  case	50	None	replace
45	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getNumberValue(left)+  1;  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getNumberValue(left)+  1;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getNumberValue(left)+  1;	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left)+    1;    	non-compiled	[CE]  orphaned  case	50	None	replace
46	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)-  1;  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)-  1;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)-  1;	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left)+    1;    	non-compiled	[CE]  orphaned  case	50	None	replace
47	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)+  3;  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)+  3;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)+  3;	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left)+    1;    	non-compiled	[CE]  orphaned  case	50	None	replace
48	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(parent)+  1;  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(parent)+  1;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(parent)+  1;	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left)+    1;    	non-compiled	[CE]  orphaned  case	50	None	replace
49	[BUG]  [BUGGY]  TernaryValue  leftVal  =  node.getFirstChild();  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  node.getFirstChild();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  node.getFirstChild();	  TernaryValue    leftVal    =    node.getLastChild();    	non-compiled	[CE]  orphaned  case	43	None	replace
50	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  parent,  n);  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  parent,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  parent,  n);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left,    parent);    	non-compiled	[CE]  orphaned  case	10	None	replace
51	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(parent,  left);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(parent,  left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullValue(parent,  left);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left,    parent);    	non-compiled	[CE]  orphaned  case	10	None	replace
52	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  left);  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  left);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left,    parent);    	non-compiled	[CE]  orphaned  case	10	None	replace
53	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  parent,  numValue);  [CE]  orphaned  case  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  parent,  numValue);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  parent,  numValue);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left,    parent);    	non-compiled	[CE]  orphaned  case	10	None	replace
54	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  parent,  n);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  parent,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  parent,  n);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    parent);    	non-compiled	[CE]  orphaned  case	32	None	replace
55	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(left,  n);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(left,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFlattenedValue(left,  n);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    parent);    	non-compiled	[CE]  orphaned  case	32	None	replace
56	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(parent,  left);  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(parent,  left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(parent,  left);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    parent);    	non-compiled	[CE]  orphaned  case	32	None	replace
57	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  left);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  left);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    parent);    	non-compiled	[CE]  orphaned  case	32	None	replace
58	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  parent,  numValue);  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  parent,  numValue);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  parent,  numValue);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    parent);    	non-compiled	[CE]  orphaned  case	32	None	replace
59	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  true,  n);  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  true,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  true,  n);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(left,    false,    n);    	non-compiled	[CE]  orphaned  case	59	None	replace
60	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(parent,  false,  n);  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(parent,  false,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(parent,  false,  n);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(left,    false,    n);    	non-compiled	[CE]  orphaned  case	59	None	replace
61	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  true,  parent);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  true,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  true,  parent);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(left,    false,    n);    	non-compiled	[CE]  orphaned  case	59	None	replace
62	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getPureBooleanValue(left,  true,  n);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getPureBooleanValue(left,  true,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getPureBooleanValue(left,  true,  n);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(left,    false,    n);    	non-compiled	[CE]  orphaned  case	59	None	replace
63	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  n,  parent);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  n,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  n,  parent);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(left,    false,    n);    	non-compiled	[CE]  orphaned  case	59	None	replace
64	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  true,  null);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  true,  null);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  true,  null);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(left,    false,    n);    	non-compiled	[CE]  orphaned  case	59	None	replace
65	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getPureBooleanValue(left,  false);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getPureBooleanValue(left,  false);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getPureBooleanValue(left,  false);	  Node    leftVal    =    NodeUtil.getPureBooleanValue(left,    true);    	non-compiled	[CE]  orphaned  case	27	None	replace
66	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getPureBooleanValue(parent,  true);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getPureBooleanValue(parent,  true);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getPureBooleanValue(parent,  true);	  Node    leftVal    =    NodeUtil.getPureBooleanValue(left,    true);    	non-compiled	[CE]  orphaned  case	27	None	replace
67	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getPureBooleanValue(n,  true);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getPureBooleanValue(n,  true);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getPureBooleanValue(n,  true);	  Node    leftVal    =    NodeUtil.getPureBooleanValue(left,    true);    	non-compiled	[CE]  orphaned  case	27	None	replace
68	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getPureBooleanValue(right,  false);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getPureBooleanValue(right,  false);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getPureBooleanValue(right,  false);	  Node    leftVal    =    NodeUtil.getPureBooleanValue(left,    true);    	non-compiled	[CE]  orphaned  case	27	None	replace
69	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getBooleanValue(left,  true);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getBooleanValue(left,  true);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getBooleanValue(left,  true);	  Node    leftVal    =    NodeUtil.getPureBooleanValue(left,    true);    	non-compiled	[CE]  orphaned  case	27	None	replace
70	[BUG]  [BUGGY]  NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(parent);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(parent);	  NeighborValue    leftVal    =    NodeUtil.getFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	35	None	replace
71	[BUG]  [BUGGY]  NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(left,  parent);  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(left,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(left,  parent);	  NeighborValue    leftVal    =    NodeUtil.getFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	35	None	replace
72	[BUG]  [BUGGY]  NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(left,  n);  [CE]  orphaned  case  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(left,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(left,  n);	  NeighborValue    leftVal    =    NodeUtil.getFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	35	None	replace
73	[BUG]  [BUGGY]  NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(n);  [CE]  orphaned  case  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(n);	  NeighborValue    leftVal    =    NodeUtil.getFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	35	None	replace
74	[BUG]  [BUGGY]  NeighborValue  leftVal  =  NodeUtil.getBooleanValue(left);  [CE]  orphaned  case  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  NeighborValue  leftVal  =  NodeUtil.getBooleanValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	NeighborValue  leftVal  =  NodeUtil.getBooleanValue(left);	  NeighborValue    leftVal    =    NodeUtil.getFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	35	None	replace
75	[BUG]  [BUGGY]  NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(left,  false);  [CE]  orphaned  case  [FE]                                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(left,  false);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(left,  false);	  NeighborValue    leftVal    =    NodeUtil.getFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	35	None	replace
76	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(parent,  n);  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(parent,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(parent,  n);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    n);    	non-compiled	[CE]  orphaned  case	34	None	replace
77	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  n,  parent);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  n,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  n,  parent);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    n);    	non-compiled	[CE]  orphaned  case	34	None	replace
78	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(parent,  n);  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(parent,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFlattenedValue(parent,  n);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    n);    	non-compiled	[CE]  orphaned  case	34	None	replace
79	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(parent,  false,  left);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(parent,  false,  left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(parent,  false,  left);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(left,    false,    parent);    	non-compiled	[CE]  orphaned  case	28	None	replace
80	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  parent,  n);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  parent,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  parent,  n);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(left,    false,    parent);    	non-compiled	[CE]  orphaned  case	28	None	replace
81	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getPureBooleanValue(left,  true,  parent);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getPureBooleanValue(left,  true,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getPureBooleanValue(left,  true,  parent);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(left,    false,    parent);    	non-compiled	[CE]  orphaned  case	28	None	replace
82	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  left);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  left);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(left,    false,    parent);    	non-compiled	[CE]  orphaned  case	28	None	replace
83	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  parent,  null);  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  parent,  null);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  parent,  null);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(left,    false,    parent);    	non-compiled	[CE]  orphaned  case	28	None	replace
84	[BUG]  [BUGGY]  Node  replacementNode  =  left.getNext();  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  replacementNode  =  left.getNext();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  replacementNode  =  left.getNext();	  Node    replacementNode    =    parent.getParent();    	non-compiled	[CE]  orphaned  case	57	None	replace
85	[BUG]  [BUGGY]  Node  replacementNode  =  left.getParent();  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  replacementNode  =  left.getParent();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  replacementNode  =  left.getParent();	  Node    replacementNode    =    parent.getParent();    	non-compiled	[CE]  orphaned  case	57	None	replace
86	[BUG]  [BUGGY]  Node  replacementNode  =  n.getParent();  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  replacementNode  =  n.getParent();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  replacementNode  =  n.getParent();	  Node    replacementNode    =    parent.getParent();    	non-compiled	[CE]  orphaned  case	57	None	replace
87	[BUG]  [BUGGY]  Node  replacementNode  =  left.getFirstChild();  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  replacementNode  =  left.getFirstChild();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  replacementNode  =  left.getFirstChild();	  Node    replacementNode    =    parent.getParent();    	non-compiled	[CE]  orphaned  case	57	None	replace
88	[BUG]  [BUGGY]  Node  replacementNode  =  node.getParent();  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  replacementNode  =  node.getParent();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  replacementNode  =  node.getParent();	  Node    replacementNode    =    parent.getParent();    	non-compiled	[CE]  orphaned  case	57	None	replace
89	[BUG]  [BUGGY]  Node  replacementNode  =  parent.getNext();  [CE]  orphaned  case  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  replacementNode  =  parent.getNext();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  replacementNode  =  parent.getNext();	  Node    replacementNode    =    parent.getParent();    	non-compiled	[CE]  orphaned  case	57	None	replace
90	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent,  n);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent,  n);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left,    parent);    	non-compiled	[CE]  orphaned  case	24	None	replace
91	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(parent,  left);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(parent,  left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLargerValue(parent,  left);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left,    parent);    	non-compiled	[CE]  orphaned  case	24	None	replace
92	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  left);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  left);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left,    parent);    	non-compiled	[CE]  orphaned  case	24	None	replace
93	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent,  numValue);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent,  numValue);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent,  numValue);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left,    parent);    	non-compiled	[CE]  orphaned  case	24	None	replace
94	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent,  false);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent,  false);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent,  false);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left,    parent);    	non-compiled	[CE]  orphaned  case	24	None	replace
95	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(parent,  false);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(parent,  false);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getBooleanValue(parent,  false);	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left,    false);    	non-compiled	[CE]  orphaned  case	5	None	replace
96	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(left,  false,  parent);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(left,  false,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getBooleanValue(left,  false,  parent);	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left,    false);    	non-compiled	[CE]  orphaned  case	5	None	replace
97	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(right,  true);  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(right,  true);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getBooleanValue(right,  true);	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left,    false);    	non-compiled	[CE]  orphaned  case	5	None	replace
98	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getBooleanValue(parent,  false);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getBooleanValue(parent,  false);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getBooleanValue(parent,  false);	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left,    false);    	non-compiled	[CE]  orphaned  case	5	None	replace
99	[BUG]  [BUGGY]  Node  rightVal  =  left.getFirstChild();  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  rightVal  =  left.getFirstChild();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  rightVal  =  left.getFirstChild();	  Node    rightVal    =    left.getLastChild();    	non-compiled	[CE]  orphaned  case	16	None	replace
100	[BUG]  [BUGGY]  Node  rightVal  =  n.getLastChild();  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  rightVal  =  n.getLastChild();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  rightVal  =  n.getLastChild();	  Node    rightVal    =    left.getLastChild();    	non-compiled	[CE]  orphaned  case	16	None	replace
101	[BUG]  [BUGGY]  Node  rightVal  =  parent.getLastChild();  [CE]  orphaned  case  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  rightVal  =  parent.getLastChild();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  rightVal  =  parent.getLastChild();	  Node    rightVal    =    left.getLastChild();    	non-compiled	[CE]  orphaned  case	16	None	replace
102	[BUG]  [BUGGY]  Node  rightVal  =  left.getNext();  [CE]  orphaned  case  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  rightVal  =  left.getNext();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  rightVal  =  left.getNext();	  Node    rightVal    =    left.getLastChild();    	non-compiled	[CE]  orphaned  case	16	None	replace
103	[BUG]  [BUGGY]  Node  rightVal  =  n.getFirstChild();  [CE]  orphaned  case  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  rightVal  =  n.getFirstChild();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  rightVal  =  n.getFirstChild();	  Node    rightVal    =    left.getLastChild();    	non-compiled	[CE]  orphaned  case	16	None	replace
104	[BUG]  [BUGGY]  Node  rightVal  =  parent.getFirstChild();  [CE]  orphaned  case  [FE]                                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  rightVal  =  parent.getFirstChild();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  rightVal  =  parent.getFirstChild();	  Node    rightVal    =    left.getLastChild();    	non-compiled	[CE]  orphaned  case	16	None	replace
105	[BUG]  [BUGGY]  TernaryValue  leftVal  =  parent.getFirstChild();  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  parent.getFirstChild();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  parent.getFirstChild();	  TernaryValue    leftVal    =    parent.getLastChild();    	non-compiled	[CE]  orphaned  case	42	None	replace
106	[BUG]  [BUGGY]  Node  leftVal  =  left.getParent();  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  left.getParent();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  left.getParent();	  Node    leftVal    =    left.getNext();    	non-compiled	[CE]  orphaned  case	13	None	replace
107	[BUG]  [BUGGY]  Node  leftVal  =  left.getNext()  -  1;  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  left.getNext()  -  1;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  left.getNext()  -  1;	  Node    leftVal    =    left.getNext();    	non-compiled	[CE]  orphaned  case	13	None	replace
108	[BUG]  [BUGGY]  Node  leftVal  =  parent.getNext();  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  parent.getNext();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  parent.getNext();	  Node    leftVal    =    left.getNext();    	non-compiled	[CE]  orphaned  case	13	None	replace
109	[BUG]  [BUGGY]  Node  leftVal  =  left.getPrevious();  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  left.getPrevious();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  left.getPrevious();	  Node    leftVal    =    left.getNext();    	non-compiled	[CE]  orphaned  case	13	None	replace
110	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLocalValue(parent);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLocalValue(parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLocalValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getLocalValue(left);    	non-compiled	[CE]  orphaned  case	3	None	replace
111	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getLocalValue(parent);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getLocalValue(parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getLocalValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getLocalValue(left);    	non-compiled	[CE]  orphaned  case	3	None	replace
112	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLocalValue(left,  parent);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLocalValue(left,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLocalValue(left,  parent);	  TernaryValue    leftVal    =    NodeUtil.getLocalValue(left);    	non-compiled	[CE]  orphaned  case	3	None	replace
113	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLocalValue(left,  n);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLocalValue(left,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLocalValue(left,  n);	  TernaryValue    leftVal    =    NodeUtil.getLocalValue(left);    	non-compiled	[CE]  orphaned  case	3	None	replace
114	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(parent,  true);  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(parent,  true);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(parent,  true);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(parent,    false);    	non-compiled	[CE]  orphaned  case	26	None	replace
115	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(right,  false);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(right,  false);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(right,  false);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(parent,    false);    	non-compiled	[CE]  orphaned  case	26	None	replace
116	[BUG]  [BUGGY]  TernaryValue  leftVal  =  node.getPureBooleanValue(parent,  false);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  node.getPureBooleanValue(parent,  false);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  node.getPureBooleanValue(parent,  false);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(parent,    false);    	non-compiled	[CE]  orphaned  case	26	None	replace
117	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFinalValue(left,  true);  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFinalValue(left,  true);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFinalValue(left,  true);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(left,    true);    	non-compiled	[CE]  orphaned  case	25	None	replace
118	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFinalValue(left);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFinalValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFinalValue(left);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(parent);    	non-compiled	[CE]  orphaned  case	7	None	replace
119	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFullyValue(left);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFullyValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFullyValue(left);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(parent);    	non-compiled	[CE]  orphaned  case	7	None	replace
120	[BUG]  [BUGGY]  Node  rightVal  =  NodeUtil.getFullValue(left);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  rightVal  =  NodeUtil.getFullValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  rightVal  =  NodeUtil.getFullValue(left);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(parent);    	non-compiled	[CE]  orphaned  case	7	None	replace
121	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  true);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  true);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  true);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    false);    	non-compiled	[CE]  orphaned  case	53	None	replace
122	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(parent,  false);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(parent,  false);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(parent,  false);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    false);    	non-compiled	[CE]  orphaned  case	53	None	replace
123	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(left,  true);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(left,  true);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFlattenedValue(left,  true);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    false);    	non-compiled	[CE]  orphaned  case	53	None	replace
124	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  false,  parent);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  false,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  false,  parent);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    false);    	non-compiled	[CE]  orphaned  case	53	None	replace
125	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(left,  false);  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(left,  false);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFlattenedValue(left,  false);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    false);    	non-compiled	[CE]  orphaned  case	53	None	replace
126	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFinalValue(left);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFinalValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFinalValue(left);	  Node    leftVal    =    NodeUtil.getFullValue(parent);    	non-compiled	[CE]  orphaned  case	8	None	replace
127	[BUG]  [BUGGY]  TernaryValue  leftVal  =  left.getNext();  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  left.getNext();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  left.getNext();	  TernaryValue    leftVal    =    n.getFirstChild();    	non-compiled	[CE]  orphaned  case	56	None	replace
128	[BUG]  [BUGGY]  Node  leftVal  =  right.getLastChild();  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  right.getLastChild();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  right.getLastChild();	  Node    leftVal    =    parent.getLastChild();    	non-compiled	[CE]  orphaned  case	45	None	replace
129	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getConditionExpression(parent);  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getConditionExpression(parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getConditionExpression(parent);	  TernaryValue    leftVal    =    NodeUtil.getConditionExpression(left);    	non-compiled	[CE]  orphaned  case	51	None	replace
130	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getConditionExpression(left,  parent);  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getConditionExpression(left,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getConditionExpression(left,  parent);	  TernaryValue    leftVal    =    NodeUtil.getConditionExpression(left);    	non-compiled	[CE]  orphaned  case	51	None	replace
131	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getConditionExpression(left);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getConditionExpression(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getConditionExpression(left);	  TernaryValue    leftVal    =    NodeUtil.getConditionExpression(left);    	non-compiled	[CE]  orphaned  case	51	None	replace
132	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getConditionExpression(left,  n);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getConditionExpression(left,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getConditionExpression(left,  n);	  TernaryValue    leftVal    =    NodeUtil.getConditionExpression(left);    	non-compiled	[CE]  orphaned  case	51	None	replace
133	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getConditionExpression(left)+  1;  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getConditionExpression(left)+  1;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getConditionExpression(left)+  1;	  TernaryValue    leftVal    =    NodeUtil.getConditionExpression(left);    	non-compiled	[CE]  orphaned  case	51	None	replace
134	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getConditionExpression(parent);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getConditionExpression(parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getConditionExpression(parent);	  TernaryValue    leftVal    =    NodeUtil.getConditionExpression(left);    	non-compiled	[CE]  orphaned  case	51	None	replace
135	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getOwnerValue(left);  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getOwnerValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getOwnerValue(left);	  Node    leftVal    =    NodeUtil.getLargerValue(parent);    	non-compiled	[CE]  orphaned  case	22	None	replace
136	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getLargerValue(n);  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getLargerValue(n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getLargerValue(n);	  Node    leftVal    =    NodeUtil.getLargerValue(parent);    	non-compiled	[CE]  orphaned  case	22	None	replace
137	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFolderValue(left);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFolderValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFolderValue(left);	  Node    leftVal    =    NodeUtil.getLargerValue(parent);    	non-compiled	[CE]  orphaned  case	22	None	replace
138	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFunctionValue(left);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFunctionValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFunctionValue(left);	  Node    leftVal    =    NodeUtil.getLargerValue(parent);    	non-compiled	[CE]  orphaned  case	22	None	replace
139	[BUG]  [BUGGY]  Node  leftVal  =  left.removeFirstChild();  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  left.removeFirstChild();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  left.removeFirstChild();	  Node    leftVal    =    left.getLastChild();    	non-compiled	[CE]  orphaned  case	14	None	replace
140	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFolderValue(parent);  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFolderValue(parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFolderValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getFolderValue(left);    	non-compiled	[CE]  orphaned  case	64	None	replace
141	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFolderValue(parent);  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFolderValue(parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFolderValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getFolderValue(left);    	non-compiled	[CE]  orphaned  case	64	None	replace
142	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFolderValue(left,  parent);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFolderValue(left,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFolderValue(left,  parent);	  TernaryValue    leftVal    =    NodeUtil.getFolderValue(left);    	non-compiled	[CE]  orphaned  case	64	None	replace
143	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFolderValue(left,  n);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFolderValue(left,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFolderValue(left,  n);	  TernaryValue    leftVal    =    NodeUtil.getFolderValue(left);    	non-compiled	[CE]  orphaned  case	64	None	replace
144	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getOwnerValue(parent);  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getOwnerValue(parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getOwnerValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getOwnerValue(left);    	non-compiled	[CE]  orphaned  case	63	None	replace
145	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getOwnerValue(parent);  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getOwnerValue(parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getOwnerValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getOwnerValue(left);    	non-compiled	[CE]  orphaned  case	63	None	replace
146	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getOwnerValue(left,  parent);  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getOwnerValue(left,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getOwnerValue(left,  parent);	  TernaryValue    leftVal    =    NodeUtil.getOwnerValue(left);    	non-compiled	[CE]  orphaned  case	63	None	replace
147	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLowerValue(left);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLowerValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLowerValue(left);	  TernaryValue    leftVal    =    NodeUtil.getOwnerValue(left);    	non-compiled	[CE]  orphaned  case	63	None	replace
148	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(parent,  left);  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(parent,  left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(parent,  left);	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left,    parent);    	non-compiled	[CE]  orphaned  case	38	None	replace
149	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  parent,  n);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  parent,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  parent,  n);	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left,    parent);    	non-compiled	[CE]  orphaned  case	38	None	replace
150	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  parent,  numValue);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  parent,  numValue);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  parent,  numValue);	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left,    parent);    	non-compiled	[CE]  orphaned  case	38	None	replace
151	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  parent,  0);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  parent,  0);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  parent,  0);	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left,    parent);    	non-compiled	[CE]  orphaned  case	38	None	replace
152	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  left);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  left);	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left,    parent);    	non-compiled	[CE]  orphaned  case	38	None	replace
153	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFunctionValue(left);  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFunctionValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFunctionValue(left);	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(parent);    	non-compiled	[CE]  orphaned  case	1	None	replace
154	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(parent,  n);  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(parent,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(parent,  n);	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left,    n);    	non-compiled	[CE]  orphaned  case	49	None	replace
155	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  n,  parent);  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  n,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  n,  parent);	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left,    n);    	non-compiled	[CE]  orphaned  case	49	None	replace
156	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getNumberValue(parent,  n);  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getNumberValue(parent,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getNumberValue(parent,  n);	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left,    n);    	non-compiled	[CE]  orphaned  case	49	None	replace
157	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getNumberValue(left,  n);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getNumberValue(left,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getNumberValue(left,  n);	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left,    n);    	non-compiled	[CE]  orphaned  case	49	None	replace
158	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLongValue(parent);  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLongValue(parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLongValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getLongValue(left);    	non-compiled	[CE]  orphaned  case	62	None	replace
159	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getLongValue(parent);  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getLongValue(parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getLongValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getLongValue(left);    	non-compiled	[CE]  orphaned  case	62	None	replace
160	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLongValue(left,  parent);  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLongValue(left,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLongValue(left,  parent);	  TernaryValue    leftVal    =    NodeUtil.getLongValue(left);    	non-compiled	[CE]  orphaned  case	62	None	replace
161	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFallThrough(left,  parent);  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFallThrough(left,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFallThrough(left,  parent);	  TernaryValue    leftVal    =    NodeUtil.getFallThrough(left);    	non-compiled	[CE]  orphaned  case	20	None	replace
162	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFallThrough(parent);  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFallThrough(parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFallThrough(parent);	  TernaryValue    leftVal    =    NodeUtil.getFallThrough(left);    	non-compiled	[CE]  orphaned  case	20	None	replace
163	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFallThrough(left);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFallThrough(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFallThrough(left);	  TernaryValue    leftVal    =    NodeUtil.getFallThrough(left);    	non-compiled	[CE]  orphaned  case	20	None	replace
164	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFallThrough(left,  n);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFallThrough(left,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFallThrough(left,  n);	  TernaryValue    leftVal    =    NodeUtil.getFallThrough(left);    	non-compiled	[CE]  orphaned  case	20	None	replace
165	[BUG]  [BUGGY]  Node  leftVal  =  parent.getDouble();  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  parent.getDouble();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  parent.getDouble();	  Node    leftVal    =    left.getDouble();    	non-compiled	[CE]  orphaned  case	48	None	replace
166	[BUG]  [BUGGY]  Node  leftVal  =  n.getDouble();  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  n.getDouble();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  n.getDouble();	  Node    leftVal    =    left.getDouble();    	non-compiled	[CE]  orphaned  case	48	None	replace
167	[BUG]  [BUGGY]  Node  leftVal  =  left.getString();  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  left.getString();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  left.getString();	  Node    leftVal    =    left.getDouble();    	non-compiled	[CE]  orphaned  case	48	None	replace
168	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(parent,  n);  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(parent,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullValue(parent,  n);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left,    n);    	non-compiled	[CE]  orphaned  case	12	None	replace
169	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  n,  parent);  [CE]  orphaned  case  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  n,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  n,  parent);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left,    n);    	non-compiled	[CE]  orphaned  case	12	None	replace
170	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFullValue(parent,  n);  [CE]  orphaned  case  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFullValue(parent,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFullValue(parent,  n);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left,    n);    	non-compiled	[CE]  orphaned  case	12	None	replace
171	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullyValue(left,  parent);  [CE]  orphaned  case  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullyValue(left,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullyValue(left,  parent);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left,    n);    	non-compiled	[CE]  orphaned  case	12	None	replace
172	[BUG]  [BUGGY]  Node  rightVal  =  NodeUtil.getFullyValue(left);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  rightVal  =  NodeUtil.getFullyValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  rightVal  =  NodeUtil.getFullyValue(left);	  TernaryValue    leftVal    =    NodeUtil.getFullyValue(parent);    	non-compiled	[CE]  orphaned  case	11	None	replace
173	[BUG]  [BUGGY]  NegativeValue  leftVal  =  NodeUtil.getFullyValue(left);  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  NegativeValue  leftVal  =  NodeUtil.getFullyValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	NegativeValue  leftVal  =  NodeUtil.getFullyValue(left);	  TernaryValue    leftVal    =    NodeUtil.getFullyValue(parent);    	non-compiled	[CE]  orphaned  case	11	None	replace
174	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFullyValue(n);  [CE]  orphaned  case  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFullyValue(n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFullyValue(n);	  TernaryValue    leftVal    =    NodeUtil.getFullyValue(parent);    	non-compiled	[CE]  orphaned  case	11	None	replace
175	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getBooleanValue(n);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getBooleanValue(n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getBooleanValue(n);	  Node    leftVal    =    NodeUtil.getBooleanValue(parent);    	non-compiled	[CE]  orphaned  case	4	None	replace
176	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFullyValue(parent);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFullyValue(parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFullyValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getFullyValue(left);    	non-compiled	[CE]  orphaned  case	55	None	replace
177	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullyValue(left,  n);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullyValue(left,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullyValue(left,  n);	  TernaryValue    leftVal    =    NodeUtil.getFullyValue(left);    	non-compiled	[CE]  orphaned  case	55	None	replace
178	[BUG]  [BUGGY]  NeighborValue  leftVal  =  NodeUtil.getFullyValue(left);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  NeighborValue  leftVal  =  NodeUtil.getFullyValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	NeighborValue  leftVal  =  NodeUtil.getFullyValue(left);	  TernaryValue    leftVal    =    NodeUtil.getFullyValue(left);    	non-compiled	[CE]  orphaned  case	55	None	replace
179	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(parent);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(parent);	  TernaryValue    leftVal    =    NodeUtil.newFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	58	None	replace
180	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(left,  parent);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(left,  parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(left,  parent);	  TernaryValue    leftVal    =    NodeUtil.newFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	58	None	replace
181	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.newFlattenedValue(parent);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.newFlattenedValue(parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.newFlattenedValue(parent);	  TernaryValue    leftVal    =    NodeUtil.newFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	58	None	replace
182	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.newFlattenedValue(left);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.newFlattenedValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.newFlattenedValue(left);	  TernaryValue    leftVal    =    NodeUtil.newFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	58	None	replace
183	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(left,  n);  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(left,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(left,  n);	  TernaryValue    leftVal    =    NodeUtil.newFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	58	None	replace
184	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.newBooleanValue(left);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.newBooleanValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.newBooleanValue(left);	  TernaryValue    leftVal    =    NodeUtil.newFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	58	None	replace
185	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFolderValue(left,  false);  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFolderValue(left,  false);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFolderValue(left,  false);	  TernaryValue    leftVal    =    NodeUtil.getFolderValue(left);    	non-compiled	[CE]  orphaned  case	64	None	replace
186	[BUG]  [BUGGY]  NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(left,  null);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(left,  null);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(left,  null);	  NeighborValue    leftVal    =    NodeUtil.getFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	35	None	replace
187	[BUG]  [BUGGY]  NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(left)+  1;  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(left)+  1;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(left)+  1;	  NeighborValue    leftVal    =    NodeUtil.getFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	35	None	replace
188	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(left)+  1;  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(left)+  1;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFlattenedValue(left)+  1;	  Node    leftVal    =    NodeUtil.getFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	31	None	replace
189	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  parent  -  1);  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  parent  -  1);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  parent  -  1);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left,    parent);    	non-compiled	[CE]  orphaned  case	10	None	replace
190	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  node);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  node);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  node);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left,    parent);    	non-compiled	[CE]  orphaned  case	10	None	replace
191	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFullValue(left)+  1;  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getFullValue(left)+  1;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFullValue(left)+  1;	  Node    leftVal    =    NodeUtil.getFullValue(left);    	non-compiled	[CE]  orphaned  case	9	None	replace
192	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  null);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  null);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  null);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left,    false);    	non-compiled	[CE]  orphaned  case	29	None	replace
193	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getOptValue(left);  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getOptValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getOptValue(left);	  Node    leftVal    =    NodeUtil.getLargerValue(parent);    	non-compiled	[CE]  orphaned  case	22	None	replace
194	[BUG]  [BUGGY]  TernaryValue  leftVal  =  node.getFlattenedValue(parent);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  node.getFlattenedValue(parent);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  node.getFlattenedValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(parent);    	non-compiled	[CE]  orphaned  case	30	None	replace
195	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getNodeValue(left);  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getNodeValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getNodeValue(left);	  Node    leftVal    =    NodeUtil.getNumberValue(parent);    	non-compiled	[CE]  orphaned  case	37	None	replace
196	[BUG]  [BUGGY]  TernaryValue  rightVal  =  NodeUtil.getPureBooleanValue(left,  false);  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  rightVal  =  NodeUtil.getPureBooleanValue(left,  false);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  rightVal  =  NodeUtil.getPureBooleanValue(left,  false);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(parent,    false);    	non-compiled	[CE]  orphaned  case	26	None	replace
197	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)+  1L;  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)+  1L;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)+  1L;	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left)+    1;    	non-compiled	[CE]  orphaned  case	50	None	replace
198	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)+  0;  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)+  0;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)+  0;	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left)+    1;    	non-compiled	[CE]  orphaned  case	50	None	replace
199	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFollowNode(left);  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFollowNode(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFollowNode(left);	  TernaryValue    leftVal    =    NodeUtil.getFallThrough(left);    	non-compiled	[CE]  orphaned  case	20	None	replace
200	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getPureBooleanValue(left);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getPureBooleanValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getPureBooleanValue(left);	  Node    leftVal    =    NodeUtil.getPureBooleanValue(left,    true);    	non-compiled	[CE]  orphaned  case	27	None	replace
201	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  n)+  1;  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  n)+  1;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  n)+  1;	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    n);    	non-compiled	[CE]  orphaned  case	34	None	replace
202	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  n,  false);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  n,  false);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  n,  false);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    n);    	non-compiled	[CE]  orphaned  case	34	None	replace
203	[BUG]  [BUGGY]  Node  rightVal  =  left.removeFirstChild();  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  rightVal  =  left.removeFirstChild();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  rightVal  =  left.removeFirstChild();	  Node    rightVal    =    left.getLastChild();    	non-compiled	[CE]  orphaned  case	16	None	replace
204	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  parent  -  1);  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  parent  -  1);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  parent  -  1);	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left,    parent);    	non-compiled	[CE]  orphaned  case	38	None	replace
205	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.newNumberValue(left);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.newNumberValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.newNumberValue(left);	  Node    leftVal    =    NodeUtil.getFullValue(parent);    	non-compiled	[CE]  orphaned  case	8	None	replace
206	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  this);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  this);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  this);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    null);    	non-compiled	[CE]  orphaned  case	54	None	replace
207	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  null,  n);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  null,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  null,  n);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    null);    	non-compiled	[CE]  orphaned  case	54	None	replace
208	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getLocalFunctionValue(left);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.getLocalFunctionValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getLocalFunctionValue(left);	  Node    leftVal    =    NodeUtil.getBooleanValue(parent);    	non-compiled	[CE]  orphaned  case	4	None	replace
209	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent  -  1);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent  -  1);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent  -  1);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left,    parent);    	non-compiled	[CE]  orphaned  case	24	None	replace
210	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  node);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  node);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  node);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left,    parent);    	non-compiled	[CE]  orphaned  case	24	None	replace
211	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent)+  1;  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent)+  1;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent)+  1;	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left,    parent);    	non-compiled	[CE]  orphaned  case	24	None	replace
212	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  n)+  1;  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  n)+  1;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  n)+  1;	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left,    n);    	non-compiled	[CE]  orphaned  case	47	None	replace
213	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  n  +  1);  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  n  +  1);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  n  +  1);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left,    n);    	non-compiled	[CE]  orphaned  case	47	None	replace
214	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  node);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  node);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  node);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    parent);    	non-compiled	[CE]  orphaned  case	32	None	replace
215	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  parent  -  1);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  parent  -  1);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  parent  -  1);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    parent);    	non-compiled	[CE]  orphaned  case	32	None	replace
216	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(left,  false)&&  parent.hasChildren();  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(left,  false)&&  parent.hasChildren();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getBooleanValue(left,  false)&&  parent.hasChildren();	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left,    false);    	non-compiled	[CE]  orphaned  case	5	None	replace
217	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(left,  value);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(left,  value);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(left,  value);	  TernaryValue    leftVal    =    NodeUtil.newFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	58	None	replace
218	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(left,  null);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(left,  null);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(left,  null);	  TernaryValue    leftVal    =    NodeUtil.newFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	58	None	replace
219	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(left,  false);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(left,  false);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(left,  false);	  TernaryValue    leftVal    =    NodeUtil.newFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	58	None	replace
220	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  false,  n);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  false,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  false,  n);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    false);    	non-compiled	[CE]  orphaned  case	53	None	replace
221	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  false,  null);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  false,  null);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  false,  null);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left,    false);    	non-compiled	[CE]  orphaned  case	53	None	replace
222	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getIntValue(left);  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getIntValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getIntValue(left);	  TernaryValue    leftVal    =    NodeUtil.getLongValue(left);    	non-compiled	[CE]  orphaned  case	62	None	replace
223	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLongValue(left,  n);  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLongValue(left,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLongValue(left,  n);	  TernaryValue    leftVal    =    NodeUtil.getLongValue(left);    	non-compiled	[CE]  orphaned  case	62	None	replace
224	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getOwnerValue(left,  n);  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getOwnerValue(left,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getOwnerValue(left,  n);	  TernaryValue    leftVal    =    NodeUtil.getOwnerValue(left);    	non-compiled	[CE]  orphaned  case	63	None	replace
225	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullyValue(parent,  n);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullyValue(parent,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullyValue(parent,  n);	  TernaryValue    leftVal    =    NodeUtil.getFullyValue(parent);    	non-compiled	[CE]  orphaned  case	11	None	replace
226	[BUG]  [BUGGY]  MutableValue  leftVal  =  NodeUtil.getFullyValue(left);  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  MutableValue  leftVal  =  NodeUtil.getFullyValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	MutableValue  leftVal  =  NodeUtil.getFullyValue(left);	  TernaryValue    leftVal    =    NodeUtil.getFullyValue(parent);    	non-compiled	[CE]  orphaned  case	11	None	replace
227	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getOperatorValue(left,  true);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getOperatorValue(left,  true);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getOperatorValue(left,  true);	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left,    true);    	non-compiled	[CE]  orphaned  case	6	None	replace
228	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  n)+  1;  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  n)+  1;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  n)+  1;	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left,    n);    	non-compiled	[CE]  orphaned  case	49	None	replace
229	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  n  +  1);  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  n  +  1);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  n  +  1);	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left,    n);    	non-compiled	[CE]  orphaned  case	49	None	replace
230	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  n)-  1;  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  n)-  1;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  n)-  1;	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left,    n);    	non-compiled	[CE]  orphaned  case	49	None	replace
231	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getConditionExpression(left)-  1;  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getConditionExpression(left)-  1;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getConditionExpression(left)-  1;	  TernaryValue    leftVal    =    NodeUtil.getConditionExpression(left);    	non-compiled	[CE]  orphaned  case	51	None	replace
232	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getConditionExpression(left  -  1);  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getConditionExpression(left  -  1);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getConditionExpression(left  -  1);	  TernaryValue    leftVal    =    NodeUtil.getConditionExpression(left);    	non-compiled	[CE]  orphaned  case	51	None	replace
233	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  null);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  null);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  null);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(left,    false,    parent);    	non-compiled	[CE]  orphaned  case	28	None	replace
234	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFollowValue(left,  true);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFollowValue(left,  true);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFollowValue(left,  true);	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left,    true);    	non-compiled	[CE]  orphaned  case	6	None	replace
235	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.removeFlattenedValue(left);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.removeFlattenedValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.removeFlattenedValue(left);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(parent);    	non-compiled	[CE]  orphaned  case	30	None	replace
236	[BUG]  [BUGGY]  Node  leftVal  =  left.getfirstChild();  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  left.getfirstChild();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  left.getfirstChild();	  Node    leftVal    =    parent.getLastChild();    	non-compiled	[CE]  orphaned  case	45	None	replace
237	[BUG]  [BUGGY]  Node  replacementNode  =  parent.replaceChild(n,  left);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  replacementNode  =  parent.replaceChild(n,  left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  replacementNode  =  parent.replaceChild(n,  left);	  Node    replacementNode    =    parent.getParent();    	non-compiled	[CE]  orphaned  case	57	None	replace
238	[BUG]  [BUGGY]  Node  replacementNode  =  parent.replaceChild(n,  n);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  replacementNode  =  parent.replaceChild(n,  n);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  replacementNode  =  parent.replaceChild(n,  n);	  Node    replacementNode    =    parent.getParent();    	non-compiled	[CE]  orphaned  case	57	None	replace
239	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)*  1;  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)*  1;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)*  1;	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left)+    1;    	non-compiled	[CE]  orphaned  case	50	None	replace
240	[BUG]  [BUGGY]  TernaryValue  leftVal  =  left.removeFirstChild();  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  left.removeFirstChild();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  left.removeFirstChild();	  TernaryValue    leftVal    =    left.getLastChild();    	non-compiled	[CE]  orphaned  case	44	None	replace
241	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  null);  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  null);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  null);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(left,    true);    	non-compiled	[CE]  orphaned  case	25	None	replace
242	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.removeFlattenedValue(left);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  Node  leftVal  =  NodeUtil.removeFlattenedValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.removeFlattenedValue(left);	  Node    leftVal    =    NodeUtil.getFlattenedValue(parent);    	non-compiled	[CE]  orphaned  case	33	None	replace
243	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  parent)+  1;  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  parent)+  1;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  parent)+  1;	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left,    parent);    	non-compiled	[CE]  orphaned  case	10	None	replace
244	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent,  null);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent,  null);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent,  null);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left,    parent);    	non-compiled	[CE]  orphaned  case	24	None	replace
245	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(left,  false).booleanValue();  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(left,  false).booleanValue();  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getBooleanValue(left,  false).booleanValue();	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left,    false);    	non-compiled	[CE]  orphaned  case	5	None	replace
246	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(left,  false)&&  parent.getType()  ==  Token.VAR;  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(left,  false)&&  parent.getType()  ==  Token.VAR;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getBooleanValue(left,  false)&&  parent.getType()  ==  Token.VAR;	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left,    false);    	non-compiled	[CE]  orphaned  case	5	None	replace
247	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.removeFullyValue(left);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.removeFullyValue(left);  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.removeFullyValue(left);	  TernaryValue    leftVal    =    NodeUtil.getFullyValue(parent);    	non-compiled	[CE]  orphaned  case	11	None	replace
248	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  parent)+  1;  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }      [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  parent)+  1;  [BUGGY]      if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  parent)+  1;	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left,    parent);    	non-compiled	[CE]  orphaned  case	38	None	replace
