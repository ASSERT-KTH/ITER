bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(parent);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(parent);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getBooleanValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left);    	non-compiled	[CE]  orphaned  case	3	None	replace
2	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getBooleanValue(left);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  NodeUtil.getBooleanValue(left);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getBooleanValue(left);	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left);    	non-compiled	[CE]  orphaned  case	3	None	replace
3	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLocalValue(left);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLocalValue(left);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLocalValue(left);	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left);    	non-compiled	[CE]  orphaned  case	3	None	replace
4	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getBooleanValue(parent);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  NodeUtil.getBooleanValue(parent);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getBooleanValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left);    	non-compiled	[CE]  orphaned  case	3	None	replace
5	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(left,  false);  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(left,  false);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getBooleanValue(left,  false);	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left);    	non-compiled	[CE]  orphaned  case	3	None	replace
6	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(left,  true);  [CE]  orphaned  case  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getBooleanValue(left,  true);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getBooleanValue(left,  true);	  TernaryValue    leftVal    =    NodeUtil.getBooleanValue(left);    	non-compiled	[CE]  orphaned  case	3	None	replace
7	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(parent);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(parent);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left);    	non-compiled	[CE]  orphaned  case	6	None	replace
8	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFullValue(parent);  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  NodeUtil.getFullValue(parent);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFullValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left);    	non-compiled	[CE]  orphaned  case	6	None	replace
9	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFullValue(left);  [CE]  orphaned  case  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  NodeUtil.getFullValue(left);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFullValue(left);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left);    	non-compiled	[CE]  orphaned  case	6	None	replace
10	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  parent);  [CE]  orphaned  case  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  parent);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  parent);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left);    	non-compiled	[CE]  orphaned  case	6	None	replace
11	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullyValue(parent);  [CE]  orphaned  case  [FE]                          AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullyValue(parent);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullyValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left);    	non-compiled	[CE]  orphaned  case	6	None	replace
12	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  n);  [CE]  orphaned  case  [FE]                            AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  n);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  n);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left);    	non-compiled	[CE]  orphaned  case	6	None	replace
13	[BUG]  [BUGGY]  Node  leftVal  =  left.getNext();  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  left.getNext();  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  left.getNext();	      	non-compiled	[CE]  orphaned  case	7	None	replace
14	[BUG]  [BUGGY]  Node  leftVal  =  left.getLastChild();  [CE]  orphaned  case  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  left.getLastChild();  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  left.getLastChild();	      	non-compiled	[CE]  orphaned  case	7	None	replace
15	[BUG]  [BUGGY]  Node  leftVal  =  left.getFirstChild();  [CE]  orphaned  case  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  left.getFirstChild();  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  left.getFirstChild();	      	non-compiled	[CE]  orphaned  case	7	None	replace
16	[BUG]  [BUGGY]  Node  rightVal  =  left.getLastChild();  [CE]  orphaned  case  [FE]                          AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  rightVal  =  left.getLastChild();  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  rightVal  =  left.getLastChild();	      	non-compiled	[CE]  orphaned  case	7	None	replace
17	[BUG]  [BUGGY]  Node  leftVal  =  n.getLastChild();  [CE]  orphaned  case  [FE]                            AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  n.getLastChild();  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  n.getLastChild();	      	non-compiled	[CE]  orphaned  case	7	None	replace
18	[BUG]  [BUGGY]  Node  leftVal  =  n.getFirstChild();  [CE]  orphaned  case  [FE]                              AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  n.getFirstChild();  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  n.getFirstChild();	      	non-compiled	[CE]  orphaned  case	7	None	replace
19	[BUG]  [BUGGY]  Node  leftVal  =  parent.getFirstChild();  [CE]  orphaned  case  [FE]                                AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  parent.getFirstChild();  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  parent.getFirstChild();	      	non-compiled	[CE]  orphaned  case	7	None	replace
20	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFallThrough(left);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFallThrough(left);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFallThrough(left);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(parent);    	non-compiled	[CE]  orphaned  case	2	None	replace
21	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(parent);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(parent);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLargerValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left);    	non-compiled	[CE]  orphaned  case	10	None	replace
22	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getLargerValue(parent);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  NodeUtil.getLargerValue(parent);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getLargerValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left);    	non-compiled	[CE]  orphaned  case	10	None	replace
23	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getLargerValue(left);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  NodeUtil.getLargerValue(left);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getLargerValue(left);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left);    	non-compiled	[CE]  orphaned  case	10	None	replace
24	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  parent);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left);    	non-compiled	[CE]  orphaned  case	10	None	replace
25	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  true);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  true);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  true);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(left,    false);    	non-compiled	[CE]  orphaned  case	9	None	replace
26	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(parent,  false);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(parent,  false);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(parent,  false);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(left,    false);    	non-compiled	[CE]  orphaned  case	9	None	replace
27	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getPureBooleanValue(left,  true);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  NodeUtil.getPureBooleanValue(left,  true);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getPureBooleanValue(left,  true);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(left,    false);    	non-compiled	[CE]  orphaned  case	9	None	replace
28	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  parent);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  parent);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  parent);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(left,    false);    	non-compiled	[CE]  orphaned  case	9	None	replace
29	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  false);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  false);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullValue(left,  false);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(left,    false);    	non-compiled	[CE]  orphaned  case	9	None	replace
30	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(parent);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(parent);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	5	None	replace
31	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(left);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(left);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFlattenedValue(left);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	5	None	replace
32	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  parent);  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  parent);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  parent);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	5	None	replace
33	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(parent);  [CE]  orphaned  case  [FE]                      AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  NodeUtil.getFlattenedValue(parent);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFlattenedValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	5	None	replace
34	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  n);  [CE]  orphaned  case  [FE]                        AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  n);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  n);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	5	None	replace
35	[BUG]  [BUGGY]  NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(left);  [CE]  orphaned  case  [FE]                          AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(left);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	NeighborValue  leftVal  =  NodeUtil.getFlattenedValue(left);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	5	None	replace
36	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(parent);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(parent);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left);    	non-compiled	[CE]  orphaned  case	8	None	replace
37	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getNumberValue(parent);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  NodeUtil.getNumberValue(parent);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getNumberValue(parent);	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left);    	non-compiled	[CE]  orphaned  case	8	None	replace
38	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  parent);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  parent);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  parent);	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left);    	non-compiled	[CE]  orphaned  case	8	None	replace
39	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getNumberValue(left);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  NodeUtil.getNumberValue(left);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getNumberValue(left);	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left);    	non-compiled	[CE]  orphaned  case	8	None	replace
40	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFirstChild();  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFirstChild();  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFirstChild();	  TernaryValue    leftVal    =    NodeUtil.getLastChild();    	non-compiled	[CE]  orphaned  case	1	None	replace
41	[BUG]  [BUGGY]  TernaryValue  leftVal  =  n.getLastChild();  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  n.getLastChild();  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  n.getLastChild();	  TernaryValue    leftVal    =    NodeUtil.getLastChild();    	non-compiled	[CE]  orphaned  case	1	None	replace
42	[BUG]  [BUGGY]  TernaryValue  leftVal  =  parent.getLastChild();  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  parent.getLastChild();  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  parent.getLastChild();	  TernaryValue    leftVal    =    NodeUtil.getLastChild();    	non-compiled	[CE]  orphaned  case	1	None	replace
43	[BUG]  [BUGGY]  TernaryValue  leftVal  =  node.getLastChild();  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  node.getLastChild();  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  node.getLastChild();	  TernaryValue    leftVal    =    NodeUtil.getLastChild();    	non-compiled	[CE]  orphaned  case	1	None	replace
44	[BUG]  [BUGGY]  TernaryValue  leftVal  =  left.getLastChild();  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  left.getLastChild();  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  left.getLastChild();	  TernaryValue    leftVal    =    NodeUtil.getLastChild();    	non-compiled	[CE]  orphaned  case	1	None	replace
45	[BUG]  [BUGGY]  Node  leftVal  =  parent.getLastChild();  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  parent.getLastChild();  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  parent.getLastChild();	  Node    leftVal    =    NodeUtil.getLastChild();    	non-compiled	[CE]  orphaned  case	4	None	replace
46	[BUG]  [BUGGY]  Node  leftVal  =  node.getLastChild();  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  node.getLastChild();  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  node.getLastChild();	  Node    leftVal    =    NodeUtil.getLastChild();    	non-compiled	[CE]  orphaned  case	4	None	replace
47	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  n);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  n);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLargerValue(left,  n);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left);    	non-compiled	[CE]  orphaned  case	10	None	replace
48	[BUG]  [BUGGY]  Node  leftVal  =  left.getDouble();  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  left.getDouble();  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  left.getDouble();	      	non-compiled	[CE]  orphaned  case	7	None	replace
49	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  n);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  n);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(left,  n);	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left);    	non-compiled	[CE]  orphaned  case	8	None	replace
50	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)+  1;  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)+  1;  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getNumberValue(left)+  1;	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left);    	non-compiled	[CE]  orphaned  case	8	None	replace
51	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getConditionExpression(left);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getConditionExpression(left);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getConditionExpression(left);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(parent);    	non-compiled	[CE]  orphaned  case	2	None	replace
52	[BUG]  [BUGGY]  Node  leftVal  =  NodeUtil.getFirstChild();  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  NodeUtil.getFirstChild();  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  NodeUtil.getFirstChild();	  Node    leftVal    =    NodeUtil.getLastChild();    	non-compiled	[CE]  orphaned  case	4	None	replace
53	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  false);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  false);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  false);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	5	None	replace
54	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  null);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  null);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFlattenedValue(left,  null);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	5	None	replace
55	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullyValue(left);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFullyValue(left);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFullyValue(left);	  TernaryValue    leftVal    =    NodeUtil.getFullValue(left);    	non-compiled	[CE]  orphaned  case	6	None	replace
56	[BUG]  [BUGGY]  TernaryValue  leftVal  =  n.getFirstChild();  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  n.getFirstChild();  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  n.getFirstChild();	  TernaryValue    leftVal    =    NodeUtil.getLastChild();    	non-compiled	[CE]  orphaned  case	1	None	replace
57	[BUG]  [BUGGY]  Node  replacementNode  =  parent.getParent();  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  replacementNode  =  parent.getParent();  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  replacementNode  =  parent.getParent();	      	non-compiled	[CE]  orphaned  case	7	None	replace
58	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(left);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(left);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.newFlattenedValue(left);	  TernaryValue    leftVal    =    NodeUtil.getFlattenedValue(left);    	non-compiled	[CE]  orphaned  case	5	None	replace
59	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  n);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  n);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left,  false,  n);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(left,    false);    	non-compiled	[CE]  orphaned  case	9	None	replace
60	[BUG]  [BUGGY]  Node  leftVal  =  node.getFirstChild();  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  Node  leftVal  =  node.getFirstChild();  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	Node  leftVal  =  node.getFirstChild();	  Node    leftVal    =    NodeUtil.getLastChild();    	non-compiled	[CE]  orphaned  case	4	None	replace
61	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFollowValue(left);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFollowValue(left);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFollowValue(left);	  TernaryValue    leftVal    =    NodeUtil.getPureBooleanValue(parent);    	non-compiled	[CE]  orphaned  case	2	None	replace
62	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLongValue(left);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getLongValue(left);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getLongValue(left);	  TernaryValue    leftVal    =    NodeUtil.getNumberValue(left);    	non-compiled	[CE]  orphaned  case	8	None	replace
63	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getOwnerValue(left);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getOwnerValue(left);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getOwnerValue(left);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left);    	non-compiled	[CE]  orphaned  case	10	None	replace
64	[BUG]  [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFolderValue(left);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    private  Node  tryFoldUnaryOperator(Node  n)  {  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }    [BUGGY]  TernaryValue  leftVal  =  NodeUtil.getFolderValue(left);  [BUGGY]    if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	335	335	3	replace	TernaryValue  leftVal  =  NodeUtil.getFolderValue(left);	  TernaryValue    leftVal    =    NodeUtil.getLargerValue(left);    	non-compiled	[CE]  orphaned  case	10	None	replace
