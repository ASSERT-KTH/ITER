bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  tryFoldComparison(subtree,  left,  right,  MAX_FOLD_NUMBER);  [CE]  orphaned  case  [FE]    AssertionFailedError  [CONTEXT]  return  tryFoldLeftChildOp(subtree,  left,  right);  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  [BUGGY]  return  tryFoldComparison(subtree,  left,  right,  MAX_FOLD_NUMBER);  [BUGGY]    default:  return  subtree;  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.5	158	158	3	replace	return  tryFoldComparison(subtree,  left,  right,  MAX_FOLD_NUMBER);	return  tryFoldComparison(subtree,  left,  right);  	non-compiled	[CE]  orphaned  case	59	None	replace
2	[BUG]  [BUGGY]  return  tryFoldBinaryOperator(subtree,  left,  right);  [CE]  orphaned  case  [FE]      AssertionFailedError  [CONTEXT]  return  tryFoldLeftChildOp(subtree,  left,  right);  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  [BUGGY]  return  tryFoldBinaryOperator(subtree,  left,  right);  [BUGGY]    default:  return  subtree;  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.5	158	158	3	replace	return  tryFoldBinaryOperator(subtree,  left,  right);	return  tryFoldComparison(subtree,  left,  right);  	non-compiled	[CE]  orphaned  case	59	None	replace
3	[BUG]  [BUGGY]  return  tryFoldLeftChildOp(subtree,  left,  right);  [CE]  orphaned  case  [FE]        AssertionFailedError  [CONTEXT]  return  tryFoldLeftChildOp(subtree,  left,  right);  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  [BUGGY]  return  tryFoldLeftChildOp(subtree,  left,  right);  [BUGGY]    default:  return  subtree;  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.5	158	158	3	replace	return  tryFoldLeftChildOp(subtree,  left,  right);	return  tryFoldComparison(subtree,  left,  right);  	non-compiled	[CE]  orphaned  case	59	None	replace
4	[BUG]  [BUGGY]  return  tryFoldComparison(subtree,  left,  right,  subtree);  [CE]  orphaned  case  [FE]          AssertionFailedError  [CONTEXT]  return  tryFoldLeftChildOp(subtree,  left,  right);  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  [BUGGY]  return  tryFoldComparison(subtree,  left,  right,  subtree);  [BUGGY]    default:  return  subtree;  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.5	158	158	3	replace	return  tryFoldComparison(subtree,  left,  right,  subtree);	return  tryFoldComparison(subtree,  left,  right);  	non-compiled	[CE]  orphaned  case	59	None	replace
5	[BUG]  [BUGGY]  return  tryFoldComparison(subtree,  left,  right,  subtree.cloneTree());  [CE]  orphaned  case  [FE]            AssertionFailedError  [CONTEXT]  return  tryFoldLeftChildOp(subtree,  left,  right);  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  [BUGGY]  return  tryFoldComparison(subtree,  left,  right,  subtree.cloneTree());  [BUGGY]    default:  return  subtree;  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.5	158	158	3	replace	return  tryFoldComparison(subtree,  left,  right,  subtree.cloneTree());	return  tryFoldComparison(subtree,  left,  right);  	non-compiled	[CE]  orphaned  case	59	None	replace
6	[BUG]  [BUGGY]  return  tryFoldComparison(subtree,  left,  right  +  1);  [CE]  orphaned  case  [FE]              AssertionFailedError  [CONTEXT]  return  tryFoldLeftChildOp(subtree,  left,  right);  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  [BUGGY]  return  tryFoldComparison(subtree,  left,  right  +  1);  [BUGGY]    default:  return  subtree;  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.5	158	158	3	replace	return  tryFoldComparison(subtree,  left,  right  +  1);	return  tryFoldComparison(subtree,  left,  right);  	non-compiled	[CE]  orphaned  case	59	None	replace
7	[BUG]  [BUGGY]    [CE]  orphaned  case  [FE]                AssertionFailedError  [CONTEXT]  return  tryFoldLeftChildOp(subtree,  left,  right);  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  [BUGGY]    [BUGGY]    default:  return  subtree;  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.5	158	158	3	replace	  	return  tryFoldComparison(subtree,  left,  right);  	non-compiled	[CE]  orphaned  case	59	None	replace
8	[BUG]  [BUGGY]  return  tryFoldComparison(subtree,  left,  right  -  1);  [CE]  orphaned  case  [FE]    AssertionFailedError  [CONTEXT]  return  tryFoldLeftChildOp(subtree,  left,  right);  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  [BUGGY]  return  tryFoldComparison(subtree,  left,  right  -  1);  [BUGGY]    default:  return  subtree;  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.5	158	158	3	replace	return  tryFoldComparison(subtree,  left,  right  -  1);	return  tryFoldComparison(subtree,  left,  right);  	non-compiled	[CE]  orphaned  case	59	None	replace
9	[BUG]  [BUGGY]  return  tryFoldMutator(subtree,  left,  right);  [CE]  orphaned  case  [FE]      AssertionFailedError  [CONTEXT]  return  tryFoldLeftChildOp(subtree,  left,  right);  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  [BUGGY]  return  tryFoldMutator(subtree,  left,  right);  [BUGGY]    default:  return  subtree;  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.5	158	158	3	replace	return  tryFoldMutator(subtree,  left,  right);	return  tryFoldComparison(subtree,  left,  right);  	non-compiled	[CE]  orphaned  case	59	None	replace
10	[BUG]  [BUGGY]  return  tryFoldMoveChildOp(subtree,  left,  right);  [CE]  orphaned  case  [FE]    AssertionFailedError  [CONTEXT]  return  tryFoldLeftChildOp(subtree,  left,  right);  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  [BUGGY]  return  tryFoldMoveChildOp(subtree,  left,  right);  [BUGGY]    default:  return  subtree;  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.5	158	158	3	replace	return  tryFoldMoveChildOp(subtree,  left,  right);	return  tryFoldComparison(subtree,  left,  right);  	non-compiled	[CE]  orphaned  case	59	None	replace
11	[BUG]  [BUGGY]  return  tryFoldMinimumChildOp(subtree,  left,  right);  [CE]  orphaned  case  [FE]      AssertionFailedError  [CONTEXT]  return  tryFoldLeftChildOp(subtree,  left,  right);  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  case  Token.EQ:  case  Token.NE:  case  Token.SHEQ:  case  Token.SHNE:  [BUGGY]  return  tryFoldMinimumChildOp(subtree,  left,  right);  [BUGGY]    default:  return  subtree;  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldBinaryOperator  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  left  result  right  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.5	158	158	3	replace	return  tryFoldMinimumChildOp(subtree,  left,  right);	return  tryFoldComparison(subtree,  left,  right);  	non-compiled	[CE]  orphaned  case	59	None	replace
