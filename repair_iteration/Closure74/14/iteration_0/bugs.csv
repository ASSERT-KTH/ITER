bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
27	[BUG] [BUGGY] break; [FE] AssertionFailedError [CONTEXT] } else { result = compareToUndefined(right, op); } break; case Token.NULL: case Token.TRUE: case Token.FALSE: if (undefinedRight) { result = compareToUndefined(left, op); [BUGGY] break; [BUGGY] } if (rhType != Token.TRUE && rhType != Token.FALSE && rhType != Token.NULL) { return n; } switch (op) { case Token.SHEQ: case Token.EQ: result = lhType == rhType; [CLASS] PeepholeFoldConstants [METHOD] tryFoldComparison [RETURN_TYPE] Node  Node n Node left Node right [VARIABLES] Locale ROOT_LOCALE boolean result rightLiteral undefinedLeft undefinedRight DiagnosticType BITWISE_OPERAND_OUT_OF_RANGE FRACTIONAL_BITWISE_OPERAND INDEX_OUT_OF_BOUNDS_ERROR INVALID_GETELEM_INDEX_ERROR NEGATING_A_NON_NUMBER_ERROR SHIFT_AMOUNT_OUT_OF_BOUNDS double MAX_FOLD_NUMBER lval negNum numValue result rval val value Node left n newNode right String ln rn Boolean compareResult int lhType op rhType  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.5773502691896258	925	925	3	replace	
