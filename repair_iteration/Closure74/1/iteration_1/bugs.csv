bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  case  Token.GT:  result  =  false;  break;  default:  return  n;//  don't  handle  that  op  }  break;  default:    [BUGGY]  return  left;  [BUGGY]  }  Node  newNode  =  new  Node(result  ?  Token.TRUE  :  Token.FALSE);  n.getParent().replaceChild(n,  newNode);  reportCodeChange();  return  newNode;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldComparison  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  Locale  ROOT_LOCALE  boolean  result  rightLiteral  undefinedLeft  undefinedRight  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lval  negNum  numValue  result  rval  val  value  Node  left  n  newNode  right  String  ln  rn  Boolean  compareResult  int  lhType  op  rhType  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1061	1061	3	add	return  left;	return  n;  	compilable	  [FE]  AssertionFailedError  	1	3	replace
2	[BUG]  [BUGGY]  return  left;  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  case  Token.GT:  result  =  false;  break;  default:  return  n;//  don't  handle  that  op  }  break;  default:    [BUGGY]  return  left;  [BUGGY]  }  Node  newNode  =  new  Node(result  ?  Token.TRUE  :  Token.FALSE);  n.getParent().replaceChild(n,  newNode);  reportCodeChange();  return  newNode;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldComparison  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  Locale  ROOT_LOCALE  boolean  result  rightLiteral  undefinedLeft  undefinedRight  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lval  negNum  numValue  result  rval  val  value  Node  left  n  newNode  right  String  ln  rn  Boolean  compareResult  int  lhType  op  rhType  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1061	1061	3	replace	return  left;	return  n;  	compilable	  [FE]  AssertionFailedError  	1	3	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  case  Token.GT:  result  =  false;  break;  default:  return  n;//  don't  handle  that  op  }  break;  default:    [BUGGY]  return  n.getLastChild();  [BUGGY]  }  Node  newNode  =  new  Node(result  ?  Token.TRUE  :  Token.FALSE);  n.getParent().replaceChild(n,  newNode);  reportCodeChange();  return  newNode;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldComparison  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  Locale  ROOT_LOCALE  boolean  result  rightLiteral  undefinedLeft  undefinedRight  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lval  negNum  numValue  result  rval  val  value  Node  left  n  newNode  right  String  ln  rn  Boolean  compareResult  int  lhType  op  rhType  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1061	1061	3	add	return  n.getLastChild();	return  n;  	compilable	  [FE]  AssertionFailedError  	1	3	replace
4	[BUG]  [BUGGY]  return  n.getLastChild();  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  case  Token.GT:  result  =  false;  break;  default:  return  n;//  don't  handle  that  op  }  break;  default:    [BUGGY]  return  n.getLastChild();  [BUGGY]  }  Node  newNode  =  new  Node(result  ?  Token.TRUE  :  Token.FALSE);  n.getParent().replaceChild(n,  newNode);  reportCodeChange();  return  newNode;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldComparison  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  Locale  ROOT_LOCALE  boolean  result  rightLiteral  undefinedLeft  undefinedRight  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lval  negNum  numValue  result  rval  val  value  Node  left  n  newNode  right  String  ln  rn  Boolean  compareResult  int  lhType  op  rhType  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1061	1061	3	replace	return  n.getLastChild();	return  n;  	compilable	  [FE]  AssertionFailedError  	1	3	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  case  Token.GT:  result  =  false;  break;  default:  return  n;//  don't  handle  that  op  }  break;  default:    [BUGGY]  return  n.getFirstChild();  [BUGGY]  }  Node  newNode  =  new  Node(result  ?  Token.TRUE  :  Token.FALSE);  n.getParent().replaceChild(n,  newNode);  reportCodeChange();  return  newNode;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldComparison  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  Locale  ROOT_LOCALE  boolean  result  rightLiteral  undefinedLeft  undefinedRight  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lval  negNum  numValue  result  rval  val  value  Node  left  n  newNode  right  String  ln  rn  Boolean  compareResult  int  lhType  op  rhType  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1061	1061	3	add	return  n.getFirstChild();	return  n;  	compilable	  [FE]  AssertionFailedError  	1	3	replace
6	[BUG]  [BUGGY]  return  n.getFirstChild();  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  case  Token.GT:  result  =  false;  break;  default:  return  n;//  don't  handle  that  op  }  break;  default:    [BUGGY]  return  n.getFirstChild();  [BUGGY]  }  Node  newNode  =  new  Node(result  ?  Token.TRUE  :  Token.FALSE);  n.getParent().replaceChild(n,  newNode);  reportCodeChange();  return  newNode;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldComparison  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  Locale  ROOT_LOCALE  boolean  result  rightLiteral  undefinedLeft  undefinedRight  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lval  negNum  numValue  result  rval  val  value  Node  left  n  newNode  right  String  ln  rn  Boolean  compareResult  int  lhType  op  rhType  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1061	1061	3	replace	return  n.getFirstChild();	return  n;  	compilable	  [FE]  AssertionFailedError  	1	3	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  case  Token.GT:  result  =  false;  break;  default:  return  n;//  don't  handle  that  op  }  break;  default:    [BUGGY]  return  n.getParent();  [BUGGY]  }  Node  newNode  =  new  Node(result  ?  Token.TRUE  :  Token.FALSE);  n.getParent().replaceChild(n,  newNode);  reportCodeChange();  return  newNode;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldComparison  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  Locale  ROOT_LOCALE  boolean  result  rightLiteral  undefinedLeft  undefinedRight  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lval  negNum  numValue  result  rval  val  value  Node  left  n  newNode  right  String  ln  rn  Boolean  compareResult  int  lhType  op  rhType  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1061	1061	3	add	return  n.getParent();	return  n;  	compilable	  [FE]  AssertionFailedError  	1	3	replace
8	[BUG]  [BUGGY]  return  n.getParent();  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  case  Token.GT:  result  =  false;  break;  default:  return  n;//  don't  handle  that  op  }  break;  default:    [BUGGY]  return  n.getParent();  [BUGGY]  }  Node  newNode  =  new  Node(result  ?  Token.TRUE  :  Token.FALSE);  n.getParent().replaceChild(n,  newNode);  reportCodeChange();  return  newNode;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldComparison  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  Locale  ROOT_LOCALE  boolean  result  rightLiteral  undefinedLeft  undefinedRight  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lval  negNum  numValue  result  rval  val  value  Node  left  n  newNode  right  String  ln  rn  Boolean  compareResult  int  lhType  op  rhType  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1061	1061	3	replace	return  n.getParent();	return  n;  	compilable	  [FE]  AssertionFailedError  	1	3	replace
9	[BUG]  [BUGGY]  n  =  left.getNext();  [CE]  variable  result  might  not  have  been  initialized  [FE]            AssertionFailedError  [CONTEXT]  case  Token.GT:  result  =  false;  break;  default:  return  n;//  don't  handle  that  op  }  break;  default:    [BUGGY]  n  =  left.getNext();  [BUGGY]  }  Node  newNode  =  new  Node(result  ?  Token.TRUE  :  Token.FALSE);  n.getParent().replaceChild(n,  newNode);  reportCodeChange();  return  newNode;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldComparison  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  Locale  ROOT_LOCALE  boolean  result  rightLiteral  undefinedLeft  undefinedRight  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lval  negNum  numValue  result  rval  val  value  Node  left  n  newNode  right  String  ln  rn  Boolean  compareResult  int  lhType  op  rhType  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1061	1061	3	replace	n  =  left.getNext();	return  n;  	non-compiled	[CE]  variable  result  might  not  have  been  initialized	1	None	replace
10	[BUG]  [BUGGY]  n  =  left.getFirstChild();  [CE]  variable  result  might  not  have  been  initialized  [FE]              AssertionFailedError  [CONTEXT]  case  Token.GT:  result  =  false;  break;  default:  return  n;//  don't  handle  that  op  }  break;  default:    [BUGGY]  n  =  left.getFirstChild();  [BUGGY]  }  Node  newNode  =  new  Node(result  ?  Token.TRUE  :  Token.FALSE);  n.getParent().replaceChild(n,  newNode);  reportCodeChange();  return  newNode;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldComparison  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  Locale  ROOT_LOCALE  boolean  result  rightLiteral  undefinedLeft  undefinedRight  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lval  negNum  numValue  result  rval  val  value  Node  left  n  newNode  right  String  ln  rn  Boolean  compareResult  int  lhType  op  rhType  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1061	1061	3	replace	n  =  left.getFirstChild();	return  n;  	non-compiled	[CE]  variable  result  might  not  have  been  initialized	1	None	replace
11	[BUG]  [BUGGY]  return  n.getType()  ==  Token.GETELEM;  [CE]  incompatible  types  [FE]                AssertionFailedError  [CONTEXT]  case  Token.GT:  result  =  false;  break;  default:  return  n;//  don't  handle  that  op  }  break;  default:    [BUGGY]  return  n.getType()  ==  Token.GETELEM;  [BUGGY]  }  Node  newNode  =  new  Node(result  ?  Token.TRUE  :  Token.FALSE);  n.getParent().replaceChild(n,  newNode);  reportCodeChange();  return  newNode;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldComparison  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  Locale  ROOT_LOCALE  boolean  result  rightLiteral  undefinedLeft  undefinedRight  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lval  negNum  numValue  result  rval  val  value  Node  left  n  newNode  right  String  ln  rn  Boolean  compareResult  int  lhType  op  rhType  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1061	1061	3	replace	return  n.getType()  ==  Token.GETELEM;	return  n;  	non-compiled	[CE]  incompatible  types	1	None	replace
12	[BUG]  [BUGGY]    [CE]  variable  result  might  not  have  been  initialized  [FE]                  AssertionFailedError  [CONTEXT]  case  Token.GT:  result  =  false;  break;  default:  return  n;//  don't  handle  that  op  }  break;  default:    [BUGGY]    [BUGGY]  }  Node  newNode  =  new  Node(result  ?  Token.TRUE  :  Token.FALSE);  n.getParent().replaceChild(n,  newNode);  reportCodeChange();  return  newNode;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldComparison  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  Locale  ROOT_LOCALE  boolean  result  rightLiteral  undefinedLeft  undefinedRight  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lval  negNum  numValue  result  rval  val  value  Node  left  n  newNode  right  String  ln  rn  Boolean  compareResult  int  lhType  op  rhType  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1061	1061	3	replace	  	return  n;  	non-compiled	[CE]  variable  result  might  not  have  been  initialized	1	None	replace
13	[BUG]  [BUGGY]  result  =  n.getFirstChild().getNext();  [CE]  incompatible  types  [FE]    AssertionFailedError  [CONTEXT]  case  Token.GT:  result  =  false;  break;  default:  return  n;//  don't  handle  that  op  }  break;  default:    [BUGGY]  result  =  n.getFirstChild().getNext();  [BUGGY]  }  Node  newNode  =  new  Node(result  ?  Token.TRUE  :  Token.FALSE);  n.getParent().replaceChild(n,  newNode);  reportCodeChange();  return  newNode;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldComparison  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  Locale  ROOT_LOCALE  boolean  result  rightLiteral  undefinedLeft  undefinedRight  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lval  negNum  numValue  result  rval  val  value  Node  left  n  newNode  right  String  ln  rn  Boolean  compareResult  int  lhType  op  rhType  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1061	1061	3	replace	result  =  n.getFirstChild().getNext();	return  n;  	non-compiled	[CE]  incompatible  types	1	None	replace
14	[BUG]  [BUGGY]  result  =  n.getFirstChild().replaceChild(left,  newNode);  [CE]  cannot  find  symbol  newNode  [FE]      AssertionFailedError  [CONTEXT]  case  Token.GT:  result  =  false;  break;  default:  return  n;//  don't  handle  that  op  }  break;  default:    [BUGGY]  result  =  n.getFirstChild().replaceChild(left,  newNode);  [BUGGY]  }  Node  newNode  =  new  Node(result  ?  Token.TRUE  :  Token.FALSE);  n.getParent().replaceChild(n,  newNode);  reportCodeChange();  return  newNode;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldComparison  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  Locale  ROOT_LOCALE  boolean  result  rightLiteral  undefinedLeft  undefinedRight  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lval  negNum  numValue  result  rval  val  value  Node  left  n  newNode  right  String  ln  rn  Boolean  compareResult  int  lhType  op  rhType  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1061	1061	3	replace	result  =  n.getFirstChild().replaceChild(left,  newNode);	return  n;  	non-compiled	[CE]  cannot  find  symbol  newNode	1	None	replace
15	[BUG]  [BUGGY]  result  =  n.getFirstChild().getNext().getNext();  [CE]  incompatible  types  [FE]        AssertionFailedError  [CONTEXT]  case  Token.GT:  result  =  false;  break;  default:  return  n;//  don't  handle  that  op  }  break;  default:    [BUGGY]  result  =  n.getFirstChild().getNext().getNext();  [BUGGY]  }  Node  newNode  =  new  Node(result  ?  Token.TRUE  :  Token.FALSE);  n.getParent().replaceChild(n,  newNode);  reportCodeChange();  return  newNode;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldComparison  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  Locale  ROOT_LOCALE  boolean  result  rightLiteral  undefinedLeft  undefinedRight  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lval  negNum  numValue  result  rval  val  value  Node  left  n  newNode  right  String  ln  rn  Boolean  compareResult  int  lhType  op  rhType  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1061	1061	3	replace	result  =  n.getFirstChild().getNext().getNext();	return  n;  	non-compiled	[CE]  incompatible  types	1	None	replace
16	[BUG]  [BUGGY]  n.removeChild(left);  [CE]  variable  result  might  not  have  been  initialized  [FE]    AssertionFailedError  [CONTEXT]  case  Token.GT:  result  =  false;  break;  default:  return  n;//  don't  handle  that  op  }  break;  default:    [BUGGY]  n.removeChild(left);  [BUGGY]  }  Node  newNode  =  new  Node(result  ?  Token.TRUE  :  Token.FALSE);  n.getParent().replaceChild(n,  newNode);  reportCodeChange();  return  newNode;  }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldComparison  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  Locale  ROOT_LOCALE  boolean  result  rightLiteral  undefinedLeft  undefinedRight  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lval  negNum  numValue  result  rval  val  value  Node  left  n  newNode  right  String  ln  rn  Boolean  compareResult  int  lhType  op  rhType  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	1.0	1061	1061	3	replace	n.removeChild(left);	return  n;  	non-compiled	[CE]  variable  result  might  not  have  been  initialized	1	None	replace
