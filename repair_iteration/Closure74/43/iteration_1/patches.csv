bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  case  Token.BITNOT:  return  tryReduceOperandsForOp(subtree);  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  case  Token.BITNOT:  return  tryReduceOperandsForOp(subtree);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	case  Token.BITNOT:  return  tryReduceOperandsForOp(subtree);	      	non-compiled	[CE]  orphaned  case	7	None	replace
2	[BUG]  [BUGGY]  case  Token.BITNOT:  return  tryReduceBinaryOperator(subtree);  [CE]  orphaned  case  [FE]                      AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  case  Token.BITNOT:  return  tryReduceBinaryOperator(subtree);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	case  Token.BITNOT:  return  tryReduceBinaryOperator(subtree);	      	non-compiled	[CE]  orphaned  case	7	None	replace
3	[BUG]  [BUGGY]  return  tryReduceBooleanOperator(subtree);  [CE]  orphaned  case  [FE]                        AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryReduceBooleanOperator(subtree);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryReduceBooleanOperator(subtree);	      	non-compiled	[CE]  orphaned  case	7	None	replace
4	[BUG]  [BUGGY]  return  tryReduceVoid(subtree);  [CE]  orphaned  case  [FE]                          AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryReduceVoid(subtree);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryReduceVoid(subtree);	      	non-compiled	[CE]  orphaned  case	7	None	replace
5	[BUG]  [BUGGY]  return  tryReduceLocalOperator(subtree);  [CE]  orphaned  case  [FE]                            AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryReduceLocalOperator(subtree);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryReduceLocalOperator(subtree);	      	non-compiled	[CE]  orphaned  case	7	None	replace
6	[BUG]  [BUGGY]  return  tryFoldLocalOperator(subtree,  false);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldLocalOperator(subtree,  false);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldLocalOperator(subtree,  false);	  return    tryFoldLocalOperator(subtree);    	non-compiled	[CE]  orphaned  case	5	None	replace
7	[BUG]  [BUGGY]  return  tryFoldLocalOperator(subtree,  true);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldLocalOperator(subtree,  true);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldLocalOperator(subtree,  true);	  return    tryFoldLocalOperator(subtree);    	non-compiled	[CE]  orphaned  case	5	None	replace
8	[BUG]  [BUGGY]  return  tryFoldLocalOperator(subtree,  BITWISE_OPERAND);  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldLocalOperator(subtree,  BITWISE_OPERAND);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldLocalOperator(subtree,  BITWISE_OPERAND);	  return    tryFoldLocalOperator(subtree);    	non-compiled	[CE]  orphaned  case	5	None	replace
9	[BUG]  [BUGGY]  return  tryFoldLocalOperator(subtree.cloneTree());  [CE]  orphaned  case  [FE]                      AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldLocalOperator(subtree.cloneTree());  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldLocalOperator(subtree.cloneTree());	  return    tryFoldLocalOperator(subtree);    	non-compiled	[CE]  orphaned  case	5	None	replace
10	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  FRACTIONAL_BITWISE_OPERAND_OUT_OF_RANGE);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  FRACTIONAL_BITWISE_OPERAND_OUT_OF_RANGE);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  FRACTIONAL_BITWISE_OPERAND_OUT_OF_RANGE);	  return    tryFoldUnaryOperator(subtree,    BITWISE_OPERAND_OUT_OF_RANGE);    	non-compiled	[CE]  orphaned  case	8	None	replace
11	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE,  FRACTIONAL_BITWISE_OPERAND);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE,  FRACTIONAL_BITWISE_OPERAND);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE,  FRACTIONAL_BITWISE_OPERAND);	  return    tryFoldUnaryOperator(subtree,    BITWISE_OPERAND_OUT_OF_RANGE);    	non-compiled	[CE]  orphaned  case	8	None	replace
12	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  FACTIONAL_BITWISE_OPERAND_OUT_OF_RANGE);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  FACTIONAL_BITWISE_OPERAND_OUT_OF_RANGE);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  FACTIONAL_BITWISE_OPERAND_OUT_OF_RANGE);	  return    tryFoldUnaryOperator(subtree,    BITWISE_OPERAND_OUT_OF_RANGE);    	non-compiled	[CE]  orphaned  case	8	None	replace
13	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  DEFAULT_BITWISE_OPERAND_OUT_OF_RANGE);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  DEFAULT_BITWISE_OPERAND_OUT_OF_RANGE);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  DEFAULT_BITWISE_OPERAND_OUT_OF_RANGE);	  return    tryFoldUnaryOperator(subtree,    BITWISE_OPERAND_OUT_OF_RANGE);    	non-compiled	[CE]  orphaned  case	8	None	replace
14	[BUG]  [BUGGY]  return  tryFoldBinaryOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldBinaryOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldBinaryOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE);	  return    tryFoldUnaryOperator(subtree,    BITWISE_OPERAND_OUT_OF_RANGE);    	non-compiled	[CE]  orphaned  case	8	None	replace
15	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  STRING_BITWISE_OPERAND_OUT_OF_RANGE);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  STRING_BITWISE_OPERAND_OUT_OF_RANGE);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  STRING_BITWISE_OPERAND_OUT_OF_RANGE);	  return    tryFoldUnaryOperator(subtree,    BITWISE_OPERAND_OUT_OF_RANGE);    	non-compiled	[CE]  orphaned  case	8	None	replace
16	[BUG]  [BUGGY]  return  tryReduceBinaryOperator(subtree.cloneTree());  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryReduceBinaryOperator(subtree.cloneTree());  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryReduceBinaryOperator(subtree.cloneTree());	  return    tryReduceBinaryOperator(subtree);    	non-compiled	[CE]  orphaned  case	3	None	replace
17	[BUG]  [BUGGY]  return  tryReduceBinaryOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryReduceBinaryOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryReduceBinaryOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE);	  return    tryReduceBinaryOperator(subtree);    	non-compiled	[CE]  orphaned  case	3	None	replace
18	[BUG]  [BUGGY]  return  tryReduceBinaryOperator(subtree,  BITWISE_OPERAND);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryReduceBinaryOperator(subtree,  BITWISE_OPERAND);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryReduceBinaryOperator(subtree,  BITWISE_OPERAND);	  return    tryReduceBinaryOperator(subtree);    	non-compiled	[CE]  orphaned  case	3	None	replace
19	[BUG]  [BUGGY]  return  tryReduceBinaryOperator(subtree,  true);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryReduceBinaryOperator(subtree,  true);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryReduceBinaryOperator(subtree,  true);	  return    tryReduceBinaryOperator(subtree);    	non-compiled	[CE]  orphaned  case	3	None	replace
20	[BUG]  [BUGGY]  return  tryReduceBinaryOperator(subtree,  false);  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryReduceBinaryOperator(subtree,  false);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryReduceBinaryOperator(subtree,  false);	  return    tryReduceBinaryOperator(subtree);    	non-compiled	[CE]  orphaned  case	3	None	replace
21	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  true);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  true);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  true);	  return    tryFoldUnaryOperator(subtree,    false);    	non-compiled	[CE]  orphaned  case	10	None	replace
22	[BUG]  [BUGGY]  return  tryFoldBinaryOperator(subtree,  false);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldBinaryOperator(subtree,  false);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldBinaryOperator(subtree,  false);	  return    tryFoldUnaryOperator(subtree,    false);    	non-compiled	[CE]  orphaned  case	10	None	replace
23	[BUG]  [BUGGY]  return  tryFoldOperator(subtree,  false);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldOperator(subtree,  false);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldOperator(subtree,  false);	  return    tryFoldUnaryOperator(subtree,    false);    	non-compiled	[CE]  orphaned  case	10	None	replace
24	[BUG]  [BUGGY]  return  tryFoldBooleanOperator(subtree,  false);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldBooleanOperator(subtree,  false);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldBooleanOperator(subtree,  false);	  return    tryFoldUnaryOperator(subtree,    false);    	non-compiled	[CE]  orphaned  case	10	None	replace
25	[BUG]  [BUGGY]  return  tryFoldBooleanOperator(subtree,  true);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldBooleanOperator(subtree,  true);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldBooleanOperator(subtree,  true);	  return    tryFoldBooleanOperator(subtree);    	non-compiled	[CE]  orphaned  case	2	None	replace
26	[BUG]  [BUGGY]  return  tryBooleanOperator(subtree);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryBooleanOperator(subtree);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryBooleanOperator(subtree);	  return    tryFoldBooleanOperator(subtree);    	non-compiled	[CE]  orphaned  case	2	None	replace
27	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  INVALID_GETELEM_INDEX_ERROR);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  INVALID_GETELEM_INDEX_ERROR);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  INVALID_GETELEM_INDEX_ERROR);	  return    tryFoldUnaryOperator(subtree,    FRACTIONAL_BITWISE_OPERAND);    	non-compiled	[CE]  orphaned  case	9	None	replace
28	[BUG]  [BUGGY]  return  tryFoldBinaryOperator(subtree,  FRACTIONAL_BITWISE_OPERAND);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldBinaryOperator(subtree,  FRACTIONAL_BITWISE_OPERAND);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldBinaryOperator(subtree,  FRACTIONAL_BITWISE_OPERAND);	  return    tryFoldUnaryOperator(subtree,    FRACTIONAL_BITWISE_OPERAND);    	non-compiled	[CE]  orphaned  case	9	None	replace
29	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  STRING_BITWISE_OPERAND);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  STRING_BITWISE_OPERAND);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  STRING_BITWISE_OPERAND);	  return    tryFoldUnaryOperator(subtree,    FRACTIONAL_BITWISE_OPERAND);    	non-compiled	[CE]  orphaned  case	9	None	replace
30	[BUG]  [BUGGY]  return  tryFoldOperator(subtree.cloneTree());  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldOperator(subtree.cloneTree());  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldOperator(subtree.cloneTree());	  return    tryFoldOperator(subtree);    	non-compiled	[CE]  orphaned  case	6	None	replace
31	[BUG]  [BUGGY]  return  tryFoldOperator(subtree,  BITWISE_OPERAND);  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldOperator(subtree,  BITWISE_OPERAND);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldOperator(subtree,  BITWISE_OPERAND);	  return    tryFoldOperator(subtree);    	non-compiled	[CE]  orphaned  case	6	None	replace
32	[BUG]  [BUGGY]  return  tryFoldBinaryOperator(subtree,  BITWISE_OPERAND);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldBinaryOperator(subtree,  BITWISE_OPERAND);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldBinaryOperator(subtree,  BITWISE_OPERAND);	  return    tryFoldUnaryOperator(subtree,    BITWISE_OPERAND);    	non-compiled	[CE]  orphaned  case	11	None	replace
33	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  BITWISE_OPERAND,  FRACTIONAL_BITWISE_OPERAND);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  BITWISE_OPERAND,  FRACTIONAL_BITWISE_OPERAND);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  BITWISE_OPERAND,  FRACTIONAL_BITWISE_OPERAND);	  return    tryFoldUnaryOperator(subtree,    BITWISE_OPERAND);    	non-compiled	[CE]  orphaned  case	11	None	replace
34	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  MAX_FOLD_NUMBER);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  MAX_FOLD_NUMBER);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  MAX_FOLD_NUMBER);	  return    tryFoldUnaryOperator(subtree,    BITWISE_OPERAND);    	non-compiled	[CE]  orphaned  case	11	None	replace
35	[BUG]  [BUGGY]  return  tryReduceBoolean(subtree);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryReduceBoolean(subtree);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryReduceBoolean(subtree);	  return    tryFoldBinaryOperator(subtree);    	non-compiled	[CE]  orphaned  case	1	None	replace
36	[BUG]  [BUGGY]  return  tryReduceLocalVoid(subtree);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryReduceLocalVoid(subtree);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryReduceLocalVoid(subtree);	  return    tryFoldBinaryOperator(subtree);    	non-compiled	[CE]  orphaned  case	1	None	replace
37	[BUG]  [BUGGY]  return  tryReduceOperandsForOp(subtree);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryReduceOperandsForOp(subtree);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryReduceOperandsForOp(subtree);	  return    tryFoldBinaryOperator(subtree);    	non-compiled	[CE]  orphaned  case	1	None	replace
38	[BUG]  [BUGGY]  return  tryFoldLocalVoid(subtree);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldLocalVoid(subtree);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldLocalVoid(subtree);	  return    tryFoldVoid(subtree);    	non-compiled	[CE]  orphaned  case	4	None	replace
39	[BUG]  [BUGGY]  return  tryFoldVoidOp(subtree);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldVoidOp(subtree);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldVoidOp(subtree);	  return    tryFoldVoid(subtree);    	non-compiled	[CE]  orphaned  case	4	None	replace
40	[BUG]  [BUGGY]  return  tryReduceBooleanOperand(subtree);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryReduceBooleanOperand(subtree);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryReduceBooleanOperand(subtree);	  return    tryFoldBinaryOperator(subtree);    	non-compiled	[CE]  orphaned  case	1	None	replace
41	[BUG]  [BUGGY]  return  tryReduceBitOperator(subtree);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryReduceBitOperator(subtree);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryReduceBitOperator(subtree);	  return    tryFoldBinaryOperator(subtree);    	non-compiled	[CE]  orphaned  case	1	None	replace
42	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  INDEX_OUT_OF_RANGE);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  INDEX_OUT_OF_RANGE);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  INDEX_OUT_OF_RANGE);	  return    tryFoldUnaryOperator(subtree,    FRACTIONAL_BITWISE_OPERAND);    	non-compiled	[CE]  orphaned  case	9	None	replace
43	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  DEFAULT_BITWISE_OPERAND);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  DEFAULT_BITWISE_OPERAND);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  DEFAULT_BITWISE_OPERAND);	  return    tryFoldUnaryOperator(subtree,    FRACTIONAL_BITWISE_OPERAND);    	non-compiled	[CE]  orphaned  case	9	None	replace
44	[BUG]  [BUGGY]  return  tryFoldVoidForOp(subtree);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldVoidForOp(subtree);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldVoidForOp(subtree);	  return    tryFoldVoid(subtree);    	non-compiled	[CE]  orphaned  case	4	None	replace
45	[BUG]  [BUGGY]  return  tryReduceBITWISE_OPERAND(subtree);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryReduceBITWISE_OPERAND(subtree);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryReduceBITWISE_OPERAND(subtree);	  return    tryReduceBinaryOperator(subtree);    	non-compiled	[CE]  orphaned  case	3	None	replace
46	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree.cloneTree(),  false);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree.cloneTree(),  false);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree.cloneTree(),  false);	  return    tryFoldUnaryOperator(subtree,    false);    	non-compiled	[CE]  orphaned  case	10	None	replace
47	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree.getParent(),  false);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree.getParent(),  false);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree.getParent(),  false);	  return    tryFoldUnaryOperator(subtree,    false);    	non-compiled	[CE]  orphaned  case	10	None	replace
48	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree.cloneTree());  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree.cloneTree());  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree.cloneTree());	  return    tryFoldUnaryOperator(subtree,    false);    	non-compiled	[CE]  orphaned  case	10	None	replace
49	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE,  INVALID_GETELEM_INDEX_ERROR);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE,  INVALID_GETELEM_INDEX_ERROR);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE,  INVALID_GETELEM_INDEX_ERROR);	  return    tryFoldUnaryOperator(subtree,    BITWISE_OPERAND_OUT_OF_RANGE);    	non-compiled	[CE]  orphaned  case	8	None	replace
50	[BUG]  [BUGGY]  return  tryFoldOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE);	  return    tryFoldOperator(subtree);    	non-compiled	[CE]  orphaned  case	6	None	replace
51	[BUG]  [BUGGY]  return  tryFoldOperandsForOp(subtree);  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldOperandsForOp(subtree);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldOperandsForOp(subtree);	  return    tryFoldOperator(subtree);    	non-compiled	[CE]  orphaned  case	6	None	replace
52	[BUG]  [BUGGY]  return  tryFoldOperand(subtree);  [CE]  orphaned  case  [FE]                      AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldOperand(subtree);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldOperand(subtree);	  return    tryFoldOperator(subtree);    	non-compiled	[CE]  orphaned  case	6	None	replace
53	[BUG]  [BUGGY]  return  tryFoldBooleanOperator(subtree,  BITWISE_OPERAND);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldBooleanOperator(subtree,  BITWISE_OPERAND);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldBooleanOperator(subtree,  BITWISE_OPERAND);	  return    tryFoldBooleanOperator(subtree);    	non-compiled	[CE]  orphaned  case	2	None	replace
54	[BUG]  [BUGGY]  return  tryFoldLocalOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldLocalOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldLocalOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE);	  return    tryFoldLocalOperator(subtree);    	non-compiled	[CE]  orphaned  case	5	None	replace
55	[BUG]  [BUGGY]  return  tryFoldLocalOperator(subtree,  FRACTIONAL_BITWISE_OPERAND);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldLocalOperator(subtree,  FRACTIONAL_BITWISE_OPERAND);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldLocalOperator(subtree,  FRACTIONAL_BITWISE_OPERAND);	  return    tryFoldLocalOperator(subtree);    	non-compiled	[CE]  orphaned  case	5	None	replace
56	[BUG]  [BUGGY]  return  tryFoldLocalOperator(subtree,  default);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldLocalOperator(subtree,  default);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldLocalOperator(subtree,  default);	  return    tryFoldLocalOperator(subtree);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
57	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  FRACTIONAL_BITWISE_OPERAND,  INDEX_OUT_OF_RANGE);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  FRACTIONAL_BITWISE_OPERAND,  INDEX_OUT_OF_RANGE);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  FRACTIONAL_BITWISE_OPERAND,  INDEX_OUT_OF_RANGE);	  return    tryFoldUnaryOperator(subtree,    FRACTIONAL_BITWISE_OPERAND);    	non-compiled	[CE]  orphaned  case	9	None	replace
58	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  FRACTIONAL_BITWISE_OPERAND,  INVALID_GETELEM_INDEX_ERROR);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  FRACTIONAL_BITWISE_OPERAND,  INVALID_GETELEM_INDEX_ERROR);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  FRACTIONAL_BITWISE_OPERAND,  INVALID_GETELEM_INDEX_ERROR);	  return    tryFoldUnaryOperator(subtree,    FRACTIONAL_BITWISE_OPERAND);    	non-compiled	[CE]  orphaned  case	9	None	replace
59	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE,  BITWISE_OPERAND_OUT_OF_RANGE);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE,  BITWISE_OPERAND_OUT_OF_RANGE);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE,  BITWISE_OPERAND_OUT_OF_RANGE);	  return    tryFoldUnaryOperator(subtree,    BITWISE_OPERAND_OUT_OF_RANGE);    	non-compiled	[CE]  orphaned  case	8	None	replace
60	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE,  MAX_FOLD_NUMBER);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE,  MAX_FOLD_NUMBER);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  BITWISE_OPERAND_OUT_OF_RANGE,  MAX_FOLD_NUMBER);	  return    tryFoldUnaryOperator(subtree,    BITWISE_OPERAND_OUT_OF_RANGE);    	non-compiled	[CE]  orphaned  case	8	None	replace
61	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  BOOLEAN_BITWISE_OPERAND_OUT_OF_RANGE);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  BOOLEAN_BITWISE_OPERAND_OUT_OF_RANGE);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  BOOLEAN_BITWISE_OPERAND_OUT_OF_RANGE);	  return    tryFoldUnaryOperator(subtree,    BITWISE_OPERAND_OUT_OF_RANGE);    	non-compiled	[CE]  orphaned  case	8	None	replace
62	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  false,  case  Token.BITWISE_OPERAND);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  false,  case  Token.BITWISE_OPERAND);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  false,  case  Token.BITWISE_OPERAND);	  return    tryFoldUnaryOperator(subtree,    false);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
63	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  false,  BITWISE_OPERAND);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  false,  BITWISE_OPERAND);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  false,  BITWISE_OPERAND);	  return    tryFoldUnaryOperator(subtree,    false);    	non-compiled	[CE]  orphaned  case	10	None	replace
64	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  false,  true);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  false,  true);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  false,  true);	  return    tryFoldUnaryOperator(subtree,    false);    	non-compiled	[CE]  orphaned  case	10	None	replace
65	[BUG]  [BUGGY]  return  tryFoldLocationOperator(subtree);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldLocationOperator(subtree);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldLocationOperator(subtree);	  return    tryFoldVoid(subtree);    	non-compiled	[CE]  orphaned  case	4	None	replace
66	[BUG]  [BUGGY]  return  tryReducePoid(subtree);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryReducePoid(subtree);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryReducePoid(subtree);	  return    tryFoldBinaryOperator(subtree);    	non-compiled	[CE]  orphaned  case	1	None	replace
67	[BUG]  [BUGGY]  return  tryFoldUnaryOperator(subtree,  BOOLEAN_BITWISE_OPERAND);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldUnaryOperator(subtree,  BOOLEAN_BITWISE_OPERAND);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldUnaryOperator(subtree,  BOOLEAN_BITWISE_OPERAND);	  return    tryFoldUnaryOperator(subtree,    BITWISE_OPERAND);    	non-compiled	[CE]  orphaned  case	11	None	replace
68	[BUG]  [BUGGY]  return  tryFoldBidirectionalOperator(subtree,  BITWISE_OPERAND);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    return  tryFoldCtorCall(subtree);  case  Token.TYPEOF:  return  tryFoldTypeof(subtree);  case  Token.NOT:  case  Token.POS:  case  Token.NEG:  case  Token.BITNOT:  tryReduceOperandsForOp(subtree);    [BUGGY]  return  tryFoldBidirectionalOperator(subtree,  BITWISE_OPERAND);  [BUGGY]      case  Token.VOID:  return  tryReduceVoid(subtree);  default:  tryReduceOperandsForOp(subtree);  return  tryFoldBinaryOperator(subtree);  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  optimizeSubtree  [RETURN_TYPE]  Node  Node  subtree  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  Node  subtree  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	85	85	3	replace	return  tryFoldBidirectionalOperator(subtree,  BITWISE_OPERAND);	  return    tryFoldUnaryOperator(subtree,    BITWISE_OPERAND);    	non-compiled	[CE]  orphaned  case	11	None	replace
