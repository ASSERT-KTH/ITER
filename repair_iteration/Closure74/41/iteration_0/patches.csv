bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return!equivalent;  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  boolean  equivalent  =  valueUndefined  ||  valueNull;  switch  (op)  {  case  Token.EQ:  return  equivalent;  case  Token.NE:  return  !equivalent;  case  Token.SHEQ:  return  valueUndefined;  case  Token.SHNE:  [BUGGY]  return!equivalent;  [BUGGY]  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  return  false;  default:  throw  new  IllegalStateException( "unexpected. ");  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  compareToUndefined  [RETURN_TYPE]  boolean  Node  value  int  op  [VARIABLES]  Locale  ROOT_LOCALE  boolean  equivalent  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  int  op  Node  value  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.47140452079103173	1137	1137	3	replace	return!equivalent;	return  !valueUndefined;  	non-compiled	[CE]  ';'  expected	81	None	replace
2	[BUG]  [BUGGY]  return!valueNull;  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  boolean  equivalent  =  valueUndefined  ||  valueNull;  switch  (op)  {  case  Token.EQ:  return  equivalent;  case  Token.NE:  return  !equivalent;  case  Token.SHEQ:  return  valueUndefined;  case  Token.SHNE:  [BUGGY]  return!valueNull;  [BUGGY]  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  return  false;  default:  throw  new  IllegalStateException( "unexpected. ");  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  compareToUndefined  [RETURN_TYPE]  boolean  Node  value  int  op  [VARIABLES]  Locale  ROOT_LOCALE  boolean  equivalent  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  int  op  Node  value  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.47140452079103173	1137	1137	3	replace	return!valueNull;	return  !valueUndefined;  	non-compiled	[CE]  ';'  expected	81	None	replace
3	[BUG]  [BUGGY]  if(valueNull)  {  return!valueUndefined;  }  [CE]  ';'  expected  [FE]        AssertionFailedError  [CONTEXT]  boolean  equivalent  =  valueUndefined  ||  valueNull;  switch  (op)  {  case  Token.EQ:  return  equivalent;  case  Token.NE:  return  !equivalent;  case  Token.SHEQ:  return  valueUndefined;  case  Token.SHNE:  [BUGGY]  if(valueNull)  {  return!valueUndefined;  }  [BUGGY]  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  return  false;  default:  throw  new  IllegalStateException( "unexpected. ");  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  compareToUndefined  [RETURN_TYPE]  boolean  Node  value  int  op  [VARIABLES]  Locale  ROOT_LOCALE  boolean  equivalent  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  int  op  Node  value  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.47140452079103173	1137	1137	3	replace	if(valueNull)  {  return!valueUndefined;  }	return  !valueUndefined;  	non-compiled	[CE]  ';'  expected	81	None	replace
4	[BUG]  [BUGGY]  if(valueNull)return!valueUndefined;  if(op  ==  0)  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionFailedError  [CONTEXT]  boolean  equivalent  =  valueUndefined  ||  valueNull;  switch  (op)  {  case  Token.EQ:  return  equivalent;  case  Token.NE:  return  !equivalent;  case  Token.SHEQ:  return  valueUndefined;  case  Token.SHNE:  [BUGGY]  if(valueNull)return!valueUndefined;  if(op  ==  0)  {  return  false;  }  [BUGGY]  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  return  false;  default:  throw  new  IllegalStateException( "unexpected. ");  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  compareToUndefined  [RETURN_TYPE]  boolean  Node  value  int  op  [VARIABLES]  Locale  ROOT_LOCALE  boolean  equivalent  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  int  op  Node  value  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.47140452079103173	1137	1137	3	replace	if(valueNull)return!valueUndefined;  if(op  ==  0)  {  return  false;  }	return  !valueUndefined;  	non-compiled	[CE]  ';'  expected	81	None	replace
5	[BUG]  [BUGGY]  return!nequivalent;  [CE]  ';'  expected  [FE]            AssertionFailedError  [CONTEXT]  boolean  equivalent  =  valueUndefined  ||  valueNull;  switch  (op)  {  case  Token.EQ:  return  equivalent;  case  Token.NE:  return  !equivalent;  case  Token.SHEQ:  return  valueUndefined;  case  Token.SHNE:  [BUGGY]  return!nequivalent;  [BUGGY]  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  return  false;  default:  throw  new  IllegalStateException( "unexpected. ");  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  compareToUndefined  [RETURN_TYPE]  boolean  Node  value  int  op  [VARIABLES]  Locale  ROOT_LOCALE  boolean  equivalent  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  int  op  Node  value  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.47140452079103173	1137	1137	3	replace	return!nequivalent;	return  !valueUndefined;  	non-compiled	[CE]  ';'  expected	81	None	replace
6	[BUG]  [BUGGY]  if(op  ==  null)  {  return!valueUndefined;  }  [CE]  ';'  expected  [FE]              AssertionFailedError  [CONTEXT]  boolean  equivalent  =  valueUndefined  ||  valueNull;  switch  (op)  {  case  Token.EQ:  return  equivalent;  case  Token.NE:  return  !equivalent;  case  Token.SHEQ:  return  valueUndefined;  case  Token.SHNE:  [BUGGY]  if(op  ==  null)  {  return!valueUndefined;  }  [BUGGY]  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  return  false;  default:  throw  new  IllegalStateException( "unexpected. ");  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  compareToUndefined  [RETURN_TYPE]  boolean  Node  value  int  op  [VARIABLES]  Locale  ROOT_LOCALE  boolean  equivalent  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  int  op  Node  value  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.47140452079103173	1137	1137	3	replace	if(op  ==  null)  {  return!valueUndefined;  }	return  !valueUndefined;  	non-compiled	[CE]  ';'  expected	81	None	replace
7	[BUG]  [BUGGY]  if(valueNull)return!valueUndefined;  else  if(valueNull)return  0;  [CE]  ';'  expected  [FE]                AssertionFailedError  [CONTEXT]  boolean  equivalent  =  valueUndefined  ||  valueNull;  switch  (op)  {  case  Token.EQ:  return  equivalent;  case  Token.NE:  return  !equivalent;  case  Token.SHEQ:  return  valueUndefined;  case  Token.SHNE:  [BUGGY]  if(valueNull)return!valueUndefined;  else  if(valueNull)return  0;  [BUGGY]  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  return  false;  default:  throw  new  IllegalStateException( "unexpected. ");  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  compareToUndefined  [RETURN_TYPE]  boolean  Node  value  int  op  [VARIABLES]  Locale  ROOT_LOCALE  boolean  equivalent  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  int  op  Node  value  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.47140452079103173	1137	1137	3	replace	if(valueNull)return!valueUndefined;  else  if(valueNull)return  0;	return  !valueUndefined;  	non-compiled	[CE]  ';'  expected	81	None	replace
8	[BUG]  [BUGGY]    [CE]  ';'  expected  [FE]                  AssertionFailedError  [CONTEXT]  boolean  equivalent  =  valueUndefined  ||  valueNull;  switch  (op)  {  case  Token.EQ:  return  equivalent;  case  Token.NE:  return  !equivalent;  case  Token.SHEQ:  return  valueUndefined;  case  Token.SHNE:  [BUGGY]    [BUGGY]  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  return  false;  default:  throw  new  IllegalStateException( "unexpected. ");  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  compareToUndefined  [RETURN_TYPE]  boolean  Node  value  int  op  [VARIABLES]  Locale  ROOT_LOCALE  boolean  equivalent  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  int  op  Node  value  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.47140452079103173	1137	1137	3	replace	  	return  !valueUndefined;  	non-compiled	[CE]  ';'  expected	81	None	replace
9	[BUG]  [BUGGY]  return!super.equivalent;  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  boolean  equivalent  =  valueUndefined  ||  valueNull;  switch  (op)  {  case  Token.EQ:  return  equivalent;  case  Token.NE:  return  !equivalent;  case  Token.SHEQ:  return  valueUndefined;  case  Token.SHNE:  [BUGGY]  return!super.equivalent;  [BUGGY]  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  return  false;  default:  throw  new  IllegalStateException( "unexpected. ");  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  compareToUndefined  [RETURN_TYPE]  boolean  Node  value  int  op  [VARIABLES]  Locale  ROOT_LOCALE  boolean  equivalent  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  int  op  Node  value  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.47140452079103173	1137	1137	3	replace	return!super.equivalent;	return  !valueUndefined;  	non-compiled	[CE]  ';'  expected	81	None	replace
10	[BUG]  [BUGGY]  return!requivalent;  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  boolean  equivalent  =  valueUndefined  ||  valueNull;  switch  (op)  {  case  Token.EQ:  return  equivalent;  case  Token.NE:  return  !equivalent;  case  Token.SHEQ:  return  valueUndefined;  case  Token.SHNE:  [BUGGY]  return!requivalent;  [BUGGY]  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  return  false;  default:  throw  new  IllegalStateException( "unexpected. ");  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  compareToUndefined  [RETURN_TYPE]  boolean  Node  value  int  op  [VARIABLES]  Locale  ROOT_LOCALE  boolean  equivalent  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  int  op  Node  value  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.47140452079103173	1137	1137	3	replace	return!requivalent;	return  !valueUndefined;  	non-compiled	[CE]  ';'  expected	81	None	replace
11	[BUG]  [BUGGY]  return!negative;  [CE]  ';'  expected  [FE]        AssertionFailedError  [CONTEXT]  boolean  equivalent  =  valueUndefined  ||  valueNull;  switch  (op)  {  case  Token.EQ:  return  equivalent;  case  Token.NE:  return  !equivalent;  case  Token.SHEQ:  return  valueUndefined;  case  Token.SHNE:  [BUGGY]  return!negative;  [BUGGY]  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  return  false;  default:  throw  new  IllegalStateException( "unexpected. ");  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  compareToUndefined  [RETURN_TYPE]  boolean  Node  value  int  op  [VARIABLES]  Locale  ROOT_LOCALE  boolean  equivalent  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  int  op  Node  value  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.47140452079103173	1137	1137	3	replace	return!negative;	return  !valueUndefined;  	non-compiled	[CE]  ';'  expected	81	None	replace
12	[BUG]  [BUGGY]  return!result;  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  boolean  equivalent  =  valueUndefined  ||  valueNull;  switch  (op)  {  case  Token.EQ:  return  equivalent;  case  Token.NE:  return  !equivalent;  case  Token.SHEQ:  return  valueUndefined;  case  Token.SHNE:  [BUGGY]  return!result;  [BUGGY]  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  return  false;  default:  throw  new  IllegalStateException( "unexpected. ");  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  compareToUndefined  [RETURN_TYPE]  boolean  Node  value  int  op  [VARIABLES]  Locale  ROOT_LOCALE  boolean  equivalent  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  int  op  Node  value  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.47140452079103173	1137	1137	3	replace	return!result;	return  !valueUndefined;  	non-compiled	[CE]  ';'  expected	81	None	replace
13	[BUG]  [BUGGY]  return!negated;  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  boolean  equivalent  =  valueUndefined  ||  valueNull;  switch  (op)  {  case  Token.EQ:  return  equivalent;  case  Token.NE:  return  !equivalent;  case  Token.SHEQ:  return  valueUndefined;  case  Token.SHNE:  [BUGGY]  return!negated;  [BUGGY]  case  Token.LT:  case  Token.GT:  case  Token.LE:  case  Token.GE:  return  false;  default:  throw  new  IllegalStateException( "unexpected. ");  }  }  [CLASS]  PeepholeFoldConstants  [METHOD]  compareToUndefined  [RETURN_TYPE]  boolean  Node  value  int  op  [VARIABLES]  Locale  ROOT_LOCALE  boolean  equivalent  valueNull  valueUndefined  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  lv  lval  negNum  numValue  result  rv  rval  val  value  int  op  Node  value  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.47140452079103173	1137	1137	3	replace	return!negated;	return  !valueUndefined;  	non-compiled	[CE]  ';'  expected	81	None	replace
