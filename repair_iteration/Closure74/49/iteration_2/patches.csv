bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    NodeUtil.getPureBooleanValue(left))    {    	non-compiled	[CE]  orphaned  case	36	None	replace
2	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    NodeUtil.getPureBooleanValue(left))    {    	non-compiled	[CE]  orphaned  case	36	None	replace
3	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    NodeUtil.getPureBooleanValue(left))    {    	non-compiled	[CE]  orphaned  case	36	None	replace
4	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal!=  NodeUtil.getPureBooleanValue(left))  {  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal!=  NodeUtil.getPureBooleanValue(left))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal!=  NodeUtil.getPureBooleanValue(left))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    NodeUtil.getPureBooleanValue(left))    {    	non-compiled	[CE]  orphaned  case	36	None	replace
5	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    NodeUtil.getPureBooleanValue(left))    {    	non-compiled	[CE]  orphaned  case	36	None	replace
6	[BUG]  [BUGGY]  if(leftVal  >=  TernaryValue.UNKNOWN  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  >=  TernaryValue.UNKNOWN  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  >=  TernaryValue.UNKNOWN  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    NodeUtil.getPureBooleanValue(left))    {    	non-compiled	[CE]  orphaned  case	36	None	replace
7	[BUG]  [BUGGY]  Node  n  =  leftVal.getLastChild();  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  n  =  leftVal.getLastChild();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  n  =  leftVal.getLastChild();	  Node    n    =    leftVal.getFirstChild();    	non-compiled	[CE]  orphaned  case	3	None	replace
8	[BUG]  [BUGGY]  Node  n  =  left.getLastChild();  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  n  =  left.getLastChild();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  n  =  left.getLastChild();	  Node    n    =    leftVal.getFirstChild();    	non-compiled	[CE]  orphaned  case	3	None	replace
9	[BUG]  [BUGGY]  Node  n  =  parent.getFirstChild();  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  n  =  parent.getFirstChild();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  n  =  parent.getFirstChild();	  Node    n    =    leftVal.getFirstChild();    	non-compiled	[CE]  orphaned  case	3	None	replace
10	[BUG]  [BUGGY]  Node  n  =  leftVal.getParent();  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  n  =  leftVal.getParent();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  n  =  leftVal.getParent();	  Node    n    =    leftVal.getFirstChild();    	non-compiled	[CE]  orphaned  case	3	None	replace
11	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NONE  ||  leftVal!=  null)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NONE  ||  leftVal!=  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NONE  ||  leftVal!=  null)  {	  if(leftVal    ==    TernaryValue.NONE    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	39	None	replace
12	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NONE  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NONE  ||  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NONE  ||  leftVal  ==  null)  {	  if(leftVal    ==    TernaryValue.NONE    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	39	None	replace
13	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NONE  ||  leftVal  >=  null)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NONE  ||  leftVal  >=  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NONE  ||  leftVal  >=  null)  {	  if(leftVal    ==    TernaryValue.NONE    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	39	None	replace
14	[BUG]  [BUGGY]  if(leftVal  >=  TernaryValue.NONE  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  >=  TernaryValue.NONE  ||  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  >=  TernaryValue.NONE  ||  leftVal  ==  null)  {	  if(leftVal    ==    TernaryValue.NONE    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	39	None	replace
15	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal!=  TernaryValue.NULL)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal!=  TernaryValue.NULL)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal!=  TernaryValue.NULL)  {	  if(leftVal!=    null    ||    leftVal    ==    TernaryValue.NULL)    {    	non-compiled	[CE]  orphaned  case	24	None	replace
16	[BUG]  [BUGGY]  Node  n  =  left.getNext();  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  n  =  left.getNext();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  n  =  left.getNext();	  Node    n    =    leftVal.getNext();    	non-compiled	[CE]  orphaned  case	2	None	replace
17	[BUG]  [BUGGY]  Node  n  =  leftVal.getPrevious();  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  n  =  leftVal.getPrevious();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  n  =  leftVal.getPrevious();	  Node    n    =    leftVal.getNext();    	non-compiled	[CE]  orphaned  case	2	None	replace
18	[BUG]  [BUGGY]  Node  n  =  leftVal.getNext()  +  1;  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  n  =  leftVal.getNext()  +  1;  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  n  =  leftVal.getNext()  +  1;	  Node    n    =    leftVal.getNext();    	non-compiled	[CE]  orphaned  case	2	None	replace
19	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NUMBER)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NUMBER)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NUMBER)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.NUMBER)    {    	non-compiled	[CE]  orphaned  case	41	None	replace
20	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()!=  Token.NUMBER)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()!=  Token.NUMBER)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()!=  Token.NUMBER)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.NUMBER)    {    	non-compiled	[CE]  orphaned  case	41	None	replace
21	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NOT)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NOT)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NOT)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.NUMBER)    {    	non-compiled	[CE]  orphaned  case	41	None	replace
22	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.VAR)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.VAR)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.VAR)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  orphaned  case	51	None	replace
23	[BUG]  [BUGGY]  if(leftVal!=  null  &&  leftVal.getType()  ==  Token.VAR)  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  &&  leftVal.getType()  ==  Token.VAR)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  &&  leftVal.getType()  ==  Token.VAR)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  orphaned  case	51	None	replace
24	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.VAR)  {  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.VAR)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.VAR)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  orphaned  case	51	None	replace
25	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.VAR)  {  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.VAR)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal.getType()  ==  Token.VAR)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  orphaned  case	51	None	replace
26	[BUG]  [BUGGY]  if(leftVal!=  null  &&  leftVal.getType()  ==  Token.FUNCTION)  {  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  &&  leftVal.getType()  ==  Token.FUNCTION)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  &&  leftVal.getType()  ==  Token.FUNCTION)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  orphaned  case	51	None	replace
27	[BUG]  [BUGGY]  if(leftVal!=  null  &&  leftVal.getType()  ==  Token.NAME)  {  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  &&  leftVal.getType()  ==  Token.NAME)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  &&  leftVal.getType()  ==  Token.NAME)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  orphaned  case	51	None	replace
28	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NOT  ||  leftVal!=  null)  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NOT  ||  leftVal!=  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NOT  ||  leftVal!=  null)  {	  if(leftVal!=    TernaryValue.NOT    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	57	None	replace
29	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NOT  &&  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NOT  &&  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NOT  &&  leftVal  ==  null)  {	  if(leftVal!=    TernaryValue.NOT    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	57	None	replace
30	[BUG]  [BUGGY]  if(leftVal  >=  TernaryValue.NOT  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  >=  TernaryValue.NOT  ||  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  >=  TernaryValue.NOT  ||  leftVal  ==  null)  {	  if(leftVal!=    TernaryValue.NOT    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	57	None	replace
31	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NOT  ||  leftVal!=  null)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NOT  ||  leftVal!=  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NOT  ||  leftVal!=  null)  {	  if(leftVal!=    TernaryValue.NOT    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	57	None	replace
32	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal  >=  TernaryValue.UNKNOWN)  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal  >=  TernaryValue.UNKNOWN)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal  >=  TernaryValue.UNKNOWN)  {	  if(leftVal    ==    null    ||    leftVal    >=    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	25	None	replace
33	[BUG]  [BUGGY]  n  =  leftVal.getParent();  [CE]  orphaned  case  [FE]                                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  n  =  leftVal.getParent();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	n  =  leftVal.getParent();	  n    =    leftVal.getNext();    	non-compiled	[CE]  orphaned  case	7	None	replace
34	[BUG]  [BUGGY]  n  =  leftVal.getLastChild();  [CE]  orphaned  case  [FE]                                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  n  =  leftVal.getLastChild();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	n  =  leftVal.getLastChild();	  n    =    leftVal.getNext();    	non-compiled	[CE]  orphaned  case	7	None	replace
35	[BUG]  [BUGGY]  n  =  leftVal.getFirstChild();  [CE]  orphaned  case  [FE]                                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  n  =  leftVal.getFirstChild();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	n  =  leftVal.getFirstChild();	  n    =    leftVal.getNext();    	non-compiled	[CE]  orphaned  case	7	None	replace
36	[BUG]  [BUGGY]  n  =  leftVal.getPrevious();  [CE]  orphaned  case  [FE]                                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  n  =  leftVal.getPrevious();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	n  =  leftVal.getPrevious();	  n    =    leftVal.getNext();    	non-compiled	[CE]  orphaned  case	7	None	replace
37	[BUG]  [BUGGY]  n  =  leftVal.getType();  [CE]  orphaned  case  [FE]                                          AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  n  =  leftVal.getType();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	n  =  leftVal.getType();	  n    =    leftVal.getNext();    	non-compiled	[CE]  orphaned  case	7	None	replace
38	[BUG]  [BUGGY]  n  =  leftVal.getNext()  +  1;  [CE]  orphaned  case  [FE]                                            AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  n  =  leftVal.getNext()  +  1;  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	n  =  leftVal.getNext()  +  1;	  n    =    leftVal.getNext();    	non-compiled	[CE]  orphaned  case	7	None	replace
39	[BUG]  [BUGGY]  Node  replacementNode  =  left.getReplacementNode();  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  replacementNode  =  left.getReplacementNode();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  left.getReplacementNode();	  Node    replacementNode    =    left.getNext();    	non-compiled	[CE]  orphaned  case	6	None	replace
40	[BUG]  [BUGGY]  Node  replacementNode  =  left.getParent();  [CE]  orphaned  case  [FE]                                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  replacementNode  =  left.getParent();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  left.getParent();	  Node    replacementNode    =    left.getNext();    	non-compiled	[CE]  orphaned  case	6	None	replace
41	[BUG]  [BUGGY]  Node  replacementNode  =  leftVal.getParent();  [CE]  orphaned  case  [FE]                                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  replacementNode  =  leftVal.getParent();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  leftVal.getParent();	  Node    replacementNode    =    left.getNext();    	non-compiled	[CE]  orphaned  case	6	None	replace
42	[BUG]  [BUGGY]  Node  replacementNode  =  left.getNext()  -  1;  [CE]  orphaned  case  [FE]                                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  replacementNode  =  left.getNext()  -  1;  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  left.getNext()  -  1;	  Node    replacementNode    =    left.getNext();    	non-compiled	[CE]  orphaned  case	6	None	replace
43	[BUG]  [BUGGY]  Node  replacementNode  =  parent.getNext();  [CE]  orphaned  case  [FE]                                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  replacementNode  =  parent.getNext();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  parent.getNext();	  Node    replacementNode    =    left.getNext();    	non-compiled	[CE]  orphaned  case	6	None	replace
44	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal!=  Node.newNumber(0))  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal!=  Node.newNumber(0))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  leftVal!=  Node.newNumber(0))  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    Node.newNumber(0))    {    	non-compiled	[CE]  orphaned  case	47	None	replace
45	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NULL  ||  leftVal  ==  Node.newNumber(0))  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NULL  ||  leftVal  ==  Node.newNumber(0))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NULL  ||  leftVal  ==  Node.newNumber(0))  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    Node.newNumber(0))    {    	non-compiled	[CE]  orphaned  case	47	None	replace
46	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  Node.newNumber(1))  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  Node.newNumber(1))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  Node.newNumber(1))  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    Node.newNumber(0))    {    	non-compiled	[CE]  orphaned  case	47	None	replace
47	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  Node.newNumber(2))  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  Node.newNumber(2))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  Node.newNumber(2))  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    Node.newNumber(0))    {    	non-compiled	[CE]  orphaned  case	47	None	replace
48	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  Node.newNumber(0))  {  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  Node.newNumber(0))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal  ==  Node.newNumber(0))  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    Node.newNumber(0))    {    	non-compiled	[CE]  orphaned  case	47	None	replace
49	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  >=  Node.newNumber(0))  {  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  >=  Node.newNumber(0))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  leftVal  >=  Node.newNumber(0))  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    Node.newNumber(0))    {    	non-compiled	[CE]  orphaned  case	47	None	replace
50	[BUG]  [BUGGY]  Node  replacementNode  =  leftVal.getReplacementNode();  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  replacementNode  =  leftVal.getReplacementNode();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  leftVal.getReplacementNode();	  Node    replacementNode    =    leftVal.getNext();    	non-compiled	[CE]  orphaned  case	1	None	replace
51	[BUG]  [BUGGY]  Node  replacementNode  =  leftVal.getLastChild();  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  replacementNode  =  leftVal.getLastChild();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  leftVal.getLastChild();	  Node    replacementNode    =    leftVal.getNext();    	non-compiled	[CE]  orphaned  case	1	None	replace
52	[BUG]  [BUGGY]  Node  replacementNode  =  leftVal.getReplacementOperator();  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  replacementNode  =  leftVal.getReplacementOperator();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  leftVal.getReplacementOperator();	  Node    replacementNode    =    leftVal.getNext();    	non-compiled	[CE]  orphaned  case	1	None	replace
53	[BUG]  [BUGGY]  if(leftVal!=  null  &&  leftVal!=  TernaryValue.UNKNOWN)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  &&  leftVal!=  TernaryValue.UNKNOWN)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  &&  leftVal!=  TernaryValue.UNKNOWN)  {	  if(leftVal!=    null    ||    leftVal!=    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	8	None	replace
54	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal!=  TernaryValue.NULL)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal!=  TernaryValue.NULL)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal!=  TernaryValue.NULL)  {	  if(leftVal!=    null    ||    leftVal!=    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	8	None	replace
55	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal!=  TernaryValue.NONE)  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal!=  TernaryValue.NONE)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal!=  TernaryValue.NONE)  {	  if(leftVal!=    null    ||    leftVal!=    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	8	None	replace
56	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NULL  ||  leftVal!=  null)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NULL  ||  leftVal!=  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NULL  ||  leftVal!=  null)  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    >=    null)    {    	non-compiled	[CE]  orphaned  case	17	None	replace
57	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal!=  null)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal!=  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal!=  null)  {	  if(leftVal    ==    null    ||    leftVal!=    null)    {    	non-compiled	[CE]  orphaned  case	42	None	replace
58	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal  ==  null)  {	  if(leftVal    ==    null    ||    leftVal!=    null)    {    	non-compiled	[CE]  orphaned  case	42	None	replace
59	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal  >=  null)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal  >=  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal  >=  null)  {	  if(leftVal    ==    null    ||    leftVal!=    null)    {    	non-compiled	[CE]  orphaned  case	42	None	replace
60	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NEGATING_A_NON_NUMBER  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NEGATING_A_NON_NUMBER  ||  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NEGATING_A_NON_NUMBER  ||  leftVal  ==  null)  {	  if(leftVal    ==    TernaryValue.NUMBER    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	18	None	replace
61	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NUMBER  &&  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NUMBER  &&  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NUMBER  &&  leftVal  ==  null)  {	  if(leftVal    ==    TernaryValue.NUMBER    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	18	None	replace
62	[BUG]  [BUGGY]  if(leftVal!=  null  &&  leftVal!=  null)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  &&  leftVal!=  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  &&  leftVal!=  null)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal!=    null)    {    	non-compiled	[CE]  orphaned  case	21	None	replace
63	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NULL  ||  leftVal  >=  null)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NULL  ||  leftVal  >=  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NULL  ||  leftVal  >=  null)  {	  if(leftVal!=    TernaryValue.NULL    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	14	None	replace
64	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.BLOCK)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.BLOCK)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal.getType()  ==  Token.BLOCK)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  orphaned  case	43	None	replace
65	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()!=  Token.BLOCK)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()!=  Token.BLOCK)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()!=  Token.BLOCK)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  orphaned  case	43	None	replace
66	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.CALL)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.CALL)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.CALL)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  orphaned  case	43	None	replace
67	[BUG]  [BUGGY]  if(rightVal  ==  TernaryValue.NULL  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(rightVal  ==  TernaryValue.NULL  ||  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(rightVal  ==  TernaryValue.NULL  ||  leftVal  ==  null)  {	  if(leftVal    ==    TernaryValue.NULL    ||    rightVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	56	None	replace
68	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  rightVal!=  null)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  rightVal!=  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  rightVal!=  null)  {	  if(leftVal    ==    TernaryValue.NULL    ||    rightVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	56	None	replace
69	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal!=    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	35	None	replace
70	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal!=    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	35	None	replace
71	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal!=    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	35	None	replace
72	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NULL  ||  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NULL  ||  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NULL  ||  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal!=    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	35	None	replace
73	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal  >=  NodeUtil.getPureBooleanValue(leftVal))  {  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal  >=  NodeUtil.getPureBooleanValue(leftVal))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal  >=  NodeUtil.getPureBooleanValue(leftVal))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal!=    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	35	None	replace
74	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal!=  TernaryValue.NONE)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal!=  TernaryValue.NONE)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal!=  TernaryValue.NONE)  {	  if(leftVal!=    null    ||    leftVal    ==    TernaryValue.NONE)    {    	non-compiled	[CE]  orphaned  case	33	None	replace
75	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal  >=  TernaryValue.NONE)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal  >=  TernaryValue.NONE)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal  >=  TernaryValue.NONE)  {	  if(leftVal!=    null    ||    leftVal    ==    TernaryValue.NONE)    {    	non-compiled	[CE]  orphaned  case	33	None	replace
76	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal  >=  TernaryValue.NONE)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal  >=  TernaryValue.NONE)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal  >=  TernaryValue.NONE)  {	  if(leftVal!=    null    ||    leftVal    ==    TernaryValue.NONE)    {    	non-compiled	[CE]  orphaned  case	33	None	replace
77	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	34	None	replace
78	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	34	None	replace
79	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	34	None	replace
80	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	34	None	replace
81	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal,  false))  {  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal,  false))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal,  false))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	34	None	replace
82	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal  ==  TernaryValue.EMPTY)  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal  ==  TernaryValue.EMPTY)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal  ==  TernaryValue.EMPTY)  {	  if(leftVal    ==    null    ||    leftVal    ==    TernaryValue.EMPTY)    {    	non-compiled	[CE]  orphaned  case	54	None	replace
83	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal!=  TernaryValue.EMPTY)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal!=  TernaryValue.EMPTY)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal!=  TernaryValue.EMPTY)  {	  if(leftVal    ==    null    ||    leftVal    ==    TernaryValue.EMPTY)    {    	non-compiled	[CE]  orphaned  case	54	None	replace
84	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal  >=  TernaryValue.EMPTY)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal  >=  TernaryValue.EMPTY)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal  >=  TernaryValue.EMPTY)  {	  if(leftVal    ==    null    ||    leftVal    ==    TernaryValue.EMPTY)    {    	non-compiled	[CE]  orphaned  case	54	None	replace
85	[BUG]  [BUGGY]  if(leftVal  ==  null  &&  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  &&  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  &&  leftVal  ==  null)  {	  if(leftVal    ==    TernaryValue.UNKNOWN    &&    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	11	None	replace
86	[BUG]  [BUGGY]  if(leftVal!=  null  &&  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  &&  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  &&  leftVal  ==  null)  {	  if(leftVal    ==    TernaryValue.UNKNOWN    &&    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	11	None	replace
87	[BUG]  [BUGGY]  if(leftVal  ==  null  &&  leftVal!=  null)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  &&  leftVal!=  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  &&  leftVal!=  null)  {	  if(leftVal    ==    TernaryValue.UNKNOWN    &&    leftVal!=    null)    {    	non-compiled	[CE]  orphaned  case	20	None	replace
88	[BUG]  [BUGGY]  if(leftVal  >=  TernaryValue.NULL  ||  leftVal!=  null)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  >=  TernaryValue.NULL  ||  leftVal!=  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  >=  TernaryValue.NULL  ||  leftVal!=  null)  {	  if(leftVal    >=    TernaryValue.NULL    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	19	None	replace
89	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.BLOCK)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.BLOCK)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.BLOCK)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  orphaned  case	50	None	replace
90	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.BLOCK)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.BLOCK)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.BLOCK)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  orphaned  case	50	None	replace
91	[BUG]  [BUGGY]  if(leftVal!=  null  &&  leftVal.getType()  ==  Token.BLOCK)  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  &&  leftVal.getType()  ==  Token.BLOCK)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  &&  leftVal.getType()  ==  Token.BLOCK)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  orphaned  case	50	None	replace
92	[BUG]  [BUGGY]  if(leftVal!=  null  &&  leftVal.getType()  ==  Token.UNKNOWN)  {  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  &&  leftVal.getType()  ==  Token.UNKNOWN)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  &&  leftVal.getType()  ==  Token.UNKNOWN)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  orphaned  case	50	None	replace
93	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()!=  Token.NAME)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()!=  Token.NAME)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()!=  Token.NAME)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  orphaned  case	28	None	replace
94	[BUG]  [BUGGY]  if(leftVal  >=  null  ||  leftVal.getType()  ==  Token.NAME)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  >=  null  ||  leftVal.getType()  ==  Token.NAME)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  >=  null  ||  leftVal.getType()  ==  Token.NAME)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  orphaned  case	28	None	replace
95	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  rightVal.getType()  ==  Token.NAME)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  rightVal.getType()  ==  Token.NAME)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  rightVal.getType()  ==  Token.NAME)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  orphaned  case	28	None	replace
96	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  >=  Token.NAME)  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  >=  Token.NAME)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()  >=  Token.NAME)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  orphaned  case	28	None	replace
97	[BUG]  [BUGGY]  if(rightVal  ==  null  ||  leftVal.getType()  ==  Token.NAME)  {  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(rightVal  ==  null  ||  leftVal.getType()  ==  Token.NAME)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(rightVal  ==  null  ||  leftVal.getType()  ==  Token.NAME)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  orphaned  case	28	None	replace
98	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	46	None	replace
99	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal,  false))  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal,  false))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal,  false))  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	46	None	replace
100	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getNumberValue(leftVal))  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getNumberValue(leftVal))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getNumberValue(leftVal))  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	46	None	replace
101	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  >=  NodeUtil.getPureBooleanValue(leftVal))  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  >=  NodeUtil.getPureBooleanValue(leftVal))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  leftVal  >=  NodeUtil.getPureBooleanValue(leftVal))  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	46	None	replace
102	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getBooleanValue(leftVal))  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getBooleanValue(leftVal))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getBooleanValue(leftVal))  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	46	None	replace
103	[BUG]  [BUGGY]  if(leftVal  ==  null  &&  leftVal.getType()  ==  Token.NAME)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  &&  leftVal.getType()  ==  Token.NAME)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  &&  leftVal.getType()  ==  Token.NAME)  {	  if(leftVal!=    null    ||    leftVal.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
104	[BUG]  [BUGGY]  if(leftVal!=  null  ||  rightVal.getType()  ==  Token.NAME)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  rightVal.getType()  ==  Token.NAME)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  rightVal.getType()  ==  Token.NAME)  {	  if(leftVal!=    null    ||    leftVal.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
105	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal!=  TernaryValue.NOT)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal!=  TernaryValue.NOT)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal!=  TernaryValue.NOT)  {	  if(leftVal    ==    null    ||    leftVal!=    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	9	None	replace
106	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()!=  Token.VAR)  {  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()!=  Token.VAR)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()!=  Token.VAR)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  orphaned  case	32	None	replace
107	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.CATCH)  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.CATCH)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.CATCH)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  orphaned  case	52	None	replace
108	[BUG]  [BUGGY]  if(leftVal!=  null  &&  leftVal.getType()  ==  Token.CATCH)  {  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  &&  leftVal.getType()  ==  Token.CATCH)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  &&  leftVal.getType()  ==  Token.CATCH)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  orphaned  case	52	None	replace
109	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.CATCH)  {  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.CATCH)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.CATCH)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  orphaned  case	52	None	replace
110	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.CATCH)  {  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.CATCH)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal.getType()  ==  Token.CATCH)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  orphaned  case	52	None	replace
111	[BUG]  [BUGGY]  if(leftVal  ==  null  &&  leftVal.getType()  ==  Token.CATCH)  {  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  &&  leftVal.getType()  ==  Token.CATCH)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  &&  leftVal.getType()  ==  Token.CATCH)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  orphaned  case	52	None	replace
112	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.CATCH)  {  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.CATCH)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.CATCH)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  orphaned  case	52	None	replace
113	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.FUNCTION)  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.FUNCTION)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.FUNCTION)  {	  if(leftVal    ==    null    ||    leftVal    ==    TernaryValue.NULL)    {    	non-compiled	[CE]  orphaned  case	23	None	replace
114	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal  >=  TernaryValue.NULL)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal  >=  TernaryValue.NULL)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal  >=  TernaryValue.NULL)  {	  if(leftVal    ==    null    ||    leftVal    ==    TernaryValue.NULL)    {    	non-compiled	[CE]  orphaned  case	23	None	replace
115	[BUG]  [BUGGY]  Node  replacementNode  =  left.getFirstChild();  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  replacementNode  =  left.getFirstChild();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  left.getFirstChild();	  Node    replacementNode    =    leftVal.getFirstChild();    	non-compiled	[CE]  orphaned  case	5	None	replace
116	[BUG]  [BUGGY]  Node  replacementNode  =  leftVal.getReplacementChild();  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  replacementNode  =  leftVal.getReplacementChild();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  leftVal.getReplacementChild();	  Node    replacementNode    =    leftVal.getFirstChild();    	non-compiled	[CE]  orphaned  case	5	None	replace
117	[BUG]  [BUGGY]  Node  replacementNode  =  leftVal.getOwner();  [CE]  orphaned  case  [FE]                                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  replacementNode  =  leftVal.getOwner();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  leftVal.getOwner();	  Node    replacementNode    =    leftVal.getFirstChild();    	non-compiled	[CE]  orphaned  case	5	None	replace
118	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()!=  Token.FUNCTION)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()!=  Token.FUNCTION)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()!=  Token.FUNCTION)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  orphaned  case	30	None	replace
119	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  rightVal.getType()  ==  Token.FUNCTION)  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  rightVal.getType()  ==  Token.FUNCTION)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  rightVal.getType()  ==  Token.FUNCTION)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  orphaned  case	30	None	replace
120	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.CALL)  {  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.CALL)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.CALL)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  orphaned  case	53	None	replace
121	[BUG]  [BUGGY]  if(leftVal!=  null  &&  leftVal.getType()  ==  Token.CALL)  {  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  &&  leftVal.getType()  ==  Token.CALL)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  &&  leftVal.getType()  ==  Token.CALL)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  orphaned  case	53	None	replace
122	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.CALL)  {  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.CALL)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal.getType()  ==  Token.CALL)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  orphaned  case	53	None	replace
123	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.CALL)  {  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.CALL)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal.getType()  ==  Token.CALL)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  orphaned  case	53	None	replace
124	[BUG]  [BUGGY]  if(leftVal  ==  null  &&  leftVal.getType()  ==  Token.CALL)  {  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  &&  leftVal.getType()  ==  Token.CALL)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  &&  leftVal.getType()  ==  Token.CALL)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  orphaned  case	53	None	replace
125	[BUG]  [BUGGY]  if(leftVal  ==  null  &&  leftVal.getType()  ==  Token.FUNCTION)  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  &&  leftVal.getType()  ==  Token.FUNCTION)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  &&  leftVal.getType()  ==  Token.FUNCTION)  {	  if(leftVal!=    null    ||    leftVal.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  orphaned  case	31	None	replace
126	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.STRING)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.STRING)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal.getType()  ==  Token.STRING)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  orphaned  case	44	None	replace
127	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()!=  Token.STRING)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()!=  Token.STRING)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()!=  Token.STRING)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  orphaned  case	44	None	replace
128	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  rightVal.getType()  ==  Token.STRING)  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  rightVal.getType()  ==  Token.STRING)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  rightVal.getType()  ==  Token.STRING)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  orphaned  case	44	None	replace
129	[BUG]  [BUGGY]  if(leftVal  >=  null  ||  leftVal.getType()  ==  Token.STRING)  {  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  >=  null  ||  leftVal.getType()  ==  Token.STRING)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  >=  null  ||  leftVal.getType()  ==  Token.STRING)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  orphaned  case	44	None	replace
130	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  >=  Token.STRING)  {  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  >=  Token.STRING)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()  >=  Token.STRING)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  orphaned  case	44	None	replace
131	[BUG]  [BUGGY]  if(rightVal  ==  null  ||  leftVal.getType()  ==  Token.STRING)  {  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(rightVal  ==  null  ||  leftVal.getType()  ==  Token.STRING)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(rightVal  ==  null  ||  leftVal.getType()  ==  Token.STRING)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  orphaned  case	44	None	replace
132	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NUMBER  &&  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NUMBER  &&  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NUMBER  &&  leftVal  ==  null)  {	  if(leftVal!=    TernaryValue.NUMBER    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	37	None	replace
133	[BUG]  [BUGGY]  if(leftVal  >=  TernaryValue.NUMBER  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  >=  TernaryValue.NUMBER  ||  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  >=  TernaryValue.NUMBER  ||  leftVal  ==  null)  {	  if(leftVal!=    TernaryValue.NUMBER    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	37	None	replace
134	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NOT  ||  leftVal  >=  null)  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NOT  ||  leftVal  >=  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NOT  ||  leftVal  >=  null)  {	  if(leftVal    ==    TernaryValue.NOT    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	12	None	replace
135	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  rightVal  ==  null)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  rightVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  rightVal  ==  null)  {	  if(leftVal    ==    null    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	38	None	replace
136	[BUG]  [BUGGY]  if(leftVal  ==  null  &&  leftVal!=  TernaryValue.UNKNOWN)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  &&  leftVal!=  TernaryValue.UNKNOWN)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  &&  leftVal!=  TernaryValue.UNKNOWN)  {	  if(leftVal!=    null    &&    leftVal    ==    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	48	None	replace
137	[BUG]  [BUGGY]  if(leftVal  ==  null  &&  leftVal  ==  TernaryValue.UNKNOWN)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  &&  leftVal  ==  TernaryValue.UNKNOWN)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  &&  leftVal  ==  TernaryValue.UNKNOWN)  {	  if(leftVal!=    null    &&    leftVal    ==    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	48	None	replace
138	[BUG]  [BUGGY]  if(leftVal!=  null  &&  leftVal  >=  TernaryValue.UNKNOWN)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  &&  leftVal  >=  TernaryValue.UNKNOWN)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  &&  leftVal  >=  TernaryValue.UNKNOWN)  {	  if(leftVal!=    null    &&    leftVal    ==    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	48	None	replace
139	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NUMBER  &&  leftVal!=  null)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NUMBER  &&  leftVal!=  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NUMBER  &&  leftVal!=  null)  {	  if(leftVal    ==    TernaryValue.NUMBER    ||    leftVal!=    null)    {    	non-compiled	[CE]  orphaned  case	55	None	replace
140	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NUMBER  ||  leftVal!=  null)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NUMBER  ||  leftVal!=  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NUMBER  ||  leftVal!=  null)  {	  if(leftVal    ==    TernaryValue.NUMBER    ||    leftVal!=    null)    {    	non-compiled	[CE]  orphaned  case	55	None	replace
141	[BUG]  [BUGGY]  Node  replacementNode  =  leftVal.removeLastChild();  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  replacementNode  =  leftVal.removeLastChild();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  leftVal.removeLastChild();	  Node    replacementNode    =    leftVal.removeFirstChild();    	non-compiled	[CE]  orphaned  case	40	None	replace
142	[BUG]  [BUGGY]  Node  replacementNode  =  leftVal.replaceChild(n,  parent);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  replacementNode  =  leftVal.replaceChild(n,  parent);  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  leftVal.replaceChild(n,  parent);	  Node    replacementNode    =    leftVal.removeFirstChild();    	non-compiled	[CE]  orphaned  case	40	None	replace
143	[BUG]  [BUGGY]  Node  replacementNode  =  leftVal.cloneTree();  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  replacementNode  =  leftVal.cloneTree();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  leftVal.cloneTree();	  Node    replacementNode    =    leftVal.removeFirstChild();    	non-compiled	[CE]  orphaned  case	40	None	replace
144	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.NUMBER)  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.NUMBER)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.NUMBER)  {	  if(leftVal    ==    null    ||    leftVal    ==    TernaryValue.NULL)    {    	non-compiled	[CE]  orphaned  case	23	None	replace
145	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NUMBER  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NUMBER  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NUMBER  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	34	None	replace
146	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NOT)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NOT)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NOT)  {	  if(leftVal!=    null    ||    leftVal    ==    TernaryValue.NOT)    {    	non-compiled	[CE]  orphaned  case	49	None	replace
147	[BUG]  [BUGGY]  if(leftVal  >=  TernaryValue.UNKNOWN  ||  leftVal!=  null)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  >=  TernaryValue.UNKNOWN  ||  leftVal!=  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  >=  TernaryValue.UNKNOWN  ||  leftVal!=  null)  {	  if(leftVal    ==    TernaryValue.UNKNOWN    &&    leftVal!=    null)    {    	non-compiled	[CE]  orphaned  case	20	None	replace
148	[BUG]  [BUGGY]  Node  n  =  leftVal.removeFirstChild();  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  n  =  leftVal.removeFirstChild();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  n  =  leftVal.removeFirstChild();	  Node    n    =    leftVal.getNext();    	non-compiled	[CE]  orphaned  case	2	None	replace
149	[BUG]  [BUGGY]  Node  replacementNode  =  leftVal.replaceChild(left,  n);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  replacementNode  =  leftVal.replaceChild(left,  n);  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  leftVal.replaceChild(left,  n);	  Node    replacementNode    =    leftVal.removeFirstChild();    	non-compiled	[CE]  orphaned  case	40	None	replace
150	[BUG]  [BUGGY]  Node  replacementNode  =  leftVal.replaceChild(n,  n);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  replacementNode  =  leftVal.replaceChild(n,  n);  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  leftVal.replaceChild(n,  n);	  Node    replacementNode    =    leftVal.removeFirstChild();    	non-compiled	[CE]  orphaned  case	40	None	replace
151	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.EMPTY)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.EMPTY)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.EMPTY)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  orphaned  case	30	None	replace
152	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.equals(leftVal))  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal.equals(leftVal))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.equals(leftVal))  {	  if(leftVal    ==    null    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	38	None	replace
153	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.BLOCK)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.BLOCK)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.BLOCK)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  orphaned  case	50	None	replace
154	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal.equals(TernaryValue.NONE))  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal.equals(TernaryValue.NONE))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal.equals(TernaryValue.NONE))  {	  if(leftVal!=    null    ||    leftVal    ==    TernaryValue.NONE)    {    	non-compiled	[CE]  orphaned  case	33	None	replace
155	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NONE)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NONE)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NONE)  {	  if(leftVal!=    null    ||    leftVal    ==    TernaryValue.NONE)    {    	non-compiled	[CE]  orphaned  case	33	None	replace
156	[BUG]  [BUGGY]  if(leftVal!=  null  &&  leftVal  ==  TernaryValue.NULL)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  &&  leftVal  ==  TernaryValue.NULL)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  &&  leftVal  ==  TernaryValue.NULL)  {	  if(leftVal!=    null    &&    leftVal    ==    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	48	None	replace
157	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NEGATING_A_NUMBER  ||  leftVal!=  null)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NEGATING_A_NUMBER  ||  leftVal!=  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NEGATING_A_NUMBER  ||  leftVal!=  null)  {	  if(leftVal    ==    TernaryValue.NUMBER    ||    leftVal!=    null)    {    	non-compiled	[CE]  orphaned  case	55	None	replace
158	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NEGATING_A_NUMBER  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NEGATING_A_NUMBER  ||  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NEGATING_A_NUMBER  ||  leftVal  ==  null)  {	  if(leftVal    ==    TernaryValue.NUMBER    ||    leftVal!=    null)    {    	non-compiled	[CE]  orphaned  case	55	None	replace
159	[BUG]  [BUGGY]  Node  replacementNode  =  leftval.getNext();  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  replacementNode  =  leftval.getNext();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  leftval.getNext();	  Node    replacementNode    =    left.getNext();    	non-compiled	[CE]  orphaned  case	6	None	replace
160	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NONE  ||  rightVal  ==  null)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NONE  ||  rightVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NONE  ||  rightVal  ==  null)  {	  if(leftVal    ==    TernaryValue.NONE    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	39	None	replace
161	[BUG]  [BUGGY]  Node  n  =  leftVal.getOwnerChild();  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  n  =  leftVal.getOwnerChild();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  n  =  leftVal.getOwnerChild();	  Node    n    =    leftVal.getFirstChild();    	non-compiled	[CE]  orphaned  case	3	None	replace
162	[BUG]  [BUGGY]  Node  replacementNode  =  leftVal.getPrevious();  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  replacementNode  =  leftVal.getPrevious();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  leftVal.getPrevious();	  Node    replacementNode    =    leftVal.getNext();    	non-compiled	[CE]  orphaned  case	1	None	replace
163	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NONE)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NONE)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NONE)  {	  if(leftVal    ==    null    ||    leftVal    ==    TernaryValue.NONE)    {    	non-compiled	[CE]  orphaned  case	26	None	replace
164	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.CALL)  {  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.CALL)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.CALL)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  orphaned  case	53	None	replace
165	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.CALL)  {  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.CALL)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.CALL)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  orphaned  case	53	None	replace
166	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NOT)  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NOT)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NOT)  {	  if(leftVal!=    TernaryValue.NOT    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	57	None	replace
167	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.CATCH)  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.CATCH)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.CATCH)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  orphaned  case	52	None	replace
168	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.CATCH)  {  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.CATCH)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.CATCH)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  orphaned  case	52	None	replace
169	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NEGATING_A_NUMBER  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NEGATING_A_NUMBER  ||  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NEGATING_A_NUMBER  ||  leftVal  ==  null)  {	  if(leftVal!=    TernaryValue.NUMBER    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	37	None	replace
170	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getNodeValue(leftVal))  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getNodeValue(leftVal))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getNodeValue(leftVal))  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	46	None	replace
171	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.EMPTY)  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.EMPTY)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal.getType()  ==  Token.EMPTY)  {	  if(leftVal!=    null    ||    leftVal.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  orphaned  case	31	None	replace
172	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.VAR)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.VAR)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.VAR)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  orphaned  case	51	None	replace
173	[BUG]  [BUGGY]  if(leftVal  >>  TernaryValue.NULL  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  >>  TernaryValue.NULL  ||  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  >>  TernaryValue.NULL  ||  leftVal  ==  null)  {	  if(leftVal    >=    TernaryValue.NULL    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	19	None	replace
174	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  >=  Token.NAME)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  >=  Token.NAME)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal.getType()  >=  Token.NAME)  {	  if(leftVal!=    null    ||    leftVal.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
175	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal  ==  null)  {	  if(leftVal    ==    TernaryValue.UNKNOWN    &&    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	11	None	replace
176	[BUG]  [BUGGY]  n  =  leftVal.getNumber();  [CE]  orphaned  case  [FE]                                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  n  =  leftVal.getNumber();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	n  =  leftVal.getNumber();	  n    =    leftVal.getNext();    	non-compiled	[CE]  orphaned  case	7	None	replace
177	[BUG]  [BUGGY]  Node  replacementNode  =  leftVal.getPreviousChild();  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  replacementNode  =  leftVal.getPreviousChild();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  leftVal.getPreviousChild();	  Node    replacementNode    =    leftVal.getFirstChild();    	non-compiled	[CE]  orphaned  case	5	None	replace
178	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NUMBER  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NUMBER  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NUMBER  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    NodeUtil.getPureBooleanValue(left))    {    	non-compiled	[CE]  orphaned  case	36	None	replace
179	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NUMBER  ||  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NUMBER  ||  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NUMBER  ||  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal!=    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	35	None	replace
180	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.equals(TernaryValue.EMPTY))  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal.equals(TernaryValue.EMPTY))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.equals(TernaryValue.EMPTY))  {	  if(leftVal    ==    null    ||    leftVal    ==    TernaryValue.EMPTY)    {    	non-compiled	[CE]  orphaned  case	54	None	replace
181	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NOT  ||  rightVal  ==  null)  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NOT  ||  rightVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NOT  ||  rightVal  ==  null)  {	  if(leftVal    ==    TernaryValue.NOT    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	12	None	replace
182	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.newNumber(1))  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.newNumber(1))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.newNumber(1))  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    Node.newNumber(0))    {    	non-compiled	[CE]  orphaned  case	47	None	replace
183	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  node.newNumber(1))  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  node.newNumber(1))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  node.newNumber(1))  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    Node.newNumber(0))    {    	non-compiled	[CE]  orphaned  case	47	None	replace
184	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NULL  &&  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NULL  &&  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NULL  &&  leftVal  ==  null)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	13	None	replace
185	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NOT  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NOT  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NOT  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    NodeUtil.getPureBooleanValue(left))    {    	non-compiled	[CE]  orphaned  case	36	None	replace
186	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    NodeUtil.getPureBooleanValue(left))    {    	non-compiled	[CE]  orphaned  case	36	None	replace
187	[BUG]  [BUGGY]  if(leftVal  <  TernaryValue.NULL  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  <  TernaryValue.NULL  ||  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  <  TernaryValue.NULL  ||  leftVal  ==  null)  {	  if(leftVal    >=    TernaryValue.NULL    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	19	None	replace
188	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.BLOCK)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.BLOCK)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.BLOCK)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  orphaned  case	50	None	replace
189	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NULL  &&  leftVal.getType()  ==  Token.BLOCK)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NULL  &&  leftVal.getType()  ==  Token.BLOCK)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NULL  &&  leftVal.getType()  ==  Token.BLOCK)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  orphaned  case	50	None	replace
190	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NEGATING_A_NON_NUMBER_ERROR  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NEGATING_A_NON_NUMBER_ERROR  ||  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NEGATING_A_NON_NUMBER_ERROR  ||  leftVal  ==  null)  {	  if(leftVal    ==    TernaryValue.NUMBER    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	18	None	replace
191	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.VAR)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.VAR)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.VAR)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  orphaned  case	28	None	replace
192	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.GETELEM)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.GETELEM)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.GETELEM)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  orphaned  case	28	None	replace
193	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.CALL)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.CALL)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.CALL)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  orphaned  case	28	None	replace
194	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.FUNCTION)  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.FUNCTION)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.FUNCTION)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  orphaned  case	28	None	replace
195	[BUG]  [BUGGY]  if(leftVal!=  null  &&  leftVal  ==  TernaryValue.NONE)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  &&  leftVal  ==  TernaryValue.NONE)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  &&  leftVal  ==  TernaryValue.NONE)  {	  if(leftVal!=    null    ||    leftVal    ==    TernaryValue.NONE)    {    	non-compiled	[CE]  orphaned  case	33	None	replace
196	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.VAR)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.VAR)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.VAR)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  orphaned  case	51	None	replace
197	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NULL  &&  leftVal.getType()  ==  Token.VAR)  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NULL  &&  leftVal.getType()  ==  Token.VAR)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NULL  &&  leftVal.getType()  ==  Token.VAR)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  orphaned  case	51	None	replace
198	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NOT  ||  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NOT  ||  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NOT  ||  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal!=    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	35	None	replace
199	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NEGATING_A_NON_NUMBER_ERROR  ||  leftVal!=  null)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NEGATING_A_NON_NUMBER_ERROR  ||  leftVal!=  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NEGATING_A_NON_NUMBER_ERROR  ||  leftVal!=  null)  {	  if(leftVal    ==    TernaryValue.NUMBER    ||    leftVal!=    null)    {    	non-compiled	[CE]  orphaned  case	55	None	replace
200	[BUG]  [BUGGY]  if(leftVal!=  null  &&  leftVal  <=  TernaryValue.UNKNOWN)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  &&  leftVal  <=  TernaryValue.UNKNOWN)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  &&  leftVal  <=  TernaryValue.UNKNOWN)  {	  if(leftVal!=    null    &&    leftVal    ==    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	48	None	replace
201	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NOT  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NOT  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NOT  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	34	None	replace
202	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  left.getType()  ==  Token.STRING)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  left.getType()  ==  Token.STRING)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  orphaned  case	44	None	replace
203	[BUG]  [BUGGY]  Node  n  =  leftVal.cloneTree();  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  n  =  leftVal.cloneTree();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  n  =  leftVal.cloneTree();	  Node    n    =    leftVal.getFirstChild();    	non-compiled	[CE]  orphaned  case	3	None	replace
204	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NULL  ||  rightVal  ==  null)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NULL  ||  rightVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NULL  ||  rightVal  ==  null)  {	  if(leftVal    ==    TernaryValue.NULL    ||    rightVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	56	None	replace
205	[BUG]  [BUGGY]  n  =  leftVal.removeFirstChild();  [CE]  orphaned  case  [FE]                                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  n  =  leftVal.removeFirstChild();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	n  =  leftVal.removeFirstChild();	  n    =    leftVal.getNext();    	non-compiled	[CE]  orphaned  case	7	None	replace
206	[BUG]  [BUGGY]  n  =  parent.getNext();  [CE]  orphaned  case  [FE]                                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  n  =  parent.getNext();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	n  =  parent.getNext();	  n    =    leftVal.getNext();    	non-compiled	[CE]  orphaned  case	7	None	replace
207	[BUG]  [BUGGY]  n  =  left.getNext();  [CE]  orphaned  case  [FE]                                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  n  =  left.getNext();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	n  =  left.getNext();	  n    =    leftVal.getNext();    	non-compiled	[CE]  orphaned  case	7	None	replace
208	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NULL  &&  leftVal.getType()  ==  Token.CATCH)  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NULL  &&  leftVal.getType()  ==  Token.CATCH)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NULL  &&  leftVal.getType()  ==  Token.CATCH)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.CATCH)    {    	non-compiled	[CE]  orphaned  case	52	None	replace
209	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NONE  ||  leftVal  ==  null  ||  leftVal.getType()  ==  Token.FUNCTION)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NONE  ||  leftVal  ==  null  ||  leftVal.getType()  ==  Token.FUNCTION)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NONE  ||  leftVal  ==  null  ||  leftVal.getType()  ==  Token.FUNCTION)  {	  if(leftVal    ==    TernaryValue.NONE    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	39	None	replace
210	[BUG]  [BUGGY]  Node  replacementNode  =  leftVal.replaceChild(parent,  n);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  replacementNode  =  leftVal.replaceChild(parent,  n);  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  leftVal.replaceChild(parent,  n);	  Node    replacementNode    =    leftVal.getFirstChild();    	non-compiled	[CE]  orphaned  case	5	None	replace
211	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.VOID)  {  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.VOID)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.VOID)  {	  if(leftVal    ==    null    ||    leftVal.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  orphaned  case	32	None	replace
212	[BUG]  [BUGGY]  Node  n  =  parent.getNext();  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  n  =  parent.getNext();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  n  =  parent.getNext();	  Node    n    =    leftVal.getNext();    	non-compiled	[CE]  orphaned  case	2	None	replace
213	[BUG]  [BUGGY]  Node  n  =  parent.getParent();  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  Node  n  =  parent.getParent();  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  n  =  parent.getParent();	  Node    n    =    leftVal.getNext();    	non-compiled	[CE]  orphaned  case	2	None	replace
214	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal.length  ==  TernaryValue.NULL)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal.length  ==  TernaryValue.NULL)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal.length  ==  TernaryValue.NULL)  {	  if(leftVal!=    null    ||    leftVal    ==    TernaryValue.NULL)    {    	non-compiled	[CE]  orphaned  case	24	None	replace
215	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.VAR)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.VAR)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.VAR)  {	  if(leftVal!=    null    ||    leftVal.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
216	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.GETELEM)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.GETELEM)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.GETELEM)  {	  if(leftVal!=    null    ||    leftVal.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
217	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.CALL)  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.CALL)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.CALL)  {	  if(leftVal!=    null    ||    leftVal.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
218	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.BLOCK)  {  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.BLOCK)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NAME  ||  leftVal.getType()  ==  Token.BLOCK)  {	  if(leftVal!=    null    ||    leftVal.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
219	[BUG]  [BUGGY]  if(leftVal!=  null  &&  leftVal  ==  TernaryValue.NOT)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  null  &&  leftVal  ==  TernaryValue.NOT)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  &&  leftVal  ==  TernaryValue.NOT)  {	  if(leftVal!=    null    ||    leftVal    ==    TernaryValue.NOT)    {    	non-compiled	[CE]  orphaned  case	49	None	replace
220	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  null)  {	  if(leftVal    ==    null    ||    leftVal    ==    TernaryValue.NULL)    {    	non-compiled	[CE]  orphaned  case	23	None	replace
221	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getPureOperandValue(leftVal))  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getPureOperandValue(leftVal))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getPureOperandValue(leftVal))  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	46	None	replace
222	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getLastChild())  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getLastChild())  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getLastChild())  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    NodeUtil.getPureBooleanValue(leftVal))    {    	non-compiled	[CE]  orphaned  case	46	None	replace
223	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NULL  &&  leftVal!=  null)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NULL  &&  leftVal!=  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NULL  &&  leftVal!=  null)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal!=    null)    {    	non-compiled	[CE]  orphaned  case	21	None	replace
224	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NULL  ||  leftVal  ==  Node.newNumber(1))  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NULL  ||  leftVal  ==  Node.newNumber(1))  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NULL  ||  leftVal  ==  Node.newNumber(1))  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    Node.newNumber(0))    {    	non-compiled	[CE]  orphaned  case	47	None	replace
225	[BUG]  [BUGGY]  if(leftVal  <  TernaryValue.UNKNOWN  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal  <  TernaryValue.UNKNOWN  ||  leftVal  ==  null)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  <  TernaryValue.UNKNOWN  ||  leftVal  ==  null)  {	  if(leftVal    >=    TernaryValue.UNKNOWN    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	15	None	replace
226	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NULL  &&  leftVal.getType()  ==  Token.CALL)  {  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);      [BUGGY]  if(leftVal!=  TernaryValue.NULL  &&  leftVal.getType()  ==  Token.CALL)  {  [BUGGY]      return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NULL  &&  leftVal.getType()  ==  Token.CALL)  {	  if(leftVal!=    TernaryValue.UNKNOWN    &&    leftVal.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  orphaned  case	53	None	replace
