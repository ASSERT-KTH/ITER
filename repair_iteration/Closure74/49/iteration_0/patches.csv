bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.UNKNOWN)  {  [CE]  orphaned  case  [FE]    AssertionFailedError  [CONTEXT]  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);  [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.UNKNOWN)  {  [BUGGY]  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.UNKNOWN)  {	if  (leftVal  ==  TernaryValue.UNKNOWN)  {  	non-compiled	[CE]  orphaned  case	97	None	replace
2	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal  ==  TernaryValue.UNKNOWN)  {  [CE]  orphaned  case  [FE]      AssertionFailedError  [CONTEXT]  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);  [BUGGY]  if(leftVal!=  null  ||  leftVal  ==  TernaryValue.UNKNOWN)  {  [BUGGY]  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal  ==  TernaryValue.UNKNOWN)  {	if  (leftVal  ==  TernaryValue.UNKNOWN)  {  	non-compiled	[CE]  orphaned  case	97	None	replace
3	[BUG]  [BUGGY]  if(leftVal  ==  null)  {  [CE]  orphaned  case  [FE]        AssertionFailedError  [CONTEXT]  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);  [BUGGY]  if(leftVal  ==  null)  {  [BUGGY]  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null)  {	if  (leftVal  ==  TernaryValue.UNKNOWN)  {  	non-compiled	[CE]  orphaned  case	97	None	replace
4	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN)  {  [CE]  orphaned  case  [FE]          AssertionFailedError  [CONTEXT]  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN)  {  [BUGGY]  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN)  {	if  (leftVal  ==  TernaryValue.UNKNOWN)  {  	non-compiled	[CE]  orphaned  case	97	None	replace
5	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]            AssertionFailedError  [CONTEXT]  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal  ==  null)  {  [BUGGY]  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal  ==  null)  {	if  (leftVal  ==  TernaryValue.UNKNOWN)  {  	non-compiled	[CE]  orphaned  case	97	None	replace
6	[BUG]  [BUGGY]    [CE]  orphaned  case  [FE]              AssertionFailedError  [CONTEXT]  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);  [BUGGY]    [BUGGY]  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	  	if  (leftVal  ==  TernaryValue.UNKNOWN)  {  	non-compiled	[CE]  orphaned  case	97	None	replace
7	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]    AssertionFailedError  [CONTEXT]  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal  ==  null)  {  [BUGGY]  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal  ==  null)  {	if  (leftVal  ==  TernaryValue.UNKNOWN)  {  	non-compiled	[CE]  orphaned  case	97	None	replace
8	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL)  {  [CE]  orphaned  case  [FE]    AssertionFailedError  [CONTEXT]  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);  [BUGGY]  if(leftVal  ==  TernaryValue.NULL)  {  [BUGGY]  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL)  {	if  (leftVal  ==  TernaryValue.UNKNOWN)  {  	non-compiled	[CE]  orphaned  case	97	None	replace
9	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]      AssertionFailedError  [CONTEXT]  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  null)  {  [BUGGY]  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  null)  {	if  (leftVal  ==  TernaryValue.UNKNOWN)  {  	non-compiled	[CE]  orphaned  case	97	None	replace
10	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal!=  null)  {  [CE]  orphaned  case  [FE]        AssertionFailedError  [CONTEXT]  Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal!=  null)  {  [BUGGY]  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.UNKNOWN  ||  leftVal!=  null)  {	if  (leftVal  ==  TernaryValue.UNKNOWN)  {  	non-compiled	[CE]  orphaned  case	97	None	replace
