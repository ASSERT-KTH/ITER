bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  replacementNode  =  leftVal.getNext();  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  Node  replacementNode  =  leftVal.getNext();  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  leftVal.getNext();	      	non-compiled	[CE]  orphaned  case	6	None	replace
2	[BUG]  [BUGGY]  Node  n  =  leftVal.getNext();  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  Node  n  =  leftVal.getNext();  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  n  =  leftVal.getNext();	      	non-compiled	[CE]  orphaned  case	6	None	replace
3	[BUG]  [BUGGY]  Node  n  =  leftVal.getFirstChild();  [CE]  orphaned  case  [FE]                      AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  Node  n  =  leftVal.getFirstChild();  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  n  =  leftVal.getFirstChild();	      	non-compiled	[CE]  orphaned  case	6	None	replace
4	[BUG]  [BUGGY]  Node  n  =  left.getFirstChild();  [CE]  orphaned  case  [FE]                        AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  Node  n  =  left.getFirstChild();  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  n  =  left.getFirstChild();	      	non-compiled	[CE]  orphaned  case	6	None	replace
5	[BUG]  [BUGGY]  Node  replacementNode  =  leftVal.getFirstChild();  [CE]  orphaned  case  [FE]                          AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  Node  replacementNode  =  leftVal.getFirstChild();  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  leftVal.getFirstChild();	      	non-compiled	[CE]  orphaned  case	6	None	replace
6	[BUG]  [BUGGY]  Node  replacementNode  =  left.getNext();  [CE]  orphaned  case  [FE]                            AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  Node  replacementNode  =  left.getNext();  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  left.getNext();	      	non-compiled	[CE]  orphaned  case	6	None	replace
7	[BUG]  [BUGGY]  n  =  leftVal.getNext();  [CE]  orphaned  case  [FE]                              AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  n  =  leftVal.getNext();  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	n  =  leftVal.getNext();	      	non-compiled	[CE]  orphaned  case	6	None	replace
8	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal!=  TernaryValue.UNKNOWN)  {  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  null  ||  leftVal!=  TernaryValue.UNKNOWN)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal!=  TernaryValue.UNKNOWN)  {	  if(leftVal!=    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
9	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal!=  TernaryValue.UNKNOWN)  {  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  null  ||  leftVal!=  TernaryValue.UNKNOWN)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal!=  TernaryValue.UNKNOWN)  {	  if(leftVal!=    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
10	[BUG]  [BUGGY]  if(leftVal!=  null)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  null)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null)  {	  if(leftVal!=    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
11	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal  ==  null)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal  ==  null)  {	  if(leftVal    ==    TernaryValue.UNKNOWN    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	5	None	replace
12	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NOT  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  TernaryValue.NOT  ||  leftVal  ==  null)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NOT  ||  leftVal  ==  null)  {	  if(leftVal    ==    TernaryValue.UNKNOWN    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	5	None	replace
13	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal  ==  null)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal  ==  null)  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	7	None	replace
14	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NULL  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  TernaryValue.NULL  ||  leftVal  ==  null)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NULL  ||  leftVal  ==  null)  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	7	None	replace
15	[BUG]  [BUGGY]  if(leftVal  >=  TernaryValue.UNKNOWN  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  >=  TernaryValue.UNKNOWN  ||  leftVal  ==  null)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  >=  TernaryValue.UNKNOWN  ||  leftVal  ==  null)  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	7	None	replace
16	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal!=  null)  {  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal!=  null)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  leftVal!=  null)  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	9	None	replace
17	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  >=  null)  {  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  >=  null)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  leftVal  >=  null)  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	9	None	replace
18	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NUMBER  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  TernaryValue.NUMBER  ||  leftVal  ==  null)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NUMBER  ||  leftVal  ==  null)  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	9	None	replace
19	[BUG]  [BUGGY]  if(leftVal  >=  TernaryValue.NULL  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  >=  TernaryValue.NULL  ||  leftVal  ==  null)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  >=  TernaryValue.NULL  ||  leftVal  ==  null)  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	9	None	replace
20	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal!=  null)  {  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal!=  null)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.UNKNOWN  &&  leftVal!=  null)  {	  if(leftVal    ==    TernaryValue.UNKNOWN    ||    leftVal!=    null)    {    	non-compiled	[CE]  orphaned  case	10	None	replace
21	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal!=  null)  {  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal!=  null)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal!=  null)  {	  if(leftVal    ==    TernaryValue.UNKNOWN    ||    leftVal!=    null)    {    	non-compiled	[CE]  orphaned  case	10	None	replace
22	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal!=  null)  {  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal!=  null)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal!=  null)  {	  if(leftVal    ==    TernaryValue.UNKNOWN    ||    leftVal!=    null)    {    	non-compiled	[CE]  orphaned  case	10	None	replace
23	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.NULL)  {  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.NULL)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.NULL)  {	  if(leftVal    ==    TernaryValue.NULL)    {    	non-compiled	[CE]  orphaned  case	8	None	replace
24	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal  ==  TernaryValue.NULL)  {  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  null  ||  leftVal  ==  TernaryValue.NULL)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal  ==  TernaryValue.NULL)  {	  if(leftVal    ==    TernaryValue.NULL)    {    	non-compiled	[CE]  orphaned  case	8	None	replace
25	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal  >=  TernaryValue.UNKNOWN)  {  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  null  ||  leftVal  >=  TernaryValue.UNKNOWN)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal  >=  TernaryValue.UNKNOWN)  {	  if(leftVal    ==    null    ||    leftVal    ==    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	1	None	replace
26	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.NONE)  {  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.NONE)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.NONE)  {	  if(leftVal    ==    null    ||    leftVal    ==    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	1	None	replace
27	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.NOT)  {  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.NOT)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.NOT)  {	  if(leftVal    ==    null    ||    leftVal    ==    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	1	None	replace
28	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NAME)  {  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NAME)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NAME)  {	  if(leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	3	None	replace
29	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NAME)  {  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NAME)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal.getType()  ==  Token.NAME)  {	  if(leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	3	None	replace
30	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.FUNCTION)  {  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.FUNCTION)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.FUNCTION)  {	  if(leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	3	None	replace
31	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.FUNCTION)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  null  ||  leftVal.getType()  ==  Token.FUNCTION)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal.getType()  ==  Token.FUNCTION)  {	  if(leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	3	None	replace
32	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.VAR)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.VAR)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.VAR)  {	  if(leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	3	None	replace
33	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal  ==  TernaryValue.NONE)  {  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  null  ||  leftVal  ==  TernaryValue.NONE)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal  ==  TernaryValue.NONE)  {	  if(leftVal!=    null    ||    leftVal    ==    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	2	None	replace
34	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {	  if(leftVal!=    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
35	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal!=  NodeUtil.getPureBooleanValue(leftVal))  {	  if(leftVal!=    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
36	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN  ||  leftVal  ==  NodeUtil.getPureBooleanValue(left))  {	  if(leftVal!=    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
37	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NUMBER  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  TernaryValue.NUMBER  ||  leftVal  ==  null)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NUMBER  ||  leftVal  ==  null)  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	7	None	replace
38	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  null)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal  ==  null)  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	9	None	replace
39	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NONE  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  TernaryValue.NONE  ||  leftVal  ==  null)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NONE  ||  leftVal  ==  null)  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	9	None	replace
40	[BUG]  [BUGGY]  Node  replacementNode  =  leftVal.removeFirstChild();  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  Node  replacementNode  =  leftVal.removeFirstChild();  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	Node  replacementNode  =  leftVal.removeFirstChild();	      	non-compiled	[CE]  orphaned  case	6	None	replace
41	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NUMBER)  {  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NUMBER)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.NUMBER)  {	  if(leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	3	None	replace
42	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal!=  null)  {  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  null  ||  leftVal!=  null)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal!=  null)  {	  if(leftVal    ==    TernaryValue.UNKNOWN    ||    leftVal!=    null)    {    	non-compiled	[CE]  orphaned  case	10	None	replace
43	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.BLOCK)  {  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.BLOCK)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.BLOCK)  {	  if(leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	3	None	replace
44	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.STRING)  {  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.STRING)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal.getType()  ==  Token.STRING)  {	  if(leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	3	None	replace
45	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NULL)  {  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  TernaryValue.NULL)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NULL)  {	  if(leftVal    ==    TernaryValue.NULL)    {    	non-compiled	[CE]  orphaned  case	8	None	replace
46	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  NodeUtil.getPureBooleanValue(leftVal))  {	  if(leftVal    ==    TernaryValue.NULL)    {    	non-compiled	[CE]  orphaned  case	8	None	replace
47	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  Node.newNumber(0))  {  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  Node.newNumber(0))  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  leftVal  ==  Node.newNumber(0))  {	  if(leftVal    ==    TernaryValue.NULL)    {    	non-compiled	[CE]  orphaned  case	8	None	replace
48	[BUG]  [BUGGY]  if(leftVal!=  null  &&  leftVal  ==  TernaryValue.UNKNOWN)  {  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  null  &&  leftVal  ==  TernaryValue.UNKNOWN)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  &&  leftVal  ==  TernaryValue.UNKNOWN)  {	  if(leftVal!=    null    ||    leftVal    ==    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	2	None	replace
49	[BUG]  [BUGGY]  if(leftVal!=  null  ||  leftVal  ==  TernaryValue.NOT)  {  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  null  ||  leftVal  ==  TernaryValue.NOT)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  null  ||  leftVal  ==  TernaryValue.NOT)  {	  if(leftVal!=    null    ||    leftVal    ==    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	2	None	replace
50	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.BLOCK)  {  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.BLOCK)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.BLOCK)  {	  if(leftVal!=    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
51	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.VAR)  {  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.VAR)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.VAR)  {	  if(leftVal!=    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
52	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.CATCH)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.CATCH)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.CATCH)  {	  if(leftVal!=    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
53	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.CALL)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.CALL)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.UNKNOWN  &&  leftVal.getType()  ==  Token.CALL)  {	  if(leftVal!=    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
54	[BUG]  [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.EMPTY)  {  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.EMPTY)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  null  ||  leftVal  ==  TernaryValue.EMPTY)  {	  if(leftVal    ==    null    ||    leftVal    ==    TernaryValue.UNKNOWN)    {    	non-compiled	[CE]  orphaned  case	1	None	replace
55	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NUMBER  ||  leftVal!=  null)  {  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  TernaryValue.NUMBER  ||  leftVal!=  null)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NUMBER  ||  leftVal!=  null)  {	  if(leftVal    ==    TernaryValue.UNKNOWN    ||    leftVal!=    null)    {    	non-compiled	[CE]  orphaned  case	10	None	replace
56	[BUG]  [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  rightVal  ==  null)  {  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal  ==  TernaryValue.NULL  ||  rightVal  ==  null)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal  ==  TernaryValue.NULL  ||  rightVal  ==  null)  {	  if(leftVal    ==    TernaryValue.NULL    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	9	None	replace
57	[BUG]  [BUGGY]  if(leftVal!=  TernaryValue.NOT  ||  leftVal  ==  null)  {  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    Preconditions.checkState(n.hasOneChild());  Node  left  =  n.getFirstChild();  Node  parent  =  n.getParent();  if  (left  ==  null)  {  return  n;  }  TernaryValue  leftVal  =  NodeUtil.getPureBooleanValue(left);    [BUGGY]  if(leftVal!=  TernaryValue.NOT  ||  leftVal  ==  null)  {  [BUGGY]    return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  return  n;  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.4472135954999579	336	336	3	replace	if(leftVal!=  TernaryValue.NOT  ||  leftVal  ==  null)  {	  if(leftVal!=    TernaryValue.UNKNOWN    ||    leftVal    ==    null)    {    	non-compiled	[CE]  orphaned  case	7	None	replace
