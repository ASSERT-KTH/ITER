bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  left;  [CE]  [FE]    AssertionFailedError  [CONTEXT]  if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [BUGGY]  return  left;  [BUGGY]  }  }  int  result  =  leftVal.toBoolean(true)  ?  Token.FALSE  :  Token.TRUE;  Node  replacementNode  =  new  Node(result);  parent.replaceChild(n,  replacementNode);  reportCodeChange();  return  replacementNode;  case  Token.POS:  if  (NodeUtil.isNumericResult(left))  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865476	346	346	3	replace	return  left;	return  n;  	non-compiled	[CE]  	9	None	replace
2	[BUG]  [BUGGY]  return  n.getFirstChild();  [CE]  [FE]      AssertionFailedError  [CONTEXT]  if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [BUGGY]  return  n.getFirstChild();  [BUGGY]  }  }  int  result  =  leftVal.toBoolean(true)  ?  Token.FALSE  :  Token.TRUE;  Node  replacementNode  =  new  Node(result);  parent.replaceChild(n,  replacementNode);  reportCodeChange();  return  replacementNode;  case  Token.POS:  if  (NodeUtil.isNumericResult(left))  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865476	346	346	3	replace	return  n.getFirstChild();	return  n;  	non-compiled	[CE]  	9	None	replace
3	[BUG]  [BUGGY]  return  n.getNext();  [CE]  [FE]        AssertionFailedError  [CONTEXT]  if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [BUGGY]  return  n.getNext();  [BUGGY]  }  }  int  result  =  leftVal.toBoolean(true)  ?  Token.FALSE  :  Token.TRUE;  Node  replacementNode  =  new  Node(result);  parent.replaceChild(n,  replacementNode);  reportCodeChange();  return  replacementNode;  case  Token.POS:  if  (NodeUtil.isNumericResult(left))  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865476	346	346	3	replace	return  n.getNext();	return  n;  	non-compiled	[CE]  	9	None	replace
4	[BUG]  [BUGGY]  return  n.getType();  [CE]  [FE]          AssertionFailedError  [CONTEXT]  if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [BUGGY]  return  n.getType();  [BUGGY]  }  }  int  result  =  leftVal.toBoolean(true)  ?  Token.FALSE  :  Token.TRUE;  Node  replacementNode  =  new  Node(result);  parent.replaceChild(n,  replacementNode);  reportCodeChange();  return  replacementNode;  case  Token.POS:  if  (NodeUtil.isNumericResult(left))  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865476	346	346	3	replace	return  n.getType();	return  n;  	non-compiled	[CE]  	9	None	replace
5	[BUG]  [BUGGY]  return  n.getLastChild();  [CE]  [FE]            AssertionFailedError  [CONTEXT]  if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [BUGGY]  return  n.getLastChild();  [BUGGY]  }  }  int  result  =  leftVal.toBoolean(true)  ?  Token.FALSE  :  Token.TRUE;  Node  replacementNode  =  new  Node(result);  parent.replaceChild(n,  replacementNode);  reportCodeChange();  return  replacementNode;  case  Token.POS:  if  (NodeUtil.isNumericResult(left))  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865476	346	346	3	replace	return  n.getLastChild();	return  n;  	non-compiled	[CE]  	9	None	replace
6	[BUG]  [BUGGY]  return  leftVal;  [CE]  [FE]              AssertionFailedError  [CONTEXT]  if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [BUGGY]  return  leftVal;  [BUGGY]  }  }  int  result  =  leftVal.toBoolean(true)  ?  Token.FALSE  :  Token.TRUE;  Node  replacementNode  =  new  Node(result);  parent.replaceChild(n,  replacementNode);  reportCodeChange();  return  replacementNode;  case  Token.POS:  if  (NodeUtil.isNumericResult(left))  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865476	346	346	3	replace	return  leftVal;	return  n;  	non-compiled	[CE]  	9	None	replace
7	[BUG]  [BUGGY]  return  n.getParent();  [CE]  [FE]                AssertionFailedError  [CONTEXT]  if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [BUGGY]  return  n.getParent();  [BUGGY]  }  }  int  result  =  leftVal.toBoolean(true)  ?  Token.FALSE  :  Token.TRUE;  Node  replacementNode  =  new  Node(result);  parent.replaceChild(n,  replacementNode);  reportCodeChange();  return  replacementNode;  case  Token.POS:  if  (NodeUtil.isNumericResult(left))  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865476	346	346	3	replace	return  n.getParent();	return  n;  	non-compiled	[CE]  	9	None	replace
8	[BUG]  [BUGGY]    [CE]  [FE]                  AssertionFailedError  [CONTEXT]  if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [BUGGY]    [BUGGY]  }  }  int  result  =  leftVal.toBoolean(true)  ?  Token.FALSE  :  Token.TRUE;  Node  replacementNode  =  new  Node(result);  parent.replaceChild(n,  replacementNode);  reportCodeChange();  return  replacementNode;  case  Token.POS:  if  (NodeUtil.isNumericResult(left))  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865476	346	346	3	replace	  	return  n;  	non-compiled	[CE]  	9	None	replace
9	[BUG]  [BUGGY]  return  n.getNode();  [CE]  [FE]    AssertionFailedError  [CONTEXT]  if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [BUGGY]  return  n.getNode();  [BUGGY]  }  }  int  result  =  leftVal.toBoolean(true)  ?  Token.FALSE  :  Token.TRUE;  Node  replacementNode  =  new  Node(result);  parent.replaceChild(n,  replacementNode);  reportCodeChange();  return  replacementNode;  case  Token.POS:  if  (NodeUtil.isNumericResult(left))  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865476	346	346	3	replace	return  n.getNode();	return  n;  	non-compiled	[CE]  	9	None	replace
10	[BUG]  [BUGGY]  return  n.removeFirstChild();  [CE]  [FE]    AssertionFailedError  [CONTEXT]  if  (leftVal  ==  TernaryValue.UNKNOWN)  {  return  n;  }  switch  (n.getType())  {  case  Token.NOT:  if  (left.getType()  ==  Token.NUMBER)  {  double  numValue  =  left.getDouble();  if  (numValue  ==  0  ||  numValue  ==  1)  {  [BUGGY]  return  n.removeFirstChild();  [BUGGY]  }  }  int  result  =  leftVal.toBoolean(true)  ?  Token.FALSE  :  Token.TRUE;  Node  replacementNode  =  new  Node(result);  parent.replaceChild(n,  replacementNode);  reportCodeChange();  return  replacementNode;  case  Token.POS:  if  (NodeUtil.isNumericResult(left))  {  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldUnaryOperator  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Locale  ROOT_LOCALE  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  numValue  val  value  Node  left  n  negNumNode  notIntValNode  parent  replacementNode  TernaryValue  leftVal  int  intVal  result  UnsupportedOperationException  ex  	projects/Closure74/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.7071067811865476	346	346	3	replace	return  n.removeFirstChild();	return  n;  	non-compiled	[CE]  	9	None	replace
