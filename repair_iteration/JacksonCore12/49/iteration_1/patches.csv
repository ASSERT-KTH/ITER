bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char  ptr  =  0;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  char  ptr  =  0;  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	char  ptr  =  0;	  int    ptr    =    0;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  String  ptr  =  _inputPtr;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  String  ptr  =  _inputPtr;  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	String  ptr  =  _inputPtr;	  char    ptr    =    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  char  ptr  =  _inputBuffer[_inputPtr];  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  char  ptr  =  _inputBuffer[_inputPtr];  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	char  ptr  =  _inputBuffer[_inputPtr];	  char    ptr    =    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  char  ptr  =  _inputPtr  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  char  ptr  =  _inputPtr  +  1;  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	char  ptr  =  _inputPtr  +  1;	  char    ptr    =    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  int  ptr  =  _inputEnd  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  int  ptr  =  _inputEnd  +  1;  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	int  ptr  =  _inputEnd  +  1;	  int    ptr    =    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  char  ptr  =  _inputEnd;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  char  ptr  =  _inputEnd;  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	char  ptr  =  _inputEnd;	  int    ptr    =    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  int  ptr  =  _inputBuffer.length  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  int  ptr  =  _inputBuffer.length  -  1;  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	int  ptr  =  _inputBuffer.length  -  1;	  int    ptr    =    _inputBuffer.length;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  int  ptr  =  _inputBuffer.length  -  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  int  ptr  =  _inputBuffer.length  -  2;  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	int  ptr  =  _inputBuffer.length  -  2;	  int    ptr    =    _inputBuffer.length;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  char  ptr  =  _inputBuffer.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  char  ptr  =  _inputBuffer.length;  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	char  ptr  =  _inputBuffer.length;	  int    ptr    =    _inputBuffer.length;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
10	[BUG]  [BUGGY]  int  ptr  =  _inputBuffer[_inputPtr];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  int  ptr  =  _inputBuffer[_inputPtr];  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	int  ptr  =  _inputBuffer[_inputPtr];	  int    ptr    =    _inputBuffer.length;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
11	[BUG]  [BUGGY]  int  ptr  =  _inputStart  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  int  ptr  =  _inputStart  +  1;  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	int  ptr  =  _inputStart  +  1;	  int    ptr    =    _inputStart;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
12	[BUG]  [BUGGY]  int  ptr  =  _inputBuffer.length  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  int  ptr  =  _inputBuffer.length  +  1;  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	int  ptr  =  _inputBuffer.length  +  1;	  int    ptr    =    _inputPtr    +    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
13	[BUG]  [BUGGY]  _parseName();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  _parseName();  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	_parseName();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
14	[BUG]  [BUGGY]  _reportError( "Unexpected  value  ' "  +  _nameInputCol.toString()  + "'  of  type  ' "+_nameInputCol.toString());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  _reportError( "Unexpected  value  ' "  +  _nameInputCol.toString()  + "'  of  type  ' "+_nameInputCol.toString());  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	_reportError( "Unexpected  value  ' "  +  _nameInputCol.toString()  + "'  of  type  ' "+_nameInputCol.toString());	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  _reportError( "Unexpected  value  ' "  +  _nameInputCol.toString()  + "'  in  case  of  type  ' "+_nameInputCol.toString());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  _reportError( "Unexpected  value  ' "  +  _nameInputCol.toString()  + "'  in  case  of  type  ' "+_nameInputCol.toString());  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	_reportError( "Unexpected  value  ' "  +  _nameInputCol.toString()  + "'  in  case  of  type  ' "+_nameInputCol.toString());	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
16	[BUG]  [BUGGY]  _parseName(null);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  _parseName(null);  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	_parseName(null);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
17	[BUG]  [BUGGY]  Character  ptr  =  _inputPtr;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  Character  ptr  =  _inputPtr;  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	Character  ptr  =  _inputPtr;	  char    ptr    =    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  Char  ptr  =  _inputPtr;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  Char  ptr  =  _inputPtr;  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	Char  ptr  =  _inputPtr;	  char    ptr    =    _inputPtr;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  if(_nameInputCol  ==  null)  {  if(!_tokenIncomplete)  {  return  _symbols.findSymbol(_inputBuffer,  start,  ptr);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  if(_nameInputCol  ==  null)  {  if(!_tokenIncomplete)  {  return  _symbols.findSymbol(_inputBuffer,  start,  ptr);  }  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	if(_nameInputCol  ==  null)  {  if(!_tokenIncomplete)  {  return  _symbols.findSymbol(_inputBuffer,  start,  ptr);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
20	[BUG]  [BUGGY]  if(_nameInputCol  ==  null)  {  if(!_tokenIncomplete)  {  return  _symbols.findName(_inputBuffer,  start,  ptr);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  if(_nameInputCol  ==  null)  {  if(!_tokenIncomplete)  {  return  _symbols.findName(_inputBuffer,  start,  ptr);  }  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	if(_nameInputCol  ==  null)  {  if(!_tokenIncomplete)  {  return  _symbols.findName(_inputBuffer,  start,  ptr);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  _reportUnsupportedOperation();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  _reportUnsupportedOperation();  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	_reportUnsupportedOperation();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
22	[BUG]  [BUGGY]  if(_nameInputCol  ==  null)  {  if(!_tokenIncomplete)  {  return  _symbols.findSymbol(_inputBuffer,  start,  hash);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  if(_nameInputCol  ==  null)  {  if(!_tokenIncomplete)  {  return  _symbols.findSymbol(_inputBuffer,  start,  hash);  }  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	if(_nameInputCol  ==  null)  {  if(!_tokenIncomplete)  {  return  _symbols.findSymbol(_inputBuffer,  start,  hash);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
23	[BUG]  [BUGGY]  int  ptr  =  _inputPtr  +  2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  int  ptr  =  _inputPtr  +  2;  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	int  ptr  =  _inputPtr  +  2;	  int    ptr    =    _inputPtr    +    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
24	[BUG]  [BUGGY]  int  ptr  =  _symbols.findSymbol(_inputBuffer,  start,  0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  int  ptr  =  _symbols.findSymbol(_inputBuffer,  start,  0);  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	int  ptr  =  _symbols.findSymbol(_inputBuffer,  start,  0);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  int  ptr  =  _symbols.findSymbol(_inputBuffer,  start,  ptr);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  int  ptr  =  _symbols.findSymbol(_inputBuffer,  start,  ptr);  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	int  ptr  =  _symbols.findSymbol(_inputBuffer,  start,  ptr);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
26	[BUG]  [BUGGY]  int  ptr  =  _symbols.findSymbol(_inputBuffer,  start,  len);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  int  ptr  =  _symbols.findSymbol(_inputBuffer,  start,  len);  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	int  ptr  =  _symbols.findSymbol(_inputBuffer,  start,  len);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  int  ptr  =  _inputEnd.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  int  ptr  =  _inputEnd.length;  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	int  ptr  =  _inputEnd.length;	  int    ptr    =    _inputBuffer.length;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
28	[BUG]  [BUGGY]  int  ptr  =(_inputPtr  <  _inputEnd)?  0  :  _inputPtr;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    protected  final  String  _parseName()  throws  IOException  {      [BUGGY]  int  ptr  =(_inputPtr  <  _inputEnd)?  0  :  _inputPtr;  [BUGGY]    int  hash  =  _hashSeed;  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  '   "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	int  ptr  =(_inputPtr  <  _inputEnd)?  0  :  _inputPtr;	  int    ptr    =    0;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
