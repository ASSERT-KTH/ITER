bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
2	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken!=  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
3	[BUG]  [BUGGY]  if(_tokenIncomplete  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_tokenIncomplete  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _tokenIncomplete)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
4	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _tokenIncomplete)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _tokenIncomplete)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
5	[BUG]  [BUGGY]  _bufferRecyclable  =  false;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {          [BUGGY]  _bufferRecyclable  =  false;  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_bufferRecyclable  =  false;	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _bufferRecyclable    =    false;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
6	[BUG]  [BUGGY]  ||  _tokenIncomplete)  {  _bufferRecyclable  =  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {          [BUGGY]  ||  _tokenIncomplete)  {  _bufferRecyclable  =  false;  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	||  _tokenIncomplete)  {  _bufferRecyclable  =  false;  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _bufferRecyclable    =    false;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
7	[BUG]  [BUGGY]  ||(i  ==  0  &&!_bufferRecyclable))  {  _bufferRecyclable  =  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {          [BUGGY]  ||(i  ==  0  &&!_bufferRecyclable))  {  _bufferRecyclable  =  false;  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	||(i  ==  0  &&!_bufferRecyclable))  {  _bufferRecyclable  =  false;  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _bufferRecyclable    =    false;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
8	[BUG]  [BUGGY]  _bufferRecyclable  =  true;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {          [BUGGY]  _bufferRecyclable  =  true;  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_bufferRecyclable  =  true;	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _bufferRecyclable    =    true;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
9	[BUG]  [BUGGY]  ||  _tokenIncomplete)  {  _bufferRecyclable  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {          [BUGGY]  ||  _tokenIncomplete)  {  _bufferRecyclable  =  true;  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	||  _tokenIncomplete)  {  _bufferRecyclable  =  true;  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _bufferRecyclable    =    true;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
10	[BUG]  [BUGGY]  ||(i  ==  0  &&  _tokenIncomplete))  {  _bufferRecyclable  =  true;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      {          [BUGGY]  ||(i  ==  0  &&  _tokenIncomplete))  {  _bufferRecyclable  =  true;  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	||(i  ==  0  &&  _tokenIncomplete))  {  _bufferRecyclable  =  true;  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _bufferRecyclable    =    true;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
11	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.START_ARRAY)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.START_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.START_ARRAY)  {	  if(_currToken!=    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
12	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
13	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.END_OBJECT)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
14	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
15	[BUG]  [BUGGY]  _symbols.add(JsonToken.VALUE_NULL,  name);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.VALUE_NULL,  name);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.VALUE_NULL,  name);	  _symbols.add(JsonToken.VALUE_NULL);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
16	[BUG]  [BUGGY]  _symbols.add(JsonToken.VALUE_NUMBER);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.VALUE_NUMBER);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.VALUE_NUMBER);	  _symbols.add(JsonToken.VALUE_NULL);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
17	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _bufferRecyclable  ||  _tokenIncomplete)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _bufferRecyclable  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _bufferRecyclable  ||  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete    ||    _bufferRecyclable)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
18	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _bufferRecyclable)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete    ||    _bufferRecyclable)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
19	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete  ||  _bufferRecyclable)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete    ||    _bufferRecyclable)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
20	[BUG]  [BUGGY]  _symbols.add(JsonToken.VALUE_STRING,  name);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.VALUE_STRING,  name);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.VALUE_STRING,  name);	  _symbols.add(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
21	[BUG]  [BUGGY]  _symbols.add(JsonToken.VALUE_STRING,  String.valueOf(i));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.VALUE_STRING,  String.valueOf(i));  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.VALUE_STRING,  String.valueOf(i));	  _symbols.add(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
22	[BUG]  [BUGGY]  _symbols.add(JsonToken.VALUE_STRING,  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.VALUE_STRING,  null);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.VALUE_STRING,  null);	  _symbols.add(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
23	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
24	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
25	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.END_ARRAY)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.END_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
26	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
27	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
28	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
29	[BUG]  [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  value. ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {          [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  value. ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  value. ");	  _reportError(   "Current    token(   "+_tokenIncomplete+   ")not    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
30	[BUG]  [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")expected  a  string  value ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {          [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")expected  a  string  value ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_reportError( "Current  token( "+_tokenIncomplete+ ")expected  a  string  value ");	  _reportError(   "Current    token(   "+_tokenIncomplete+   ")not    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
31	[BUG]  [BUGGY]  ||(i  ==  0  &&  _tokenIncomplete))  {  _skipString();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {          [BUGGY]  ||(i  ==  0  &&  _tokenIncomplete))  {  _skipString();  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	||(i  ==  0  &&  _tokenIncomplete))  {  _skipString();  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _skipString();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
32	[BUG]  [BUGGY]  ||(i  ==  0  &&  _tokenIncomplete))  {  _skipString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {          [BUGGY]  ||(i  ==  0  &&  _tokenIncomplete))  {  _skipString();  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	||(i  ==  0  &&  _tokenIncomplete))  {  _skipString();	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _skipString();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
33	[BUG]  [BUGGY]  ||  _tokenIncomplete)  {  _skipString();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {          [BUGGY]  ||  _tokenIncomplete)  {  _skipString();  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	||  _tokenIncomplete)  {  _skipString();  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _skipString();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
34	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  null);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.FIELD_NAME,  null);	  _symbols.add(JsonToken.FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
35	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  JSON_TYPE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  JSON_TYPE);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.FIELD_NAME,  JSON_TYPE);	  _symbols.add(JsonToken.FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
36	[BUG]  [BUGGY]  _symbols.add(JsonToken.START_OBJECT,  name);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.START_OBJECT,  name);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.START_OBJECT,  name);	  _symbols.add(JsonToken.START_OBJECT);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
37	[BUG]  [BUGGY]  _symbols.add(JsonToken.START_OBJECT,  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.START_OBJECT,  null);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.START_OBJECT,  null);	  _symbols.add(JsonToken.START_OBJECT);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
38	[BUG]  [BUGGY]  _symbols.add(JsonToken.START_OBJECT,  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.START_OBJECT,  1);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.START_OBJECT,  1);	  _symbols.add(JsonToken.START_OBJECT);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
39	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken!=  JsonToken.FIELD_NAME)  {	  if(_tokenIncomplete    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
40	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
41	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NULL)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
42	[BUG]  [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_tokenIncomplete  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
43	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
44	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT  ||  _tokenIncomplete)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT  ||  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.END_OBJECT  ||  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
45	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
46	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
47	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
48	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
49	[BUG]  [BUGGY]  _symbols.add(name,  JsonToken.FIELD_NAME);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(name,  JsonToken.FIELD_NAME);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(name,  JsonToken.FIELD_NAME);	  _symbols.add(JsonToken.FIELD_NAME,    name);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
50	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  name  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  name  +  1);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.FIELD_NAME,  name  +  1);	  _symbols.add(JsonToken.FIELD_NAME,    name);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
51	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  name,  NR_UNKNOWN);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  name,  NR_UNKNOWN);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.FIELD_NAME,  name,  NR_UNKNOWN);	  _symbols.add(JsonToken.FIELD_NAME,    name);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
52	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
53	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
54	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.START_OBJECT)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.START_OBJECT)  {	  if(_currToken!=    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
55	[BUG]  [BUGGY]  _reportError( "Unexpected  string  value: "  +  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {          [BUGGY]  _reportError( "Unexpected  string  value: "  +  i);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_reportError( "Unexpected  string  value: "  +  i);	  _reportUnexpectedChar(i,   "was    expecting    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
56	[BUG]  [BUGGY]  _reportUnexpectedError(i, "was  expecting  a  string  value ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {          [BUGGY]  _reportUnexpectedError(i, "was  expecting  a  string  value ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_reportUnexpectedError(i, "was  expecting  a  string  value ");	  _reportUnexpectedChar(i,   "was    expecting    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
57	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken!=    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
58	[BUG]  [BUGGY]  _reportError( "Current  token( "+_nameInputCol+ ")not  a  string  value. ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {          [BUGGY]  _reportError( "Current  token( "+_nameInputCol+ ")not  a  string  value. ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_reportError( "Current  token( "+_nameInputCol+ ")not  a  string  value. ");	  _reportError(   "Current    token(   "+_nameInputCol+   ")not    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
59	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _tokenIncomplete)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  &&  _tokenIncomplete)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING  &&  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _tokenIncomplete)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
60	[BUG]  [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_tokenIncomplete  ||  _currToken  ==  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _tokenIncomplete)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
61	[BUG]  [BUGGY]  _symbols.add(JsonToken.VALUE_NUMBER_INT);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.VALUE_NUMBER_INT);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.VALUE_NUMBER_INT);	  _symbols.add(JsonToken.VALUE_NULL);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
62	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
63	[BUG]  [BUGGY]  ||(i  ==  0  &&!_bufferRecyclable))  {  if(_tokenIncomplete)  {  _skipString();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {          [BUGGY]  ||(i  ==  0  &&!_bufferRecyclable))  {  if(_tokenIncomplete)  {  _skipString();  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	||(i  ==  0  &&!_bufferRecyclable))  {  if(_tokenIncomplete)  {  _skipString();  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _skipString();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
64	[BUG]  [BUGGY]  ||(i  ==  0  &&  _skipString().length()  >  0))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {          [BUGGY]  ||(i  ==  0  &&  _skipString().length()  >  0))  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	||(i  ==  0  &&  _skipString().length()  >  0))  {	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _skipString();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
65	[BUG]  [BUGGY]  ||(i  ==  0  &&  _tokenIncomplete)!=  _skipString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {          [BUGGY]  ||(i  ==  0  &&  _tokenIncomplete)!=  _skipString();  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	||(i  ==  0  &&  _tokenIncomplete)!=  _skipString();	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _skipString();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
66	[BUG]  [BUGGY]  ||(i  ==  0  &&!_bufferRecyclable))  {  if(_tokenIncompute)  {  _skipString();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {          [BUGGY]  ||(i  ==  0  &&!_bufferRecyclable))  {  if(_tokenIncompute)  {  _skipString();  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	||(i  ==  0  &&!_bufferRecyclable))  {  if(_tokenIncompute)  {  _skipString();  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _skipString();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
67	[BUG]  [BUGGY]  _symbols.add(JsonToken.VALUE_STRING,  _tokenIncomplete);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.VALUE_STRING,  _tokenIncomplete);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.VALUE_STRING,  _tokenIncomplete);	  _symbols.add(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
68	[BUG]  [BUGGY]  ||(i  ==  0  &&!_bufferRecyclable))  {  _bufferRecyclable  =  false;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {          [BUGGY]  ||(i  ==  0  &&!_bufferRecyclable))  {  _bufferRecyclable  =  false;  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	||(i  ==  0  &&!_bufferRecyclable))  {  _bufferRecyclable  =  false;	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _bufferRecyclable    =    false;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
69	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
70	[BUG]  [BUGGY]  _symbols.add(JsonToken.START_ARRAY);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.START_ARRAY);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.START_ARRAY);	  _symbols.add(JsonToken.START_OBJECT);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
71	[BUG]  [BUGGY]  ||(i  ==  0  &&!_bufferRecyclable))  {  _bufferRecyclable  =  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {          [BUGGY]  ||(i  ==  0  &&!_bufferRecyclable))  {  _bufferRecyclable  =  true;  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	||(i  ==  0  &&!_bufferRecyclable))  {  _bufferRecyclable  =  true;  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _bufferRecyclable    =    true;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
72	[BUG]  [BUGGY]  ||(i  ==  0  &&!_bufferRecyclable))  {  _bufferRecyclable  =  true;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {          [BUGGY]  ||(i  ==  0  &&!_bufferRecyclable))  {  _bufferRecyclable  =  true;  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	||(i  ==  0  &&!_bufferRecyclable))  {  _bufferRecyclable  =  true;	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _bufferRecyclable    =    true;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
73	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
74	[BUG]  [BUGGY]  _reportError( "Current  token( "+_nameInputCol+ ")expected  a  string  value ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {          [BUGGY]  _reportError( "Current  token( "+_nameInputCol+ ")expected  a  string  value ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_reportError( "Current  token( "+_nameInputCol+ ")expected  a  string  value ");	  _reportError(   "Current    token(   "+_nameInputCol+   ")not    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
75	[BUG]  [BUGGY]  _reportUnexpectedError( "was  expecting  a  string  value ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {          [BUGGY]  _reportUnexpectedError( "was  expecting  a  string  value ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_reportUnexpectedError( "was  expecting  a  string  value ");	  _reportUnexpectedChar(i,   "was    expecting    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
76	[BUG]  [BUGGY]  _reportError( "Unexpected  string  value ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {          [BUGGY]  _reportError( "Unexpected  string  value ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_reportError( "Unexpected  string  value ");	  _reportUnexpectedChar(i,   "was    expecting    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
77	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  DEFAULT_NAME);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  DEFAULT_NAME);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.FIELD_NAME,  DEFAULT_NAME);	  _symbols.add(JsonToken.FIELD_NAME,    name);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
78	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  _nameInputRow);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  _nameInputRow);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.FIELD_NAME,  _nameInputRow);	  _symbols.add(JsonToken.FIELD_NAME,    name);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
79	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_tokenIncomplete    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
80	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
81	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  JsonToken.END_ARRAY);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  JsonToken.END_ARRAY);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.FIELD_NAME,  JsonToken.END_ARRAY);	  _symbols.add(JsonToken.FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
82	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  JsonToken.START_OBJECT);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  JsonToken.START_OBJECT);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.FIELD_NAME,  JsonToken.START_OBJECT);	  _symbols.add(JsonToken.FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
83	[BUG]  [BUGGY]  ||(i  ==  0  &&  _bufferRecyclable.length  >  0))  {  _bufferRecyclable  =  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {          [BUGGY]  ||(i  ==  0  &&  _bufferRecyclable.length  >  0))  {  _bufferRecyclable  =  false;  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	||(i  ==  0  &&  _bufferRecyclable.length  >  0))  {  _bufferRecyclable  =  false;  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _bufferRecyclable    =    false;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
84	[BUG]  [BUGGY]  ||(i  ==  0  &&  _tokenIncomplete))  {  _bufferRecyclable  =  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {          [BUGGY]  ||(i  ==  0  &&  _tokenIncomplete))  {  _bufferRecyclable  =  false;  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	||(i  ==  0  &&  _tokenIncomplete))  {  _bufferRecyclable  =  false;  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _bufferRecyclable    =    false;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
85	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete  ||  _bufferRecyclable)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete  ||  _bufferRecyclable)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete    ||    _bufferRecyclable)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
86	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete  ||  _skipString())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete  ||  _skipString())  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete  ||  _skipString())  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _tokenIncomplete)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
87	[BUG]  [BUGGY]  _reportError( "Token  was  expecting  a  string  value ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {          [BUGGY]  _reportError( "Token  was  expecting  a  string  value ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_reportError( "Token  was  expecting  a  string  value ");	  _reportUnexpectedChar(i,   "was    expecting    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
88	[BUG]  [BUGGY]  _throwUnquotedSpace(i, "was  expecting  a  string  value ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {          [BUGGY]  _throwUnquotedSpace(i, "was  expecting  a  string  value ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_throwUnquotedSpace(i, "was  expecting  a  string  value ");	  _reportUnexpectedChar(i,   "was    expecting    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
89	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  _nameInputCol);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  _nameInputCol);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.FIELD_NAME,  _nameInputCol);	  _symbols.add(JsonToken.FIELD_NAME,    name);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
90	[BUG]  [BUGGY]  _symbols.add(JsonToken.START_OBJECT,  JsonToken.FIELD_NAME);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.START_OBJECT,  JsonToken.FIELD_NAME);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.START_OBJECT,  JsonToken.FIELD_NAME);	  _symbols.add(JsonToken.START_OBJECT);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
91	[BUG]  [BUGGY]  if(i  ==  0)  {  if(_skipWSOrEnd)  {  _skipString();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(i  ==  0)  {  if(_skipWSOrEnd)  {  _skipString();  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(i  ==  0)  {  if(_skipWSOrEnd)  {  _skipString();  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _skipString();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
92	[BUG]  [BUGGY]  if(i  ==  0)  {  if(_tokenIncomplete  ||  _skipString()!=  null)  {  _skipString();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(i  ==  0)  {  if(_tokenIncomplete  ||  _skipString()!=  null)  {  _skipString();  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(i  ==  0)  {  if(_tokenIncomplete  ||  _skipString()!=  null)  {  _skipString();  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _skipString();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
93	[BUG]  [BUGGY]  if(i  ==  0)  {  if(_tokenIncomplete  ||  _skipWSOrEnd()  >  0)  {  _skipString();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(i  ==  0)  {  if(_tokenIncomplete  ||  _skipWSOrEnd()  >  0)  {  _skipString();  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(i  ==  0)  {  if(_tokenIncomplete  ||  _skipWSOrEnd()  >  0)  {  _skipString();  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _skipString();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
94	[BUG]  [BUGGY]  if(i  ==  0)  {  if(_tokenIncomplete  ||  _skipWSOrEnd()  <  1)  {  _skipString();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(i  ==  0)  {  if(_tokenIncomplete  ||  _skipWSOrEnd()  <  1)  {  _skipString();  }  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(i  ==  0)  {  if(_tokenIncomplete  ||  _skipWSOrEnd()  <  1)  {  _skipString();  }	  if(i    ==    0)    {    if(_tokenIncomplete)    {    _skipString();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
95	[BUG]  [BUGGY]  _symbols.addLast(JsonToken.VALUE_STRING);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.addLast(JsonToken.VALUE_STRING);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.addLast(JsonToken.VALUE_STRING);	  _symbols.add(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
96	[BUG]  [BUGGY]  _symbols.add(JsonToken.VALUE_STRING,  JsonToken.FIELD_NAME);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.VALUE_STRING,  JsonToken.FIELD_NAME);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.VALUE_STRING,  JsonToken.FIELD_NAME);	  _symbols.add(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
97	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _skipString())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _skipString())  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _skipString())  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
98	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _skipWSOrEnd)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _skipWSOrEnd)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete  ||  _skipWSOrEnd)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _tokenIncomplete)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
99	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
100	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
101	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NULL    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
102	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {          [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.VALUE_STRING    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
103	[BUG]  [BUGGY]  _reportUnexpectedChar( "Current  token( "+_tokenIncomplete+ ")not  a  string  value ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {          [BUGGY]  _reportUnexpectedChar( "Current  token( "+_tokenIncomplete+ ")not  a  string  value ");  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_reportUnexpectedChar( "Current  token( "+_tokenIncomplete+ ")not  a  string  value ");	  _reportError(   "Current    token(   "+_tokenIncomplete+   ")not    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
104	[BUG]  [BUGGY]  _symbols.add(JsonToken.VALUE_NULL,  JsonToken.VALUE_NULL);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.VALUE_NULL,  JsonToken.VALUE_NULL);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.VALUE_NULL,  JsonToken.VALUE_NULL);	  _symbols.add(JsonToken.VALUE_NULL);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
105	[BUG]  [BUGGY]  _symbols.add(JsonToken.VALUE_NULL,  JsonToken.FIELD_NAME);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {          [BUGGY]  _symbols.add(JsonToken.VALUE_NULL,  JsonToken.FIELD_NAME);  [BUGGY]      return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	_symbols.add(JsonToken.VALUE_NULL,  JsonToken.FIELD_NAME);	  _symbols.add(JsonToken.VALUE_NULL);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
