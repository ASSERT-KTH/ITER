bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _numTypesValid  =  2;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  _numTypesValid  =  2;  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	_numTypesValid  =  2;	  _numTypesValid    =    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
2	[BUG]  [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_INT  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_INT  +  1;  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	_numTypesValid  =  JsonToken.VALUE_NUMBER_INT  +  1;	  _numTypesValid    =    JsonToken.VALUE_NUMBER_INT;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
3	[BUG]  [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_INT  |  JsonToken.VALUE_NUMBER_FLOAT;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_INT  |  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	_numTypesValid  =  JsonToken.VALUE_NUMBER_INT  |  JsonToken.VALUE_NUMBER_FLOAT;	  _numTypesValid    =    JsonToken.VALUE_NUMBER_INT;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
4	[BUG]  [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_FLOAT;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	_numTypesValid  =  JsonToken.VALUE_NUMBER_FLOAT;	  _numTypesValid    =    JsonToken.VALUE_NUMBER_INT;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
5	[BUG]  [BUGGY]  _numTypesValid  =  0L;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  _numTypesValid  =  0L;  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	_numTypesValid  =  0L;	  _numTypesValid    =    0;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
6	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _nextAfterName();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _nextAfterName();  }  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _nextAfterName();  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
7	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.END_OBJECT)  {  return  _nextAfterName();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.END_OBJECT)  {  return  _nextAfterName();  }  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.END_OBJECT)  {  return  _nextAfterName();  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
8	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _nextString();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _nextString();  }  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _nextString();  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
9	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.END_OBJECT)  {  return  _nextString();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.END_OBJECT)  {  return  _nextString();  }  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.END_OBJECT)  {  return  _nextString();  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
10	[BUG]  [BUGGY]  _numTypesValid  =  _currToken  +  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  _numTypesValid  =  _currToken  +  1;  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	_numTypesValid  =  _currToken  +  1;	  _numTypesValid    =    NR_UNKNOWN    +    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
11	[BUG]  [BUGGY]  _numTypesValid  =  _nextToken()  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  _numTypesValid  =  _nextToken()  +  1;  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	_numTypesValid  =  _nextToken()  +  1;	  _numTypesValid    =    NR_UNKNOWN    +    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
12	[BUG]  [BUGGY]  _numTypesValid  =  _nameInputCol  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  _numTypesValid  =  _nameInputCol  +  1;  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	_numTypesValid  =  _nameInputCol  +  1;	  _numTypesValid    =    NR_UNKNOWN    +    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
13	[BUG]  [BUGGY]  _numTypesValid  =  JsonToken.START_OBJECT;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  _numTypesValid  =  JsonToken.START_OBJECT;  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	_numTypesValid  =  JsonToken.START_OBJECT;	  _numTypesValid    =    JsonToken.FIELD_NAME;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
14	[BUG]  [BUGGY]  _numTypesValid  =  JsonToken.FIELD_NAME  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  _numTypesValid  =  JsonToken.FIELD_NAME  +  1;  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	_numTypesValid  =  JsonToken.FIELD_NAME  +  1;	  _numTypesValid    =    JsonToken.FIELD_NAME;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
15	[BUG]  [BUGGY]  _numTypesValid  =  _currentNumericValue  +  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  _numTypesValid  =  _currentNumericValue  +  1;  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	_numTypesValid  =  _currentNumericValue  +  1;	  _numTypesValid    =    NR_UNKNOWN    +    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
16	[BUG]  [BUGGY]  _numTypesValid  =  NR_UNKNOWN  +  1L;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  _numTypesValid  =  NR_UNKNOWN  +  1L;  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	_numTypesValid  =  NR_UNKNOWN  +  1L;	  _numTypesValid    =    NR_UNKNOWN    +    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
17	[BUG]  [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_INT  |  JsonToken.END_OBJECT;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_INT  |  JsonToken.END_OBJECT;  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	_numTypesValid  =  JsonToken.VALUE_NUMBER_INT  |  JsonToken.END_OBJECT;	  _numTypesValid    =    JsonToken.VALUE_NUMBER_INT;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
18	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
19	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_tokenIncomplete)  {  _skipString();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_tokenIncomplete)  {  _skipString();  }  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_tokenIncomplete)  {  _skipString();  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
20	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_bufferRecyclable)  {  _skipString();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_bufferRecyclable)  {  _skipString();  }  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_bufferRecyclable)  {  _skipString();  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
21	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_tokenIncomplete)  {  _skipString();  return  null;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_tokenIncomplete)  {  _skipString();  return  null;  }  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_tokenIncomplete)  {  _skipString();  return  null;  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
22	[BUG]  [BUGGY]  _numTypesValid  =  _nextNumericValue()  +  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  _numTypesValid  =  _nextNumericValue()  +  1;  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	_numTypesValid  =  _nextNumericValue()  +  1;	  _numTypesValid    =    NR_UNKNOWN    +    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
23	[BUG]  [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NULL;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NULL;  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	_numTypesValid  =  JsonToken.VALUE_NULL;	  _numTypesValid    =    JsonToken.FIELD_NAME;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
24	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_skipWSOrEnd()  >  0)  {  return  _nextAfterName();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_skipWSOrEnd()  >  0)  {  return  _nextAfterName();  }  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_skipWSOrEnd()  >  0)  {  return  _nextAfterName();  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
25	[BUG]  [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.VALUE_NUMBER_FLOAT;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }      [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]    if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	_numTypesValid  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.VALUE_NUMBER_FLOAT;	  _numTypesValid    =    JsonToken.VALUE_NUMBER_INT;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
