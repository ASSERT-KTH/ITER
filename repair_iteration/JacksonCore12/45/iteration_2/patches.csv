bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _nextToken  =  t  |  JsonToken.END_ARRAY;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  t  |  JsonToken.END_ARRAY;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  t  |  JsonToken.END_ARRAY;	  _nextToken    =    JsonToken.END_ARRAY    |    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
2	[BUG]  [BUGGY]  _nextToken  =  t  |  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  t  |  JsonToken.END_OBJECT;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  t  |  JsonToken.END_OBJECT;	  _nextToken    =    JsonToken.END_ARRAY    |    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
3	[BUG]  [BUGGY]  _nextToken  =  JsonToken.END_ARRAY  &  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  JsonToken.END_ARRAY  &  JsonToken.END_OBJECT;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  JsonToken.END_ARRAY  &  JsonToken.END_OBJECT;	  _nextToken    =    JsonToken.END_ARRAY    |    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
4	[BUG]  [BUGGY]  _nextToken  =  t  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  t  +  1;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  t  +  1;	  _nextToken    =    JsonToken.FIELD_NAME    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
5	[BUG]  [BUGGY]  ||  t  ==  JsonToken.END_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  ||  t  ==  JsonToken.END_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	||  t  ==  JsonToken.END_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,	  if(t    ==    JsonToken.END_ARRAY)    {    _nextToken    =    JsonToken.END_ARRAY;    }    else    {    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
6	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,	  if(t    ==    JsonToken.END_ARRAY)    {    _nextToken    =    JsonToken.END_ARRAY;    }    else    {    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
7	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);	  if(t    ==    JsonToken.START_OBJECT)    {    _nextToken    =    JsonToken.START_ARRAY;    }    else    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
8	[BUG]  [BUGGY]  ||  t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  ||  t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	||  t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);	  if(t    ==    JsonToken.START_OBJECT)    {    _nextToken    =    JsonToken.START_ARRAY;    }    else    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
9	[BUG]  [BUGGY]  ||  t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  ||  t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	||  t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,	  if(t    ==    JsonToken.START_OBJECT)    {    _nextToken    =    JsonToken.START_ARRAY;    }    else    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
10	[BUG]  [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _currToken);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _currToken);  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _currToken);	  t    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
11	[BUG]  [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);	  t    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  ||  t  ==  JsonToken.VALUE_NULL)  {  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  ||  t  ==  JsonToken.VALUE_NULL)  {  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	||  t  ==  JsonToken.VALUE_NULL)  {  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);	  if(t    ==    JsonToken.VALUE_NULL)    {    if(t    ==    JsonToken.START_OBJECT)    {    t    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
13	[BUG]  [BUGGY]  _nextToken  =  JsonToken.VALUE_STRING  &  JsonToken.END_ARRAY;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  JsonToken.VALUE_STRING  &  JsonToken.END_ARRAY;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  JsonToken.VALUE_STRING  &  JsonToken.END_ARRAY;	  _nextToken    =    JsonToken.VALUE_STRING    |    JsonToken.END_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
14	[BUG]  [BUGGY]  _nextToken  =  t  |  JsonToken.VALUE_STRING;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  t  |  JsonToken.VALUE_STRING;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  t  |  JsonToken.VALUE_STRING;	  _nextToken    =    JsonToken.VALUE_STRING    |    JsonToken.END_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
15	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to	  if(t    ==    JsonToken.START_OBJECT)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _to    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _to  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _to  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _to	  if(t    ==    JsonToken.START_OBJECT)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _to    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);	  if(t    ==    JsonToken.VALUE_NULL)    {    if(t    ==    JsonToken.START_OBJECT)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
18	[BUG]  [BUGGY]  ||  t  ==  JsonToken.VALUE_NULL)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  ||  t  ==  JsonToken.VALUE_NULL)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	||  t  ==  JsonToken.VALUE_NULL)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);	  if(t    ==    JsonToken.VALUE_NULL)    {    if(t    ==    JsonToken.START_OBJECT)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
19	[BUG]  [BUGGY]  _nextToken  =  JsonToken.END_OBJECT  |  JsonToken.END_ARRAY;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  JsonToken.END_OBJECT  |  JsonToken.END_ARRAY;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  JsonToken.END_OBJECT  |  JsonToken.END_ARRAY;	  _nextToken    =    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
20	[BUG]  [BUGGY]  _nextToken  =  t.getMessage();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  t.getMessage();  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  t.getMessage();	  _nextToken    =    t.toString();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
21	[BUG]  [BUGGY]  _nextToken  =  t.getCurrentName();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  t.getCurrentName();  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  t.getCurrentName();	  _nextToken    =    t.toString();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
22	[BUG]  [BUGGY]  _nextToken  =  JsonToken.VALUE_STRING  &  JsonToken.START_OBJECT;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  JsonToken.VALUE_STRING  &  JsonToken.START_OBJECT;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  JsonToken.VALUE_STRING  &  JsonToken.START_OBJECT;	  _nextToken    =    JsonToken.VALUE_STRING    |    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
23	[BUG]  [BUGGY]  ||  t  ==  JsonToken.FIELD_NAME)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  ||  t  ==  JsonToken.FIELD_NAME)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	||  t  ==  JsonToken.FIELD_NAME)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,	  if(t    ==    JsonToken.FIELD_NAME)    {    _nextToken    =    JsonToken.FIELD_NAME;    }    else    {    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
24	[BUG]  [BUGGY]  _nextToken  =  JsonToken.END_ARRAY  +  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  JsonToken.END_ARRAY  +  2;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  JsonToken.END_ARRAY  +  2;	  _nextToken    =    JsonToken.END_ARRAY    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  _nextToken  =  JsonToken.END_OBJECT  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  JsonToken.END_OBJECT  +  1;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  JsonToken.END_OBJECT  +  1;	  _nextToken    =    JsonToken.START_OBJECT    +    1;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
26	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _	  if(t    ==    JsonToken.VALUE_STRING)    {    _nextToken    =    JsonToken.VALUE_STRING;    }    else    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
27	[BUG]  [BUGGY]  ||  t  ==  JsonToken.END_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  ||  t  ==  JsonToken.END_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	||  t  ==  JsonToken.END_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);	  if(t    ==    JsonToken.END_ARRAY)    {    _nextToken    =    JsonToken.END_ARRAY;    }    else    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
28	[BUG]  [BUGGY]  _nextToken  =  t.nextToken();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  t.nextToken();  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  t.nextToken();	  _nextToken    =    t.getCurrentToken();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
29	[BUG]  [BUGGY]  _nextToken  =  JsonToken.VALUE_STRING  &  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  JsonToken.VALUE_STRING  &  JsonToken.END_OBJECT;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  JsonToken.VALUE_STRING  &  JsonToken.END_OBJECT;	  _nextToken    =    JsonToken.VALUE_STRING    |    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
30	[BUG]  [BUGGY]  _nextToken  =  JsonToken.VALUE_STRING  |  JsonToken.END_OBJECT  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  JsonToken.VALUE_STRING  |  JsonToken.END_OBJECT  +  1;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  JsonToken.VALUE_STRING  |  JsonToken.END_OBJECT  +  1;	  _nextToken    =    JsonToken.VALUE_STRING    |    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
31	[BUG]  [BUGGY]  JsonToken  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _currToken);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  JsonToken  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _currToken);  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	JsonToken  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _currToken);	  JsonToken    t    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
32	[BUG]  [BUGGY]  JsonToken  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  JsonToken  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	JsonToken  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);	  JsonToken    t    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
33	[BUG]  [BUGGY]  ||  t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  ||  t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	||  t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,	  if(t    ==    JsonToken.START_OBJECT)    {    _nextToken    =    JsonToken.START_OBJECT;    }    else    {    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
34	[BUG]  [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	||  t  ==  JsonToken.VALUE_STRING)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to	  if(t    ==    JsonToken.VALUE_STRING)    {    _nextToken    =    JsonToken.VALUE_STRING;    }    else    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _to    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
35	[BUG]  [BUGGY]  ||  t  ==  JsonToken.FIELD_NAME)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  ||  t  ==  JsonToken.FIELD_NAME)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	||  t  ==  JsonToken.FIELD_NAME)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,	  if(t    ==    JsonToken.FIELD_NAME)    {    _nextToken    =    JsonToken.FIELD_NAME;    }    else    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
36	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,	  if(t    ==    JsonToken.FIELD_NAME)    {    _nextToken    =    JsonToken.FIELD_NAME;    }    else    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
37	[BUG]  [BUGGY]  t  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  t  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	t  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);	  t    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  t  =  _parsingContext.createChildArrayContext(_currToken,  _tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  t  =  _parsingContext.createChildArrayContext(_currToken,  _tokenInputRow,  _tokenInputCol);  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	t  =  _parsingContext.createChildArrayContext(_currToken,  _tokenInputRow,  _tokenInputCol);	  t    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  ||  t  ==  JsonToken.VALUE_STRING)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	||  t  ==  JsonToken.VALUE_STRING)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,	  if(t    ==    JsonToken.VALUE_STRING)    {    _nextToken    =    JsonToken.VALUE_STRING;    }    else    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
40	[BUG]  [BUGGY]  JsonToken  t  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  JsonToken  t  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	JsonToken  t  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);	  JsonToken    t    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
41	[BUG]  [BUGGY]  JsonToken  t  =  _parsingContext.createChildStringContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  JsonToken  t  =  _parsingContext.createChildStringContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	JsonToken  t  =  _parsingContext.createChildStringContext(_tokenInputRow,  _tokenInputCol);	  JsonToken    t    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
42	[BUG]  [BUGGY]  t  =  _parsingContext.createChildThroughContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  t  =  _parsingContext.createChildThroughContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	t  =  _parsingContext.createChildThroughContext(_tokenInputRow,  _tokenInputCol);	  t    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
43	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_toInputRow,  _to  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_toInputRow,  _to  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_toInputRow,  _to	  if(t    ==    JsonToken.END_ARRAY)    {    _nextToken    =    JsonToken.END_ARRAY;    }    else    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _to    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
44	[BUG]  [BUGGY]  _nextToken  =  JsonToken.FIELD_NAME  +  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  JsonToken.FIELD_NAME  +  2;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  JsonToken.FIELD_NAME  +  2;	  _nextToken    =    JsonToken.FIELD_NAME    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
45	[BUG]  [BUGGY]  _nextToken  =  JsonToken.FIELD_NAME  +  1L;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  JsonToken.FIELD_NAME  +  1L;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  JsonToken.FIELD_NAME  +  1L;	  _nextToken    =    JsonToken.FIELD_NAME    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
46	[BUG]  [BUGGY]  JsonToken  t  =  _parsingContext.createChildAfterContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  JsonToken  t  =  _parsingContext.createChildAfterContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	JsonToken  t  =  _parsingContext.createChildAfterContext(_tokenInputRow,  _tokenInputCol);	  JsonToken    t    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
47	[BUG]  [BUGGY]  if(t  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  if(t  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	if(t  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow	  if(t    ==    JsonToken.START_OBJECT)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
48	[BUG]  [BUGGY]  if(t  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  if(t  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	if(t  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,	  if(t    ==    JsonToken.START_OBJECT)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _to    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
49	[BUG]  [BUGGY]  _nextToken  =  JsonToken.END_ARRAY  |  JsonToken.END_OBJECT  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  JsonToken.END_ARRAY  |  JsonToken.END_OBJECT  +  1;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  JsonToken.END_ARRAY  |  JsonToken.END_OBJECT  +  1;	  _nextToken    =    JsonToken.END_ARRAY    |    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
50	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	if(t  ==  JsonToken.VALUE_STRING)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to	  if(t    ==    JsonToken.VALUE_STRING)    {    _nextToken    =    JsonToken.VALUE_STRING;    }    else    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _to    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
51	[BUG]  [BUGGY]  _nextToken  =  t.getText();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  t.getText();  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  t.getText();	  _nextToken    =    t.toString();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
52	[BUG]  [BUGGY]  _nextToken  =  t.getCurrentToken()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  t.getCurrentToken()  +  1;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  t.getCurrentToken()  +  1;	  _nextToken    =    t.getCurrentToken();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
53	[BUG]  [BUGGY]  _nextToken  =  JsonToken.START_OBJECT  +  1L;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  JsonToken.START_OBJECT  +  1L;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  JsonToken.START_OBJECT  +  1L;	  _nextToken    =    JsonToken.START_OBJECT    +    1;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
54	[BUG]  [BUGGY]  _nextToken  =  JsonToken.START_ARRAY  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  JsonToken.START_ARRAY  +  1;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  JsonToken.START_ARRAY  +  1;	  _nextToken    =    JsonToken.START_OBJECT    +    1;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
55	[BUG]  [BUGGY]  _nextToken  =  JsonToken.VALUE_STRING  |  JsonToken.START_ARRAY;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  JsonToken.VALUE_STRING  |  JsonToken.START_ARRAY;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  JsonToken.VALUE_STRING  |  JsonToken.START_ARRAY;	  _nextToken    =    JsonToken.VALUE_STRING    |    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
56	[BUG]  [BUGGY]  _nextToken  =  JsonToken.VALUE_STRING  |  JsonToken.END_ARRAY  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  JsonToken.VALUE_STRING  |  JsonToken.END_ARRAY  +  1;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  JsonToken.VALUE_STRING  |  JsonToken.END_ARRAY  +  1;	  _nextToken    =    JsonToken.VALUE_STRING    |    JsonToken.END_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
57	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to	  if(t    ==    JsonToken.VALUE_NULL)    {    if(t    ==    JsonToken.START_OBJECT)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
58	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }	  if(t    ==    JsonToken.VALUE_NULL)    {    if(t    ==    JsonToken.START_OBJECT)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
59	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(t  ==  JsonToken.START_OBJECT)  {  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(t  ==  JsonToken.START_OBJECT)  {  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(t  ==  JsonToken.START_OBJECT)  {  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }	  if(t    ==    JsonToken.VALUE_NULL)    {    if(t    ==    JsonToken.START_OBJECT)    {    t    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
60	[BUG]  [BUGGY]  ||  t  ==  JsonToken.END_ARRAY)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  ||  t  ==  JsonToken.END_ARRAY)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	||  t  ==  JsonToken.END_ARRAY)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,	  if(t    ==    JsonToken.END_ARRAY)    {    _nextToken    =    JsonToken.END_ARRAY;    }    else    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
61	[BUG]  [BUGGY]  _nextToken  =  JsonToken.END_ARRAY  &&  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  JsonToken.END_ARRAY  &&  JsonToken.END_OBJECT;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  JsonToken.END_ARRAY  &&  JsonToken.END_OBJECT;	  _nextToken    =    JsonToken.END_ARRAY    |    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
62	[BUG]  [BUGGY]  _nextToken  =  t,  JsonToken.START_OBJECT  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  t,  JsonToken.START_OBJECT  +  1;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  t,  JsonToken.START_OBJECT  +  1;	  _nextToken    =    JsonToken.START_OBJECT    +    1;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
63	[BUG]  [BUGGY]  _nextToken  =  t  |  JsonToken.START_OBJECT;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  t  |  JsonToken.START_OBJECT;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  t  |  JsonToken.START_OBJECT;	  _nextToken    =    JsonToken.VALUE_STRING    |    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
64	[BUG]  [BUGGY]  if(t  ==  JsonToken.START_ARRAY)  {  _nextToken  =  JsonToken.START_ARRAY;  }  else  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  if(t  ==  JsonToken.START_ARRAY)  {  _nextToken  =  JsonToken.START_ARRAY;  }  else  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	if(t  ==  JsonToken.START_ARRAY)  {  _nextToken  =  JsonToken.START_ARRAY;  }  else  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,	  _nextToken    =    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
65	[BUG]  [BUGGY]  if(t  ==  JsonToken.START_ARRAY)  {  _nextToken  =  JsonToken.START_ARRAY;  }  else  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  if(t  ==  JsonToken.START_ARRAY)  {  _nextToken  =  JsonToken.START_ARRAY;  }  else  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	if(t  ==  JsonToken.START_ARRAY)  {  _nextToken  =  JsonToken.START_ARRAY;  }  else  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,	  _nextToken    =    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
66	[BUG]  [BUGGY]  if(t  ==  JsonToken.START_ARRAY)  {  _nextToken  =  JsonToken.START_ARRAY;  }  else  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  if(t  ==  JsonToken.START_ARRAY)  {  _nextToken  =  JsonToken.START_ARRAY;  }  else  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	if(t  ==  JsonToken.START_ARRAY)  {  _nextToken  =  JsonToken.START_ARRAY;  }  else  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _	  _nextToken    =    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
67	[BUG]  [BUGGY]  _nextToken  =  t.getCurrentToken(JsonToken.START_OBJECT);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  t.getCurrentToken(JsonToken.START_OBJECT);  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  t.getCurrentToken(JsonToken.START_OBJECT);	  _nextToken    =    t.getCurrentToken();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
68	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	if(t  ==  JsonToken.VALUE_STRING)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }	  if(t    ==    JsonToken.VALUE_STRING)    {    _nextToken    =    JsonToken.VALUE_STRING;    }    else    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
69	[BUG]  [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to	  if(t    ==    JsonToken.VALUE_STRING)    {    _nextToken    =    JsonToken.VALUE_STRING;    }    else    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _to    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
70	[BUG]  [BUGGY]  t  =  _parsingContext.createChildLiteralContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  t  =  _parsingContext.createChildLiteralContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	t  =  _parsingContext.createChildLiteralContext(_tokenInputRow,  _tokenInputCol);	  t    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
71	[BUG]  [BUGGY]  t  =  _parsingContext.createChildTokenContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  t  =  _parsingContext.createChildTokenContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	t  =  _parsingContext.createChildTokenContext(_tokenInputRow,  _tokenInputCol);	  t    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
72	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_NULL)  {  if(t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  if(t  ==  JsonToken.VALUE_NULL)  {  if(t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	if(t  ==  JsonToken.VALUE_NULL)  {  if(t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to	  if(t    ==    JsonToken.VALUE_NULL)    {    if(t    ==    JsonToken.START_OBJECT)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
73	[BUG]  [BUGGY]  if(t  ==  JsonToken.FIELD_NAME)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  if(t  ==  JsonToken.FIELD_NAME)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	if(t  ==  JsonToken.FIELD_NAME)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }	  if(t    ==    JsonToken.FIELD_NAME)    {    _nextToken    =    JsonToken.FIELD_NAME;    }    else    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
74	[BUG]  [BUGGY]  if(t  ==  JsonToken.START_OBJECT)  {  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  if(t  ==  JsonToken.START_OBJECT)  {  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	if(t  ==  JsonToken.START_OBJECT)  {  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _to	  if(t    ==    JsonToken.START_OBJECT)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _to    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
75	[BUG]  [BUGGY]  if(t  ==  JsonToken.START_OBJECT)  {  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _to  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  if(t  ==  JsonToken.START_OBJECT)  {  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _to  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	if(t  ==  JsonToken.START_OBJECT)  {  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _to	  if(t    ==    JsonToken.START_OBJECT)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _to    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
76	[BUG]  [BUGGY]  t  =  _parsingContext.createChildArrayContext(_tokenInputRow,  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  t  =  _parsingContext.createChildArrayContext(_tokenInputRow,  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	t  =  _parsingContext.createChildArrayContext(_tokenInputRow,	  if(t    ==    JsonToken.FIELD_NAME)    {    _nextToken    =    JsonToken.FIELD_NAME;    }    else    {    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
77	[BUG]  [BUGGY]  _nextToken  =  JsonToken.FIELD_NAME  ||  t  ==  JsonToken.FIELD_NAME  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _nextToken  =  JsonToken.FIELD_NAME  ||  t  ==  JsonToken.FIELD_NAME  +  1;  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_nextToken  =  JsonToken.FIELD_NAME  ||  t  ==  JsonToken.FIELD_NAME  +  1;	  _nextToken    =    JsonToken.FIELD_NAME    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
78	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _	  if(t    ==    JsonToken.START_OBJECT)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
79	[BUG]  [BUGGY]  if(t  ==  JsonToken.FIELD_NAME)  {  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  if(t  ==  JsonToken.FIELD_NAME)  {  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	if(t  ==  JsonToken.FIELD_NAME)  {  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _	  if(t    ==    JsonToken.START_OBJECT)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
80	[BUG]  [BUGGY]  if(t  ==  JsonToken.START_OBJECT)  {  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  final  JsonToken  _nextAfterName()  {  _nameCopied  =  false;  //  need  to  invalidate  if  it  was  copied  JsonToken  t  =  _nextToken;      [BUGGY]  if(t  ==  JsonToken.START_OBJECT)  {  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _  [BUGGY]          if  (t  ==  JsonToken.START_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  if  (t  ==  JsonToken.START_OBJECT)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  return  (_currToken  =  t);  [CLASS]  ReaderBasedJsonParser  [METHOD]  _nextAfterName  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	if(t  ==  JsonToken.START_OBJECT)  {  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _	  if(t    ==    JsonToken.START_OBJECT)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
