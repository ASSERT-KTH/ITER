bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] super(ctxt, features); [FE] AssertionFailedError [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st, char[] inputBuffer, int start, int end, boolean bufferRecyclable) { [BUGGY] super(ctxt, features); [BUGGY] _reader = r; _inputBuffer = inputBuffer; _inputPtr = start; _inputEnd = end; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = bufferRecyclable; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer,char[],int,int,boolean)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st char[] inputBuffer int start int end boolean bufferRecyclable [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow end features start long _nameInputTotal char[] _inputBuffer inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	111	111	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st, char[] inputBuffer, int start, int end, boolean bufferRecyclable) { [BUGGY] [BUGGY] super(ctxt, features); _reader = r; _inputBuffer = inputBuffer; _inputPtr = start; _inputEnd = end; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = bufferRecyclable; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer,char[],int,int,boolean)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st char[] inputBuffer int start int end boolean bufferRecyclable [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow end features start long _nameInputTotal char[] _inputBuffer inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	111	111	1	add	
3	[BUG] [BUGGY] protected boolean _tokenIncomplete = false; [FE] AssertionFailedError [CONTEXT] [BUGGY] protected boolean _tokenIncomplete = false; [BUGGY]  [CLASS] ReaderBasedJsonParser  [VARIABLES] 	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	77	77	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] protected boolean _tokenIncomplete = false; [CLASS] ReaderBasedJsonParser  [VARIABLES] 	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	77	77	1	add	
5	[BUG] [BUGGY] _reader = r; [FE] AssertionFailedError [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st, char[] inputBuffer, int start, int end, boolean bufferRecyclable) { super(ctxt, features); [BUGGY] _reader = r; [BUGGY] _inputBuffer = inputBuffer; _inputPtr = start; _inputEnd = end; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = bufferRecyclable; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer,char[],int,int,boolean)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st char[] inputBuffer int start int end boolean bufferRecyclable [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow end features start long _nameInputTotal char[] _inputBuffer inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	112	112	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st, char[] inputBuffer, int start, int end, boolean bufferRecyclable) { super(ctxt, features); [BUGGY] [BUGGY] _reader = r; _inputBuffer = inputBuffer; _inputPtr = start; _inputEnd = end; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = bufferRecyclable; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer,char[],int,int,boolean)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st char[] inputBuffer int start int end boolean bufferRecyclable [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow end features start long _nameInputTotal char[] _inputBuffer inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	112	112	1	add	
7	[BUG] [BUGGY] _inputBuffer = inputBuffer; [FE] AssertionFailedError [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st, char[] inputBuffer, int start, int end, boolean bufferRecyclable) { super(ctxt, features); _reader = r; [BUGGY] _inputBuffer = inputBuffer; [BUGGY] _inputPtr = start; _inputEnd = end; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = bufferRecyclable; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer,char[],int,int,boolean)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st char[] inputBuffer int start int end boolean bufferRecyclable [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow end features start long _nameInputTotal char[] _inputBuffer inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	113	113	1	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st, char[] inputBuffer, int start, int end, boolean bufferRecyclable) { super(ctxt, features); _reader = r; [BUGGY] [BUGGY] _inputBuffer = inputBuffer; _inputPtr = start; _inputEnd = end; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = bufferRecyclable; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer,char[],int,int,boolean)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st char[] inputBuffer int start int end boolean bufferRecyclable [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow end features start long _nameInputTotal char[] _inputBuffer inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	113	113	1	add	
9	[BUG] [BUGGY] _inputPtr = start; [FE] AssertionFailedError [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st, char[] inputBuffer, int start, int end, boolean bufferRecyclable) { super(ctxt, features); _reader = r; _inputBuffer = inputBuffer; [BUGGY] _inputPtr = start; [BUGGY] _inputEnd = end; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = bufferRecyclable; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer,char[],int,int,boolean)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st char[] inputBuffer int start int end boolean bufferRecyclable [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow end features start long _nameInputTotal char[] _inputBuffer inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	114	114	1	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st, char[] inputBuffer, int start, int end, boolean bufferRecyclable) { super(ctxt, features); _reader = r; _inputBuffer = inputBuffer; [BUGGY] [BUGGY] _inputPtr = start; _inputEnd = end; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = bufferRecyclable; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer,char[],int,int,boolean)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st char[] inputBuffer int start int end boolean bufferRecyclable [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow end features start long _nameInputTotal char[] _inputBuffer inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	114	114	1	add	
11	[BUG] [BUGGY] _inputEnd = end; [FE] AssertionFailedError [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st, char[] inputBuffer, int start, int end, boolean bufferRecyclable) { super(ctxt, features); _reader = r; _inputBuffer = inputBuffer; _inputPtr = start; [BUGGY] _inputEnd = end; [BUGGY] _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = bufferRecyclable; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer,char[],int,int,boolean)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st char[] inputBuffer int start int end boolean bufferRecyclable [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow end features start long _nameInputTotal char[] _inputBuffer inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	115	115	1	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st, char[] inputBuffer, int start, int end, boolean bufferRecyclable) { super(ctxt, features); _reader = r; _inputBuffer = inputBuffer; _inputPtr = start; [BUGGY] [BUGGY] _inputEnd = end; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = bufferRecyclable; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer,char[],int,int,boolean)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st char[] inputBuffer int start int end boolean bufferRecyclable [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow end features start long _nameInputTotal char[] _inputBuffer inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	115	115	1	add	
13	[BUG] [BUGGY] _objectCodec = codec; [FE] AssertionFailedError [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st, char[] inputBuffer, int start, int end, boolean bufferRecyclable) { super(ctxt, features); _reader = r; _inputBuffer = inputBuffer; _inputPtr = start; _inputEnd = end; [BUGGY] _objectCodec = codec; [BUGGY] _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = bufferRecyclable; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer,char[],int,int,boolean)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st char[] inputBuffer int start int end boolean bufferRecyclable [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow end features start long _nameInputTotal char[] _inputBuffer inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	116	116	1	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st, char[] inputBuffer, int start, int end, boolean bufferRecyclable) { super(ctxt, features); _reader = r; _inputBuffer = inputBuffer; _inputPtr = start; _inputEnd = end; [BUGGY] [BUGGY] _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = bufferRecyclable; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer,char[],int,int,boolean)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st char[] inputBuffer int start int end boolean bufferRecyclable [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow end features start long _nameInputTotal char[] _inputBuffer inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	116	116	1	add	
15	[BUG] [BUGGY] _symbols = st; [FE] AssertionFailedError [CONTEXT] ObjectCodec codec, CharsToNameCanonicalizer st, char[] inputBuffer, int start, int end, boolean bufferRecyclable) { super(ctxt, features); _reader = r; _inputBuffer = inputBuffer; _inputPtr = start; _inputEnd = end; _objectCodec = codec; [BUGGY] _symbols = st; [BUGGY] _hashSeed = st.hashSeed(); _bufferRecyclable = bufferRecyclable; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer,char[],int,int,boolean)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st char[] inputBuffer int start int end boolean bufferRecyclable [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow end features start long _nameInputTotal char[] _inputBuffer inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	117	117	1	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] ObjectCodec codec, CharsToNameCanonicalizer st, char[] inputBuffer, int start, int end, boolean bufferRecyclable) { super(ctxt, features); _reader = r; _inputBuffer = inputBuffer; _inputPtr = start; _inputEnd = end; _objectCodec = codec; [BUGGY] [BUGGY] _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = bufferRecyclable; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer,char[],int,int,boolean)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st char[] inputBuffer int start int end boolean bufferRecyclable [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow end features start long _nameInputTotal char[] _inputBuffer inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	117	117	1	add	
17	[BUG] [BUGGY] _hashSeed = st.hashSeed(); [FE] AssertionFailedError [CONTEXT] char[] inputBuffer, int start, int end, boolean bufferRecyclable) { super(ctxt, features); _reader = r; _inputBuffer = inputBuffer; _inputPtr = start; _inputEnd = end; _objectCodec = codec; _symbols = st; [BUGGY] _hashSeed = st.hashSeed(); [BUGGY] _bufferRecyclable = bufferRecyclable; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer,char[],int,int,boolean)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st char[] inputBuffer int start int end boolean bufferRecyclable [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow end features start long _nameInputTotal char[] _inputBuffer inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	118	118	1	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] char[] inputBuffer, int start, int end, boolean bufferRecyclable) { super(ctxt, features); _reader = r; _inputBuffer = inputBuffer; _inputPtr = start; _inputEnd = end; _objectCodec = codec; _symbols = st; [BUGGY] [BUGGY] _hashSeed = st.hashSeed(); _bufferRecyclable = bufferRecyclable; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer,char[],int,int,boolean)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st char[] inputBuffer int start int end boolean bufferRecyclable [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow end features start long _nameInputTotal char[] _inputBuffer inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	118	118	1	add	
19	[BUG] [BUGGY] _bufferRecyclable = bufferRecyclable; [FE] AssertionFailedError [CONTEXT] boolean bufferRecyclable) { super(ctxt, features); _reader = r; _inputBuffer = inputBuffer; _inputPtr = start; _inputEnd = end; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); [BUGGY] _bufferRecyclable = bufferRecyclable; [BUGGY] } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer,char[],int,int,boolean)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st char[] inputBuffer int start int end boolean bufferRecyclable [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow end features start long _nameInputTotal char[] _inputBuffer inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	119	119	1	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] boolean bufferRecyclable) { super(ctxt, features); _reader = r; _inputBuffer = inputBuffer; _inputPtr = start; _inputEnd = end; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); [BUGGY] [BUGGY] _bufferRecyclable = bufferRecyclable; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer,char[],int,int,boolean)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st char[] inputBuffer int start int end boolean bufferRecyclable [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow end features start long _nameInputTotal char[] _inputBuffer inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	119	119	1	add	
21	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] { super(ctxt, features); _reader = r; _inputBuffer = inputBuffer; _inputPtr = start; _inputEnd = end; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = bufferRecyclable; [BUGGY] } [BUGGY]  [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer,char[],int,int,boolean)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st char[] inputBuffer int start int end boolean bufferRecyclable [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow end features start long _nameInputTotal char[] _inputBuffer inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	120	120	1	replace	
22	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] { super(ctxt, features); _reader = r; _inputBuffer = inputBuffer; _inputPtr = start; _inputEnd = end; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = bufferRecyclable; [BUGGY] [BUGGY] } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer,char[],int,int,boolean)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st char[] inputBuffer int start int end boolean bufferRecyclable [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow end features start long _nameInputTotal char[] _inputBuffer inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	120	120	1	add	
23	[BUG] [BUGGY] protected final static int[] _icLatin1 = CharTypes.getInputCodeLatin1(); [FE] AssertionFailedError [CONTEXT] [BUGGY] protected final static int[] _icLatin1 = CharTypes.getInputCodeLatin1(); [BUGGY]  [CLASS] ReaderBasedJsonParser  [VARIABLES] 	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	24	24	1	replace	
24	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] protected final static int[] _icLatin1 = CharTypes.getInputCodeLatin1(); [CLASS] ReaderBasedJsonParser  [VARIABLES] 	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	24	24	1	add	
25	[BUG] [BUGGY] if (_currToken == JsonToken.FIELD_NAME) { [FE] AssertionFailedError [CONTEXT] {     [BUGGY] if (_currToken == JsonToken.FIELD_NAME) { [BUGGY] return _nextAfterName(); }   _numTypesValid = NR_UNKNOWN; if (_tokenIncomplete) { _skipString(); // only strings can be partial } int i = _skipWSOrEnd(); if (i < 0) { // end-of-input [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] {     [BUGGY] [BUGGY] if (_currToken == JsonToken.FIELD_NAME) { return _nextAfterName(); }   _numTypesValid = NR_UNKNOWN; if (_tokenIncomplete) { _skipString(); // only strings can be partial } int i = _skipWSOrEnd(); if (i < 0) { // end-of-input [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	580	580	1	add	
27	[BUG] [BUGGY] return _nextAfterName(); [FE] AssertionFailedError [CONTEXT] {     if (_currToken == JsonToken.FIELD_NAME) { [BUGGY] return _nextAfterName(); [BUGGY] }   _numTypesValid = NR_UNKNOWN; if (_tokenIncomplete) { _skipString(); // only strings can be partial } int i = _skipWSOrEnd(); if (i < 0) { // end-of-input  [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] {     if (_currToken == JsonToken.FIELD_NAME) { [BUGGY] [BUGGY] return _nextAfterName(); }   _numTypesValid = NR_UNKNOWN; if (_tokenIncomplete) { _skipString(); // only strings can be partial } int i = _skipWSOrEnd(); if (i < 0) { // end-of-input  [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	add	
29	[BUG] [BUGGY] _numTypesValid = NR_UNKNOWN; [FE] AssertionFailedError [CONTEXT] {     if (_currToken == JsonToken.FIELD_NAME) { return _nextAfterName(); }   [BUGGY] _numTypesValid = NR_UNKNOWN; [BUGGY] if (_tokenIncomplete) { _skipString(); // only strings can be partial } int i = _skipWSOrEnd(); if (i < 0) { // end-of-input    close(); return (_currToken = null); [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	replace	
30	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] {     if (_currToken == JsonToken.FIELD_NAME) { return _nextAfterName(); }   [BUGGY] [BUGGY] _numTypesValid = NR_UNKNOWN; if (_tokenIncomplete) { _skipString(); // only strings can be partial } int i = _skipWSOrEnd(); if (i < 0) { // end-of-input    close(); return (_currToken = null); [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	585	585	1	add	
31	[BUG] [BUGGY] if (_tokenIncomplete) { [FE] AssertionFailedError [CONTEXT]     if (_currToken == JsonToken.FIELD_NAME) { return _nextAfterName(); }   _numTypesValid = NR_UNKNOWN; [BUGGY] if (_tokenIncomplete) { [BUGGY] _skipString(); // only strings can be partial } int i = _skipWSOrEnd(); if (i < 0) { // end-of-input    close(); return (_currToken = null); } [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	586	586	1	replace	
32	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]     if (_currToken == JsonToken.FIELD_NAME) { return _nextAfterName(); }   _numTypesValid = NR_UNKNOWN; [BUGGY] [BUGGY] if (_tokenIncomplete) { _skipString(); // only strings can be partial } int i = _skipWSOrEnd(); if (i < 0) { // end-of-input    close(); return (_currToken = null); } [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	586	586	1	add	
33	[BUG] [BUGGY] int i = _skipWSOrEnd(); [FE] AssertionFailedError [CONTEXT]  if (_currToken == JsonToken.FIELD_NAME) { return _nextAfterName(); }   _numTypesValid = NR_UNKNOWN; if (_tokenIncomplete) { _skipString(); // only strings can be partial } [BUGGY] int i = _skipWSOrEnd(); [BUGGY] if (i < 0) { // end-of-input    close(); return (_currToken = null); }  _binaryValue = null;  [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	
34	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  if (_currToken == JsonToken.FIELD_NAME) { return _nextAfterName(); }   _numTypesValid = NR_UNKNOWN; if (_tokenIncomplete) { _skipString(); // only strings can be partial } [BUGGY] [BUGGY] int i = _skipWSOrEnd(); if (i < 0) { // end-of-input    close(); return (_currToken = null); }  _binaryValue = null;  [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	add	
35	[BUG] [BUGGY] if (i < 0) { // end-of-input /* 19-Feb-2009, tatu: Should actually close/release things  * like input source, symbol table and recyclable buffers now. [FE] AssertionFailedError [CONTEXT] if (_currToken == JsonToken.FIELD_NAME) { return _nextAfterName(); }   _numTypesValid = NR_UNKNOWN; if (_tokenIncomplete) { _skipString(); // only strings can be partial } int i = _skipWSOrEnd(); [BUGGY] if (i < 0) { // end-of-input   /* 19-Feb-2009, tatu: Should actually close/release things       *  like input source, symbol table and recyclable buffers now. [BUGGY]    close(); return (_currToken = null); }  _binaryValue = null;   [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	590	592	1	replace	
36	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (_currToken == JsonToken.FIELD_NAME) { return _nextAfterName(); }   _numTypesValid = NR_UNKNOWN; if (_tokenIncomplete) { _skipString(); // only strings can be partial } int i = _skipWSOrEnd(); [BUGGY] [BUGGY] if (i < 0) { // end-of-input   /* 19-Feb-2009, tatu: Should actually close/release things       *  like input source, symbol table and recyclable buffers now.    close(); return (_currToken = null); }  _binaryValue = null;   [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	590	592	1	add	
37	[BUG] [BUGGY] _binaryValue = null; [FE] AssertionFailedError [CONTEXT] } int i = _skipWSOrEnd(); if (i < 0) { // end-of-input    close(); return (_currToken = null); }  [BUGGY] _binaryValue = null; [BUGGY]   if (i == INT_RBRACKET) { _updateLocation(); if (!_parsingContext.inArray()) { _reportMismatchedEndMarker(i, '}'); } _parsingContext = _parsingContext.getParent(); return (_currToken = JsonToken.END_ARRAY); } [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	598	598	1	replace	
38	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } int i = _skipWSOrEnd(); if (i < 0) { // end-of-input    close(); return (_currToken = null); }  [BUGGY] [BUGGY] _binaryValue = null;  if (i == INT_RBRACKET) { _updateLocation(); if (!_parsingContext.inArray()) { _reportMismatchedEndMarker(i, '}'); } _parsingContext = _parsingContext.getParent(); return (_currToken = JsonToken.END_ARRAY); } [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	598	598	1	add	
39	[BUG] [BUGGY] if (i == INT_RBRACKET) { [FE] AssertionFailedError [CONTEXT]    close(); return (_currToken = null); }  _binaryValue = null;  [BUGGY] if (i == INT_RBRACKET) { [BUGGY] _updateLocation(); if (!_parsingContext.inArray()) { _reportMismatchedEndMarker(i, '}'); } _parsingContext = _parsingContext.getParent(); return (_currToken = JsonToken.END_ARRAY); } if (i == INT_RCURLY) { _updateLocation(); if (!_parsingContext.inObject()) { [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	601	601	1	replace	
40	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]    close(); return (_currToken = null); }  _binaryValue = null;  [BUGGY] [BUGGY] if (i == INT_RBRACKET) { _updateLocation(); if (!_parsingContext.inArray()) { _reportMismatchedEndMarker(i, '}'); } _parsingContext = _parsingContext.getParent(); return (_currToken = JsonToken.END_ARRAY); } if (i == INT_RCURLY) { _updateLocation(); if (!_parsingContext.inObject()) { [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	601	601	1	add	
41	[BUG] [BUGGY] if (i == INT_RCURLY) { [FE] AssertionFailedError [CONTEXT]  if (i == INT_RBRACKET) { _updateLocation(); if (!_parsingContext.inArray()) { _reportMismatchedEndMarker(i, '}'); } _parsingContext = _parsingContext.getParent(); return (_currToken = JsonToken.END_ARRAY); } [BUGGY] if (i == INT_RCURLY) { [BUGGY] _updateLocation(); if (!_parsingContext.inObject()) { _reportMismatchedEndMarker(i, ']'); } _parsingContext = _parsingContext.getParent(); return (_currToken = JsonToken.END_OBJECT); }  if (_parsingContext.expectComma()) { [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	609	609	1	replace	
42	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  if (i == INT_RBRACKET) { _updateLocation(); if (!_parsingContext.inArray()) { _reportMismatchedEndMarker(i, '}'); } _parsingContext = _parsingContext.getParent(); return (_currToken = JsonToken.END_ARRAY); } [BUGGY] [BUGGY] if (i == INT_RCURLY) { _updateLocation(); if (!_parsingContext.inObject()) { _reportMismatchedEndMarker(i, ']'); } _parsingContext = _parsingContext.getParent(); return (_currToken = JsonToken.END_OBJECT); }  if (_parsingContext.expectComma()) { [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	609	609	1	add	
43	[BUG] [BUGGY] if (_parsingContext.expectComma()) { [FE] AssertionFailedError [CONTEXT] if (i == INT_RCURLY) { _updateLocation(); if (!_parsingContext.inObject()) { _reportMismatchedEndMarker(i, ']'); } _parsingContext = _parsingContext.getParent(); return (_currToken = JsonToken.END_OBJECT); }  [BUGGY] if (_parsingContext.expectComma()) { [BUGGY] i = _skipComma(i); } _updateLocation();    boolean inObject = _parsingContext.inObject(); if (inObject) {  [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	619	619	1	replace	
44	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (i == INT_RCURLY) { _updateLocation(); if (!_parsingContext.inObject()) { _reportMismatchedEndMarker(i, ']'); } _parsingContext = _parsingContext.getParent(); return (_currToken = JsonToken.END_OBJECT); }  [BUGGY] [BUGGY] if (_parsingContext.expectComma()) { i = _skipComma(i); } _updateLocation();    boolean inObject = _parsingContext.inObject(); if (inObject) {  [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	619	619	1	add	
45	[BUG] [BUGGY] _updateLocation(); [FE] AssertionFailedError [CONTEXT] _reportMismatchedEndMarker(i, ']'); } _parsingContext = _parsingContext.getParent(); return (_currToken = JsonToken.END_OBJECT); }  if (_parsingContext.expectComma()) { i = _skipComma(i); } [BUGGY] _updateLocation(); [BUGGY]     boolean inObject = _parsingContext.inObject(); if (inObject) {  String name = (i == INT_QUOTE) ? _parseName() : _handleOddName(i); _parsingContext.setCurrentName(name); _currToken = JsonToken.FIELD_NAME; [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	
46	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] _reportMismatchedEndMarker(i, ']'); } _parsingContext = _parsingContext.getParent(); return (_currToken = JsonToken.END_OBJECT); }  if (_parsingContext.expectComma()) { i = _skipComma(i); } [BUGGY] [BUGGY] _updateLocation();    boolean inObject = _parsingContext.inObject(); if (inObject) {  String name = (i == INT_QUOTE) ? _parseName() : _handleOddName(i); _parsingContext.setCurrentName(name); _currToken = JsonToken.FIELD_NAME; [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	add	
47	[BUG] [BUGGY] boolean inObject = _parsingContext.inObject(); [FE] AssertionFailedError [CONTEXT]  if (_parsingContext.expectComma()) { i = _skipComma(i); } _updateLocation();    [BUGGY] boolean inObject = _parsingContext.inObject(); [BUGGY] if (inObject) {  String name = (i == INT_QUOTE) ? _parseName() : _handleOddName(i); _parsingContext.setCurrentName(name); _currToken = JsonToken.FIELD_NAME; i = _skipColon(); }   [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	627	627	1	replace	
48	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  if (_parsingContext.expectComma()) { i = _skipComma(i); } _updateLocation();    [BUGGY] [BUGGY] boolean inObject = _parsingContext.inObject(); if (inObject) {  String name = (i == INT_QUOTE) ? _parseName() : _handleOddName(i); _parsingContext.setCurrentName(name); _currToken = JsonToken.FIELD_NAME; i = _skipColon(); }   [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	627	627	1	add	
49	[BUG] [BUGGY] if (inObject) { [FE] AssertionFailedError [CONTEXT]  if (_parsingContext.expectComma()) { i = _skipComma(i); } _updateLocation();    boolean inObject = _parsingContext.inObject(); [BUGGY] if (inObject) { [BUGGY]  String name = (i == INT_QUOTE) ? _parseName() : _handleOddName(i); _parsingContext.setCurrentName(name); _currToken = JsonToken.FIELD_NAME; i = _skipColon(); }   JsonToken t; [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	628	628	1	replace	
50	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  if (_parsingContext.expectComma()) { i = _skipComma(i); } _updateLocation();    boolean inObject = _parsingContext.inObject(); [BUGGY] [BUGGY] if (inObject) {  String name = (i == INT_QUOTE) ? _parseName() : _handleOddName(i); _parsingContext.setCurrentName(name); _currToken = JsonToken.FIELD_NAME; i = _skipColon(); }   JsonToken t; [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	628	628	1	add	
51	[BUG] [BUGGY] String name = (i == INT_QUOTE) ? _parseName() : _handleOddName(i); [FE] AssertionFailedError [CONTEXT] i = _skipComma(i); } _updateLocation();    boolean inObject = _parsingContext.inObject(); if (inObject) {  [BUGGY] String name = (i == INT_QUOTE) ? _parseName() : _handleOddName(i); [BUGGY] _parsingContext.setCurrentName(name); _currToken = JsonToken.FIELD_NAME; i = _skipColon(); }   JsonToken t; switch (i) { [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	
52	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] i = _skipComma(i); } _updateLocation();    boolean inObject = _parsingContext.inObject(); if (inObject) {  [BUGGY] [BUGGY] String name = (i == INT_QUOTE) ? _parseName() : _handleOddName(i); _parsingContext.setCurrentName(name); _currToken = JsonToken.FIELD_NAME; i = _skipColon(); }   JsonToken t; switch (i) { [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	add	
53	[BUG] [BUGGY] _parsingContext.setCurrentName(name); [FE] AssertionFailedError [CONTEXT] } _updateLocation();    boolean inObject = _parsingContext.inObject(); if (inObject) {  String name = (i == INT_QUOTE) ? _parseName() : _handleOddName(i); [BUGGY] _parsingContext.setCurrentName(name); [BUGGY] _currToken = JsonToken.FIELD_NAME; i = _skipColon(); }   JsonToken t; switch (i) { case '"': [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	631	631	1	replace	
54	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } _updateLocation();    boolean inObject = _parsingContext.inObject(); if (inObject) {  String name = (i == INT_QUOTE) ? _parseName() : _handleOddName(i); [BUGGY] [BUGGY] _parsingContext.setCurrentName(name); _currToken = JsonToken.FIELD_NAME; i = _skipColon(); }   JsonToken t; switch (i) { case '"': [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	631	631	1	add	
55	[BUG] [BUGGY] _currToken = JsonToken.FIELD_NAME; [FE] AssertionFailedError [CONTEXT] _updateLocation();    boolean inObject = _parsingContext.inObject(); if (inObject) {  String name = (i == INT_QUOTE) ? _parseName() : _handleOddName(i); _parsingContext.setCurrentName(name); [BUGGY] _currToken = JsonToken.FIELD_NAME; [BUGGY] i = _skipColon(); }   JsonToken t; switch (i) { case '"': _tokenIncomplete = true; [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	632	632	1	replace	
56	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] _updateLocation();    boolean inObject = _parsingContext.inObject(); if (inObject) {  String name = (i == INT_QUOTE) ? _parseName() : _handleOddName(i); _parsingContext.setCurrentName(name); [BUGGY] [BUGGY] _currToken = JsonToken.FIELD_NAME; i = _skipColon(); }   JsonToken t; switch (i) { case '"': _tokenIncomplete = true; [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	632	632	1	add	
57	[BUG] [BUGGY] i = _skipColon(); [FE] AssertionFailedError [CONTEXT]    boolean inObject = _parsingContext.inObject(); if (inObject) {  String name = (i == INT_QUOTE) ? _parseName() : _handleOddName(i); _parsingContext.setCurrentName(name); _currToken = JsonToken.FIELD_NAME; [BUGGY] i = _skipColon(); [BUGGY] }   JsonToken t; switch (i) { case '"': _tokenIncomplete = true; t = JsonToken.VALUE_STRING; [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	633	633	1	replace	
58	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]    boolean inObject = _parsingContext.inObject(); if (inObject) {  String name = (i == INT_QUOTE) ? _parseName() : _handleOddName(i); _parsingContext.setCurrentName(name); _currToken = JsonToken.FIELD_NAME; [BUGGY] [BUGGY] i = _skipColon(); }   JsonToken t; switch (i) { case '"': _tokenIncomplete = true; t = JsonToken.VALUE_STRING; [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	633	633	1	add	
59	[BUG] [BUGGY] switch (i) { [FE] AssertionFailedError [CONTEXT] String name = (i == INT_QUOTE) ? _parseName() : _handleOddName(i); _parsingContext.setCurrentName(name); _currToken = JsonToken.FIELD_NAME; i = _skipColon(); }   JsonToken t; [BUGGY] switch (i) { [BUGGY] case '"': _tokenIncomplete = true; t = JsonToken.VALUE_STRING; break; case '[': if (!inObject) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_ARRAY; break; [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	
60	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] String name = (i == INT_QUOTE) ? _parseName() : _handleOddName(i); _parsingContext.setCurrentName(name); _currToken = JsonToken.FIELD_NAME; i = _skipColon(); }   JsonToken t; [BUGGY] [BUGGY] switch (i) { case '"': _tokenIncomplete = true; t = JsonToken.VALUE_STRING; break; case '[': if (!inObject) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_ARRAY; break; [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	add	
61	[BUG] [BUGGY] _tokenIncomplete = true; [FE] AssertionFailedError [CONTEXT] _currToken = JsonToken.FIELD_NAME; i = _skipColon(); }   JsonToken t; switch (i) { case '"': [BUGGY] _tokenIncomplete = true; [BUGGY] t = JsonToken.VALUE_STRING; break; case '[': if (!inObject) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_ARRAY; break; case '{': if (!inObject) { [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	642	642	1	replace	
62	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] _currToken = JsonToken.FIELD_NAME; i = _skipColon(); }   JsonToken t; switch (i) { case '"': [BUGGY] [BUGGY] _tokenIncomplete = true; t = JsonToken.VALUE_STRING; break; case '[': if (!inObject) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_ARRAY; break; case '{': if (!inObject) { [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	642	642	1	add	
63	[BUG] [BUGGY] t = JsonToken.VALUE_STRING; [FE] AssertionFailedError [CONTEXT] i = _skipColon(); }   JsonToken t; switch (i) { case '"': _tokenIncomplete = true; [BUGGY] t = JsonToken.VALUE_STRING; [BUGGY] break; case '[': if (!inObject) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_ARRAY; break; case '{': if (!inObject) { _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	643	643	1	replace	
64	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] i = _skipColon(); }   JsonToken t; switch (i) { case '"': _tokenIncomplete = true; [BUGGY] [BUGGY] t = JsonToken.VALUE_STRING; break; case '[': if (!inObject) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_ARRAY; break; case '{': if (!inObject) { _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	643	643	1	add	
65	[BUG] [BUGGY] break; [FE] AssertionFailedError [CONTEXT] }   JsonToken t; switch (i) { case '"': _tokenIncomplete = true; t = JsonToken.VALUE_STRING; [BUGGY] break; [BUGGY] case '[': if (!inObject) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_ARRAY; break; case '{': if (!inObject) { _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); } [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	644	644	1	replace	
66	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] }   JsonToken t; switch (i) { case '"': _tokenIncomplete = true; t = JsonToken.VALUE_STRING; [BUGGY] [BUGGY] break; case '[': if (!inObject) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_ARRAY; break; case '{': if (!inObject) { _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); } [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	644	644	1	add	
67	[BUG] [BUGGY] if (!inObject) { [FE] AssertionFailedError [CONTEXT] _tokenIncomplete = true; t = JsonToken.VALUE_STRING; break; case '[': if (!inObject) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_ARRAY; break; case '{': [BUGGY] if (!inObject) { [BUGGY] _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_OBJECT; break; case ']': case '}':   _reportUnexpectedChar(i, "expected a value"); case 't': [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	
68	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] _tokenIncomplete = true; t = JsonToken.VALUE_STRING; break; case '[': if (!inObject) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_ARRAY; break; case '{': [BUGGY] [BUGGY] if (!inObject) { _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_OBJECT; break; case ']': case '}':   _reportUnexpectedChar(i, "expected a value"); case 't': [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	add	
69	[BUG] [BUGGY] _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); [FE] AssertionFailedError [CONTEXT] t = JsonToken.VALUE_STRING; break; case '[': if (!inObject) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_ARRAY; break; case '{': if (!inObject) { [BUGGY] _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); [BUGGY] } t = JsonToken.START_OBJECT; break; case ']': case '}':   _reportUnexpectedChar(i, "expected a value"); case 't': _matchTrue(); [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	653	653	1	replace	
70	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] t = JsonToken.VALUE_STRING; break; case '[': if (!inObject) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_ARRAY; break; case '{': if (!inObject) { [BUGGY] [BUGGY] _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_OBJECT; break; case ']': case '}':   _reportUnexpectedChar(i, "expected a value"); case 't': _matchTrue(); [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	653	653	1	add	
71	[BUG] [BUGGY] t = JsonToken.START_OBJECT; [FE] AssertionFailedError [CONTEXT] case '[': if (!inObject) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_ARRAY; break; case '{': if (!inObject) { _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); } [BUGGY] t = JsonToken.START_OBJECT; [BUGGY] break; case ']': case '}':   _reportUnexpectedChar(i, "expected a value"); case 't': _matchTrue(); t = JsonToken.VALUE_TRUE; break; [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	655	655	1	replace	
72	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] case '[': if (!inObject) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_ARRAY; break; case '{': if (!inObject) { _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); } [BUGGY] [BUGGY] t = JsonToken.START_OBJECT; break; case ']': case '}':   _reportUnexpectedChar(i, "expected a value"); case 't': _matchTrue(); t = JsonToken.VALUE_TRUE; break; [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	655	655	1	add	
73	[BUG] [BUGGY] break; [FE] AssertionFailedError [CONTEXT] if (!inObject) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_ARRAY; break; case '{': if (!inObject) { _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_OBJECT; [BUGGY] break; [BUGGY] case ']': case '}':   _reportUnexpectedChar(i, "expected a value"); case 't': _matchTrue(); t = JsonToken.VALUE_TRUE; break; case 'f': [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	
74	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (!inObject) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_ARRAY; break; case '{': if (!inObject) { _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); } t = JsonToken.START_OBJECT; [BUGGY] [BUGGY] break; case ']': case '}':   _reportUnexpectedChar(i, "expected a value"); case 't': _matchTrue(); t = JsonToken.VALUE_TRUE; break; case 'f': [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	add	
75	[BUG] [BUGGY] if (inObject) { [FE] AssertionFailedError [CONTEXT] case '7': case '8': case '9': t = _parsePosNumber(i); break; default: t = _handleOddValue(i); break; } [BUGGY] if (inObject) { [BUGGY] _nextToken = t; return _currToken; } _currToken = t; return t; } [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	699	699	1	replace	
76	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] case '7': case '8': case '9': t = _parsePosNumber(i); break; default: t = _handleOddValue(i); break; } [BUGGY] [BUGGY] if (inObject) { _nextToken = t; return _currToken; } _currToken = t; return t; } [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	699	699	1	add	
77	[BUG] [BUGGY] _nextToken = t; [FE] AssertionFailedError [CONTEXT] case '8': case '9': t = _parsePosNumber(i); break; default: t = _handleOddValue(i); break; } if (inObject) { [BUGGY] _nextToken = t; [BUGGY] return _currToken; } _currToken = t; return t; } [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	700	700	1	replace	
78	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] case '8': case '9': t = _parsePosNumber(i); break; default: t = _handleOddValue(i); break; } if (inObject) { [BUGGY] [BUGGY] _nextToken = t; return _currToken; } _currToken = t; return t; } [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	700	700	1	add	
79	[BUG] [BUGGY] return _currToken; [FE] AssertionFailedError [CONTEXT] case '9': t = _parsePosNumber(i); break; default: t = _handleOddValue(i); break; } if (inObject) { _nextToken = t; [BUGGY] return _currToken; [BUGGY] } _currToken = t; return t; } [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	701	701	1	replace	
80	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] case '9': t = _parsePosNumber(i); break; default: t = _handleOddValue(i); break; } if (inObject) { _nextToken = t; [BUGGY] [BUGGY] return _currToken; } _currToken = t; return t; } [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	701	701	1	add	
81	[BUG] [BUGGY] _currToken = t; [FE] AssertionFailedError [CONTEXT] break; default: t = _handleOddValue(i); break; } if (inObject) { _nextToken = t; return _currToken; } [BUGGY] _currToken = t; [BUGGY] return t; } [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	703	703	1	replace	
82	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] break; default: t = _handleOddValue(i); break; } if (inObject) { _nextToken = t; return _currToken; } [BUGGY] [BUGGY] _currToken = t; return t; } [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	703	703	1	add	
83	[BUG] [BUGGY] return t; [FE] AssertionFailedError [CONTEXT] default: t = _handleOddValue(i); break; } if (inObject) { _nextToken = t; return _currToken; } _currToken = t; [BUGGY] return t; [BUGGY] } [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	704	704	1	replace	
84	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] default: t = _handleOddValue(i); break; } if (inObject) { _nextToken = t; return _currToken; } _currToken = t; [BUGGY] [BUGGY] return t; } [CLASS] ReaderBasedJsonParser [METHOD] nextToken [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st String name int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	704	704	1	add	
85	[BUG] [BUGGY] _nameCopied = false; // need to invalidate if it was copied JsonToken t = _nextToken; [FE] AssertionFailedError [CONTEXT] private final JsonToken _nextAfterName() { [BUGGY] _nameCopied = false; // need to invalidate if it was copied  JsonToken t = _nextToken; [BUGGY] JsonToken t = _nextToken; _nextToken = null;    if (t == JsonToken.START_ARRAY) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } else if (t == JsonToken.START_OBJECT) { _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); [CLASS] ReaderBasedJsonParser [METHOD] _nextAfterName [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	709	710	1	replace	
86	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private final JsonToken _nextAfterName() { [BUGGY] [BUGGY] _nameCopied = false; // need to invalidate if it was copied  JsonToken t = _nextToken; JsonToken t = _nextToken; _nextToken = null;    if (t == JsonToken.START_ARRAY) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } else if (t == JsonToken.START_OBJECT) { _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); [CLASS] ReaderBasedJsonParser [METHOD] _nextAfterName [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	709	710	1	add	
87	[BUG] [BUGGY] JsonToken t = _nextToken; [FE] AssertionFailedError [CONTEXT] private final JsonToken _nextAfterName() { _nameCopied = false; // need to invalidate if it was copied [BUGGY] JsonToken t = _nextToken; [BUGGY] _nextToken = null;    if (t == JsonToken.START_ARRAY) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } else if (t == JsonToken.START_OBJECT) { _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); } [CLASS] ReaderBasedJsonParser [METHOD] _nextAfterName [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	710	710	1	replace	
88	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private final JsonToken _nextAfterName() { _nameCopied = false; // need to invalidate if it was copied [BUGGY] [BUGGY] JsonToken t = _nextToken; _nextToken = null;    if (t == JsonToken.START_ARRAY) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } else if (t == JsonToken.START_OBJECT) { _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); } [CLASS] ReaderBasedJsonParser [METHOD] _nextAfterName [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	710	710	1	add	
89	[BUG] [BUGGY] _nextToken = null; [FE] AssertionFailedError [CONTEXT] private final JsonToken _nextAfterName() { _nameCopied = false; // need to invalidate if it was copied JsonToken t = _nextToken; [BUGGY] _nextToken = null; [BUGGY]    if (t == JsonToken.START_ARRAY) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } else if (t == JsonToken.START_OBJECT) { _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); } return (_currToken = t); [CLASS] ReaderBasedJsonParser [METHOD] _nextAfterName [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	replace	
90	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private final JsonToken _nextAfterName() { _nameCopied = false; // need to invalidate if it was copied JsonToken t = _nextToken; [BUGGY] [BUGGY] _nextToken = null;    if (t == JsonToken.START_ARRAY) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } else if (t == JsonToken.START_OBJECT) { _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); } return (_currToken = t); [CLASS] ReaderBasedJsonParser [METHOD] _nextAfterName [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	711	711	1	add	
91	[BUG] [BUGGY] if (t == JsonToken.START_ARRAY) { [FE] AssertionFailedError [CONTEXT] private final JsonToken _nextAfterName() { _nameCopied = false; // need to invalidate if it was copied JsonToken t = _nextToken; _nextToken = null;    [BUGGY] if (t == JsonToken.START_ARRAY) { [BUGGY] _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } else if (t == JsonToken.START_OBJECT) { _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); } return (_currToken = t); } [CLASS] ReaderBasedJsonParser [METHOD] _nextAfterName [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	716	716	1	replace	
92	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private final JsonToken _nextAfterName() { _nameCopied = false; // need to invalidate if it was copied JsonToken t = _nextToken; _nextToken = null;    [BUGGY] [BUGGY] if (t == JsonToken.START_ARRAY) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } else if (t == JsonToken.START_OBJECT) { _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); } return (_currToken = t); } [CLASS] ReaderBasedJsonParser [METHOD] _nextAfterName [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	716	716	1	add	
93	[BUG] [BUGGY] } else if (t == JsonToken.START_OBJECT) { [FE] AssertionFailedError [CONTEXT] { _nameCopied = false; // need to invalidate if it was copied JsonToken t = _nextToken; _nextToken = null;    if (t == JsonToken.START_ARRAY) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); [BUGGY] } else if (t == JsonToken.START_OBJECT) { [BUGGY] _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); } return (_currToken = t); } [CLASS] ReaderBasedJsonParser [METHOD] _nextAfterName [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	718	718	1	replace	
94	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] { _nameCopied = false; // need to invalidate if it was copied JsonToken t = _nextToken; _nextToken = null;    if (t == JsonToken.START_ARRAY) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); [BUGGY] [BUGGY] } else if (t == JsonToken.START_OBJECT) { _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); } return (_currToken = t); } [CLASS] ReaderBasedJsonParser [METHOD] _nextAfterName [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	718	718	1	add	
95	[BUG] [BUGGY] return (_currToken = t); [FE] AssertionFailedError [CONTEXT] _nextToken = null;    if (t == JsonToken.START_ARRAY) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } else if (t == JsonToken.START_OBJECT) { _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); } [BUGGY] return (_currToken = t); [BUGGY] } [CLASS] ReaderBasedJsonParser [METHOD] _nextAfterName [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	721	721	1	replace	
96	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] _nextToken = null;    if (t == JsonToken.START_ARRAY) { _parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol); } else if (t == JsonToken.START_OBJECT) { _parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol); } [BUGGY] [BUGGY] return (_currToken = t); } [CLASS] ReaderBasedJsonParser [METHOD] _nextAfterName [RETURN_TYPE] JsonToken  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 JsonToken t ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow bits count decodedData end features i nameLen origPtr outputCount outputEnd outputPtr start long _nameInputTotal char[] _inputBuffer buf inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	721	721	1	add	
97	[BUG] [BUGGY] int ptr = _inputPtr; [FE] AssertionFailedError [CONTEXT] protected final String _parseName() throws IOException {   [BUGGY] int ptr = _inputPtr; [BUGGY] int hash = _hashSeed; final int[] codes = _icLatin1; while (ptr < _inputEnd) { int ch = _inputBuffer[ptr]; if (ch < codes.length && codes[ch] != 0) { if (ch == '"') { int start = _inputPtr; _inputPtr = ptr+1; // to skip the quote return _symbols.findSymbol(_inputBuffer, start, ptr - start, hash); [CLASS] ReaderBasedJsonParser [METHOD] _parseName [RETURN_TYPE] String  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg negative Reader _reader r int[] _icLatin1 codes ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow bits ch count decodedData defaultValue end expLen features fractLen hash i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameInputTotal defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	replace	
98	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected final String _parseName() throws IOException {   [BUGGY] [BUGGY] int ptr = _inputPtr; int hash = _hashSeed; final int[] codes = _icLatin1; while (ptr < _inputEnd) { int ch = _inputBuffer[ptr]; if (ch < codes.length && codes[ch] != 0) { if (ch == '"') { int start = _inputPtr; _inputPtr = ptr+1; // to skip the quote return _symbols.findSymbol(_inputBuffer, start, ptr - start, hash); [CLASS] ReaderBasedJsonParser [METHOD] _parseName [RETURN_TYPE] String  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg negative Reader _reader r int[] _icLatin1 codes ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow bits ch count decodedData defaultValue end expLen features fractLen hash i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameInputTotal defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1593	1593	1	add	
99	[BUG] [BUGGY] int hash = _hashSeed; [FE] AssertionFailedError [CONTEXT] protected final String _parseName() throws IOException {   int ptr = _inputPtr; [BUGGY] int hash = _hashSeed; [BUGGY] final int[] codes = _icLatin1; while (ptr < _inputEnd) { int ch = _inputBuffer[ptr]; if (ch < codes.length && codes[ch] != 0) { if (ch == '"') { int start = _inputPtr; _inputPtr = ptr+1; // to skip the quote return _symbols.findSymbol(_inputBuffer, start, ptr - start, hash); } [CLASS] ReaderBasedJsonParser [METHOD] _parseName [RETURN_TYPE] String  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg negative Reader _reader r int[] _icLatin1 codes ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow bits ch count decodedData defaultValue end expLen features fractLen hash i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameInputTotal defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1594	1594	1	replace	
100	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected final String _parseName() throws IOException {   int ptr = _inputPtr; [BUGGY] [BUGGY] int hash = _hashSeed; final int[] codes = _icLatin1; while (ptr < _inputEnd) { int ch = _inputBuffer[ptr]; if (ch < codes.length && codes[ch] != 0) { if (ch == '"') { int start = _inputPtr; _inputPtr = ptr+1; // to skip the quote return _symbols.findSymbol(_inputBuffer, start, ptr - start, hash); } [CLASS] ReaderBasedJsonParser [METHOD] _parseName [RETURN_TYPE] String  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg negative Reader _reader r int[] _icLatin1 codes ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameInputCol _nameInputRow bits ch count decodedData defaultValue end expLen features fractLen hash i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameInputTotal defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1594	1594	1	add	
