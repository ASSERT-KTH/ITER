bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  i  =  _skipString();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]    if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [BUGGY]  int  i  =  _skipString();  [BUGGY]  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipString();	int  i  =  _skipWSOrEnd();  	non-compiled	[CE]  <identifier>  expected	33	None	replace
2	[BUG]  [BUGGY]  char  i  =  _skipWSOrEnd();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]    if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [BUGGY]  char  i  =  _skipWSOrEnd();  [BUGGY]  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipWSOrEnd();	int  i  =  _skipWSOrEnd();  	non-compiled	[CE]  <identifier>  expected	33	None	replace
3	[BUG]  [BUGGY]  int  i  =  _skipBinary();  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]    if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [BUGGY]  int  i  =  _skipBinary();  [BUGGY]  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBinary();	int  i  =  _skipWSOrEnd();  	non-compiled	[CE]  <identifier>  expected	33	None	replace
4	[BUG]  [BUGGY]  int  i  =  _skipBind();  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]    if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [BUGGY]  int  i  =  _skipBind();  [BUGGY]  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBind();	int  i  =  _skipWSOrEnd();  	non-compiled	[CE]  <identifier>  expected	33	None	replace
5	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]    if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [BUGGY]    [BUGGY]  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	  	int  i  =  _skipWSOrEnd();  	non-compiled	[CE]  <identifier>  expected	33	None	replace
6	[BUG]  [BUGGY]  int  i  =  _skipSegments();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]    if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [BUGGY]  int  i  =  _skipSegments();  [BUGGY]  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipSegments();	int  i  =  _skipWSOrEnd();  	non-compiled	[CE]  <identifier>  expected	33	None	replace
7	[BUG]  [BUGGY]  int  i  =  _textBuffer.length();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]    if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [BUGGY]  int  i  =  _textBuffer.length();  [BUGGY]  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _textBuffer.length();	int  i  =  _skipWSOrEnd();  	non-compiled	[CE]  <identifier>  expected	33	None	replace
8	[BUG]  [BUGGY]  int  i  =  0;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]    if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [BUGGY]  int  i  =  0;  [BUGGY]  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  0;	int  i  =  _skipWSOrEnd();  	non-compiled	[CE]  <identifier>  expected	33	None	replace
9	[BUG]  [BUGGY]  int  i  =  _skipSize();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]    if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [BUGGY]  int  i  =  _skipSize();  [BUGGY]  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipSize();	int  i  =  _skipWSOrEnd();  	non-compiled	[CE]  <identifier>  expected	33	None	replace
10	[BUG]  [BUGGY]  int  i  =  _skipStart();  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]    if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [BUGGY]  int  i  =  _skipStart();  [BUGGY]  if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipStart();	int  i  =  _skipWSOrEnd();  	non-compiled	[CE]  <identifier>  expected	33	None	replace
