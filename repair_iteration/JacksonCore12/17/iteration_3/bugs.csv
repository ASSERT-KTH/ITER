bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  i  =  _inputEnd  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _inputEnd  +  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _inputEnd  +  1;	  int    i    =    _inputEnd;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
2	[BUG]  [BUGGY]  int  i  =  _currToken.length()  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _currToken.length()  -  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _currToken.length()  -  1;	  int    i    =    _currToken.length();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
3	[BUG]  [BUGGY]  int  i  =  _currToken.length()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _currToken.length()  +  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _currToken.length()  +  1;	  int    i    =    _currToken.length();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
4	[BUG]  [BUGGY]  char  i  =  _currToken.length();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _currToken.length();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _currToken.length();	  int    i    =    _currToken.length();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
5	[BUG]  [BUGGY]  int  i  =  _skipLength()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipLength()  +  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipLength()  +  1;	  int    i    =    _skipLength();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
6	[BUG]  [BUGGY]  char  i  =  _skipLength();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipLength();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipLength();	  int    i    =    _skipLength();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
7	[BUG]  [BUGGY]  _reportError( "Current  token( "+_currToken+ ")not  a  string  value. ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  _reportError( "Current  token( "+_currToken+ ")not  a  string  value. ");  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_reportError( "Current  token( "+_currToken+ ")not  a  string  value. ");	  _reportError(   "Current    token(   "+_currToken+   ")not    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
8	[BUG]  [BUGGY]  int  i  =  _skipBind().length;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipBind().length;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBind().length;	  int    i    =    _skipBind()    +    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
9	[BUG]  [BUGGY]  String  i  =  _textBuffer.length();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  i  =  _textBuffer.length();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  i  =  _textBuffer.length();	  char    i    =    _textBuffer.length();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
10	[BUG]  [BUGGY]  char  i  =  _textBuffer.length()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _textBuffer.length()  +  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _textBuffer.length()  +  1;	  char    i    =    _textBuffer.length();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
11	[BUG]  [BUGGY]  int  i  =  _nextInput().length;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _nextInput().length;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _nextInput().length;	  int    i    =    _nextInput();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
12	[BUG]  [BUGGY]  char  i  =  _nextInput();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _nextInput();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _nextInput();	  int    i    =    _nextInput();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
13	[BUG]  [BUGGY]  char  i  =  _skipEnd();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipEnd();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipEnd();	  int    i    =    _skipEnd();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
14	[BUG]  [BUGGY]  String  i  =  _skipSize();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  i  =  _skipSize();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  i  =  _skipSize();	  char    i    =    _skipSize();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
15	[BUG]  [BUGGY]  char  i  =  _skipSize()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipSize()  +  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipSize()  +  1;	  char    i    =    _skipSize();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
16	[BUG]  [BUGGY]  char  i  =  _skipBound();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipBound();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipBound();	  char    i    =    _skipSize();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
17	[BUG]  [BUGGY]  Integer  i  =  _textBuffer.length();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  Integer  i  =  _textBuffer.length();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	Integer  i  =  _textBuffer.length();	  int    i    =    _textBuffer.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
18	[BUG]  [BUGGY]  String  i  =  _skipBinary();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  i  =  _skipBinary();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  i  =  _skipBinary();	  char    i    =    _skipBinary();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
19	[BUG]  [BUGGY]  char  i  =  _skipChar();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipChar();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipChar();	  char    i    =    _skipBinary();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
20	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  null);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_symbols.add(JsonToken.FIELD_NAME,  null);	  _symbols.add(JsonToken.FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
21	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  _numTypesValid);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  _numTypesValid);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_symbols.add(JsonToken.FIELD_NAME,  _numTypesValid);	  _symbols.add(JsonToken.FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
22	[BUG]  [BUGGY]  String  i  =  _skipString();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  i  =  _skipString();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  i  =  _skipString();	  char    i    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
23	[BUG]  [BUGGY]  char  i  =  _skipToken();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipToken();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipToken();	  char    i    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
24	[BUG]  [BUGGY]  _reportError( "Current  token( "+_currToken+ ")not  a  String  value ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  _reportError( "Current  token( "+_currToken+ ")not  a  String  value ");  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_reportError( "Current  token( "+_currToken+ ")not  a  String  value ");	  _skipString();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
25	[BUG]  [BUGGY]  char  i  =  _skipBinding();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipBinding();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipBinding();	  int    i    =    _skipBinding();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
26	[BUG]  [BUGGY]  int  i  =  _skipBinding(JsonToken.FIELD_NAME);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipBinding(JsonToken.FIELD_NAME);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBinding(JsonToken.FIELD_NAME);	  int    i    =    _skipBinding();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
27	[BUG]  [BUGGY]  int  i  =  _skipStart(JsonToken.VALUE_STRING,  _numTypesValid);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipStart(JsonToken.VALUE_STRING,  _numTypesValid);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipStart(JsonToken.VALUE_STRING,  _numTypesValid);	  int    i    =    _skipStart(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
28	[BUG]  [BUGGY]  int  i  =  _skipStart(JsonToken.VALUE_STRING,  _binaryValue);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipStart(JsonToken.VALUE_STRING,  _binaryValue);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipStart(JsonToken.VALUE_STRING,  _binaryValue);	  int    i    =    _skipStart(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
29	[BUG]  [BUGGY]  int  i  =  _skipStart(JsonToken.FIELD_NAME);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipStart(JsonToken.FIELD_NAME);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipStart(JsonToken.FIELD_NAME);	  int    i    =    _skipStart(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
30	[BUG]  [BUGGY]  char  i  =  _skipStart(JsonToken.VALUE_STRING);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipStart(JsonToken.VALUE_STRING);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipStart(JsonToken.VALUE_STRING);	  int    i    =    _skipStart(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
31	[BUG]  [BUGGY]  _symbols.add(name,  JsonToken.FIELD_NAME);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  _symbols.add(name,  JsonToken.FIELD_NAME);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_symbols.add(name,  JsonToken.FIELD_NAME);	  _symbols.add(JsonToken.FIELD_NAME,    name);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
32	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  _nameInputRow);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  _nameInputRow);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_symbols.add(JsonToken.FIELD_NAME,  _nameInputRow);	  _symbols.add(JsonToken.FIELD_NAME,    name);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
33	[BUG]  [BUGGY]  int  i  =  _numTypesValid  -  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _numTypesValid  -  2;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _numTypesValid  -  2;	  int    i    =    _numTypesValid    -    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
34	[BUG]  [BUGGY]  int  i  =  _numTypesValid  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _numTypesValid  +  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _numTypesValid  +  1;	  int    i    =    _numTypesValid    -    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
35	[BUG]  [BUGGY]  String  i  =  _skipSegment();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  i  =  _skipSegment();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  i  =  _skipSegment();	  char    i    =    _skipSegment();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
36	[BUG]  [BUGGY]  String  i  =  _skipSegments();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  i  =  _skipSegments();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  i  =  _skipSegments();	  char    i    =    _skipSegments();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
37	[BUG]  [BUGGY]  char  i  =  _skipSegments().length;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipSegments().length;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipSegments().length;	  char    i    =    _skipSegments();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
38	[BUG]  [BUGGY]  int  i  =  _binaryValue.length  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _binaryValue.length  -  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _binaryValue.length  -  1;	  int    i    =    _binaryValue.length;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
39	[BUG]  [BUGGY]  int  i  =  _currToken.length;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _currToken.length;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _currToken.length;	  int    i    =    _binaryValue.length;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
40	[BUG]  [BUGGY]  int  i  =  _symbols.length  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _symbols.length  +  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _symbols.length  +  1;	  int    i    =    _skipSize()    +    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
41	[BUG]  [BUGGY]  int  i  =  _skipStart(JsonToken.START_OBJECT,  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipStart(JsonToken.START_OBJECT,  1);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipStart(JsonToken.START_OBJECT,  1);	  int    i    =    _skipStart(JsonToken.START_OBJECT);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
42	[BUG]  [BUGGY]  int  i  =  _skipStart(JsonToken.START_OBJECT,  _numTypesValid);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipStart(JsonToken.START_OBJECT,  _numTypesValid);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipStart(JsonToken.START_OBJECT,  _numTypesValid);	  int    i    =    _skipStart(JsonToken.START_OBJECT);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
43	[BUG]  [BUGGY]  char  i  =  _skipStart(JsonToken.START_OBJECT);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipStart(JsonToken.START_OBJECT);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipStart(JsonToken.START_OBJECT);	  int    i    =    _skipStart(JsonToken.START_OBJECT);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
44	[BUG]  [BUGGY]  int  i  =  _skipEnd(JsonToken.START_OBJECT);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipEnd(JsonToken.START_OBJECT);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipEnd(JsonToken.START_OBJECT);	  int    i    =    _skipStart(JsonToken.START_OBJECT);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
45	[BUG]  [BUGGY]  String  i  =  _skipBind();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  i  =  _skipBind();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  i  =  _skipBind();	  char    i    =    _skipBind();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
46	[BUG]  [BUGGY]  int  i  =  _skipSegments().length;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipSegments().length;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipSegments().length;	  int    i    =    _skipSegments()    +    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
47	[BUG]  [BUGGY]  char  i  =  _reader.readInt();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _reader.readInt();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _reader.readInt();	  int    i    =    _reader.readInt();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
48	[BUG]  [BUGGY]  int  i  =  _reader.readInt(_numTypesValid);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _reader.readInt(_numTypesValid);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _reader.readInt(_numTypesValid);	  int    i    =    _reader.readInt();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
49	[BUG]  [BUGGY]  int  i  =  _skipStart(JsonToken.END_ARRAY,  _numTypesValid);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipStart(JsonToken.END_ARRAY,  _numTypesValid);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipStart(JsonToken.END_ARRAY,  _numTypesValid);	  int    i    =    _skipStart(JsonToken.END_ARRAY);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
50	[BUG]  [BUGGY]  int  i  =  _skipStart(JsonToken.END_OBJECT);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipStart(JsonToken.END_OBJECT);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipStart(JsonToken.END_OBJECT);	  int    i    =    _skipStart(JsonToken.END_ARRAY);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
51	[BUG]  [BUGGY]  int  i  =  _skipEnd(JsonToken.END_ARRAY);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipEnd(JsonToken.END_ARRAY);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipEnd(JsonToken.END_ARRAY);	  int    i    =    _skipStart(JsonToken.END_ARRAY);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
52	[BUG]  [BUGGY]  _symbols.add(JsonToken.VALUE_STRING);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  _symbols.add(JsonToken.VALUE_STRING);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_symbols.add(JsonToken.VALUE_STRING);	  _symbols.clear();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
53	[BUG]  [BUGGY]  int  i  =  _skipSegments().length  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipSegments().length  -  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipSegments().length  -  1;	  int    i    =    _skipSegments()    -    1;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
54	[BUG]  [BUGGY]  char  i  =  _numTypesValid;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _numTypesValid;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _numTypesValid;	  int    i    =    _numTypesValid;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
55	[BUG]  [BUGGY]  int  i  =  NR_UNKNOWN;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  NR_UNKNOWN;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  NR_UNKNOWN;	  int    i    =    _numTypesValid;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
56	[BUG]  [BUGGY]  char  i  =  _skipBounds();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipBounds();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipBounds();	  int    i    =    _skipBounds();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
57	[BUG]  [BUGGY]  int  i  =  _skipBounds()  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipBounds()  -  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBounds()  -  1;	  int    i    =    _skipBounds();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
58	[BUG]  [BUGGY]  i  =  _nextToken();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  i  =  _nextToken();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	i  =  _nextToken();	  i    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
59	[BUG]  [BUGGY]  i  =  _skipBinary();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  i  =  _skipBinary();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	i  =  _skipBinary();	  i    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
60	[BUG]  [BUGGY]  i  =  _skipField();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  i  =  _skipField();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	i  =  _skipField();	  i    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
61	[BUG]  [BUGGY]  i  =  _nextString();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  i  =  _nextString();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	i  =  _nextString();	  i    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
62	[BUG]  [BUGGY]  String  i  =  _skipWord();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  i  =  _skipWord();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  i  =  _skipWord();	  char    i    =    _skipWord();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
63	[BUG]  [BUGGY]  String  i  =  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  i  =  0;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  i  =  0;	  char    i    =    0;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
64	[BUG]  [BUGGY]  char  i  =  _nextToken();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _nextToken();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _nextToken();	  char    i    =    0;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
65	[BUG]  [BUGGY]  char  i  =  _currToken;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _currToken;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _currToken;	  char    i    =    0;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
66	[BUG]  [BUGGY]  char  i  =  _tokenIncomplete;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _tokenIncomplete;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _tokenIncomplete;	  char    i    =    0;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
67	[BUG]  [BUGGY]  _inObject  =  _reader.readInt();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  _inObject  =  _reader.readInt();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_inObject  =  _reader.readInt();	  inObject    =    _reader.readInt();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
68	[BUG]  [BUGGY]  Integer  i  =  _reader.readInt();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  Integer  i  =  _reader.readInt();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	Integer  i  =  _reader.readInt();	  inObject    =    _reader.readInt();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
69	[BUG]  [BUGGY]  char  i  =  _skipSegmentCount();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipSegmentCount();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipSegmentCount();	  int    i    =    _skipSegmentCount();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
70	[BUG]  [BUGGY]  int  i  =  _skipSegmentCount()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipSegmentCount()  +  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipSegmentCount()  +  1;	  int    i    =    _skipSegmentCount();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
71	[BUG]  [BUGGY]  int  i  =  _skipSegmentCount()  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipSegmentCount()  -  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipSegmentCount()  -  1;	  int    i    =    _skipSegmentCount();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
72	[BUG]  [BUGGY]  int  i  =  _currTokenIncomplete();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _currTokenIncomplete();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _currTokenIncomplete();	  int    i    =    _tokenIncomplete();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
73	[BUG]  [BUGGY]  char  i  =  _tokenIncomplete();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _tokenIncomplete();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _tokenIncomplete();	  int    i    =    _tokenIncomplete();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
74	[BUG]  [BUGGY]  int  i  =  _tokenIncomplete(JsonToken.FIELD_NAME);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _tokenIncomplete(JsonToken.FIELD_NAME);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _tokenIncomplete(JsonToken.FIELD_NAME);	  int    i    =    _tokenIncomplete();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
75	[BUG]  [BUGGY]  int  i  =  _skipBinary().length  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipBinary().length  -  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBinary().length  -  1;	  int    i    =    _skipBinary().length;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
76	[BUG]  [BUGGY]  char  i  =  _skipBinary().length;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipBinary().length;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipBinary().length;	  int    i    =    _skipBinary().length;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
77	[BUG]  [BUGGY]  int  i  =  _skipBinary().length  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipBinary().length  +  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBinary().length  +  1;	  int    i    =    _skipBinary().length;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
78	[BUG]  [BUGGY]  String  i  =  _skipBoolean();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  i  =  _skipBoolean();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  i  =  _skipBoolean();	  char    i    =    _skipBoolean();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
79	[BUG]  [BUGGY]  int  i  =  _nextToken().length;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _nextToken().length;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _nextToken().length;	  int    i    =    _nextToken();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
80	[BUG]  [BUGGY]  int  i  =  _nextString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _nextString();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _nextString();	  int    i    =    _nextToken();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
81	[BUG]  [BUGGY]  String  i  =  _skipStart();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  i  =  _skipStart();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  i  =  _skipStart();	  char    i    =    _skipStart();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
82	[BUG]  [BUGGY]  char  i  =  _skipStart()  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipStart()  +  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipStart()  +  1;	  char    i    =    _skipStart();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
83	[BUG]  [BUGGY]  int  i  =  _skipBind(JsonToken.VALUE_STRING,  _numTypesValid);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipBind(JsonToken.VALUE_STRING,  _numTypesValid);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBind(JsonToken.VALUE_STRING,  _numTypesValid);	  int    i    =    _skipBind(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
84	[BUG]  [BUGGY]  char  i  =  _skipBind(JsonToken.VALUE_STRING);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipBind(JsonToken.VALUE_STRING);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipBind(JsonToken.VALUE_STRING);	  int    i    =    _skipBind(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
85	[BUG]  [BUGGY]  int  i  =  _skipBind(JsonToken.VALUE_STRING,  _binaryValue);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipBind(JsonToken.VALUE_STRING,  _binaryValue);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBind(JsonToken.VALUE_STRING,  _binaryValue);	  int    i    =    _skipBind(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
86	[BUG]  [BUGGY]  int  i  =  _skipBind(JsonToken.FIELD_NAME);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipBind(JsonToken.FIELD_NAME);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBind(JsonToken.FIELD_NAME);	  int    i    =    _skipBind(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
87	[BUG]  [BUGGY]  String  name  =  _tokenIncomplete();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  name  =  _tokenIncomplete();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  name  =  _tokenIncomplete();	  String    name    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
88	[BUG]  [BUGGY]  String  name  =  _nextString();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  name  =  _nextString();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  name  =  _nextString();	  String    name    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
89	[BUG]  [BUGGY]  String  name  =  _textBuffer.skipString();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  name  =  _textBuffer.skipString();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  name  =  _textBuffer.skipString();	  String    name    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
90	[BUG]  [BUGGY]  String  name  =  _skipToken();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  name  =  _skipToken();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  name  =  _skipToken();	  String    name    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
91	[BUG]  [BUGGY]  int  i  =  _skipBindings()  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipBindings()  -  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBindings()  -  1;	  int    i    =    _skipBindings();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
92	[BUG]  [BUGGY]  char  i  =  _skipBindings();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipBindings();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipBindings();	  int    i    =    _skipBindings();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
93	[BUG]  [BUGGY]  int  i  =  _skipBindings()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipBindings()  +  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBindings()  +  1;	  int    i    =    _skipBindings();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
94	[BUG]  [BUGGY]  String  i  =  _skipField();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  i  =  _skipField();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  i  =  _skipField();	  char    i    =    _skipField();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
95	[BUG]  [BUGGY]  char  i  =  _skipField(JsonToken.FIELD_NAME);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipField(JsonToken.FIELD_NAME);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipField(JsonToken.FIELD_NAME);	  char    i    =    _skipField();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
96	[BUG]  [BUGGY]  char  i  =  _skipCharacter();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipCharacter();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipCharacter();	  char    i    =    _skipField();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
97	[BUG]  [BUGGY]  int  i  =  _nextInput()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _nextInput()  +  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _nextInput()  +  1;	  int    i    =    _nextInput();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
98	[BUG]  [BUGGY]  int  i  =  _skipBinding(JsonToken.VALUE_STRING);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipBinding(JsonToken.VALUE_STRING);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBinding(JsonToken.VALUE_STRING);	  int    i    =    _skipBinding();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
99	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  _bufferRecyclable);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  _bufferRecyclable);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_symbols.add(JsonToken.FIELD_NAME,  _bufferRecyclable);	  _symbols.add(JsonToken.FIELD_NAME,    name);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
100	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  _nameInputCol);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  _nameInputCol);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_symbols.add(JsonToken.FIELD_NAME,  _nameInputCol);	  _symbols.add(JsonToken.FIELD_NAME,    name);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
101	[BUG]  [BUGGY]  int  i  =  _skipStart(JsonToken.END_ARRAY  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipStart(JsonToken.END_ARRAY  +  1);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipStart(JsonToken.END_ARRAY  +  1);	  int    i    =    _skipStart(JsonToken.END_ARRAY);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
102	[BUG]  [BUGGY]  int  i  =  _skipStart(JsonToken.START_ARRAY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipStart(JsonToken.START_ARRAY);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipStart(JsonToken.START_ARRAY);	  int    i    =    _skipStart(JsonToken.START_OBJECT);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
103	[BUG]  [BUGGY]  int  i  =  _skipStart(JsonToken.START_OBJECT  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipStart(JsonToken.START_OBJECT  +  1);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipStart(JsonToken.START_OBJECT  +  1);	  int    i    =    _skipStart(JsonToken.START_OBJECT);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
104	[BUG]  [BUGGY]  int  i  =  _skipEnd(JsonToken.VALUE_STRING);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipEnd(JsonToken.VALUE_STRING);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipEnd(JsonToken.VALUE_STRING);	  int    i    =    _skipStart(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
105	[BUG]  [BUGGY]  int  i  =  _skipStart(JsonToken.VALUE_STRING,  _bufferRecyclable);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipStart(JsonToken.VALUE_STRING,  _bufferRecyclable);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipStart(JsonToken.VALUE_STRING,  _bufferRecyclable);	  int    i    =    _skipStart(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
106	[BUG]  [BUGGY]  int  i  =  _binaryValid;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _binaryValid;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _binaryValid;	  int    i    =    _numTypesValid;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
107	[BUG]  [BUGGY]  char  i  =  _skipBoolean(JsonToken.FIELD_NAME);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipBoolean(JsonToken.FIELD_NAME);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipBoolean(JsonToken.FIELD_NAME);	  char    i    =    _skipBoolean();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
108	[BUG]  [BUGGY]  char  i  =  _skipBoolean(JsonToken.VALUE_STRING);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipBoolean(JsonToken.VALUE_STRING);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipBoolean(JsonToken.VALUE_STRING);	  char    i    =    _skipBoolean();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
109	[BUG]  [BUGGY]  _symbols.remove(_currToken);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  _symbols.remove(_currToken);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_symbols.remove(_currToken);	  _symbols.clear();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
110	[BUG]  [BUGGY]  char  i  =  _skipSegments()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipSegments()  +  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipSegments()  +  1;	  char    i    =    _skipSegments();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
111	[BUG]  [BUGGY]  int  i  =  _inputEnd  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _inputEnd  -  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _inputEnd  -  1;	  int    i    =    _inputEnd;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
112	[BUG]  [BUGGY]  int  i  =  _inputBuffer.length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _inputBuffer.length;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _inputBuffer.length;	  int    i    =    _inputEnd;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
113	[BUG]  [BUGGY]  char  i  =  _skipBind()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipBind()  +  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipBind()  +  1;	  char    i    =    _skipBind();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
114	[BUG]  [BUGGY]  int  i  =  _length();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _length();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _length();	  int    i    =    _skipLength();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
115	[BUG]  [BUGGY]  int  i  =  _binaryValue.length();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _binaryValue.length();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _binaryValue.length();	  int    i    =    _tokenIncomplete();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
116	[BUG]  [BUGGY]  _reportUnexpectedChar(JsonToken.FIELD_NAME);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  _reportUnexpectedChar(JsonToken.FIELD_NAME);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_reportUnexpectedChar(JsonToken.FIELD_NAME);	  _skipString();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
117	[BUG]  [BUGGY]  _reportUnexpectedChar(JsonToken.START_OBJECT);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  _reportUnexpectedChar(JsonToken.START_OBJECT);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_reportUnexpectedChar(JsonToken.START_OBJECT);	  _skipString();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
118	[BUG]  [BUGGY]  _binaryValue  =  _nextToken();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  _binaryValue  =  _nextToken();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_binaryValue  =  _nextToken();	  _skipString();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
119	[BUG]  [BUGGY]  int  i  =  _binaryValue.length  -  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _binaryValue.length  -  2;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _binaryValue.length  -  2;	  int    i    =    _binaryValue.length;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
120	[BUG]  [BUGGY]  char  i  =  _skipBinary()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipBinary()  +  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipBinary()  +  1;	  char    i    =    _skipBinary();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
121	[BUG]  [BUGGY]  int  i  =  _reader.readInt(_icLatin1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _reader.readInt(_icLatin1);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _reader.readInt(_icLatin1);	  int    i    =    _reader.readInt();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
122	[BUG]  [BUGGY]  int  i  =  _reader.readInt(JsonToken.VALUE_STRING);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _reader.readInt(JsonToken.VALUE_STRING);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _reader.readInt(JsonToken.VALUE_STRING);	  int    i    =    _reader.readInt();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
123	[BUG]  [BUGGY]  String  name  =  _tokenString();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  name  =  _tokenString();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  name  =  _tokenString();	  String    name    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
124	[BUG]  [BUGGY]  String  name  =  _binaryValue.toString();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  name  =  _binaryValue.toString();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  name  =  _binaryValue.toString();	  String    name    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
125	[BUG]  [BUGGY]  String  name  =  _textBuffer.finishString();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  name  =  _textBuffer.finishString();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  name  =  _textBuffer.finishString();	  String    name    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
126	[BUG]  [BUGGY]  char  i  =  _skipField(JsonToken.VALUE_STRING);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipField(JsonToken.VALUE_STRING);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipField(JsonToken.VALUE_STRING);	  char    i    =    _skipField();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
127	[BUG]  [BUGGY]  i  =  _textBuffer.finishCurrentSegment();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  i  =  _textBuffer.finishCurrentSegment();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	i  =  _textBuffer.finishCurrentSegment();	  i    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
128	[BUG]  [BUGGY]  int  i  =  _skipBind(JsonToken.VALUE_STRING,  _bufferRecyclable);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipBind(JsonToken.VALUE_STRING,  _bufferRecyclable);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBind(JsonToken.VALUE_STRING,  _bufferRecyclable);	  int    i    =    _skipBind(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
129	[BUG]  [BUGGY]  int  i  =  _skipBounds()  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipBounds()  +  1;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBounds()  +  1;	  int    i    =    _skipBounds();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
130	[BUG]  [BUGGY]  int  i  =  _numTypesValid  -  1L;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _numTypesValid  -  1L;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _numTypesValid  -  1L;	  int    i    =    _numTypesValid    -    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
131	[BUG]  [BUGGY]  String  i  =  _tokenIncomplete();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  i  =  _tokenIncomplete();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  i  =  _tokenIncomplete();	  String    i    =    _skipWSOrEnd();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
132	[BUG]  [BUGGY]  int  i  =  _skipString().length;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipString().length;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipString().length;	  int    i    =    _skipBinary().length;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
133	[BUG]  [BUGGY]  _reportError( "Current  token( "+_currToken+ ")expected  a  string  value ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  _reportError( "Current  token( "+_currToken+ ")expected  a  string  value ");  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_reportError( "Current  token( "+_currToken+ ")expected  a  string  value ");	  _reportError(   "Current    token(   "+_currToken+   ")not    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
134	[BUG]  [BUGGY]  int  i  =  _nextChar();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _nextChar();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _nextChar();	  int    i    =    _nextToken();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
135	[BUG]  [BUGGY]  int  i  =  _skipIndex();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipIndex();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipIndex();	  int    i    =    _skipEnd();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
136	[BUG]  [BUGGY]  int  i  =(_textBuffer.length()  >  0)?  _textBuffer.length()  -  1  :  _textBuffer.length();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =(_textBuffer.length()  >  0)?  _textBuffer.length()  -  1  :  _textBuffer.length();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =(_textBuffer.length()  >  0)?  _textBuffer.length()  -  1  :  _textBuffer.length();	  int    i    =    _textBuffer.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
137	[BUG]  [BUGGY]  int  i  =(_textBuffer.length()  >  0)?  _textBuffer.length()  :  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =(_textBuffer.length()  >  0)?  _textBuffer.length()  :  0;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =(_textBuffer.length()  >  0)?  _textBuffer.length()  :  0;	  int    i    =    _textBuffer.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
138	[BUG]  [BUGGY]  char  i  =  _inputEnd;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _inputEnd;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _inputEnd;	  int    i    =    _inputEnd;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
139	[BUG]  [BUGGY]  int  i  =  _skipBindingEnd();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipBindingEnd();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBindingEnd();	  int    i    =    _skipBinding();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
140	[BUG]  [BUGGY]  int  i  =  _skipSegment();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipSegment();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipSegment();	  int    i    =    _skipSegments()    +    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
141	[BUG]  [BUGGY]  _reportError( "Current  token( "+_currToken+ ")not  a  string  value ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  _reportError( "Current  token( "+_currToken+ ")not  a  string  value ";  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_reportError( "Current  token( "+_currToken+ ")not  a  string  value ";	  _skipString();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
142	[BUG]  [BUGGY]  char  i  =  _skipLong();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  i  =  _skipLong();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipLong();	  char    i    =    _skipField();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
143	[BUG]  [BUGGY]  _symbols.add(JsonSymbol.FIELD_NAME);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  _symbols.add(JsonSymbol.FIELD_NAME);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_symbols.add(JsonSymbol.FIELD_NAME);	  _symbols.clear();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
144	[BUG]  [BUGGY]  String  name  =  _textBuffer.finishCurrentName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  String  name  =  _textBuffer.finishCurrentName();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  name  =  _textBuffer.finishCurrentName();	  String    name    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
145	[BUG]  [BUGGY]  char  name  =  _skipString();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  char  name  =  _skipString();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  name  =  _skipString();	  String    name    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
146	[BUG]  [BUGGY]  Integer  i  =  _skipBinary();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  Integer  i  =  _skipBinary();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	Integer  i  =  _skipBinary();	  int    i    =    _skipBinary()    +    1;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
147	[BUG]  [BUGGY]  int  i  =  _numTypesValid  -  _hashSeed;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _numTypesValid  -  _hashSeed;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _numTypesValid  -  _hashSeed;	  int    i    =    _numTypesValid    -    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
148	[BUG]  [BUGGY]  int  i  =  _numTypesValid  -  _binaryValue;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _numTypesValid  -  _binaryValue;  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _numTypesValid  -  _binaryValue;	  int    i    =    _numTypesValid    -    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
149	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  _currToken);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  _currToken);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_symbols.add(JsonToken.FIELD_NAME,  _currToken);	  _symbols.add(JsonToken.FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
150	[BUG]  [BUGGY]  int  i  =  _skipStart(JsonToken.VALUE_STRING,  _nameInputCol);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipStart(JsonToken.VALUE_STRING,  _nameInputCol);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipStart(JsonToken.VALUE_STRING,  _nameInputCol);	  int    i    =    _skipStart(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
151	[BUG]  [BUGGY]  int  i  =  _skipStart(JsonToken.VALUE_STRING,  _symbols);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipStart(JsonToken.VALUE_STRING,  _symbols);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipStart(JsonToken.VALUE_STRING,  _symbols);	  int    i    =    _skipStart(JsonToken.VALUE_STRING);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
152	[BUG]  [BUGGY]  Int  i  =  _textBuffer.length();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  Int  i  =  _textBuffer.length();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	Int  i  =  _textBuffer.length();	  int    i    =    _textBuffer.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
153	[BUG]  [BUGGY]  int  i  =(_textBuffer.length()  <  1)?  0  :  _textBuffer.length();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =(_textBuffer.length()  <  1)?  0  :  _textBuffer.length();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =(_textBuffer.length()  <  1)?  0  :  _textBuffer.length();	  int    i    =    _textBuffer.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
154	[BUG]  [BUGGY]  int  i  =  _textBuffer.lastIndexOf('.');  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _textBuffer.lastIndexOf('.');  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _textBuffer.lastIndexOf('.');	  int    i    =    _textBuffer.length()    -    1;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
155	[BUG]  [BUGGY]  int  i  =  _skipLen();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipLen();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipLen();	  int    i    =    _skipEnd();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
156	[BUG]  [BUGGY]  Integer  i  =  _skipSize();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  Integer  i  =  _skipSize();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	Integer  i  =  _skipSize();	  int    i    =    _skipSize()    +    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
157	[BUG]  [BUGGY]  int  i  =  _currToken.lastIndexOf('.');  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _currToken.lastIndexOf('.');  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _currToken.lastIndexOf('.');	  int    i    =    _currToken.length();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
158	[BUG]  [BUGGY]  int  i  =  _skipStart(JsonToken.END_ARRAY,  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipStart(JsonToken.END_ARRAY,  1);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipStart(JsonToken.END_ARRAY,  1);	  int    i    =    _skipStart(JsonToken.END_ARRAY);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
159	[BUG]  [BUGGY]  int  i  =  _nextInputStart();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _nextInputStart();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _nextInputStart();	  int    i    =    _nextInput();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
160	[BUG]  [BUGGY]  int  i  =  _nextSegmentCount();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _nextSegmentCount();  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _nextSegmentCount();	  int    i    =    _skipSegmentCount();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
161	[BUG]  [BUGGY]  int  i  =  _skipStart(JsonToken.START_OBJECT,  _nameInputCol);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }      [BUGGY]  int  i  =  _skipStart(JsonToken.START_OBJECT,  _nameInputCol);  [BUGGY]      if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipStart(JsonToken.START_OBJECT,  _nameInputCol);	  int    i    =    _skipStart(JsonToken.START_OBJECT);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
