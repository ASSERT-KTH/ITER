bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  i  =  _skipLength();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _skipLength();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipLength();	  int    i    =    _skipSize();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
2	[BUG]  [BUGGY]  int  i  =  _skipSize()  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _skipSize()  +  1;  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipSize()  +  1;	  int    i    =    _skipSize();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
3	[BUG]  [BUGGY]  char  i  =  _skipSize();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  char  i  =  _skipSize();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipSize();	  int    i    =    _skipSize();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
4	[BUG]  [BUGGY]  char  i  =  _skipBind();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  char  i  =  _skipBind();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipBind();	  int    i    =    _skipBind();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
5	[BUG]  [BUGGY]  int  i  =  _skipBind()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _skipBind()  +  1;  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBind()  +  1;	  int    i    =    _skipBind();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
6	[BUG]  [BUGGY]  char  i  =  _skipBinary();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  char  i  =  _skipBinary();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipBinary();	  int    i    =    _skipBinary();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
7	[BUG]  [BUGGY]  int  i  =  _skipBinary().length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _skipBinary().length;  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBinary().length;	  int    i    =    _skipBinary();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
8	[BUG]  [BUGGY]  char  i  =  _skipString();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  char  i  =  _skipString();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipString();	  int    i    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
9	[BUG]  [BUGGY]  int  i  =  _numTypesValid;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _numTypesValid;  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _numTypesValid;	  int    i    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
10	[BUG]  [BUGGY]  int  i  =  _skipBinding();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _skipBinding();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBinding();	  int    i    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
11	[BUG]  [BUGGY]  int  i  =  _nextToken();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _nextToken();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _nextToken();	  int    i    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
12	[BUG]  [BUGGY]  int  i  =  _numTypesValid  -  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _numTypesValid  -  1;  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _numTypesValid  -  1;	  int    i    =    0;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
13	[BUG]  [BUGGY]  char  i  =  0;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  char  i  =  0;  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  0;	  int    i    =    0;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
14	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  _symbols.add(JsonToken.FIELD_NAME);  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_symbols.add(JsonToken.FIELD_NAME);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
15	[BUG]  [BUGGY]  _symbols.clear();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  _symbols.clear();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_symbols.clear();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
16	[BUG]  [BUGGY]  _reportError( "Current  token( "+_currToken+ ")not  a  string  value ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  _reportError( "Current  token( "+_currToken+ ")not  a  string  value ");  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_reportError( "Current  token( "+_currToken+ ")not  a  string  value ");	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
17	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  name);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  name);  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_symbols.add(JsonToken.FIELD_NAME,  name);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
18	[BUG]  [BUGGY]  char  i  =  _textBuffer.length();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  char  i  =  _textBuffer.length();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _textBuffer.length();	  int    i    =    _textBuffer.length();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
19	[BUG]  [BUGGY]  int  i  =  _textBuffer.length()  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _textBuffer.length()  -  1;  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _textBuffer.length()  -  1;	  int    i    =    _textBuffer.length();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
20	[BUG]  [BUGGY]  int  i  =  _currToken.length();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _currToken.length();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _currToken.length();	  int    i    =    _textBuffer.length();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
21	[BUG]  [BUGGY]  int  i  =  _skipStart()  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _skipStart()  +  1;  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipStart()  +  1;	  int    i    =    _skipStart();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
22	[BUG]  [BUGGY]  int  i  =  _skipEnd();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _skipEnd();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipEnd();	  int    i    =    _skipStart();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
23	[BUG]  [BUGGY]  char  i  =  _skipStart();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  char  i  =  _skipStart();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipStart();	  int    i    =    _skipStart();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  int  i  =  _skipSegments()  -  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _skipSegments()  -  1;  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipSegments()  -  1;	  int    i    =    _skipSegments();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
25	[BUG]  [BUGGY]  int  i  =  _skipSegmentCount();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _skipSegmentCount();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipSegmentCount();	  int    i    =    _skipSegments();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
26	[BUG]  [BUGGY]  String  i  =  _skipWSOrEnd();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  String  i  =  _skipWSOrEnd();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  i  =  _skipWSOrEnd();	  char    i    =    _skipWSOrEnd();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
27	[BUG]  [BUGGY]  char  i  =  _skipBoolean();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  char  i  =  _skipBoolean();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipBoolean();	  char    i    =    _skipWSOrEnd();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
28	[BUG]  [BUGGY]  char  i  =  _skipField();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  char  i  =  _skipField();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipField();	  char    i    =    _skipWSOrEnd();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
29	[BUG]  [BUGGY]  int  i  =  _binaryValue.length;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _binaryValue.length;  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _binaryValue.length;	  int    i    =    _skipBinary();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
30	[BUG]  [BUGGY]  int  i  =  _skipBinary()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _skipBinary()  +  1;  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBinary()  +  1;	  int    i    =    _skipBinary();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
31	[BUG]  [BUGGY]  int  i  =  _inputEnd;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _inputEnd;  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _inputEnd;	  int    i    =    0;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
32	[BUG]  [BUGGY]  char  i  =  _skipSegment();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  char  i  =  _skipSegment();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipSegment();	  char    i    =    _skipWSOrEnd();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
33	[BUG]  [BUGGY]  char  i  =  _skipSegments();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  char  i  =  _skipSegments();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipSegments();	  char    i    =    _skipWSOrEnd();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
34	[BUG]  [BUGGY]  int  i  =  _skipSegments()  +  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _skipSegments()  +  1;  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipSegments()  +  1;	  int    i    =    _skipSegments();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
35	[BUG]  [BUGGY]  int  i  =  _textBuffer.length()  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _textBuffer.length()  +  1;  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _textBuffer.length()  +  1;	  int    i    =    _textBuffer.length();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
36	[BUG]  [BUGGY]  _skipString();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  _skipString();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	_skipString();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
37	[BUG]  [BUGGY]  inObject  =  _reader.readInt();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  inObject  =  _reader.readInt();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	inObject  =  _reader.readInt();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
38	[BUG]  [BUGGY]  String  name  =  _skipString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  String  name  =  _skipString();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	String  name  =  _skipString();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
39	[BUG]  [BUGGY]  i  =  _skipString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  i  =  _skipString();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	i  =  _skipString();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
40	[BUG]  [BUGGY]  int  i  =  _skipStart(JsonToken.START_OBJECT);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _skipStart(JsonToken.START_OBJECT);  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipStart(JsonToken.START_OBJECT);	  int    i    =    _skipStart();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
41	[BUG]  [BUGGY]  int  i  =  _skipStart(JsonToken.END_ARRAY);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _skipStart(JsonToken.END_ARRAY);  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipStart(JsonToken.END_ARRAY);	  int    i    =    _skipStart();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
42	[BUG]  [BUGGY]  int  i  =  _tokenIncomplete();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _tokenIncomplete();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _tokenIncomplete();	  int    i    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
43	[BUG]  [BUGGY]  char  i  =  _skipWord();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  char  i  =  _skipWord();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	char  i  =  _skipWord();	  char    i    =    _skipWSOrEnd();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
44	[BUG]  [BUGGY]  int  i  =  _nextInput();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _nextInput();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _nextInput();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
45	[BUG]  [BUGGY]  int  i  =  _reader.readInt();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _reader.readInt();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _reader.readInt();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
46	[BUG]  [BUGGY]  int  i  =  _skipBounds();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _skipBounds();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBounds();	  int    i    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
47	[BUG]  [BUGGY]  int  i  =  _skipBindings();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _skipBindings();  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBindings();	  int    i    =    _skipString();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
48	[BUG]  [BUGGY]  int  i  =  _skipBind(JsonToken.VALUE_STRING);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _skipBind(JsonToken.VALUE_STRING);  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipBind(JsonToken.VALUE_STRING);	  int    i    =    _skipBind();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
49	[BUG]  [BUGGY]  int  i  =  _skipStart(JsonToken.VALUE_STRING);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  _skipStart(JsonToken.VALUE_STRING);  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  _skipStart(JsonToken.VALUE_STRING);	  int    i    =    _skipStart();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
50	[BUG]  [BUGGY]  int  i  =  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }    [BUGGY]  int  i  =  1;  [BUGGY]    if  (i  <  0)  {  //  end-of-input    close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	589	589	1	replace	int  i  =  1;	  int    i    =    0;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
