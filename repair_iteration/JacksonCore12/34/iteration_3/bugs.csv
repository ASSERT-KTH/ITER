bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_parsingContext!=  null  &&  _tokenInputRow  <  =  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_parsingContext!=  null  &&  _tokenInputRow  <  =  _tokenInputCol)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_parsingContext!=  null  &&  _tokenInputRow  <  =  _tokenInputCol)  {	  if(_parsingContext!=    null    &&    _tokenInputRow    >=    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
2	[BUG]  [BUGGY]  if(_tokenInputRow!=  null  &&  _tokenInputCol  >=  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputRow!=  null  &&  _tokenInputCol  >=  _tokenInputCol)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputRow!=  null  &&  _tokenInputCol  >=  _tokenInputCol)  {	  if(_parsingContext!=    null    &&    _tokenInputRow    >=    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
3	[BUG]  [BUGGY]  if(_tokenInputRow  ==  null  ||  _tokenInputRow!=  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputRow  ==  null  ||  _tokenInputRow!=  _tokenInputCol)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputRow  ==  null  ||  _tokenInputRow!=  _tokenInputCol)  {	  if(_parsingContext    ==    null    ||    _tokenInputRow!=    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
4	[BUG]  [BUGGY]  if(_parsingContext  ==  null  &&  _tokenInputRow!=  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_parsingContext  ==  null  &&  _tokenInputRow!=  _tokenInputCol)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_parsingContext  ==  null  &&  _tokenInputRow!=  _tokenInputCol)  {	  if(_parsingContext    ==    null    ||    _tokenInputRow!=    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
5	[BUG]  [BUGGY]  if(_tokenInputRow  ==  null  ||  _tokenInputCol!=  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputRow  ==  null  ||  _tokenInputCol!=  _tokenInputCol)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputRow  ==  null  ||  _tokenInputCol!=  _tokenInputCol)  {	  if(_parsingContext    ==    null    ||    _tokenInputRow!=    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
6	[BUG]  [BUGGY]  if(_tokenInputRow!=  null  &&  _tokenInputCol  ==  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputRow!=  null  &&  _tokenInputCol  ==  _tokenInputCol)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputRow!=  null  &&  _tokenInputCol  ==  _tokenInputCol)  {	  if(_parsingContext!=    null    &&    _tokenInputRow    ==    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
7	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);	  _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _ioContext);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _ioContext);  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _ioContext);	  _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_STRING  |  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  t  =  JsonToken.VALUE_STRING  |  JsonToken.END_OBJECT;  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	t  =  JsonToken.VALUE_STRING  |  JsonToken.END_OBJECT;	  t    =    JsonToken.VALUE_STRING;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
10	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_STRING  |  JsonToken.START_OBJECT;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  t  =  JsonToken.VALUE_STRING  |  JsonToken.START_OBJECT;  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	t  =  JsonToken.VALUE_STRING  |  JsonToken.START_OBJECT;	  t    =    JsonToken.VALUE_STRING;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
11	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_STRING  |  JsonToken.FIELD_NAME;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  t  =  JsonToken.VALUE_STRING  |  JsonToken.FIELD_NAME;  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	t  =  JsonToken.VALUE_STRING  |  JsonToken.FIELD_NAME;	  t    =    JsonToken.VALUE_STRING;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
12	[BUG]  [BUGGY]  if(_tokenInputCol  ==  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputCol  ==  _tokenInputCol)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputCol  ==  _tokenInputCol)  {	  if(_tokenInputCol    ==    _tokenInputRow)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  if(_tokenInputRow  ==  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputRow  ==  null)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputRow  ==  null)  {	  if(_tokenInputRow!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
14	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildStringContext(_tokenInputRow,  _tokenInputCol  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  _parsingContext  =  _parsingContext.createChildStringContext(_tokenInputRow,  _tokenInputCol  +  1);  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	_parsingContext  =  _parsingContext.createChildStringContext(_tokenInputRow,  _tokenInputCol  +  1);	  _parsingContext    =    _parsingContext.createChildStringContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  _reportError(i,  _tokenInputRow, "expected  a  value ");  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  _reportError(i,  _tokenInputRow, "expected  a  value ");  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	_reportError(i,  _tokenInputRow, "expected  a  value ");	  _reportError(i,   "expected    a    value   ");    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
16	[BUG]  [BUGGY]  _reportError(i,  1, "expected  a  value ");  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  _reportError(i,  1, "expected  a  value ");  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	_reportError(i,  1, "expected  a  value ");	  _reportError(i,   "expected    a    value   ");    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
17	[BUG]  [BUGGY]  if(_tokenInputRow!=  null  ||  _tokenInputRow  ==  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputRow!=  null  ||  _tokenInputRow  ==  _tokenInputCol)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputRow!=  null  ||  _tokenInputRow  ==  _tokenInputCol)  {	  if(_parsingContext!=    null    ||    _tokenInputRow    ==    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
18	[BUG]  [BUGGY]  if(_tokenInputRow!=  null  ||  _tokenInputCol  ==  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputRow!=  null  ||  _tokenInputCol  ==  _tokenInputCol)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputRow!=  null  ||  _tokenInputCol  ==  _tokenInputCol)  {	  if(_parsingContext!=    null    ||    _tokenInputRow    ==    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
19	[BUG]  [BUGGY]  if(_tokenInputCol  >=  _tokenInputRow)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputCol  >=  _tokenInputRow)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputCol  >=  _tokenInputRow)  {	  if(_tokenInputRow    >=    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
20	[BUG]  [BUGGY]  _reportUnexpectedChar(i,  _tokenInputRow, "expected  a  value ");  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  _reportUnexpectedChar(i,  _tokenInputRow, "expected  a  value ");  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	_reportUnexpectedChar(i,  _tokenInputRow, "expected  a  value ");	  _reportUnexpectedChar(i,   "expected    a    value   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
21	[BUG]  [BUGGY]  if(_tokenInputCol!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputCol!=  null)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputCol!=  null)  {	  if(_tokenInputCol!=    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
22	[BUG]  [BUGGY]  if  (!inObject  &&  _tokenInputRow  <  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if  (!inObject  &&  _tokenInputRow  <  _tokenInputCol)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if  (!inObject  &&  _tokenInputRow  <  _tokenInputCol)  {	  if    (!inObject    &&    _tokenInputRow    <    =    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
23	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
24	[BUG]  [BUGGY]  if(_parsingContext  ==  null  ||  _tokenInputRow  ==  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_parsingContext  ==  null  ||  _tokenInputRow  ==  _tokenInputCol)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_parsingContext  ==  null  ||  _tokenInputRow  ==  _tokenInputCol)  {	  if(_parsingContext    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
25	[BUG]  [BUGGY]  _reportInvalidEOF(i, "expected  a  value ");  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  _reportInvalidEOF(i, "expected  a  value ");  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	_reportInvalidEOF(i, "expected  a  value ");	  _reportUnexpectedChar(i,   "expected    a    value   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
26	[BUG]  [BUGGY]  if(_parsingContext!=  null  &&  _tokenInputRow  <  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_parsingContext!=  null  &&  _tokenInputRow  <  _tokenInputCol)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_parsingContext!=  null  &&  _tokenInputRow  <  _tokenInputCol)  {	  if(_parsingContext!=    null    &&    _tokenInputRow    >=    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
27	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_STRING  |  JsonToken.END_ARRAY;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  t  =  JsonToken.VALUE_STRING  |  JsonToken.END_ARRAY;  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	t  =  JsonToken.VALUE_STRING  |  JsonToken.END_ARRAY;	  t    =    JsonToken.VALUE_STRING;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
28	[BUG]  [BUGGY]  if  (!inObject  &&  _tokenInputRow  >  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if  (!inObject  &&  _tokenInputRow  >  _tokenInputCol)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if  (!inObject  &&  _tokenInputRow  >  _tokenInputCol)  {	  if    (!inObject    &&    _tokenInputRow    >=    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
29	[BUG]  [BUGGY]  if(tokenInputRow  ==  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(tokenInputRow  ==  _tokenInputCol)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(tokenInputRow  ==  _tokenInputCol)  {	  if(_tokenInputCol    ==    _tokenInputRow)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
30	[BUG]  [BUGGY]  if(_tokenInputRow  <  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputRow  <  _tokenInputCol)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputRow  <  _tokenInputCol)  {	  if(_tokenInputRow    <    =    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
31	[BUG]  [BUGGY]  if(_tokenInputRow!=  null  ||  _tokenInputCol  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputRow!=  null  ||  _tokenInputCol  ==  null)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputRow!=  null  ||  _tokenInputCol  ==  null)  {	  if(_parsingContext!=    null    ||    _tokenInputRow    ==    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
32	[BUG]  [BUGGY]  if(_tokenInputRow!=  null  ||  _tokenInputCol  ==  _parsingContext)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputRow!=  null  ||  _tokenInputCol  ==  _parsingContext)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputRow!=  null  ||  _tokenInputCol  ==  _parsingContext)  {	  if(_parsingContext!=    null    ||    _tokenInputRow    ==    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
33	[BUG]  [BUGGY]  if(tokenInputRow!=  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(tokenInputRow!=  _tokenInputCol)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(tokenInputRow!=  _tokenInputCol)  {	  if(_tokenInputCol!=    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
34	[BUG]  [BUGGY]  _reportError(i, "Unexpected  value ");  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  _reportError(i, "Unexpected  value ");  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	_reportError(i, "Unexpected  value ");	  _reportError(i,   "expected    a    value   ");    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
35	[BUG]  [BUGGY]  _reportError( "Token  ' "+i+ "'  expected  a  value ");  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  _reportError( "Token  ' "+i+ "'  expected  a  value ");  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	_reportError( "Token  ' "+i+ "'  expected  a  value ");	  _reportUnexpectedChar(i,   "expected    a    value   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
36	[BUG]  [BUGGY]  _reportError( "msg.unexpected.value ");  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  _reportError( "msg.unexpected.value ");  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	_reportError( "msg.unexpected.value ");	  _reportUnexpectedChar(i,   "expected    a    value   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
37	[BUG]  [BUGGY]  _reportError( "msg.illegal.character ");  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  _reportError( "msg.illegal.character ");  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	_reportError( "msg.illegal.character ");	  _reportUnexpectedChar(i,   "expected    a    value   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
38	[BUG]  [BUGGY]  if(_tokenInputRow  ==  null  ||  _tokenInputCol!=  _parsingContext)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputRow  ==  null  ||  _tokenInputCol!=  _parsingContext)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputRow  ==  null  ||  _tokenInputCol!=  _parsingContext)  {	  if(_parsingContext    ==    null    ||    _tokenInputRow!=    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
39	[BUG]  [BUGGY]  if(_tokenInputRow!=  null  &&  _tokenInputCol!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputRow!=  null  &&  _tokenInputCol!=  null)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputRow!=  null  &&  _tokenInputCol!=  null)  {	  if(_tokenInputRow!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
40	[BUG]  [BUGGY]  if(_tokenInputRow!=  null  &&  _tokenInputCol  ==  _parsingContext)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputRow!=  null  &&  _tokenInputCol  ==  _parsingContext)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputRow!=  null  &&  _tokenInputCol  ==  _parsingContext)  {	  if(_parsingContext!=    null    &&    _tokenInputRow    ==    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
41	[BUG]  [BUGGY]  if(_tokenInputRow!=  _tokenInputCol)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputRow!=  _tokenInputCol)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputRow!=  _tokenInputCol)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }	  _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_EMBEDDED_OBJECT  ||  t  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(t  ==  JsonToken.VALUE_EMBEDDED_OBJECT  ||  t  ==  JsonToken.START_OBJECT)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(t  ==  JsonToken.VALUE_EMBEDDED_OBJECT  ||  t  ==  JsonToken.START_OBJECT)  {	  if(_tokenInputCol    ==    _tokenInputRow)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
43	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_EMBEDDED_OBJECT)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(t  ==  JsonToken.VALUE_EMBEDDED_OBJECT)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(t  ==  JsonToken.VALUE_EMBEDDED_OBJECT)  {	  if(_tokenInputCol    ==    _tokenInputRow)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
44	[BUG]  [BUGGY]  if(_parsingContext!=  null  &&  _tokenInputRow  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_parsingContext!=  null  &&  _tokenInputRow  >  0)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_parsingContext!=  null  &&  _tokenInputRow  >  0)  {	  if(_parsingContext!=    null    &&    _tokenInputRow    >=    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
45	[BUG]  [BUGGY]  if(_tokenInputRow!=  null  ||  _tokenInputCol  ==  _parsingContext.getCurrentToken())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputRow!=  null  ||  _tokenInputCol  ==  _parsingContext.getCurrentToken())  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputRow!=  null  ||  _tokenInputCol  ==  _parsingContext.getCurrentToken())  {	  if(_parsingContext!=    null    ||    _tokenInputRow    ==    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
46	[BUG]  [BUGGY]  if(_tokenInputRow!=  null  ||  _tokenInputCol  ==  _parsingContext.getParent())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputRow!=  null  ||  _tokenInputCol  ==  _parsingContext.getParent())  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputRow!=  null  ||  _tokenInputCol  ==  _parsingContext.getParent())  {	  if(_parsingContext!=    null    ||    _tokenInputRow    ==    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
47	[BUG]  [BUGGY]  if(_tokenInputRow!=  _tokenInputCol)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputRow!=  _tokenInputCol)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputRow!=  _tokenInputCol)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
48	[BUG]  [BUGGY]  if(_tokenInputCol!=  JsonToken.VALUE_EMBEDDED_OBJECT)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(_tokenInputCol!=  JsonToken.VALUE_EMBEDDED_OBJECT)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(_tokenInputCol!=  JsonToken.VALUE_EMBEDDED_OBJECT)  {	  if(_tokenInputCol!=    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
49	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NULL;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  t  =  JsonToken.VALUE_NULL;  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	t  =  JsonToken.VALUE_NULL;	  t    =    JsonToken.VALUE_STRING;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
50	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NUMBER_INT;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  t  =  JsonToken.VALUE_NUMBER_INT;  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	t  =  JsonToken.VALUE_NUMBER_INT;	  t    =    JsonToken.VALUE_STRING;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
51	[BUG]  [BUGGY]  t  =  JsonToken.START_OBJECT;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  t  =  JsonToken.START_OBJECT;  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	t  =  JsonToken.START_OBJECT;	  t    =    JsonToken.VALUE_STRING;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
52	[BUG]  [BUGGY]  if(t  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':      [BUGGY]  if(t  ==  JsonToken.START_OBJECT)  {  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;  break;  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	652	652	1	replace	if(t  ==  JsonToken.START_OBJECT)  {	  if(_parsingContext    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
