bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NULL  |  JsonToken.END_ARRAY  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NULL  |  JsonToken.END_ARRAY  +  1;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NULL  |  JsonToken.END_ARRAY  +  1;	  t    =    JsonToken.VALUE_NULL    |    JsonToken.END_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
2	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NULL  |  JsonToken.START_OBJECT  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NULL  |  JsonToken.START_OBJECT  +  1;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NULL  |  JsonToken.START_OBJECT  +  1;	  t    =    JsonToken.VALUE_NULL    |    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
3	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NULL  |  JsonToken.START_ARRAY;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NULL  |  JsonToken.START_ARRAY;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NULL  |  JsonToken.START_ARRAY;	  t    =    JsonToken.VALUE_NULL    |    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
4	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_STRING  ||  JsonToken.END_OBJECT  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_STRING  ||  JsonToken.END_OBJECT  +  1;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_STRING  ||  JsonToken.END_OBJECT  +  1;	  t    =    JsonToken.VALUE_STRING    ||    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
5	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_STRING  ||  JsonToken.END_ARRAY;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_STRING  ||  JsonToken.END_ARRAY;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_STRING  ||  JsonToken.END_ARRAY;	  t    =    JsonToken.VALUE_STRING    ||    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
6	[BUG]  [BUGGY]  t  =  JsonToken.START_ARRAY  |  JsonToken.START_OBJECT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.START_ARRAY  |  JsonToken.START_OBJECT;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.START_ARRAY  |  JsonToken.START_OBJECT;	  t    =    JsonToken.START_OBJECT    |    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  t  =  JsonToken.START_OBJECT  &  JsonToken.START_ARRAY;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.START_OBJECT  &  JsonToken.START_ARRAY;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.START_OBJECT  &  JsonToken.START_ARRAY;	  t    =    JsonToken.START_OBJECT    |    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
8	[BUG]  [BUGGY]  t  =  JsonToken.START_OBJECT  |  JsonToken.START_ARRAY  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.START_OBJECT  |  JsonToken.START_ARRAY  +  1;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.START_OBJECT  |  JsonToken.START_ARRAY  +  1;	  t    =    JsonToken.START_OBJECT    |    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
9	[BUG]  [BUGGY]  t  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);	  t    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    break;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
10	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NULL  ||  t  ==  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NULL  ||  t  ==  JsonToken.END_OBJECT;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NULL  ||  t  ==  JsonToken.END_OBJECT;	  t    =    JsonToken.VALUE_NULL    ||    t    ==    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
11	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_TRUE  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_TRUE  +  1;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_TRUE  +  1;	  t    =    JsonToken.VALUE_TRUE;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NULL  |  JsonToken.END_OBJECT  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NULL  |  JsonToken.END_OBJECT  +  1;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NULL  |  JsonToken.END_OBJECT  +  1;	  t    =    JsonToken.VALUE_NULL    |    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NUMBER_FALSE;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NUMBER_FALSE;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NUMBER_FALSE;	  t    =    JsonToken.VALUE_NUMBER_INT    ||    JsonToken.VALUE_NUMBER_FALSE;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
14	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_STRING  ||  JsonToken.START_OBJECT  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_STRING  ||  JsonToken.START_OBJECT  +  1;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_STRING  ||  JsonToken.START_OBJECT  +  1;	  t    =    JsonToken.VALUE_STRING    ||    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
15	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_STRING  ||  JsonToken.START_ARRAY;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_STRING  ||  JsonToken.START_ARRAY;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_STRING  ||  JsonToken.START_ARRAY;	  t    =    JsonToken.VALUE_STRING    ||    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
16	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.END_ARRAY;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.END_ARRAY;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.END_ARRAY;	  t    =    JsonToken.VALUE_NUMBER_INT    ||    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
17	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.START_OBJECT;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.START_OBJECT;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.START_OBJECT;	  t    =    JsonToken.VALUE_NUMBER_INT    ||    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
18	[BUG]  [BUGGY]  t  =  JsonToken.END_ARRAY  |  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.END_ARRAY  |  JsonToken.END_OBJECT;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.END_ARRAY  |  JsonToken.END_OBJECT;	  t    =    JsonToken.END_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
19	[BUG]  [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);	  t    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
20	[BUG]  [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _hashSeed);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _hashSeed);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _hashSeed);	  t    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
21	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.VALUE_NUMBER_INT  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.VALUE_NUMBER_INT  +  1;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.VALUE_NUMBER_INT  +  1;	  t    =    JsonToken.VALUE_NUMBER_INT    +    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
22	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_STRING  ||  JsonToken.VALUE_FIELD;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_STRING  ||  JsonToken.VALUE_FIELD;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_STRING  ||  JsonToken.VALUE_FIELD;	  t    =    JsonToken.VALUE_STRING    ||    JsonToken.VALUE_FALSE;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
23	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_STRING  ||  JsonToken.VALUE_FALSE  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_STRING  ||  JsonToken.VALUE_FALSE  +  1;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_STRING  ||  JsonToken.VALUE_FALSE  +  1;	  t    =    JsonToken.VALUE_STRING    ||    JsonToken.VALUE_FALSE;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
24	[BUG]  [BUGGY]  t  =  _parsingContext.VALUE_NULL  ||  t!=  JsonToken.START_OBJECT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  _parsingContext.VALUE_NULL  ||  t!=  JsonToken.START_OBJECT;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  _parsingContext.VALUE_NULL  ||  t!=  JsonToken.START_OBJECT;	  t    =    JsonToken.VALUE_NULL    ||    t!=    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
25	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_TRUE;  break;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_TRUE;  break;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_TRUE;  break;	  t    =    JsonToken.VALUE_STRING;    break;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
26	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);	  if(t    ==    JsonToken.VALUE_NULL)    {    if(!inObject)    {    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
27	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);	  if(t    ==    JsonToken.VALUE_NULL)    {    if(!inObject)    {    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
28	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NUMBER_FLOAT  ||  JsonToken.VALUE_NUMBER_INT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NUMBER_FLOAT  ||  JsonToken.VALUE_NUMBER_INT;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NUMBER_FLOAT  ||  JsonToken.VALUE_NUMBER_INT;	  t    =    JsonToken.VALUE_NUMBER_INT    ||    JsonToken.VALUE_NUMBER_FLOAT;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
29	[BUG]  [BUGGY]  t  =  JsonToken.END_OBJECT  |  JsonToken.VALUE_NULL;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.END_OBJECT  |  JsonToken.VALUE_NULL;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.END_OBJECT  |  JsonToken.VALUE_NULL;	  t    =    JsonToken.VALUE_NULL    |    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
30	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NULL  ||  t!=  JsonToken.START_ARRAY;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NULL  ||  t!=  JsonToken.START_ARRAY;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NULL  ||  t!=  JsonToken.START_ARRAY;	  t    =    JsonToken.VALUE_NULL    ||    t!=    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
31	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NULL  ||  t  ==  JsonToken.START_ARRAY;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NULL  ||  t  ==  JsonToken.START_ARRAY;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NULL  ||  t  ==  JsonToken.START_ARRAY;	  t    =    JsonToken.VALUE_NULL    ||    t    ==    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
32	[BUG]  [BUGGY]  t  =  JsonToken.END_ARRAY  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.END_ARRAY  +  1;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.END_ARRAY  +  1;	  t    =    JsonToken.END_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
33	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.END_OBJECT  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.END_OBJECT  +  1;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.END_OBJECT  +  1;	  t    =    JsonToken.VALUE_NUMBER_INT    ||    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
34	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_STRING  +  1;  break;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_STRING  +  1;  break;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_STRING  +  1;  break;	  t    =    JsonToken.VALUE_STRING;    break;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
35	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.VALUE_NUMBER_FALSE  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.VALUE_NUMBER_FALSE  +  1;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.VALUE_NUMBER_FALSE  +  1;	  t    =    JsonToken.VALUE_NUMBER_INT    ||    JsonToken.VALUE_NUMBER_FALSE;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
36	[BUG]  [BUGGY]  t  =  JsonToken.START_ARRAY  +  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.START_ARRAY  +  2;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.START_ARRAY  +  2;	  t    =    JsonToken.START_ARRAY    +    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
37	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_STRING  +  1L;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_STRING  +  1L;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_STRING  +  1L;	  t    =    JsonToken.VALUE_STRING    +    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
38	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NUMBER_ARRAY;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NUMBER_ARRAY;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NUMBER_ARRAY;	  t    =    JsonToken.VALUE_NUMBER_FLOAT;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
39	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NUMBER_FLOAT  ||  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NUMBER_FLOAT  ||  JsonToken.END_OBJECT;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NUMBER_FLOAT  ||  JsonToken.END_OBJECT;	  t    =    JsonToken.VALUE_NUMBER_FLOAT;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
40	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }	  if(t    ==    JsonToken.VALUE_NULL)    {    if(!inObject)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
41	[BUG]  [BUGGY]  if(!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  if(!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	if(!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }	  if(t    ==    JsonToken.VALUE_NULL)    {    if(!inObject)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
42	[BUG]  [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  if(t  ==  JsonToken.VALUE_STRING)  {  if(!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	if(t  ==  JsonToken.VALUE_STRING)  {  if(!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }	  if(t    ==    JsonToken.VALUE_NULL)    {    if(!inObject)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
43	[BUG]  [BUGGY]  t  =  JsonToken.START_OBJECT  +  1L;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.START_OBJECT  +  1L;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.START_OBJECT  +  1L;	  t    =    JsonToken.START_OBJECT    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
44	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NUMBER_INT;  break;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NUMBER_INT;  break;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NUMBER_INT;  break;	  t    =    JsonToken.VALUE_NULL;    break;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
45	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_STRING  ||  JsonToken.VALUE_ARRAY;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_STRING  ||  JsonToken.VALUE_ARRAY;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_STRING  ||  JsonToken.VALUE_ARRAY;	  t    =    JsonToken.VALUE_STRING    ||    JsonToken.VALUE_FALSE;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
46	[BUG]  [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputBuffer,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputBuffer,  _tokenInputCol);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  _parsingContext.createChildObjectContext(_tokenInputBuffer,  _tokenInputCol);	  t    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
47	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.VALUE_NUMBER_FLOAT  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.VALUE_NUMBER_FLOAT  +  1;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.VALUE_NUMBER_FLOAT  +  1;	  t    =    JsonToken.VALUE_NUMBER_INT    ||    JsonToken.VALUE_NUMBER_FLOAT;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
48	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NUMBER_FALSE  ||  JsonToken.VALUE_NUMBER_INT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NUMBER_FALSE  ||  JsonToken.VALUE_NUMBER_INT;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NUMBER_FALSE  ||  JsonToken.VALUE_NUMBER_INT;	  t    =    JsonToken.VALUE_NUMBER_INT    ||    JsonToken.VALUE_NUMBER_FALSE;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
49	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_EMBEDDED_OBJECT;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_EMBEDDED_OBJECT;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_EMBEDDED_OBJECT;	  t    =    JsonToken.VALUE_FALSE;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
50	[BUG]  [BUGGY]  t  =  t  ==  JsonToken.VALUE_NULL  ||  t!=  JsonToken.START_OBJECT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  t  ==  JsonToken.VALUE_NULL  ||  t!=  JsonToken.START_OBJECT;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  t  ==  JsonToken.VALUE_NULL  ||  t!=  JsonToken.START_OBJECT;	  t    =    JsonToken.VALUE_NULL    ||    t!=    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
51	[BUG]  [BUGGY]  t  =  _parsingContext.createChildInputContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  _parsingContext.createChildInputContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  _parsingContext.createChildInputContext(_tokenInputRow,  _tokenInputCol);	  t    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
52	[BUG]  [BUGGY]  t  =  JsonToken.START_OBJECT  &&  JsonToken.START_ARRAY;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.START_OBJECT  &&  JsonToken.START_ARRAY;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.START_OBJECT  &&  JsonToken.START_ARRAY;	  t    =    JsonToken.START_OBJECT    |    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
53	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NULL  ||  t  ==  JsonToken.VALUE_NULL;  break;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NULL  ||  t  ==  JsonToken.VALUE_NULL;  break;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NULL  ||  t  ==  JsonToken.VALUE_NULL;  break;	  t    =    JsonToken.VALUE_NULL;    break;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
54	[BUG]  [BUGGY]  t  =  JsonToken.VALUE_NULL  ||  t  ==  JsonToken.START_OBJECT;  break;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_OBJECT;      [BUGGY]  t  =  JsonToken.VALUE_NULL  ||  t  ==  JsonToken.START_OBJECT;  break;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchTrue();  t  =  JsonToken.VALUE_TRUE;  break;  case  'f':  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	656	656	1	replace	t  =  JsonToken.VALUE_NULL  ||  t  ==  JsonToken.START_OBJECT;  break;	  t    =    JsonToken.VALUE_NULL;    break;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
