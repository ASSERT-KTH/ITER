bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  null  :  _nextField();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  null  :  _nextField();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  null  :  _nextField();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextField();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
2	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  null  :  _nextField();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  null  :  _nextField();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.START_OBJECT)?  null  :  _nextField();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextField();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
3	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextInt();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextInt();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextInt();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextField();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
4	[BUG]  [BUGGY]  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
5	[BUG]  [BUGGY]  ||(_currToken  ==  JsonToken.START_OBJECT  &&  _currToken  ==  JsonToken.END_OBJECT))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  ||(_currToken  ==  JsonToken.START_OBJECT  &&  _currToken  ==  JsonToken.END_OBJECT))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	||(_currToken  ==  JsonToken.START_OBJECT  &&  _currToken  ==  JsonToken.END_OBJECT))  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
6	[BUG]  [BUGGY]  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
7	[BUG]  [BUGGY]  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	||  _currToken  ==  JsonToken.FIELD_NAME)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
8	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  1  :  _nextInput();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  1  :  _nextInput();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  1  :  _nextInput();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    0    :    _nextInput();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
9	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  -1  :  _nextInput();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  -1  :  _nextInput();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  -1  :  _nextInput();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    0    :    _nextInput();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
10	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  0  :  _nextInput();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  0  :  _nextInput();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  0  :  _nextInput();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    0    :    _nextInput();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
11	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextDouble();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextDouble();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextDouble();	  return    _nextDouble();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
12	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  _nextToken()  :  JsonToken.END_ARRAY;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  _nextToken()  :  JsonToken.END_ARRAY;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.START_OBJECT)?  _nextToken()  :  JsonToken.END_ARRAY;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextToken()    :    JsonToken.END_ARRAY;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
13	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextToken()  :  JsonToken.END_ARRAY;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextToken()  :  JsonToken.END_ARRAY;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextToken()  :  JsonToken.END_ARRAY;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextToken()    :    JsonToken.END_ARRAY;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
14	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextLine()  :  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextLine()  :  0;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextLine()  :  0;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextChar()    :    0;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
15	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextToken()  :  JsonToken.FIELD_NAME;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextToken()  :  JsonToken.FIELD_NAME;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextToken()  :  JsonToken.FIELD_NAME;	  return(_currToken    ==    JsonToken.VALUE_NULL)?    _nextToken()    :    null;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
16	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextToken()  :  JsonToken.END_OBJECT;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextToken()  :  JsonToken.END_OBJECT;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextToken()  :  JsonToken.END_OBJECT;	  return(_currToken    ==    JsonToken.VALUE_NULL)?    _nextToken()    :    null;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
17	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextString()  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextString()  :  null;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextString()  :  null;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextFieldName()    :    null;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
18	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextName()  :  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextName()  :  null;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextName()  :  null;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextFieldName()    :    null;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
19	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextFieldName()  :  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextFieldName()  :  null;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextFieldName()  :  null;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextFieldName()    :    null;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
20	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextField()  :  null;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextField()  :  null;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextField()  :  null;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextField()    :    null;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  _nextField()  :  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  _nextField()  :  null;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.START_OBJECT)?  _nextField()  :  null;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextField()    :    null;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextField()  :  Integer.MAX_VALUE;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextField()  :  Integer.MAX_VALUE;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextField()  :  Integer.MAX_VALUE;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextField()    :    null;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
23	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextField()  :  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextField()  :  0;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextField()  :  0;	  return(_currToken    ==    JsonToken.VALUE_STRING)?    _nextInt()    :    0;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
24	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextString()  :  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextString()  :  0;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextString()  :  0;	  return(_currToken    ==    JsonToken.VALUE_STRING)?    _nextInt()    :    0;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
25	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextInt()  :  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextInt()  :  1;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextInt()  :  1;	  return(_currToken    ==    JsonToken.VALUE_STRING)?    _nextInt()    :    0;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
26	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  null  :  _nextToken();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  null  :  _nextToken();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.START_OBJECT)?  null  :  _nextToken();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextToken();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
27	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  null  :  _nextToken();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  null  :  _nextToken();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  null  :  _nextToken();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextToken();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
28	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextToken()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextToken()  +  1;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextToken()  +  1;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextToken();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
29	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextField()  :  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextField()  :  0;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextField()  :  0;	  return(_currToken    ==    JsonToken.VALUE_NULL)?    _nextInt()    :    0;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
30	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NUMBER_INT)?  _nextInt()  :  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NUMBER_INT)?  _nextInt()  :  0;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_NUMBER_INT)?  _nextInt()  :  0;	  return(_currToken    ==    JsonToken.VALUE_NULL)?    _nextInt()    :    0;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
31	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextString()  :  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextString()  :  1;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextString()  :  1;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextString()    :    0;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
32	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _skipString()  :  0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _skipString()  :  0;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _skipString()  :  0;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextString()    :    0;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
33	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  -1  :  _nextChar();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  -1  :  _nextChar();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  -1  :  _nextChar();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    -1    :    _nextInt();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
34	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  -1  :  _nextLine();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  -1  :  _nextLine();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  -1  :  _nextLine();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    -1    :    _nextInt();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
35	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  -1  :  _nextElement();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  -1  :  _nextElement();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  -1  :  _nextElement();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    -1    :    _nextInt();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
36	[BUG]  [BUGGY]  _currToken  =  JsonToken.START_OBJECT  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  _currToken  =  JsonToken.START_OBJECT  +  1;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	_currToken  =  JsonToken.START_OBJECT  +  1;	  _currToken    =    JsonToken.START_OBJECT;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
37	[BUG]  [BUGGY]  _currToken  =  JsonToken.START_OBJECT  |  JsonToken.END_OBJECT;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  _currToken  =  JsonToken.START_OBJECT  |  JsonToken.END_OBJECT;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	_currToken  =  JsonToken.START_OBJECT  |  JsonToken.END_OBJECT;	  _currToken    =    JsonToken.START_OBJECT;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
38	[BUG]  [BUGGY]  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(!inObject)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
39	[BUG]  [BUGGY]  if(inObject)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(inObject)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(inObject)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(!inObject)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
40	[BUG]  [BUGGY]  ||(_currToken  ==  JsonToken.FIELD_NAME  &&!inObject))  {  return;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  ||(_currToken  ==  JsonToken.FIELD_NAME  &&!inObject))  {  return;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	||(_currToken  ==  JsonToken.FIELD_NAME  &&!inObject))  {  return;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(!inObject)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
41	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  1  :  _nextFieldName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  1  :  _nextFieldName();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  1  :  _nextFieldName();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    0    :    _nextFieldName();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
42	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  -1  :  _nextFieldName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  -1  :  _nextFieldName();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  -1  :  _nextFieldName();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    0    :    _nextFieldName();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
43	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  0  :  _nextFieldName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  0  :  _nextFieldName();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  0  :  _nextFieldName();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    0    :    _nextFieldName();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
44	[BUG]  [BUGGY]  if(i  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(i  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT)  {  return  null;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(i  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT)  {  return  null;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(i    ==    0)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
45	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(i  ==  0)return  null;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(i  ==  0)return  null;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(i  ==  0)return  null;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(i    ==    0)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
46	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(1):  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(1):  0;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(1):  0;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextInt(0):    0;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
47	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(1L):  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(1L):  0;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(1L):  0;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextInt(0):    0;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
48	[BUG]  [BUGGY]  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  ||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  null;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	||  _currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  null;	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
49	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  null;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  null;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
50	[BUG]  [BUGGY]  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  return  null;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  return  null;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	||  _currToken  ==  JsonToken.FIELD_NAME)  {  return  null;	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
51	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(1):  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(1):  1;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(1):  1;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextInt(0):    1;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
52	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(1L):  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(1L):  1;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(1L):  1;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextInt(0):    1;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
53	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(0,  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(0,  1);  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(0,  1);	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextInt(0):    1;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
54	[BUG]  [BUGGY]  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  return  null;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	||  _currToken  ==  JsonToken.FIELD_NAME)  {  return  null;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
55	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  this;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  this;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  this;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
56	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  return  null;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING)  {  return  null;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
57	[BUG]  [BUGGY]  ||(_currToken  ==  JsonToken.FIELD_NAME  &&!_bufferRecyclable))  {  return  null;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  ||(_currToken  ==  JsonToken.FIELD_NAME  &&!_bufferRecyclable))  {  return  null;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	||(_currToken  ==  JsonToken.FIELD_NAME  &&!_bufferRecyclable))  {  return  null;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
58	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	_currToken  =  JsonToken.VALUE_STRING;	  _currToken    =    JsonToken.FIELD_NAME;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
59	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextToken()  :  JsonToken.FIELD_NAME;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextToken()  :  JsonToken.FIELD_NAME;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextToken()  :  JsonToken.FIELD_NAME;	  return(_currToken    ==    JsonToken.VALUE_STRING)?    _nextToken()    :    null;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
60	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextToken()  :  JsonToken.END_OBJECT;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextToken()  :  JsonToken.END_OBJECT;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextToken()  :  JsonToken.END_OBJECT;	  return(_currToken    ==    JsonToken.VALUE_STRING)?    _nextToken()    :    null;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
61	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  _nextToken()  :  JsonToken.END_OBJECT;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  _nextToken()  :  JsonToken.END_OBJECT;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.START_OBJECT)?  _nextToken()  :  JsonToken.END_OBJECT;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextToken()    :    JsonToken.END_OBJECT;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
62	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  0  :  _nextChar();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  0  :  _nextChar();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  0  :  _nextChar();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    0    :    _nextInt();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
63	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  1  :  _nextInt();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  1  :  _nextInt();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  1  :  _nextInt();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    0    :    _nextInt();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
64	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  0  :  _nextElement();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  0  :  _nextElement();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  0  :  _nextElement();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    0    :    _nextInt();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
65	[BUG]  [BUGGY]  return  _nextName().toLowerCase();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return  _nextName().toLowerCase();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return  _nextName().toLowerCase();	  return    _nextName();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
66	[BUG]  [BUGGY]  aughtExceptionHandler  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  aughtExceptionHandler  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	aughtExceptionHandler  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
67	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(JsonToken.class);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(JsonToken.class);  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	Thread.currentThread().setContextClassLoader(JsonToken.class);	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
68	[BUG]  [BUGGY]  allowNull(JsonToken.FIELD_NAME);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  allowNull(JsonToken.FIELD_NAME);  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	allowNull(JsonToken.FIELD_NAME);	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
69	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(JsonToken.FIELD_NAME);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(JsonToken.FIELD_NAME);  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	Thread.currentThread().setContextClassLoader(JsonToken.FIELD_NAME);	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
70	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextInput()  :  null;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextInput()  :  null;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextInput()  :  null;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextInput()    :    null;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
71	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  _nextInput()  :  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  _nextInput()  :  null;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.START_OBJECT)?  _nextInput()  :  null;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextInput()    :    null;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
72	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  _nextToken()  :  JsonToken.FIELD_NAME;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  _nextToken()  :  JsonToken.FIELD_NAME;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.START_OBJECT)?  _nextToken()  :  JsonToken.FIELD_NAME;	  return(_currToken    ==    JsonToken.START_OBJECT)?    _nextToken()    :    null;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
73	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.END_OBJECT)?  _nextToken()  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.END_OBJECT)?  _nextToken()  :  null;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.END_OBJECT)?  _nextToken()  :  null;	  return(_currToken    ==    JsonToken.START_OBJECT)?    _nextToken()    :    null;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
74	[BUG]  [BUGGY]  return  _nextField().getName()  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return  _nextField().getName()  +  1;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return  _nextField().getName()  +  1;	  return    _nextField().getName();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
75	[BUG]  [BUGGY]  return  _nextField().getLocalName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return  _nextField().getLocalName();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return  _nextField().getLocalName();	  return    _nextField().getName();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
76	[BUG]  [BUGGY]  return  _nextField().toString();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return  _nextField().toString();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return  _nextField().toString();	  return    _nextField().getName();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
77	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextChar()  :  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextChar()  :  1;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextChar()  :  1;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextInt()    :    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
78	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT;	  return    _currToken;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
79	[BUG]  [BUGGY]  return  JsonToken.FIELD_NAME;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return  JsonToken.FIELD_NAME;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return  JsonToken.FIELD_NAME;	  return    _currToken;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
80	[BUG]  [BUGGY]  return(_currToken!=  JsonToken.FIELD_NAME)?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken!=  JsonToken.FIELD_NAME)?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken!=  JsonToken.FIELD_NAME)?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT;	  return    _currToken;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
81	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.FIELD_NAME  :  JsonToken.END_OBJECT;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.FIELD_NAME  :  JsonToken.END_OBJECT;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.FIELD_NAME  :  JsonToken.END_OBJECT;	  return    _currToken;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
82	[BUG]  [BUGGY]  return  _currToken(JsonToken.FIELD_NAME);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return  _currToken(JsonToken.FIELD_NAME);  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return  _currToken(JsonToken.FIELD_NAME);	  return    _currToken();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
83	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _currToken();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _currToken();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _currToken();	  return    _currToken();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
84	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _currToken()  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _currToken()  :  null;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _currToken()  :  null;	  return    _currToken();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
85	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _currToken()  :  JsonToken.END_OBJECT;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _currToken()  :  JsonToken.END_OBJECT;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _currToken()  :  JsonToken.END_OBJECT;	  return    _currToken();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
86	[BUG]  [BUGGY]  _skipString();  return  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  _skipString();  return  null;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	_skipString();  return  null;	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    _skipString();    return    null;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
87	[BUG]  [BUGGY]  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  _skipString();  return  null;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  _skipString();  return  null;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	||  _currToken  ==  JsonToken.FIELD_NAME)  {  _skipString();  return  null;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    _skipString();    return    null;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
88	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextToken(JsonToken.FIELD_NAME);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextToken(JsonToken.FIELD_NAME);  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextToken(JsonToken.FIELD_NAME);  }	  return    _nextToken(JsonToken.FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
89	[BUG]  [BUGGY]  return  _nextToken(JsonToken.FIELD_NAME,  _currToken);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return  _nextToken(JsonToken.FIELD_NAME,  _currToken);  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return  _nextToken(JsonToken.FIELD_NAME,  _currToken);	  return    _nextToken(JsonToken.FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
90	[BUG]  [BUGGY]  return  _nextToken(JsonToken.VALUE_STRING);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return  _nextToken(JsonToken.VALUE_STRING);  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return  _nextToken(JsonToken.VALUE_STRING);	  return    _nextToken(JsonToken.FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
91	[BUG]  [BUGGY]  return  _nextToken(JsonToken.FIELD_NAME,  name);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return  _nextToken(JsonToken.FIELD_NAME,  name);  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return  _nextToken(JsonToken.FIELD_NAME,  name);	  return    _nextToken(JsonToken.FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
92	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  null  :  _nextFieldName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  null  :  _nextFieldName();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  null  :  _nextFieldName();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextFieldName();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
93	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextString();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextString();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextFieldName();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
94	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextIntValue();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextIntValue();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextIntValue();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextFieldName();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
95	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  null  :  _nextInput();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  null  :  _nextInput();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  null  :  _nextInput();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextInput();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
96	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  null  :  _nextInput();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  null  :  _nextInput();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.START_OBJECT)?  null  :  _nextInput();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextInput();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
97	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextDouble()  :  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextDouble()  :  0;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextDouble()  :  0;	  return(_currToken    ==    JsonToken.VALUE_STRING)?    _nextInt()    :    0;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
98	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  0  :  _nextFieldName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  0  :  _nextFieldName();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.START_OBJECT)?  0  :  _nextFieldName();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    0    :    _nextFieldName();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
99	[BUG]  [BUGGY]  if(i  ==  JsonToken.FIELD_NAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(i  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(i  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(i    ==    0)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
100	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(i  ==  0)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(i  ==  0)  {  return  null;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(i  ==  0)  {  return  null;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(i    ==    0)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
101	[BUG]  [BUGGY]  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(i  ==  0)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(i  ==  0)  {  return  null;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(i  ==  0)  {  return  null;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(i    ==    0)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
102	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _bufferRecyclable.nextToken();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _bufferRecyclable.nextToken();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _bufferRecyclable.nextToken();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextToken();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
103	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;	  return    _currToken;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
104	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.START_OBJECT  :  JsonToken.END_OBJECT;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.START_OBJECT  :  JsonToken.END_OBJECT;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.START_OBJECT  :  JsonToken.END_OBJECT;	  return    _currToken;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
105	[BUG]  [BUGGY]  safeGet(JsonToken.FIELD_NAME,  _currToken))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  safeGet(JsonToken.FIELD_NAME,  _currToken))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	safeGet(JsonToken.FIELD_NAME,  _currToken))  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
106	[BUG]  [BUGGY]  safeGet(JsonToken.FIELD_NAME,  _tokenInt))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  safeGet(JsonToken.FIELD_NAME,  _tokenInt))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	safeGet(JsonToken.FIELD_NAME,  _tokenInt))  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
107	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextName();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextName();	  return    _nextName();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
108	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  0  :  _nextName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  0  :  _nextName();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  0  :  _nextName();	  return    _nextName();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
109	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NUMBER_INT)?  _nextToken()  :  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NUMBER_INT)?  _nextToken()  :  null;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_NUMBER_INT)?  _nextToken()  :  null;	  return(_currToken    ==    JsonToken.VALUE_NULL)?    _nextToken()    :    null;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
110	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(!inObject)  {  return;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(!inObject)  {  return;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(!inObject)  {  return;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(!inObject)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
111	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  if(!inObject)  {  return;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  if(!inObject)  {  return;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  if(!inObject)  {  return;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(!inObject)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
112	[BUG]  [BUGGY]  _currToken  =  JsonToken.START_ARRAY;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  _currToken  =  JsonToken.START_ARRAY;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	_currToken  =  JsonToken.START_ARRAY;	  _currToken    =    JsonToken.START_OBJECT;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
113	[BUG]  [BUGGY]  _currToken  =  JsonToken.START_OBJECT  |  JsonToken.FIELD_NAME;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  _currToken  =  JsonToken.START_OBJECT  |  JsonToken.FIELD_NAME;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	_currToken  =  JsonToken.START_OBJECT  |  JsonToken.FIELD_NAME;	  _currToken    =    JsonToken.START_OBJECT;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
114	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextInt(1):  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextInt(1):  1;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  _nextInt(1):  1;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextInt(0):    1;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
115	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
116	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( "  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( "  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( "	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
117	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextDouble()  :  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextDouble()  :  0;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextDouble()  :  0;	  return    _nextDouble();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
118	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  0  :  _nextDouble();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  0  :  _nextDouble();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  0  :  _nextDouble();	  return    _nextDouble();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
119	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _skipString()  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _skipString()  :  null;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  _skipString()  :  null;	  return(_currToken    ==    JsonToken.VALUE_STRING)?    _nextToken()    :    null;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
120	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextInput()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextInput()  +  1;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextInput()  +  1;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextInput();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
121	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  -1  :  _nextInt();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  -1  :  _nextInt();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  -1  :  _nextInt();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    -1    :    _nextInt();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
122	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  -1  :  _nextInt();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  -1  :  _nextInt();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.START_OBJECT)?  -1  :  _nextInt();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    -1    :    _nextInt();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
123	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _currToken()  :  JsonToken.START_OBJECT;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _currToken()  :  JsonToken.START_OBJECT;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _currToken()  :  JsonToken.START_OBJECT;	  return    _currToken();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
124	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  null;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  null;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
125	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextChar()  :  0L;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextChar()  :  0L;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextChar()  :  0L;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextChar()    :    0;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
126	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  return  null;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  return  null;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
127	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  null;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  null;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
128	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextToken()  :  JsonToken.START_OBJECT;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextToken()  :  JsonToken.START_OBJECT;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextToken()  :  JsonToken.START_OBJECT;	  return    _nextToken(JsonToken.FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
129	[BUG]  [BUGGY]  return  _nextToken(JsonToken.START_OBJECT);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return  _nextToken(JsonToken.START_OBJECT);  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return  _nextToken(JsonToken.START_OBJECT);	  return    _nextToken(JsonToken.FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
130	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  null  :  _nextFieldName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  null  :  _nextFieldName();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.START_OBJECT)?  null  :  _nextFieldName();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextFieldName();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
131	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextFieldName()  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextFieldName()  +  1;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _nextFieldName()  +  1;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextFieldName();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
132	[BUG]  [BUGGY]  return  _nextField().getString();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return  _nextField().getString();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return  _nextField().getString();	  return    _nextField().getName();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
133	[BUG]  [BUGGY]  _currToken  =  JsonToken.FIELD_NAME  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  _currToken  =  JsonToken.FIELD_NAME  +  1;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	_currToken  =  JsonToken.FIELD_NAME  +  1;	  _currToken    =    JsonToken.FIELD_NAME;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
134	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.END_OBJECT  :  _nextToken();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.END_OBJECT  :  _nextToken();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.END_OBJECT  :  _nextToken();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextToken()    :    JsonToken.END_OBJECT;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
135	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  0  :  _nextInput();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  0  :  _nextInput();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.START_OBJECT)?  0  :  _nextInput();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    0    :    _nextInput();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
136	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  _nextFieldName()  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  _nextFieldName()  :  null;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.START_OBJECT)?  _nextFieldName()  :  null;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextFieldName()    :    null;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
137	[BUG]  [BUGGY]  ||(_currToken  ==  JsonToken.FIELD_NAME  &&!_tokenIncomplete))  {  _skipString();  return  null;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  ||(_currToken  ==  JsonToken.FIELD_NAME  &&!_tokenIncomplete))  {  _skipString();  return  null;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	||(_currToken  ==  JsonToken.FIELD_NAME  &&!_tokenIncomplete))  {  _skipString();  return  null;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    _skipString();    return    null;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
138	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  0  :  _nextInt();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  0  :  _nextInt();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  0  :  _nextInt();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    0    :    _nextInt();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
139	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  _nextToken()  :  String.valueOf(_currToken);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  _nextToken()  :  String.valueOf(_currToken);  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.START_OBJECT)?  _nextToken()  :  String.valueOf(_currToken);	  return(_currToken    ==    JsonToken.START_OBJECT)?    _nextToken()    :    null;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
140	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  _nextInt()  :  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  _nextInt()  :  1;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.START_OBJECT)?  _nextInt()  :  1;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextInt()    :    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
141	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextString()  :  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextString()  :  0;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextString()  :  0;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextString()    :    0;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
142	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _skipString()  :  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_STRING)?  _skipString()  :  0;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_STRING)?  _skipString()  :  0;	  return(_currToken    ==    JsonToken.VALUE_STRING)?    _nextInt()    :    0;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
143	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(16):  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(16):  0;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(16):  0;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextInt(0):    0;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
144	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  _nextToken()  :  JsonToken.END_NAME;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  _nextToken()  :  JsonToken.END_NAME;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.START_OBJECT)?  _nextToken()  :  JsonToken.END_NAME;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextToken()    :    JsonToken.END_OBJECT;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
145	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.END_ARRAY  :  JsonToken.END_ARRAY;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.END_ARRAY  :  JsonToken.END_ARRAY;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.END_ARRAY  :  JsonToken.END_ARRAY;	  return    _currToken;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
146	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  JsonToken.END_OBJECT  :  JsonToken.END_ARRAY;	  return    _currToken;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
147	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt()  :  null;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt()  :  null;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt()  :  null;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextField()    :    null;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
148	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  _skipString();  return  null;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  _skipString();  return  null;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  _skipString();  return  null;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    _skipString();    return    null;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
149	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  _skipString();  return  null;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  _skipString();  return  null;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL)  {  _skipString();  return  null;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    _skipString();    return    null;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
150	[BUG]  [BUGGY]  if(i  ==  0)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(i  ==  0)  {  return  null;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(i  ==  0)  {  return  null;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(i    ==    0)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
151	[BUG]  [BUGGY]  if(i  ==  _currToken)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(i  ==  _currToken)  {  return  null;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(i  ==  _currToken)  {  return  null;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(i    ==    0)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
152	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  -1  :  _nextDouble();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  -1  :  _nextDouble();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  -1  :  _nextDouble();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    -1    :    _nextInt();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
153	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextToken()  :  JsonToken.END_ARRAY;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextToken()  :  JsonToken.END_ARRAY;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextToken()  :  JsonToken.END_ARRAY;	  return(_currToken    ==    JsonToken.VALUE_NULL)?    _nextToken()    :    null;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
154	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextToken()  :  JsonToken.START_OBJECT;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextToken()  :  JsonToken.START_OBJECT;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextToken()  :  JsonToken.START_OBJECT;	  return(_currToken    ==    JsonToken.VALUE_NULL)?    _nextToken()    :    null;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
155	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  return  null;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  return  null;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
156	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  return  null;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL)  {  return  null;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
157	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _skipInput()  :  null;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _skipInput()  :  null;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _skipInput()  :  null;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextInput()    :    null;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
158	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextInput()  :  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextInput()  :  null;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextInput()  :  null;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextInput()    :    null;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
159	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  null  :  _nextFieldName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  null  :  _nextFieldName();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_NULL)?  null  :  _nextFieldName();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextFieldName();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
160	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  null  :  _nextInput();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  null  :  _nextInput();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_NULL)?  null  :  _nextInput();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextInput();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
161	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _skipInput();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _skipInput();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _skipInput();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextInput();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
162	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  null  :  _nextToken();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  null  :  _nextToken();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_NULL)?  null  :  _nextToken();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextToken();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
163	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _parseString();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _parseString();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  null  :  _parseString();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextToken();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
164	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _currToken  :  JsonToken.START_OBJECT;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _currToken  :  JsonToken.START_OBJECT;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _currToken  :  JsonToken.START_OBJECT;	  return    _nextToken(JsonToken.FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
165	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextFieldName()  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextFieldName()  :  null;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextFieldName()  :  null;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextFieldName()    :    null;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
166	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  0  :  _nextFieldName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  0  :  _nextFieldName();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_NULL)?  0  :  _nextFieldName();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    0    :    _nextFieldName();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
167	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  null  :  _nextField();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  null  :  _nextField();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_NULL)?  null  :  _nextField();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    null    :    _nextField();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
168	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(16):  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(16):  1;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextInt(16):  1;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextInt(0):    1;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
169	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
170	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
171	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextInt(0):  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextInt(0):  0;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextInt(0):  0;	  return(_currToken    ==    JsonToken.VALUE_NULL)?    _nextInt()    :    0;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
172	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextDouble()  :  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextDouble()  :  0;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextDouble()  :  0;	  return(_currToken    ==    JsonToken.VALUE_NULL)?    _nextInt()    :    0;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
173	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  0  :  _nextInput();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  0  :  _nextInput();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_NULL)?  0  :  _nextInput();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    0    :    _nextInput();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
174	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  _skipString()  :  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.START_OBJECT)?  _skipString()  :  null;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.START_OBJECT)?  _skipString()  :  null;	  return(_currToken    ==    JsonToken.START_OBJECT)?    _nextToken()    :    null;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
175	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(!inObject)  {  return;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(!inObject)  {  return;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(!inObject)  {  return;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(!inObject)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
176	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||!inObject)  {  return;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||!inObject)  {  return;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||!inObject)  {  return;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(!inObject)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
177	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  if(!inObject)  {  return;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  if(!inObject)  {  return;  }  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	if(_currToken  ==  JsonToken.START_OBJECT)  {  if(!inObject)  {  return;  }	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    if(!inObject)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
178	[BUG]  [BUGGY]  return(_nextField()  ==  null)?  null  :  _nextField().getName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_nextField()  ==  null)?  null  :  _nextField().getName();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_nextField()  ==  null)?  null  :  _nextField().getName();	  return    _nextField().getName();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
179	[BUG]  [BUGGY]  return  _nextField().getNamespaceURI();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return  _nextField().getNamespaceURI();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return  _nextField().getNamespaceURI();	  return    _nextField().getName();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
180	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextInt()  :  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextInt()  :  1;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_NULL)?  _nextInt()  :  1;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextInt()    :    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
181	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextDouble()  :  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextDouble()  :  1;  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.FIELD_NAME)?  _nextDouble()  :  1;	  return(_currToken    ==    JsonToken.FIELD_NAME)?    _nextInt()    :    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
182	[BUG]  [BUGGY]  aughtExceptionHandler(JsonToken.FIELD_NAME,  _tokenIncomplete);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  aughtExceptionHandler(JsonToken.FIELD_NAME,  _tokenIncomplete);  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	aughtExceptionHandler(JsonToken.FIELD_NAME,  _tokenIncomplete);	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
183	[BUG]  [BUGGY]  aughtExceptionHandler(JsonToken.FIELD_NAME,  _currToken);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  aughtExceptionHandler(JsonToken.FIELD_NAME,  _currToken);  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	aughtExceptionHandler(JsonToken.FIELD_NAME,  _currToken);	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
184	[BUG]  [BUGGY]  aughtExceptionHandler(JsonToken.FIELD_NAME,  _tokenInArray());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  aughtExceptionHandler(JsonToken.FIELD_NAME,  _tokenInArray());  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	aughtExceptionHandler(JsonToken.FIELD_NAME,  _tokenInArray());	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
185	[BUG]  [BUGGY]  aughtExceptionHandler(new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  aughtExceptionHandler(new  IllegalArgumentException( " ");  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	aughtExceptionHandler(new  IllegalArgumentException( " ");	  if(_currToken    ==    JsonToken.FIELD_NAME)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
186	[BUG]  [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  0  :  _nextInt();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      {      if  (_currToken  ==  JsonToken.FIELD_NAME)  {      [BUGGY]  return(_currToken  ==  JsonToken.VALUE_NULL)?  0  :  _nextInt();  [BUGGY]      }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	581	581	1	replace	return(_currToken  ==  JsonToken.VALUE_NULL)?  0  :  _nextInt();	  return(_currToken    ==    JsonToken.FIELD_NAME)?    0    :    _nextInt();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
