bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnknownName(i,  inObject);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnknownName(i,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnknownName(i,  inObject);	  String    name    =(i!=    INT_QUOTE)?    _parseName()    :    _handleUnknownName(i);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
2	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  inObject);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  inObject);	  String    name    =(i!=    INT_QUOTE)?    _parseName()    :    _handleUnexpectedChar(i);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
3	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedName(i,  inObject);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedName(i,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedName(i,  inObject);	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    _handleUnexpectedName(i);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
4	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedName(i  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedName(i  +  1);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedName(i  +  1);	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    _handleUnexpectedName(i);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
5	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleOffset(i  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleOffset(i  +  1);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleOffset(i  +  1);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleOffset(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
6	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _symbols._parseName()  :  _handleOffset(i  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _symbols._parseName()  :  _handleOffset(i  +  1);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _symbols._parseName()  :  _handleOffset(i  +  1);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleOffset(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnknownName(i,  inObject);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnknownName(i,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnknownName(i,  inObject);	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    _handleUnknownName(i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnknownName(i).toString();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnknownName(i).toString();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnknownName(i).toString();	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    _handleUnknownName(i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  String  name  =(i  ==  inObject)?  _parseName()  :  _handleUnexpectedChar(i,  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  inObject)?  _parseName()  :  _handleUnexpectedChar(i,  INT_QUOTE);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  inObject)?  _parseName()  :  _handleUnexpectedChar(i,  INT_QUOTE);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedChar(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
10	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedChar(i,  inObject);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedChar(i,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedChar(i,  inObject);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedChar(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
11	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  inObject,  _hashSeed);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  inObject,  _hashSeed);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  inObject,  _hashSeed);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedChar(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
12	[BUG]  [BUGGY]  _currToken  =  JsonToken.START_OBJECT;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  _currToken  =  JsonToken.START_OBJECT;  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	_currToken  =  JsonToken.START_OBJECT;	  _currToken    =    JsonToken.FIELD_NAME;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
13	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	_currToken  =  JsonToken.VALUE_STRING;	  _currToken    =    JsonToken.FIELD_NAME;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
14	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currName()  :  _handleOddName(i,  inObject);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currName()  :  _handleOddName(i,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currName()  :  _handleOddName(i,  inObject);	  String    name    =(i    ==    INT_QUOTE)?    _currName()    :    _handleOddName(i);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
15	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currName()  :  _handleUnknownName(i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currName()  :  _handleUnknownName(i);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currName()  :  _handleUnknownName(i);	  String    name    =(i    ==    INT_QUOTE)?    _currName()    :    _handleOddName(i);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
16	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currName()  :  _handleUnexpectedName(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currName()  :  _handleUnexpectedName(i);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currName()  :  _handleUnexpectedName(i);	  String    name    =(i    ==    INT_QUOTE)?    _currName()    :    _handleOddName(i);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
17	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  _nameInputRow);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  _nameInputRow);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  _nameInputRow);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedName(i,    _nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
18	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedName(i,  _nameInputCol);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedName(i,  _nameInputCol);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedName(i,  _nameInputCol);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedName(i,    _nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
19	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedName(i,  _nameInputCol);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedName(i,  _nameInputCol);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedName(i,  _nameInputCol);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedName(i,    _nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
20	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  _nameInputRow);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  _nameInputRow);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  _nameInputRow);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedChar(i,    _nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
21	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  _hashSeed);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  _hashSeed);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  _hashSeed);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedChar(i,    _nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
22	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedChar(i,  _nameInputCol);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedChar(i,  _nameInputCol);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedChar(i,  _nameInputCol);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedChar(i,    _nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
23	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  inObject);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  inObject);	  String    name    =(i!=    INT_QUOTE)?    _parseName()    :    _handleUnexpectedQuotedName(i);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
24	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnknownName(i  +  1,  inObject);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnknownName(i  +  1,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnknownName(i  +  1,  inObject);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnknownName(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
25	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnknownName(i  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnknownName(i  +  1);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnknownName(i  +  1);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnknownName(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
26	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedQuotedName(i,  inObject);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedQuotedName(i,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedQuotedName(i,  inObject);	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    _handleUnexpectedQuotedName(i);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
27	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedQuotedName(i).toLowerCase();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedQuotedName(i).toLowerCase();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedQuotedName(i).toLowerCase();	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    _handleUnexpectedQuotedName(i);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
28	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedName(i,  inObject);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedName(i,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedName(i,  inObject);	  String    name    =(i    ==    INT_QUOTE)?    _nameInputTotal()    :    _handleUnexpectedName(i);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
29	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedName(i  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedName(i  +  1);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedName(i  +  1);	  String    name    =(i    ==    INT_QUOTE)?    _nameInputTotal()    :    _handleUnexpectedName(i);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
30	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedName(i).toString();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedName(i).toString();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedName(i).toString();	  String    name    =(i    ==    INT_QUOTE)?    _nameInputTotal()    :    _handleUnexpectedName(i);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
31	[BUG]  [BUGGY]  String  name  =(i  ==  inObject)?  _parseName()  :  _handleOffset(i,  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  inObject)?  _parseName()  :  _handleOffset(i,  INT_QUOTE);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  inObject)?  _parseName()  :  _handleOffset(i,  INT_QUOTE);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleOffset(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
32	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _symbols._parseName()  :  _handleOffset(i,  inObject);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _symbols._parseName()  :  _handleOffset(i,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _symbols._parseName()  :  _handleOffset(i,  inObject);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleOffset(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
33	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i,  inObject,  _hashSeed);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i,  inObject,  _hashSeed);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i,  inObject,  _hashSeed);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleOffset(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
34	[BUG]  [BUGGY]  String  name  =(i  ==  inObject)?  _parseName()  :  _handleUnexpectedQuotedName(i,  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  inObject)?  _parseName()  :  _handleUnexpectedQuotedName(i,  INT_QUOTE);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  inObject)?  _parseName()  :  _handleUnexpectedQuotedName(i,  INT_QUOTE);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedQuotedName(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
35	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  inObject,  _hashSeed);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  inObject,  _hashSeed);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  inObject,  _hashSeed);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedQuotedName(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
36	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  JsonToken.FIELD_NAME  :  _currToken();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  JsonToken.FIELD_NAME  :  _currToken();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  JsonToken.FIELD_NAME  :  _currToken();	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    JsonToken.FIELD_NAME;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
37	[BUG]  [BUGGY]  String  name  =(i  ==  JsonToken.FIELD_NAME)?  _currToken()  :  INT_QUOTE;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  JsonToken.FIELD_NAME)?  _currToken()  :  INT_QUOTE;  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  JsonToken.FIELD_NAME)?  _currToken()  :  INT_QUOTE;	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    JsonToken.FIELD_NAME;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
38	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  JsonToken.VALUE_STRING  :  JsonToken.FIELD_NAME;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  JsonToken.VALUE_STRING  :  JsonToken.FIELD_NAME;  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  JsonToken.VALUE_STRING  :  JsonToken.FIELD_NAME;	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    JsonToken.FIELD_NAME;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
39	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);	  _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
40	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(0,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(0,  0);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(0,  0);	  _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
41	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  2);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  2);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  2);	  _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
42	[BUG]  [BUGGY]  _parsingContext.setCurrentName(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  _parsingContext.setCurrentName(i);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	_parsingContext.setCurrentName(i);	  _parsingContext.setCurrentName(name);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
43	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(i);	  _parsingContext.setCurrentName(name);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
44	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnknownName(i,  inObject);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnknownName(i,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnknownName(i,  inObject);	  String    name    =(i    ==    INT_QUOTE)?    _nameInputTotal()    :    _handleUnknownName(i);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
45	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnknownName(i).toLowerCase();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnknownName(i).toLowerCase();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnknownName(i).toLowerCase();	  String    name    =(i    ==    INT_QUOTE)?    _nameInputTotal()    :    _handleUnknownName(i);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
46	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnknownName(i  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnknownName(i  +  1);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnknownName(i  +  1);	  String    name    =(i    ==    INT_QUOTE)?    _nameInputTotal()    :    _handleUnknownName(i);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
47	[BUG]  [BUGGY]  String  name  =(i  ==  inObject)?  _parseName()  :  _handleUnknownName(i,  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  inObject)?  _parseName()  :  _handleUnknownName(i,  INT_QUOTE);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  inObject)?  _parseName()  :  _handleUnknownName(i,  INT_QUOTE);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnknownName(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
48	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnknownName(i,  inObject,  _hashSeed);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnknownName(i,  inObject,  _hashSeed);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnknownName(i,  inObject,  _hashSeed);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnknownName(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
49	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedQuotedName(i).toString();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedQuotedName(i).toString();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedQuotedName(i).toString();	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedQuotedName(i).toString();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
50	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedQuotedName(i).toString();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedQuotedName(i).toString();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedQuotedName(i).toString();	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedQuotedName(i).toString();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
51	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputRow()  :  _handleUnexpectedQuotedName(i).toString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputRow()  :  _handleUnexpectedQuotedName(i).toString();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputRow()  :  _handleUnexpectedQuotedName(i).toString();	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedQuotedName(i).toString();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
52	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleOffset(i  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleOffset(i  +  1);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleOffset(i  +  1);	  String    name    =(i!=    INT_QUOTE)?    _parseName()    :    _handleOffset(i);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
53	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleOffset(i,  inObject);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleOffset(i,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleOffset(i,  inObject);	  String    name    =(i!=    INT_QUOTE)?    _parseName()    :    _handleOffset(i);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
54	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i  +  1,  inObject);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i  +  1,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i  +  1,  inObject);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedChar(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
55	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedChar(i  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedChar(i  +  1);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedChar(i  +  1);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedChar(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
56	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.inObject();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  _parsingContext  =  _parsingContext.inObject();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	_parsingContext  =  _parsingContext.inObject();	  _parsingContext    =    _parsingContext.getParent();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
57	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleOffset(i,  inObject);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleOffset(i,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleOffset(i,  inObject);	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    _handleOffset(i);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
58	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputBuffer()  :  _handleUnexpectedChar(i,  inObject);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputBuffer()  :  _handleUnexpectedChar(i,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputBuffer()  :  _handleUnexpectedChar(i,  inObject);	  String    name    =(i    ==    INT_QUOTE)?    _nameInputBuffer()    :    _handleUnexpectedChar(i);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
59	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputBuffer()  :  _handleUnexpectedChar(i  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputBuffer()  :  _handleUnexpectedChar(i  +  1);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputBuffer()  :  _handleUnexpectedChar(i  +  1);	  String    name    =(i    ==    INT_QUOTE)?    _nameInputBuffer()    :    _handleUnexpectedChar(i);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
60	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputBuffer()  :  _handleUnexpectedChar(i).toLowerCase();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputBuffer()  :  _handleUnexpectedChar(i).toLowerCase();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputBuffer()  :  _handleUnexpectedChar(i).toLowerCase();	  String    name    =(i    ==    INT_QUOTE)?    _nameInputBuffer()    :    _handleUnexpectedChar(i);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
61	[BUG]  [BUGGY]  String  name  =(i  ==  inObject)?  _currToken()  :  _handleOddName(i,  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  inObject)?  _currToken()  :  _handleOddName(i,  INT_QUOTE);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  inObject)?  _currToken()  :  _handleOddName(i,  INT_QUOTE);	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    _handleOddName(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
62	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleOddName(i,  JsonToken.FIELD_NAME);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleOddName(i,  JsonToken.FIELD_NAME);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleOddName(i,  JsonToken.FIELD_NAME);	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    _handleOddName(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
63	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleOddName(i,  inObject,  _hashSeed);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleOddName(i,  inObject,  _hashSeed);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleOddName(i,  inObject,  _hashSeed);	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    _handleOddName(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
64	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputRow()  :  _handleUnexpectedQuotedName(i,  inObject);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputRow()  :  _handleUnexpectedQuotedName(i,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputRow()  :  _handleUnexpectedQuotedName(i,  inObject);	  String    name    =(i    ==    INT_QUOTE)?    _nameInputRow()    :    _handleUnexpectedQuotedName(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
65	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputBuffer()  :  _handleUnexpectedQuotedName(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputBuffer()  :  _handleUnexpectedQuotedName(i);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputBuffer()  :  _handleUnexpectedQuotedName(i);	  String    name    =(i    ==    INT_QUOTE)?    _nameInputRow()    :    _handleUnexpectedQuotedName(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
66	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  _nameInputRow);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  _nameInputRow);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  _nameInputRow);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedQuotedName(i,    _nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
67	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedQuotedName(i,  _nameInputCol);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedQuotedName(i,  _nameInputCol);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedQuotedName(i,  _nameInputCol);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedQuotedName(i,    _nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
68	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedQuotedName(i,  _nameInputCol);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedQuotedName(i,  _nameInputCol);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedQuotedName(i,  _nameInputCol);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedQuotedName(i,    _nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
69	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  _hashSeed);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  _hashSeed);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  _hashSeed);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedQuotedName(i,    _nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
70	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _handleUnexpectedChar(i):  _currToken();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _handleUnexpectedChar(i):  _currToken();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _handleUnexpectedChar(i):  _currToken();	  String    name    =(i    ==    INT_QUOTE)?    _handleUnexpectedChar(i):    _parseName();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
71	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _handleUnexpectedChar(i):  _parseString();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _handleUnexpectedChar(i):  _parseString();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _handleUnexpectedChar(i):  _parseString();	  String    name    =(i    ==    INT_QUOTE)?    _handleUnexpectedChar(i):    _parseName();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
72	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _handleUnexpectedChar(i):  _currToken;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _handleUnexpectedChar(i):  _currToken;  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _handleUnexpectedChar(i):  _currToken;	  String    name    =(i    ==    INT_QUOTE)?    _handleUnexpectedChar(i):    _parseName();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
73	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(null);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(null);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(null);	  _parsingContext    =    _parsingContext.createChildObjectContext();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
74	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1);	  _parsingContext    =    _parsingContext.createChildObjectContext();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
75	[BUG]  [BUGGY]  String  name  =(i  ==  inObject)?  _parseName()  :  _handleOffset(i  +  1,  inObject);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  inObject)?  _parseName()  :  _handleOffset(i  +  1,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  inObject)?  _parseName()  :  _handleOffset(i  +  1,  inObject);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleOffset(i    +    1,    inObject);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
76	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i  +  1,  inObject,  JsonToken.FIELD_NAME);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i  +  1,  inObject,  JsonToken.FIELD_NAME);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i  +  1,  inObject,  JsonToken.FIELD_NAME);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleOffset(i    +    1,    inObject);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
77	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i  +  1,  inObject,  _hashSeed);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i  +  1,  inObject,  _hashSeed);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i  +  1,  inObject,  _hashSeed);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleOffset(i    +    1,    inObject);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
78	[BUG]  [BUGGY]  String  name  =(i  ==  inObject)?  _parseName()  :  _handleUnexpectedName(i,  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  inObject)?  _parseName()  :  _handleUnexpectedName(i,  INT_QUOTE);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  inObject)?  _parseName()  :  _handleUnexpectedName(i,  INT_QUOTE);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedName(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
79	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  inObject,  _hashSeed);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  inObject,  _hashSeed);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  inObject,  _hashSeed);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedName(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
80	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedChar(i).toLowerCase();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedChar(i).toLowerCase();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedChar(i).toLowerCase();	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    _handleUnexpectedChar(i);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
81	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  inObject);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  inObject);	  String    name    =(i!=    INT_QUOTE)?    _parseName()    :    _handleUnexpectedName(i);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
82	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i  +  1,  inObject);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i  +  1,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i  +  1,  inObject);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedName(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
83	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _handleUnexpectedChar(i):  _textBuffer.finishCurrentSegment();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _handleUnexpectedChar(i):  _textBuffer.finishCurrentSegment();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _handleUnexpectedChar(i):  _textBuffer.finishCurrentSegment();	  String    name    =(i    ==    INT_QUOTE)?    _handleUnexpectedChar(i):    _parseName();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
84	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1L);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1L);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1L);	  _parsingContext    =    _parsingContext.createChildObjectContext();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
85	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  JsonToken.FIELD_NAME);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  JsonToken.FIELD_NAME);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  JsonToken.FIELD_NAME);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedQuotedName(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
86	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  JsonToken.FIELD_NAME);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  JsonToken.FIELD_NAME);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  JsonToken.FIELD_NAME);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedName(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
87	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedChar(i,  _nameInputCol);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedChar(i,  _nameInputCol);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedChar(i,  _nameInputCol);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedChar(i,    _nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
88	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _nameInputBuffer()  :  _handleUnexpectedChar(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _nameInputBuffer()  :  _handleUnexpectedChar(i);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _nameInputBuffer()  :  _handleUnexpectedChar(i);	  String    name    =(i    ==    INT_QUOTE)?    _nameInputBuffer()    :    _handleUnexpectedChar(i);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
89	[BUG]  [BUGGY]  String  name  =(inObject  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(inObject  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  INT_QUOTE);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(inObject  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  INT_QUOTE);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedChar(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
90	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnknownName(i,  JsonToken.FIELD_NAME);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnknownName(i,  JsonToken.FIELD_NAME);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnknownName(i,  JsonToken.FIELD_NAME);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnknownName(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
91	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i  +  1,  inObject,  _bufferRecyclable);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i  +  1,  inObject,  _bufferRecyclable);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i  +  1,  inObject,  _bufferRecyclable);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleOffset(i    +    1,    inObject);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
92	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i  +  1,  inObject,  _tokenIncomplete);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i  +  1,  inObject,  _tokenIncomplete);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i  +  1,  inObject,  _tokenIncomplete);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleOffset(i    +    1,    inObject);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
93	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);	  _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
94	[BUG]  [BUGGY]  String  name  =(_currToken  ==  JsonToken.FIELD_NAME)?  _currToken()  :  INT_QUOTE;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(_currToken  ==  JsonToken.FIELD_NAME)?  _currToken()  :  INT_QUOTE;  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(_currToken  ==  JsonToken.FIELD_NAME)?  _currToken()  :  INT_QUOTE;	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    JsonToken.FIELD_NAME;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
95	[BUG]  [BUGGY]  String  name  =(i  ==  JsonToken.VALUE_STRING)?  _currToken()  :  JsonToken.FIELD_NAME;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  JsonToken.VALUE_STRING)?  _currToken()  :  JsonToken.FIELD_NAME;  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  JsonToken.VALUE_STRING)?  _currToken()  :  JsonToken.FIELD_NAME;	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    JsonToken.FIELD_NAME;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
96	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputCol()  :  _handleUnexpectedQuotedName(i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputCol()  :  _handleUnexpectedQuotedName(i);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputCol()  :  _handleUnexpectedQuotedName(i);	  String    name    =(i    ==    INT_QUOTE)?    _nameInputRow()    :    _handleUnexpectedQuotedName(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
97	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedQuotedName(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedQuotedName(i);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedQuotedName(i);	  String    name    =(i    ==    INT_QUOTE)?    _nameInputRow()    :    _handleUnexpectedQuotedName(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
98	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedQuotedName(i  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedQuotedName(i  +  1);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedQuotedName(i  +  1);	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    _handleUnexpectedQuotedName(i);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
99	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _currToken()  :  _handleUnexpectedQuotedName(i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _currToken()  :  _handleUnexpectedQuotedName(i);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _currToken()  :  _handleUnexpectedQuotedName(i);	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    _handleUnexpectedQuotedName(i);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
100	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i).toString();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i).toString();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i).toString();	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedQuotedName(i).toString();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
101	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameName()  :  _handleUnexpectedQuotedName(i).toString();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameName()  :  _handleUnexpectedQuotedName(i).toString();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameName()  :  _handleUnexpectedQuotedName(i).toString();	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedQuotedName(i).toString();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
102	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i),  _nameInputRow).toString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i),  _nameInputRow).toString();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i),  _nameInputRow).toString();	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedQuotedName(i).toString();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
103	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleOffset(i  +  1,  inObject);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleOffset(i  +  1,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleOffset(i  +  1,  inObject);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleOffset(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
104	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  i  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  i  +  1);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  i  +  1);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedName(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
105	[BUG]  [BUGGY]  _currToken  =  JsonToken.FIELD_NAME  +  name;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  _currToken  =  JsonToken.FIELD_NAME  +  name;  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	_currToken  =  JsonToken.FIELD_NAME  +  name;	  _currToken    =    JsonToken.FIELD_NAME;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
106	[BUG]  [BUGGY]  _currToken  =  JsonToken.FIELD_NAME  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  _currToken  =  JsonToken.FIELD_NAME  +  1;  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	_currToken  =  JsonToken.FIELD_NAME  +  1;	  _currToken    =    JsonToken.FIELD_NAME;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
107	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currName()  :  _handleOffset(i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currName()  :  _handleOffset(i);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currName()  :  _handleOffset(i);	  String    name    =(i    ==    INT_QUOTE)?    _currName()    :    _handleOddName(i);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
108	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currName()  :  _handleUnexpectedQuotedName(i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currName()  :  _handleUnexpectedQuotedName(i);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currName()  :  _handleUnexpectedQuotedName(i);	  String    name    =(i    ==    INT_QUOTE)?    _currName()    :    _handleOddName(i);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
109	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i).toString();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i).toString();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i).toString();	  String    name    =(i!=    INT_QUOTE)?    _parseName()    :    _handleOffset(i);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
110	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i,  JsonToken.FIELD_NAME);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i,  JsonToken.FIELD_NAME);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i,  JsonToken.FIELD_NAME);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleOffset(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
111	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i,  _nameInputRow);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i,  _nameInputRow);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleOffset(i,  _nameInputRow);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleOffset(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
112	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currName()  :  _handleUnexpectedChar(i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currName()  :  _handleUnexpectedChar(i);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currName()  :  _handleUnexpectedChar(i);	  String    name    =(i    ==    INT_QUOTE)?    _currName()    :    _handleOddName(i);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
113	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _currToken()  :  _handleUnexpectedChar(i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _currToken()  :  _handleUnexpectedChar(i);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _currToken()  :  _handleUnexpectedChar(i);	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    _handleUnexpectedChar(i);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
114	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedChar(i,  _nameInputRow);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedChar(i,  _nameInputRow);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnexpectedChar(i,  _nameInputRow);	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    _handleUnexpectedChar(i);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
115	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _currToken()  :  _handleOffset(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _currToken()  :  _handleOffset(i);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _currToken()  :  _handleOffset(i);	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    _handleOffset(i);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
116	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleOffset(i  +  1,  inObject);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleOffset(i  +  1,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleOffset(i  +  1,  inObject);	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    _handleOffset(i);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
117	[BUG]  [BUGGY]  String  name  =(i  ==  JsonToken.VALUE_NUMBER_INT)?  _currToken()  :  JsonToken.FIELD_NAME;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  JsonToken.VALUE_NUMBER_INT)?  _currToken()  :  JsonToken.FIELD_NAME;  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  JsonToken.VALUE_NUMBER_INT)?  _currToken()  :  JsonToken.FIELD_NAME;	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    JsonToken.FIELD_NAME;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
118	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _nameInputTotal()  :  _handleUnknownName(i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _nameInputTotal()  :  _handleUnknownName(i);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _nameInputTotal()  :  _handleUnknownName(i);	  String    name    =(i    ==    INT_QUOTE)?    _nameInputTotal()    :    _handleUnknownName(i);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
119	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnknownName(i).toString();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnknownName(i).toString();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnknownName(i).toString();	  String    name    =(i    ==    INT_QUOTE)?    _nameInputTotal()    :    _handleUnknownName(i);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
120	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputBuffer()  :  _handleUnexpectedChar(i).toString();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputBuffer()  :  _handleUnexpectedChar(i).toString();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputBuffer()  :  _handleUnexpectedChar(i).toString();	  String    name    =(i    ==    INT_QUOTE)?    _nameInputBuffer()    :    _handleUnexpectedChar(i);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
121	[BUG]  [BUGGY]  String  name  =(i  ==  Integer.MIN_VALUE)?  _parseName()  :  _handleUnexpectedName(i,  inObject);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  Integer.MIN_VALUE)?  _parseName()  :  _handleUnexpectedName(i,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  Integer.MIN_VALUE)?  _parseName()  :  _handleUnexpectedName(i,  inObject);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedName(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
122	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedName(i,  _parsingContext);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedName(i,  _parsingContext);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedName(i,  _parsingContext);	  String    name    =(i    ==    INT_QUOTE)?    _nameInputTotal()    :    _handleUnexpectedName(i);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
123	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedName(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedName(i);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _nameInputTotal()  :  _handleUnexpectedName(i);	  String    name    =(i    ==    INT_QUOTE)?    _nameInputTotal()    :    _handleUnexpectedName(i);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
124	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  0);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  0);	  _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
125	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i  +  1);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i  +  1);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedName(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
126	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  _nameInputCol);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  _nameInputCol);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  _nameInputCol);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedChar(i,    _nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
127	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  _nameInputCol);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  _nameInputCol);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  _nameInputCol);	  String    name    =(i!=    INT_QUOTE)?    _parseName()    :    _handleUnexpectedName(i);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
128	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  _parsingContext.setCurrentName(name);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  _parsingContext.setCurrentName(name);  }  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  _parsingContext.setCurrentName(name);  }	  _parsingContext.setCurrentName(name);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
129	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  _parsingContext.setCurrentName(name);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  _parsingContext.setCurrentName(name);  }  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL)  {  _parsingContext.setCurrentName(name);  }	  _parsingContext.setCurrentName(name);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
130	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  _currentObject);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  _currentObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  _currentObject);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedChar(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
131	[BUG]  [BUGGY]  String  name  =(inObject  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(inObject  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  INT_QUOTE);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(inObject  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  INT_QUOTE);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedQuotedName(i,    inObject);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
132	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  _nameInputCol);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  _nameInputCol);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  _nameInputCol);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedQuotedName(i,    _nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
133	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  _nameInputCol  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  _nameInputCol  +  1);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedQuotedName(i,  _nameInputCol  +  1);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedQuotedName(i,    _nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
134	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i).toString();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i).toString();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i).toString();	  String    name    =(i!=    INT_QUOTE)?    _parseName()    :    _handleUnexpectedChar(i);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
135	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName(i):  _handleUnexpectedName(i,  _nameInputCol);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName(i):  _handleUnexpectedName(i,  _nameInputCol);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName(i):  _handleUnexpectedName(i,  _nameInputCol);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedName(i,    _nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
136	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  _nameInputCol,  inObject);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  _nameInputCol,  inObject);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedName(i,  _nameInputCol,  inObject);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedName(i,    _nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
137	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _currToken()  :  _handleUnexpectedName(i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _currToken()  :  _handleUnexpectedName(i);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _currToken()  :  _handleUnexpectedName(i);	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    _handleUnexpectedName(i);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
138	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnknownName(i  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnknownName(i  +  1);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnknownName(i  +  1);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnknownName(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
139	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnknownName(i,  _nameInputCol);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnknownName(i,  _nameInputCol);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnknownName(i,  _nameInputCol);	  String    name    =(i!=    INT_QUOTE)?    _parseName()    :    _handleUnknownName(i);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
140	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _currToken()  :  _handleUnknownName(i);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _currToken()  :  _handleUnknownName(i);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _currToken()  :  _handleUnknownName(i);	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    _handleUnknownName(i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
141	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnknownName(i,  _nameInputCol);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnknownName(i,  _nameInputCol);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _currToken()  :  _handleUnknownName(i,  _nameInputCol);	  String    name    =(i    ==    INT_QUOTE)?    _currToken()    :    _handleUnknownName(i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
142	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  i  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  i  +  1);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i,  i  +  1);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedChar(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
143	[BUG]  [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i  +  1);  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i!=  INT_QUOTE)?  _parseName()  :  _handleUnexpectedChar(i  +  1);	  String    name    =(i    ==    INT_QUOTE)?    _parseName()    :    _handleUnexpectedChar(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
144	[BUG]  [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _handleUnexpectedChar(i):  _parseFunctionName();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      i  =  _skipComma(i);  }  _updateLocation();    boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {        [BUGGY]  String  name  =(i  ==  INT_QUOTE)?  _handleUnexpectedChar(i):  _parseFunctionName();  [BUGGY]      _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	630	630	1	replace	String  name  =(i  ==  INT_QUOTE)?  _handleUnexpectedChar(i):  _parseFunctionName();	  String    name    =(i    ==    INT_QUOTE)?    _handleUnexpectedChar(i):    _parseName();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
