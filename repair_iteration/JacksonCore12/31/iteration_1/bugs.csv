bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _tokenIncomplete  =  false;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  case  ' "':  [BUGGY]  _tokenIncomplete  =  false;  [BUGGY]  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	642	642	1	replace	_tokenIncomplete  =  false;	_tokenIncomplete  =  true;  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
2	[BUG]  [BUGGY]  _tokenIncomplete  =  null;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  case  ' "':  [BUGGY]  _tokenIncomplete  =  null;  [BUGGY]  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	642	642	1	replace	_tokenIncomplete  =  null;	_tokenIncomplete  =  true;  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
3	[BUG]  [BUGGY]  _tokenIncomplete  =  JsonToken.FIELD_NAME;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  case  ' "':  [BUGGY]  _tokenIncomplete  =  JsonToken.FIELD_NAME;  [BUGGY]  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	642	642	1	replace	_tokenIncomplete  =  JsonToken.FIELD_NAME;	_tokenIncomplete  =  true;  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
4	[BUG]  [BUGGY]  _tokenIncomplete  =  JsonToken.START_ARRAY;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  case  ' "':  [BUGGY]  _tokenIncomplete  =  JsonToken.START_ARRAY;  [BUGGY]  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	642	642	1	replace	_tokenIncomplete  =  JsonToken.START_ARRAY;	_tokenIncomplete  =  true;  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  case  ' "':  [BUGGY]    [BUGGY]  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	642	642	1	replace	  	_tokenIncomplete  =  true;  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
6	[BUG]  [BUGGY]  if(_tokenIncomplete!=  null)  {  _tokenIncomplete  =  true;  }  else  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  case  ' "':  [BUGGY]  if(_tokenIncomplete!=  null)  {  _tokenIncomplete  =  true;  }  else  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	642	642	1	replace	if(_tokenIncomplete!=  null)  {  _tokenIncomplete  =  true;  }  else  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }	_tokenIncomplete  =  true;  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
7	[BUG]  [BUGGY]  if(_tokenIncomplete  ==  null)  {  _tokenIncomplete  =  true;  }  else  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  case  ' "':  [BUGGY]  if(_tokenIncomplete  ==  null)  {  _tokenIncomplete  =  true;  }  else  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	642	642	1	replace	if(_tokenIncomplete  ==  null)  {  _tokenIncomplete  =  true;  }  else  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }	_tokenIncomplete  =  true;  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
8	[BUG]  [BUGGY]  if(_tokenIncomplete!=  null)  {  _tokenIncomplete  =  true;  }  else  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  case  ' "':  [BUGGY]  if(_tokenIncomplete!=  null)  {  _tokenIncomplete  =  true;  }  else  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	642	642	1	replace	if(_tokenIncomplete!=  null)  {  _tokenIncomplete  =  true;  }  else  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }	_tokenIncomplete  =  true;  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
9	[BUG]  [BUGGY]  if(_tokenIncomplete  ==  null)  {  _tokenIncomplete  =  true;  }  else  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;  switch  (i)  {  case  ' "':  [BUGGY]  if(_tokenIncomplete  ==  null)  {  _tokenIncomplete  =  true;  }  else  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  case  '{':  if  (!inObject)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	642	642	1	replace	if(_tokenIncomplete  ==  null)  {  _tokenIncomplete  =  true;  }  else  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }	_tokenIncomplete  =  true;  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
