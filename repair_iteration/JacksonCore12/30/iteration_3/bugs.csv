bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  switch(jp)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(jp)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(jp)  {	  switch(t)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
2	[BUG]  [BUGGY]  switch(i.nextToken(),  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.nextToken(),  JsonToken.START_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.nextToken(),  JsonToken.START_OBJECT)  {	  switch(nextToken(),    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  switch(_parsingContext.nextToken(),  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.nextToken(),  JsonToken.START_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.nextToken(),  JsonToken.START_OBJECT)  {	  switch(nextToken(),    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  switch(nextToken(),  JsonToken.START_ARRAY)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(nextToken(),  JsonToken.START_ARRAY)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(nextToken(),  JsonToken.START_ARRAY)  {	  switch(nextToken(),    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
5	[BUG]  [BUGGY]  switch(i.hasNext()  &&  JsonToken.START_OBJECT  ==  JsonToken.END_ARRAY)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.hasNext()  &&  JsonToken.START_OBJECT  ==  JsonToken.END_ARRAY)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.hasNext()  &&  JsonToken.START_OBJECT  ==  JsonToken.END_ARRAY)  {	  switch(i.hasNext()    &&    JsonToken.START_OBJECT!=    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
6	[BUG]  [BUGGY]  switch(i.hasNext()  ||  JsonToken.START_OBJECT!=  JsonToken.END_ARRAY)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.hasNext()  ||  JsonToken.START_OBJECT!=  JsonToken.END_ARRAY)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.hasNext()  ||  JsonToken.START_OBJECT!=  JsonToken.END_ARRAY)  {	  switch(i.hasNext()    &&    JsonToken.START_OBJECT!=    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
7	[BUG]  [BUGGY]  switch(i.hasNext()  &&  name!=  JsonToken.END_ARRAY)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.hasNext()  &&  name!=  JsonToken.END_ARRAY)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.hasNext()  &&  name!=  JsonToken.END_ARRAY)  {	  switch(i.hasNext()    &&    JsonToken.START_OBJECT!=    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
8	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  if(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE)  {	  if(i    ==    INT_QUOTE    ||    i!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE  ||  i  >=  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  if(i  ==  INT_QUOTE  ||  i  >=  INT_QUOTE)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(i  ==  INT_QUOTE  ||  i  >=  INT_QUOTE)  {	  if(i    ==    INT_QUOTE    ||    i!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  switch(_parsingContext.nextToken(),  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.nextToken(),  JsonToken.END_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.nextToken(),  JsonToken.END_OBJECT)  {	  switch(_parsingContext.nextToken())    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
11	[BUG]  [BUGGY]  switch(_parsingContext.getCurrentToken())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getCurrentToken())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getCurrentToken())  {	  switch(_parsingContext.nextToken())    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
12	[BUG]  [BUGGY]  switch(_parsingContext.nextToken(),  _currToken)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.nextToken(),  _currToken)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.nextToken(),  _currToken)  {	  switch(_parsingContext.nextToken())    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
13	[BUG]  [BUGGY]  switch(i.next(),  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.next(),  JsonToken.START_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.next(),  JsonToken.START_OBJECT)  {	  switch(i.next())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
14	[BUG]  [BUGGY]  switch(_parsingContext.next())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.next())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.next())  {	  switch(i.next())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
15	[BUG]  [BUGGY]  switch(i.getType()  |  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.getType()  |  JsonToken.VALUE_STRING)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getType()  |  JsonToken.VALUE_STRING)  {	  switch(i.getType()    &    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
16	[BUG]  [BUGGY]  switch(_currToken.getType()  &  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_currToken.getType()  &  JsonToken.VALUE_STRING)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_currToken.getType()  &  JsonToken.VALUE_STRING)  {	  switch(i.getType()    &    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
17	[BUG]  [BUGGY]  switch(i  ==  null?  JsonToken.START_OBJECT  :  _currToken.getClass())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i  ==  null?  JsonToken.START_OBJECT  :  _currToken.getClass())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i  ==  null?  JsonToken.START_OBJECT  :  _currToken.getClass())  {	  switch(i    ==    null?    JsonToken.START_OBJECT    :    i.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
18	[BUG]  [BUGGY]  switch(i  ==  null?  JsonToken.START_OBJECT  :  _parsingContext.getCurrentName())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i  ==  null?  JsonToken.START_OBJECT  :  _parsingContext.getCurrentName())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i  ==  null?  JsonToken.START_OBJECT  :  _parsingContext.getCurrentName())  {	  switch(i    ==    null?    JsonToken.START_OBJECT    :    i.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
19	[BUG]  [BUGGY]  switch(i!=  null?  JsonToken.START_OBJECT  :  _currToken.getClass())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i!=  null?  JsonToken.START_OBJECT  :  _currToken.getClass())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i!=  null?  JsonToken.START_OBJECT  :  _currToken.getClass())  {	  switch(i    ==    null?    JsonToken.START_OBJECT    :    i.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
20	[BUG]  [BUGGY]  switch(i!=  null?  JsonToken.START_OBJECT  :  _parsingContext.getCurrentName())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i!=  null?  JsonToken.START_OBJECT  :  _parsingContext.getCurrentName())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i!=  null?  JsonToken.START_OBJECT  :  _parsingContext.getCurrentName())  {	  switch(i    ==    null?    JsonToken.START_OBJECT    :    i.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
21	[BUG]  [BUGGY]  switch(i.getType()  |  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.getType()  |  JsonToken.START_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getType()  |  JsonToken.START_OBJECT)  {	  switch(i.getType()    &    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
22	[BUG]  [BUGGY]  switch(_parsingContext.getType()  &  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getType()  &  JsonToken.START_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getType()  &  JsonToken.START_OBJECT)  {	  switch(i.getType()    &    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
23	[BUG]  [BUGGY]  switch(i.getType()  <  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.getType()  <  JsonToken.START_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getType()  <  JsonToken.START_OBJECT)  {	  switch(i.getType()    &    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
24	[BUG]  [BUGGY]  switch(jsonToken.getCurrentName())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(jsonToken.getCurrentName())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(jsonToken.getCurrentName())  {	  switch(jsonToken.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
25	[BUG]  [BUGGY]  t  =  _parsingContext.createChildObjectContext(_currToken,  _tokenInputRow);  break;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  _parsingContext.createChildObjectContext(_currToken,  _tokenInputRow);  break;  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildObjectContext(_currToken,  _tokenInputRow);  break;	  t    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    break;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
26	[BUG]  [BUGGY]  switch(i.hasNext()  ||  i.hasNext())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.hasNext()  ||  i.hasNext())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.hasNext()  ||  i.hasNext())  {	  switch(i.hasNext()    &&    i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
27	[BUG]  [BUGGY]  switch(i.next()  &&  i.hasNext())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.next()  &&  i.hasNext())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.next()  &&  i.hasNext())  {	  switch(i.hasNext()    &&    i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
28	[BUG]  [BUGGY]  switch(_parsingContext.getClass(),  name)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getClass(),  name)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getClass(),  name)  {	  switch(_parsingContext.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
29	[BUG]  [BUGGY]  switch(_parsingContext.getParent())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getParent())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getParent())  {	  switch(_parsingContext.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
30	[BUG]  [BUGGY]  switch(i.getKey())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.getKey())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getKey())  {	  switch(i.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
31	[BUG]  [BUGGY]  switch(_parsingContext.getValue())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getValue())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getValue())  {	  switch(i.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
32	[BUG]  [BUGGY]  switch(_currToken.getValue())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_currToken.getValue())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_currToken.getValue())  {	  switch(i.getValue())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
33	[BUG]  [BUGGY]  switch(i.hasNext()  &&  name.equals(JsonToken.VALUE_STRING))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.hasNext()  &&  name.equals(JsonToken.VALUE_STRING))  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.hasNext()  &&  name.equals(JsonToken.VALUE_STRING))  {	  switch(i.hasNext()    &&    name.equals(_currToken))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
34	[BUG]  [BUGGY]  switch(i.next()  &&  name.equals(_currToken))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.next()  &&  name.equals(_currToken))  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.next()  &&  name.equals(_currToken))  {	  switch(i.hasNext()    &&    name.equals(_currToken))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
35	[BUG]  [BUGGY]  switch(_currToken.hasNext()  &&  name.equals(i))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_currToken.hasNext()  &&  name.equals(i))  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_currToken.hasNext()  &&  name.equals(i))  {	  switch(i.hasNext()    &&    name.equals(_currToken))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
36	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);	  if(i!=    INT_QUOTE)    {    if(!inObject)    {    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
37	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);	  if(i!=    INT_QUOTE)    {    if(!inObject)    {    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
38	[BUG]  [BUGGY]  switch(_parsingContext.getCurrentName(),  name)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getCurrentName(),  name)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getCurrentName(),  name)  {	  switch(_parsingContext.getCurrentName())    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
39	[BUG]  [BUGGY]  switch(_parsingContext.getCurrentName()  +  1)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getCurrentName()  +  1)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getCurrentName()  +  1)  {	  switch(_parsingContext.getCurrentName())    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
40	[BUG]  [BUGGY]  if(i!=  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  if(i!=  JsonToken.START_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(i!=  JsonToken.START_OBJECT)  {	  if(_currToken!=    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
41	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_ARRAY)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  if(_currToken!=  JsonToken.START_ARRAY)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(_currToken!=  JsonToken.START_ARRAY)  {	  if(_currToken!=    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
42	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_ARRAY)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  if(_currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(_currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken!=    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
43	[BUG]  [BUGGY]  if(i  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  if(i  ==  JsonToken.START_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(i  ==  JsonToken.START_OBJECT)  {	  if(_currToken!=    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
44	[BUG]  [BUGGY]  switch(_currToken.getTypeDesc())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_currToken.getTypeDesc())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_currToken.getTypeDesc())  {	  switch(_currToken.getType())    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
45	[BUG]  [BUGGY]  switch(_currToken.toString())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_currToken.toString())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_currToken.toString())  {	  switch(_currToken.getType())    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
46	[BUG]  [BUGGY]  switch(i.hasNext()  &&  JsonToken.START_OBJECT  ==  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.hasNext()  &&  JsonToken.START_OBJECT  ==  JsonToken.END_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.hasNext()  &&  JsonToken.START_OBJECT  ==  JsonToken.END_OBJECT)  {	  switch(i.hasNext()    &&    JsonToken.START_OBJECT!=    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
47	[BUG]  [BUGGY]  switch(i.hasNext()  ||  JsonToken.START_OBJECT!=  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.hasNext()  ||  JsonToken.START_OBJECT!=  JsonToken.END_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.hasNext()  ||  JsonToken.START_OBJECT!=  JsonToken.END_OBJECT)  {	  switch(i.hasNext()    &&    JsonToken.START_OBJECT!=    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
48	[BUG]  [BUGGY]  switch(i.hasNext()  &&  JsonToken.END_OBJECT!=  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.hasNext()  &&  JsonToken.END_OBJECT!=  JsonToken.START_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.hasNext()  &&  JsonToken.END_OBJECT!=  JsonToken.START_OBJECT)  {	  switch(i.hasNext()    &&    JsonToken.START_OBJECT!=    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
49	[BUG]  [BUGGY]  t  =  JsonToken.END_OBJECT;  break;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  JsonToken.END_OBJECT;  break;  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  JsonToken.END_OBJECT;  break;	  t    =    JsonToken.START_OBJECT;    break;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
50	[BUG]  [BUGGY]  t  =  JsonToken.START_OBJECT;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  JsonToken.START_OBJECT;  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  JsonToken.START_OBJECT;	  t    =    JsonToken.START_OBJECT;    break;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
51	[BUG]  [BUGGY]  switch(i.nextToken(),  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.nextToken(),  JsonToken.END_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.nextToken(),  JsonToken.END_OBJECT)  {	  switch(i.nextToken())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
52	[BUG]  [BUGGY]  switch(i.nextToken(),  JsonToken.END_ARRAY)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.nextToken(),  JsonToken.END_ARRAY)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.nextToken(),  JsonToken.END_ARRAY)  {	  switch(i.nextToken())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
53	[BUG]  [BUGGY]  switch(_parsingContext.getType(),  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getType(),  JsonToken.START_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getType(),  JsonToken.START_OBJECT)  {	  switch(i.getType(),    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
54	[BUG]  [BUGGY]  switch(i.getType(),  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.getType(),  JsonToken.END_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getType(),  JsonToken.END_OBJECT)  {	  switch(i.getType(),    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
55	[BUG]  [BUGGY]  switch(_currToken.getCurrentName())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_currToken.getCurrentName())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_currToken.getCurrentName())  {	  switch(_currToken.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
56	[BUG]  [BUGGY]  switch(i.getType(),  JsonToken.VALUE_NUMBER_INT)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.getType(),  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getType(),  JsonToken.VALUE_NUMBER_INT)  {	  switch(i.getType(),    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
57	[BUG]  [BUGGY]  switch(_currToken.getType(),  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_currToken.getType(),  JsonToken.VALUE_STRING)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_currToken.getType(),  JsonToken.VALUE_STRING)  {	  switch(i.getType(),    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
58	[BUG]  [BUGGY]  switch(jsonToken.trim())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(jsonToken.trim())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(jsonToken.trim())  {	  switch(jsonToken)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
59	[BUG]  [BUGGY]  switch(jsonToken.nextToken())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(jsonToken.nextToken())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(jsonToken.nextToken())  {	  switch(jsonToken)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
60	[BUG]  [BUGGY]  switch(_parsingContext.getClass(),  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getClass(),  JsonToken.VALUE_STRING)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getClass(),  JsonToken.VALUE_STRING)  {	  switch(i.getClass(),    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
61	[BUG]  [BUGGY]  switch(_currToken.getClass(),  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_currToken.getClass(),  JsonToken.VALUE_STRING)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_currToken.getClass(),  JsonToken.VALUE_STRING)  {	  switch(i.getClass(),    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
62	[BUG]  [BUGGY]  switch(i.getClass(),  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.getClass(),  JsonToken.START_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getClass(),  JsonToken.START_OBJECT)  {	  switch(i.getClass(),    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
63	[BUG]  [BUGGY]  switch(_parsingContext.getType(),  _currToken)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getType(),  _currToken)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getType(),  _currToken)  {	  switch(_parsingContext.getType())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
64	[BUG]  [BUGGY]  switch(_parsingContext.getType(),  name)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getType(),  name)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getType(),  name)  {	  switch(_parsingContext.getType())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
65	[BUG]  [BUGGY]  t  =  _parsingContext.createChildArrayContext(_currTokenInputRow,  _currToken);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  _parsingContext.createChildArrayContext(_currTokenInputRow,  _currToken);  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildArrayContext(_currTokenInputRow,  _currToken);	  t    =    _parsingContext.createChildArrayContext(_currTokenInputRow,    _currToken);    break;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
66	[BUG]  [BUGGY]  t  =  _parsingContext.createChildArrayContext(_currTokenInputRow,  name);  break;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  _parsingContext.createChildArrayContext(_currTokenInputRow,  name);  break;  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildArrayContext(_currTokenInputRow,  name);  break;	  t    =    _parsingContext.createChildArrayContext(_currTokenInputRow,    _currToken);    break;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
67	[BUG]  [BUGGY]  t  =  _parsingContext.createChildObjectContext(_currTokenInputRow,  _currToken);  break;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  _parsingContext.createChildObjectContext(_currTokenInputRow,  _currToken);  break;  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildObjectContext(_currTokenInputRow,  _currToken);  break;	  t    =    _parsingContext.createChildArrayContext(_currTokenInputRow,    _currToken);    break;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
68	[BUG]  [BUGGY]  if(i!=  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  if(i!=  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(i!=  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE)  {	  if(_currToken!=    JsonToken.START_OBJECT    ||    i!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
69	[BUG]  [BUGGY]  if(i!=  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  if(i!=  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(i!=  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE)  {	  if(_currToken!=    JsonToken.START_OBJECT    ||    i!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
70	[BUG]  [BUGGY]  if(i  ==  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  if(i  ==  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(i  ==  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE)  {	  if(_currToken!=    JsonToken.START_OBJECT    ||    i!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
71	[BUG]  [BUGGY]  t  =  _parsingContext.createChildIndexContext(_currToken,  _tokenInputRow);  break;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  _parsingContext.createChildIndexContext(_currToken,  _tokenInputRow);  break;  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildIndexContext(_currToken,  _tokenInputRow);  break;	  t    =    _parsingContext.createChildIndexContext(_tokenInputRow,    _tokenInputCol);    break;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
72	[BUG]  [BUGGY]  t  =  _parsingContext.createChildIndexContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  _parsingContext.createChildIndexContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildIndexContext(_tokenInputRow,  _tokenInputCol);	  t    =    _parsingContext.createChildIndexContext(_tokenInputRow,    _tokenInputCol);    break;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
73	[BUG]  [BUGGY]  t  =  _parsingContext.createChildIndexContext(_tokenInputRow,  i);  break;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  _parsingContext.createChildIndexContext(_tokenInputRow,  i);  break;  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildIndexContext(_tokenInputRow,  i);  break;	  t    =    _parsingContext.createChildIndexContext(_tokenInputRow,    _tokenInputCol);    break;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
74	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE  &&  i  <  =  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  if(i  ==  INT_QUOTE  &&  i  <  =  INT_QUOTE)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(i  ==  INT_QUOTE  &&  i  <  =  INT_QUOTE)  {	  if(i!=    INT_QUOTE    &&    i    <    =    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
75	[BUG]  [BUGGY]  if(i!=  INT_QUOTE  ||  i  <  =  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  if(i!=  INT_QUOTE  ||  i  <  =  INT_QUOTE)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(i!=  INT_QUOTE  ||  i  <  =  INT_QUOTE)  {	  if(i!=    INT_QUOTE    &&    i    <    =    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
76	[BUG]  [BUGGY]  if(i!=  INT_QUOTE  &&  i  ==  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  if(i!=  INT_QUOTE  &&  i  ==  INT_QUOTE)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(i!=  INT_QUOTE  &&  i  ==  INT_QUOTE)  {	  if(i!=    INT_QUOTE    &&    i    <    =    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
77	[BUG]  [BUGGY]  switch(_parsingContext.getTypeDesc(),  name)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getTypeDesc(),  name)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getTypeDesc(),  name)  {	  switch(_parsingContext.getTypeDesc())    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
78	[BUG]  [BUGGY]  switch(_parsingContext.getTypeDesc(),  _currToken)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getTypeDesc(),  _currToken)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getTypeDesc(),  _currToken)  {	  switch(_parsingContext.getTypeDesc())    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
79	[BUG]  [BUGGY]  switch(_parsingContext.getCurrentTypeDesc())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getCurrentTypeDesc())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getCurrentTypeDesc())  {	  switch(_parsingContext.getTypeDesc())    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
80	[BUG]  [BUGGY]  switch(name.trim())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(name.trim())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(name.trim())  {	  switch(_currToken.trim())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
81	[BUG]  [BUGGY]  switch(i.trim())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.trim())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.trim())  {	  switch(_currToken.trim())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
82	[BUG]  [BUGGY]  switch(_currToken.trim(),  name)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_currToken.trim(),  name)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_currToken.trim(),  name)  {	  switch(_currToken.trim())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
83	[BUG]  [BUGGY]  switch(i!=  null?  JsonToken.START_OBJECT  :  _parsingContext.getParent())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i!=  null?  JsonToken.START_OBJECT  :  _parsingContext.getParent())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i!=  null?  JsonToken.START_OBJECT  :  _parsingContext.getParent())  {	  switch(i!=    null?    JsonToken.START_OBJECT    :    i.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
84	[BUG]  [BUGGY]  t  =  _parsingContext.createChildArrayContext(_currToken,  _tokenInputRow);  break;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  _parsingContext.createChildArrayContext(_currToken,  _tokenInputRow);  break;  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildArrayContext(_currToken,  _tokenInputRow);  break;	  t    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    break;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
85	[BUG]  [BUGGY]  t  =  _parsingContext.createChildArrayContext(_currToken,  _tokenInputRow);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  _parsingContext.createChildArrayContext(_currToken,  _tokenInputRow);  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildArrayContext(_currToken,  _tokenInputRow);	  t    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    break;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
86	[BUG]  [BUGGY]  t  =  _parsingContext.createChildObjectContext(_currToken,  _tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  _parsingContext.createChildObjectContext(_currToken,  _tokenInputRow,  _tokenInputCol);  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildObjectContext(_currToken,  _tokenInputRow,  _tokenInputCol);	  t    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
87	[BUG]  [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  i);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  i);  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  i);	  t    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
88	[BUG]  [BUGGY]  t  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);	  t    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
89	[BUG]  [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);	  t    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
90	[BUG]  [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  -  1);  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  -  1);	  t    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
91	[BUG]  [BUGGY]  switch(_parsingContext.hasNext()  &&  name.equals(_currToken))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.hasNext()  &&  name.equals(_currToken))  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.hasNext()  &&  name.equals(_currToken))  {	  switch(i.hasNext()    &&    name.equals(_currToken))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
92	[BUG]  [BUGGY]  switch(i.hasNext()  ||  name.equals(_currToken))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.hasNext()  ||  name.equals(_currToken))  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.hasNext()  ||  name.equals(_currToken))  {	  switch(i.hasNext()    &&    name.equals(_currToken))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
93	[BUG]  [BUGGY]  switch(i  ==  null?  JsonToken.START_OBJECT  :  _parsingContext.getClass())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i  ==  null?  JsonToken.START_OBJECT  :  _parsingContext.getClass())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i  ==  null?  JsonToken.START_OBJECT  :  _parsingContext.getClass())  {	  switch(i    ==    null?    JsonToken.START_OBJECT    :    i.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
94	[BUG]  [BUGGY]  switch(i!=  null?  JsonToken.START_OBJECT  :  _parsingContext.getClass())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i!=  null?  JsonToken.START_OBJECT  :  _parsingContext.getClass())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i!=  null?  JsonToken.START_OBJECT  :  _parsingContext.getClass())  {	  switch(i    ==    null?    JsonToken.START_OBJECT    :    i.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
95	[BUG]  [BUGGY]  switch(_parsingContext.hasNext()  &&  JsonToken.START_OBJECT!=  JsonToken.END_ARRAY)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.hasNext()  &&  JsonToken.START_OBJECT!=  JsonToken.END_ARRAY)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.hasNext()  &&  JsonToken.START_OBJECT!=  JsonToken.END_ARRAY)  {	  switch(i.hasNext()    &&    JsonToken.START_OBJECT!=    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
96	[BUG]  [BUGGY]  switch(i.getType()  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.getType()  ==  JsonToken.START_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getType()  ==  JsonToken.START_OBJECT)  {	  switch(i.getType()    &    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
97	[BUG]  [BUGGY]  switch(i.getType()!=  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.getType()!=  JsonToken.START_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getType()!=  JsonToken.START_OBJECT)  {	  switch(i.getType()    &    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
98	[BUG]  [BUGGY]  t  =  _parsingContext.createChildArrayContext(_currTokenInputRow,  _tokenInputCol);  break;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  _parsingContext.createChildArrayContext(_currTokenInputRow,  _tokenInputCol);  break;  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildArrayContext(_currTokenInputRow,  _tokenInputCol);  break;	  t    =    _parsingContext.createChildArrayContext(_currTokenInputRow,    _currToken);    break;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
99	[BUG]  [BUGGY]  switch(i.hasNext()  &&  _currToken!=  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.hasNext()  &&  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.hasNext()  &&  _currToken!=  JsonToken.START_OBJECT)  {	  switch(i.hasNext()    &&    i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
100	[BUG]  [BUGGY]  switch(i.getType()  <  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.getType()  <  JsonToken.VALUE_STRING)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getType()  <  JsonToken.VALUE_STRING)  {	  switch(i.getType()    &    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
101	[BUG]  [BUGGY]  switch(i.getType()  ||  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.getType()  ||  JsonToken.VALUE_STRING)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getType()  ||  JsonToken.VALUE_STRING)  {	  switch(i.getType()    &    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
102	[BUG]  [BUGGY]  t  =  JsonToken.START_ARRAY;  break;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  JsonToken.START_ARRAY;  break;  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  JsonToken.START_ARRAY;  break;	  t    =    JsonToken.START_OBJECT;    break;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
103	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(_currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken!=    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
104	[BUG]  [BUGGY]  if(i!=  JsonToken.START_ARRAY)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  if(i!=  JsonToken.START_ARRAY)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(i!=  JsonToken.START_ARRAY)  {	  if(_currToken!=    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
105	[BUG]  [BUGGY]  switch(i.getType(),  JsonToken.START_ARRAY)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.getType(),  JsonToken.START_ARRAY)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getType(),  JsonToken.START_ARRAY)  {	  switch(i.getType(),    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
106	[BUG]  [BUGGY]  switch(jsonToken.getTypeDesc())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(jsonToken.getTypeDesc())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(jsonToken.getTypeDesc())  {	  switch(jsonToken.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
107	[BUG]  [BUGGY]  switch(jsonToken.next())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(jsonToken.next())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(jsonToken.next())  {	  switch(jsonToken.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
108	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE  &&  i!=  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  if(i  ==  INT_QUOTE  &&  i!=  INT_QUOTE)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(i  ==  INT_QUOTE  &&  i!=  INT_QUOTE)  {	  if(i!=    INT_QUOTE    &&    i    <    =    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
109	[BUG]  [BUGGY]  switch(jsonToken.type)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(jsonToken.type)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(jsonToken.type)  {	  switch(jsonToken)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
110	[BUG]  [BUGGY]  switch(_parsingContext.getCurrentName(),  _currToken)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getCurrentName(),  _currToken)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getCurrentName(),  _currToken)  {	  switch(_parsingContext.getCurrentName())    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
111	[BUG]  [BUGGY]  switch(_parsingContext.getTypeDesc(),  _nameInputRow)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getTypeDesc(),  _nameInputRow)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getTypeDesc(),  _nameInputRow)  {	  switch(_parsingContext.getTypeDesc())    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
112	[BUG]  [BUGGY]  switch(_currToken.next())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_currToken.next())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_currToken.next())  {	  switch(i.next())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
113	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE)  {	  if(_currToken!=    JsonToken.START_OBJECT    ||    i!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
114	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE)  {	  if(_currToken!=    JsonToken.START_OBJECT    ||    i!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
115	[BUG]  [BUGGY]  switch(_parsingContext.hasNext()  &&  JsonToken.START_OBJECT!=  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.hasNext()  &&  JsonToken.START_OBJECT!=  JsonToken.END_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.hasNext()  &&  JsonToken.START_OBJECT!=  JsonToken.END_OBJECT)  {	  switch(i.hasNext()    &&    JsonToken.START_OBJECT!=    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
116	[BUG]  [BUGGY]  t  =  _parsingContext.createChildIndexContext(_tokenInputRow,  _tokenInputCol  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  _parsingContext.createChildIndexContext(_tokenInputRow,  _tokenInputCol  +  1);  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildIndexContext(_tokenInputRow,  _tokenInputCol  +  1);	  t    =    _parsingContext.createChildIndexContext(_tokenInputRow,    _tokenInputCol);    break;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
117	[BUG]  [BUGGY]  t  =  _parsingContext.createChildIndexContext(_tokenInputRow,  _tokenInputCol  +  1);  break;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  _parsingContext.createChildIndexContext(_tokenInputRow,  _tokenInputCol  +  1);  break;  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildIndexContext(_tokenInputRow,  _tokenInputCol  +  1);  break;	  t    =    _parsingContext.createChildIndexContext(_tokenInputRow,    _tokenInputCol);    break;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
118	[BUG]  [BUGGY]  switch(_parsingContext.getTypeRegistry())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getTypeRegistry())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getTypeRegistry())  {	  switch(_parsingContext.getType())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
119	[BUG]  [BUGGY]  switch(_parsingContext.getType(),  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getType(),  JsonToken.VALUE_STRING)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getType(),  JsonToken.VALUE_STRING)  {	  switch(i.getType(),    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
120	[BUG]  [BUGGY]  switch(_currToken.getType(),  _nameInputRow)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_currToken.getType(),  _nameInputRow)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_currToken.getType(),  _nameInputRow)  {	  switch(_currToken.getType())    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
121	[BUG]  [BUGGY]  switch(_parsingContext.trim())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.trim())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.trim())  {	  switch(_currToken.trim())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
122	[BUG]  [BUGGY]  switch(_currToken.hasNext()  &&  name.equals(name))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_currToken.hasNext()  &&  name.equals(name))  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_currToken.hasNext()  &&  name.equals(name))  {	  switch(i.hasNext()    &&    name.equals(_currToken))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
123	[BUG]  [BUGGY]  if(i!=  INT_QUOTE  &&  i  <  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  if(i!=  INT_QUOTE  &&  i  <  INT_QUOTE)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(i!=  INT_QUOTE  &&  i  <  INT_QUOTE)  {	  if(i!=    INT_QUOTE    &&    i    <    =    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
124	[BUG]  [BUGGY]  switch(i.getType()  ==  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.getType()  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getType()  ==  JsonToken.VALUE_STRING)  {	  switch(i.getType()    &    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
125	[BUG]  [BUGGY]  switch(i.getType()!=  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.getType()!=  JsonToken.VALUE_STRING)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getType()!=  JsonToken.VALUE_STRING)  {	  switch(i.getType()    &    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
126	[BUG]  [BUGGY]  switch(i.getType()  >>  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.getType()  >>  JsonToken.START_OBJECT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getType()  >>  JsonToken.START_OBJECT)  {	  switch(i.getType()    &    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
127	[BUG]  [BUGGY]  switch(_parsingContext.getType(),  _nameInputRow)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getType(),  _nameInputRow)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getType(),  _nameInputRow)  {	  switch(_parsingContext.getType())    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
128	[BUG]  [BUGGY]  switch(i.getType(),  JsonToken.VALUE_NUMBER)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.getType(),  JsonToken.VALUE_NUMBER)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getType(),  JsonToken.VALUE_NUMBER)  {	  switch(i.getType(),    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
129	[BUG]  [BUGGY]  switch(_parsingContext.getTypeDesc()  ||  i  ==  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getTypeDesc()  ||  i  ==  INT_QUOTE)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getTypeDesc()  ||  i  ==  INT_QUOTE)  {	  switch(_parsingContext.getTypeDesc())    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
130	[BUG]  [BUGGY]  switch(i!=  null?  JsonToken.START_OBJECT  :  _handleOddName(i))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i!=  null?  JsonToken.START_OBJECT  :  _handleOddName(i))  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i!=  null?  JsonToken.START_OBJECT  :  _handleOddName(i))  {	  switch(i!=    null?    JsonToken.START_OBJECT    :    i.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
131	[BUG]  [BUGGY]  t  =  _parsingContext.createChildArrayContext(_currTokenInputRow,  _nameInputCol);  break;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  t  =  _parsingContext.createChildArrayContext(_currTokenInputRow,  _nameInputCol);  break;  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildArrayContext(_currTokenInputRow,  _nameInputCol);  break;	  t    =    _parsingContext.createChildArrayContext(_currTokenInputRow,    _currToken);    break;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
132	[BUG]  [BUGGY]  switch(_parsingContext.getCurrentName(),  _nameInputRow)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getCurrentName(),  _nameInputRow)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getCurrentName(),  _nameInputRow)  {	  switch(_parsingContext.getCurrentName())    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
133	[BUG]  [BUGGY]  switch(i!=  JsonToken.START_OBJECT?  JsonToken.START_OBJECT  :  i.getClass())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i!=  JsonToken.START_OBJECT?  JsonToken.START_OBJECT  :  i.getClass())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i!=  JsonToken.START_OBJECT?  JsonToken.START_OBJECT  :  i.getClass())  {	  switch(i    ==    null?    JsonToken.START_OBJECT    :    i.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
134	[BUG]  [BUGGY]  switch(jsonTokens.next())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(jsonTokens.next())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(jsonTokens.next())  {	  switch(t)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
135	[BUG]  [BUGGY]  switch(i.getCurrentName())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.getCurrentName())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getCurrentName())  {	  switch(i.nextToken())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
136	[BUG]  [BUGGY]  switch(_parsingContext.getTypeDesc()  &&  i.hasNext())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(_parsingContext.getTypeDesc()  &&  i.hasNext())  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getTypeDesc()  &&  i.hasNext())  {	  switch(i.hasNext()    &&    i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
137	[BUG]  [BUGGY]  switch(nextToken(),  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(nextToken(),  JsonToken.FIELD_NAME)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(nextToken(),  JsonToken.FIELD_NAME)  {	  switch(nextToken(),    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
138	[BUG]  [BUGGY]  switch(nextToken(),  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(nextToken(),  JsonToken.VALUE_STRING)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(nextToken(),  JsonToken.VALUE_STRING)  {	  switch(nextToken(),    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
139	[BUG]  [BUGGY]  switch(i.getClass(),  JsonToken.VALUE_NUMBER_INT)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;      [BUGGY]  switch(i.getClass(),  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      case  '     "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getClass(),  JsonToken.VALUE_NUMBER_INT)  {	  switch(i.getClass(),    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
