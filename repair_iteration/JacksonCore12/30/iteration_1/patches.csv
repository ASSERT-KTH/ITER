bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  if(i  ==  INT_QUOTE)  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(i  ==  INT_QUOTE)  {	  if(i!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  if(i!=  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  if(i!=  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(i!=  INT_QUOTE  ||  i  ==  INT_QUOTE)  {	  if(i!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE  ||  i!=  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  if(i  ==  INT_QUOTE  ||  i!=  INT_QUOTE)  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(i  ==  INT_QUOTE  ||  i!=  INT_QUOTE)  {	  if(i!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  switch(i.nextToken())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(i.nextToken())  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.nextToken())  {	  switch(nextToken())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  switch(nextToken(),  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(nextToken(),  JsonToken.START_OBJECT)  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(nextToken(),  JsonToken.START_OBJECT)  {	  switch(nextToken())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
6	[BUG]  [BUGGY]  switch(_currToken.getClass())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(_currToken.getClass())  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_currToken.getClass())  {	  switch(i.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
7	[BUG]  [BUGGY]  switch(_parsingContext.getClass())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(_parsingContext.getClass())  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getClass())  {	  switch(i.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  switch(i.getClass(),  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(i.getClass(),  JsonToken.VALUE_STRING)  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getClass(),  JsonToken.VALUE_STRING)  {	  switch(i.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  switch(i.hasNext()  &&  name.equals(_currToken))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(i.hasNext()  &&  name.equals(_currToken))  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.hasNext()  &&  name.equals(_currToken))  {	  switch(i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
10	[BUG]  [BUGGY]  switch(i.next())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(i.next())  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.next())  {	  switch(i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
11	[BUG]  [BUGGY]  switch(i.hasNext()  &&  i.hasNext())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(i.hasNext()  &&  i.hasNext())  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.hasNext()  &&  i.hasNext())  {	  switch(i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
12	[BUG]  [BUGGY]  switch(_parsingContext)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(_parsingContext)  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext)  {	  switch(_currToken)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  switch(_currToken.trim())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(_currToken.trim())  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_currToken.trim())  {	  switch(_currToken)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  break;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  break;  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  break;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  t  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  break;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  t  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  break;  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  break;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  t  =  _parsingContext.createChildArrayContext(_currTokenInputRow,  _currToken);  break;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  t  =  _parsingContext.createChildArrayContext(_currTokenInputRow,  _currToken);  break;  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildArrayContext(_currTokenInputRow,  _currToken);  break;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  switch(i.getType()  &  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(i.getType()  &  JsonToken.VALUE_STRING)  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getType()  &  JsonToken.VALUE_STRING)  {	  switch(i.getType())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  switch(i.getType(),  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(i.getType(),  JsonToken.VALUE_STRING)  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getType(),  JsonToken.VALUE_STRING)  {	  switch(i.getType())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
20	[BUG]  [BUGGY]  switch(i.getType()  &  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(i.getType()  &  JsonToken.START_OBJECT)  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getType()  &  JsonToken.START_OBJECT)  {	  switch(i.getType())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
21	[BUG]  [BUGGY]  switch(i!=  null?  JsonToken.START_OBJECT  :  i.getClass())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(i!=  null?  JsonToken.START_OBJECT  :  i.getClass())  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i!=  null?  JsonToken.START_OBJECT  :  i.getClass())  {	  switch(i.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
22	[BUG]  [BUGGY]  switch(i  ==  null?  JsonToken.START_OBJECT  :  i.getClass())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(i  ==  null?  JsonToken.START_OBJECT  :  i.getClass())  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i  ==  null?  JsonToken.START_OBJECT  :  i.getClass())  {	  switch(i.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
23	[BUG]  [BUGGY]  switch(i.hasNext()  &&  JsonToken.START_OBJECT!=  JsonToken.END_ARRAY)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(i.hasNext()  &&  JsonToken.START_OBJECT!=  JsonToken.END_ARRAY)  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.hasNext()  &&  JsonToken.START_OBJECT!=  JsonToken.END_ARRAY)  {	  switch(i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
24	[BUG]  [BUGGY]  switch(i.hasNext()  &&  JsonToken.START_OBJECT!=  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(i.hasNext()  &&  JsonToken.START_OBJECT!=  JsonToken.END_OBJECT)  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.hasNext()  &&  JsonToken.START_OBJECT!=  JsonToken.END_OBJECT)  {	  switch(i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
25	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE)  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE)  {	  if(i!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
26	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(_currToken!=  JsonToken.START_OBJECT)  {	  if(i!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  t  =  JsonToken.START_OBJECT;  break;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  t  =  JsonToken.START_OBJECT;  break;  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  JsonToken.START_OBJECT;  break;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
28	[BUG]  [BUGGY]  t  =  _parsingContext.createChildIndexContext(_tokenInputRow,  _tokenInputCol);  break;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  t  =  _parsingContext.createChildIndexContext(_tokenInputRow,  _tokenInputCol);  break;  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	t  =  _parsingContext.createChildIndexContext(_tokenInputRow,  _tokenInputCol);  break;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
29	[BUG]  [BUGGY]  switch(jsonToken)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(jsonToken)  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(jsonToken)  {	  switch(_currToken)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
30	[BUG]  [BUGGY]  switch(_parsingContext.getType())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(_parsingContext.getType())  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getType())  {	  switch(i.getType())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  switch(i.getType(),  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(i.getType(),  JsonToken.START_OBJECT)  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getType(),  JsonToken.START_OBJECT)  {	  switch(i.getType())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
32	[BUG]  [BUGGY]  switch(_currToken.getType())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(_currToken.getType())  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_currToken.getType())  {	  switch(i.getType())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
33	[BUG]  [BUGGY]  switch(_parsingContext.nextToken())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(_parsingContext.nextToken())  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.nextToken())  {	  switch(nextToken())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  if(!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  if(i  ==  INT_QUOTE)  {  if(!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(i  ==  INT_QUOTE)  {  if(!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
35	[BUG]  [BUGGY]  if(i!=  INT_QUOTE)  {  if(!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  if(i!=  INT_QUOTE)  {  if(!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(i!=  INT_QUOTE)  {  if(!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
36	[BUG]  [BUGGY]  if(i!=  INT_QUOTE  &&  i  <  =  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  if(i!=  INT_QUOTE  &&  i  <  =  INT_QUOTE)  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	if(i!=  INT_QUOTE  &&  i  <  =  INT_QUOTE)  {	  if(i!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  switch(_parsingContext.getTypeDesc())  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(_parsingContext.getTypeDesc())  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getTypeDesc())  {	  switch(i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
38	[BUG]  [BUGGY]  switch(_parsingContext.getCurrentName())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(_parsingContext.getCurrentName())  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(_parsingContext.getCurrentName())  {	  switch(i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
39	[BUG]  [BUGGY]  switch(jsonToken.getClass())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(jsonToken.getClass())  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(jsonToken.getClass())  {	  switch(i.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
40	[BUG]  [BUGGY]  switch(i.getValue())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(i.getValue())  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(i.getValue())  {	  switch(nextToken())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
41	[BUG]  [BUGGY]  switch(t)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  i  =  _skipColon();  }    JsonToken  t;    [BUGGY]  switch(t)  {  [BUGGY]    case  '   "':  _tokenIncomplete  =  true;  t  =  JsonToken.VALUE_STRING;  break;  case  '[':  if  (!inObject)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  t  =  JsonToken.START_ARRAY;  break;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	640	640	1	replace	switch(t)  {	  switch(_currToken)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
