bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(i!=  INT_COMMA)  {  _throwInternal();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  if(i!=  INT_COMMA)  {  _throwInternal();  }  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	if(i!=  INT_COMMA)  {  _throwInternal();  }	  if(i!=    INT_QUOTE)    {    _throwInternal();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
2	[BUG]  [BUGGY]  _parsingContext.setLocation(i,  i  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext.setLocation(i,  i  +  1);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext.setLocation(i,  i  +  1);	  _parsingContext.setLocation(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
3	[BUG]  [BUGGY]  _parsingContext.setLocation(i  *  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext.setLocation(i  *  1);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext.setLocation(i  *  1);	  _parsingContext.setLocation(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
4	[BUG]  [BUGGY]  _reportError(i,'  {  ');  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError(i,'  {  ');  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError(i,'  {  ');	  _reportMismatchedEndMarker(i,'{    ');    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
5	[BUG]  [BUGGY]  _reportError( "msg.illegal.character ",  i);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "msg.illegal.character ",  i);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "msg.illegal.character ",  i);	  _reportError(   "msg.illegal.character   ");    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
6	[BUG]  [BUGGY]  _reportError( "msg.illegal.character. ");  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "msg.illegal.character. ");  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "msg.illegal.character. ");	  _reportError(   "msg.illegal.character   ");    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
7	[BUG]  [BUGGY]  _parsingContext.setCurrentName(name);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext.setCurrentName(name);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext.setCurrentName(name);	  _parsingContext.setCurrentName(i);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
8	[BUG]  [BUGGY]  if(i!=  INT_QUOTE)  {  _parsingContext.setCurrentName(i);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  if(i!=  INT_QUOTE)  {  _parsingContext.setCurrentName(i);  }  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	if(i!=  INT_QUOTE)  {  _parsingContext.setCurrentName(i);  }	  _parsingContext.setCurrentName(i);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
9	[BUG]  [BUGGY]  if(i!=  INT_QUOTE)  {  _parsingContext.setCurrentName(i);  }  else  {  _parsingContext.setCurrentName(i);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  if(i!=  INT_QUOTE)  {  _parsingContext.setCurrentName(i);  }  else  {  _parsingContext.setCurrentName(i);  }  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	if(i!=  INT_QUOTE)  {  _parsingContext.setCurrentName(i);  }  else  {  _parsingContext.setCurrentName(i);  }	  _parsingContext.setCurrentName(i);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
10	[BUG]  [BUGGY]  _reportUnexpectedChar(i,  _nameInputTotal, "was  expecting  a  colon  to  separate  field  name  and  value ");  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportUnexpectedChar(i,  _nameInputTotal, "was  expecting  a  colon  to  separate  field  name  and  value ");  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportUnexpectedChar(i,  _nameInputTotal, "was  expecting  a  colon  to  separate  field  name  and  value ");	  _reportUnexpectedChar(i,   "was    expecting    a    colon    to    separate    field    name    and    value   ");    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
11	[BUG]  [BUGGY]  _reportUnexpectedChar(i, "was  expecting  a  colon  to  separate  field  name  and  value. ");  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportUnexpectedChar(i, "was  expecting  a  colon  to  separate  field  name  and  value. ");  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportUnexpectedChar(i, "was  expecting  a  colon  to  separate  field  name  and  value. ");	  _reportUnexpectedChar(i,   "was    expecting    a    colon    to    separate    field    name    and    value   ");    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
12	[BUG]  [BUGGY]  _reportError(i,  JsonToken.FIELD_NAME);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError(i,  JsonToken.FIELD_NAME);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError(i,  JsonToken.FIELD_NAME);	  _reportError(i,    ']');    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
13	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_parsingContext.getTypeDesc(),  i);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_parsingContext.getTypeDesc(),  i);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_parsingContext.getTypeDesc(),  i);	  _reportError(   "Current    context    not    an    ARRAY    but   "+_parsingContext.getTypeDesc());    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
14	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_parsingContext.getName());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_parsingContext.getName());  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_parsingContext.getName());	  _reportError(   "Current    context    not    an    ARRAY    but   "+_parsingContext.getTypeDesc());    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
15	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleName(i),  ']');  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleName(i),  ']');  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_handleName(i),  ']');	  _reportError(   "Current    context    not    an    object    but   "+_handleOddName(i),    ']');    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol,  i,  ']');  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol,  i,  ']');  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_nameInputCol,  i,  ']');	  _reportError(   "Current    context    not    an    object    but   "+_handleOddName(i),    ']');    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  _parsingContext.setLocation(i,  this);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext.setLocation(i,  this);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext.setLocation(i,  this);	  _parsingContext.setLocation(i,    null);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
18	[BUG]  [BUGGY]  _parsingContext.setLocation(i,  JsonToken.VALUE_STRING);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext.setLocation(i,  JsonToken.VALUE_STRING);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext.setLocation(i,  JsonToken.VALUE_STRING);	  _parsingContext.setLocation(i,    null);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
19	[BUG]  [BUGGY]  _parsingContext.setLocation(i,  JsonToken.FIELD_NAME);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext.setLocation(i,  JsonToken.FIELD_NAME);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext.setLocation(i,  JsonToken.FIELD_NAME);	  _parsingContext.setLocation(i,    null);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
20	[BUG]  [BUGGY]  _parsingContext.setCurrentLocation(i  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext.setCurrentLocation(i  +  1);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext.setCurrentLocation(i  +  1);	  _parsingContext.setCurrentLocation(i);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
21	[BUG]  [BUGGY]  if(i!=  INT_QUOTE)  {  _parsingContext.setCurrentLocation(i);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  if(i!=  INT_QUOTE)  {  _parsingContext.setCurrentLocation(i);  }  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	if(i!=  INT_QUOTE)  {  _parsingContext.setCurrentLocation(i);  }	  _parsingContext.setCurrentLocation(i);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
22	[BUG]  [BUGGY]  _parsingContext.setCurrentLocation(i,  _handleOddName(i));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext.setCurrentLocation(i,  _handleOddName(i));  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext.setCurrentLocation(i,  _handleOddName(i));	  _parsingContext.setCurrentLocation(i);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
23	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i,  _handleOddName(i));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i,  _handleOddName(i));  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(i,  _handleOddName(i));	  _parsingContext    =    _parsingContext.createChildObjectContext(i);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i,  _currToken);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i,  _currToken);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(i,  _currToken);	  _parsingContext    =    _parsingContext.createChildObjectContext(i);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
25	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i,  _chkOffset);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i,  _chkOffset);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(i,  _chkOffset);	  _parsingContext    =    _parsingContext.createChildObjectContext(i);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
26	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);	  _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
27	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i,  -1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i,  -1);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(i,  -1);	  _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
28	[BUG]  [BUGGY]  _reportError(i,  '[',  _currToken);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError(i,  '[',  _currToken);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError(i,  '[',  _currToken);	  _reportError(i,    '[');    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
29	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  of  type "+_nameInputCol,  i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  of  type "+_nameInputCol,  i);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  of  type "+_nameInputCol,  i);	  _reportError(   "Current    context    not    an    object    of    type   "+_nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
30	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  of  type "+i);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  of  type "+i);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  of  type "+i);	  _reportError(   "Current    context    not    an    object    of    type   "+_nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
31	[BUG]  [BUGGY]  if(i  ==  INT_COMMA)  {  _throwInternal();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  if(i  ==  INT_COMMA)  {  _throwInternal();  }  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	if(i  ==  INT_COMMA)  {  _throwInternal();  }	  if(i    ==    INT_QUOTE)    {    _throwInternal();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
32	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol,  i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol,  i);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_nameInputCol,  i);	  _reportError(   "Current    context    not    an    object    but   "+_nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
33	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol.getMessage());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol.getMessage());  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_nameInputCol.getMessage());	  _reportError(   "Current    context    not    an    object    but   "+_nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
34	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleOffset(i),  _nameInputTotal);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleOffset(i),  _nameInputTotal);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_handleOffset(i),  _nameInputTotal);	  _reportError(   "Current    context    not    an    object    but   "+_handleOffset(i));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
35	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputRow,  i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputRow,  i);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_nameInputRow,  i);	  _reportError(   "Current    context    not    an    object    but   "+_handleOddName(i),    _nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
36	[BUG]  [BUGGY]  _reportError(i,'  <'+  name);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError(i,'  <'+  name);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError(i,'  <'+  name);	  _reportError(i,'    <    ');    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
37	[BUG]  [BUGGY]  _reportError( "msg.illegal.end-of-string. ");  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "msg.illegal.end-of-string. ");  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "msg.illegal.end-of-string. ");	  _reportError(   "msg.illegal.end-of-string   ");    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
38	[BUG]  [BUGGY]  _reportError( "msg.illegal.end-of-string ",  i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "msg.illegal.end-of-string ",  i);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "msg.illegal.end-of-string ",  i);	  _reportError(   "msg.illegal.end-of-string   ");    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
39	[BUG]  [BUGGY]  i  =  _skipComma(i  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  i  =  _skipComma(i  +  1);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	i  =  _skipComma(i  +  1);	  i    =    _skipComma(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
40	[BUG]  [BUGGY]  i  =  _skipComma(i,  _parsingContext);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  i  =  _skipComma(i,  _parsingContext);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	i  =  _skipComma(i,  _parsingContext);	  i    =    _skipComma(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
41	[BUG]  [BUGGY]  i  =  _skipComma(i,  _currToken);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  i  =  _skipComma(i,  _currToken);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	i  =  _skipComma(i,  _currToken);	  i    =    _skipComma(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
42	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleUnexpectedName(i),  ']');  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleUnexpectedName(i),  ']');  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_handleUnexpectedName(i),  ']');	  _reportError(   "Current    context    not    an    object    but   "+_handleUnexpectedName(i));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
43	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleUnexpectedName(i),  _nameInputTotal);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleUnexpectedName(i),  _nameInputTotal);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_handleUnexpectedName(i),  _nameInputTotal);	  _reportError(   "Current    context    not    an    object    but   "+_handleUnexpectedName(i));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
44	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputTotal,  i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputTotal,  i);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_nameInputTotal,  i);	  _reportError(   "Current    context    not    an    object    but   "+_handleOddName(i),    _nameInputTotal);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleOddName(i),  _nameInputTotal,  _parsingContext);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleOddName(i),  _nameInputTotal,  _parsingContext);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_handleOddName(i),  _nameInputTotal,  _parsingContext);	  _reportError(   "Current    context    not    an    object    but   "+_handleOddName(i),    _nameInputTotal);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
46	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleOddName(i),  JsonToken.FIELD_NAME);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleOddName(i),  JsonToken.FIELD_NAME);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_handleOddName(i),  JsonToken.FIELD_NAME);	  _reportError(   "Current    context    not    an    object    but   "+_handleOddName(i),    _nameInputTotal);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
47	[BUG]  [BUGGY]  _reportUnexpectedChar(i,  _nameInputTotal, "was  expecting  a  string  value ");  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportUnexpectedChar(i,  _nameInputTotal, "was  expecting  a  string  value ");  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportUnexpectedChar(i,  _nameInputTotal, "was  expecting  a  string  value ");	  _reportUnexpectedChar(i,   "was    expecting    a    string    value   ");    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
48	[BUG]  [BUGGY]  _reportUnexpectedChar(i, "was  expecting  a  string  value. ");  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportUnexpectedChar(i, "was  expecting  a  string  value. ");  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportUnexpectedChar(i, "was  expecting  a  string  value. ");	  _reportUnexpectedChar(i,   "was    expecting    a    string    value   ");    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
49	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_handleOddName(i));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_handleOddName(i));  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_handleOddName(i));	  _reportError(   "Current    context    not    an    ARRAY    but   "+_parseName());    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
50	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_nameInputCol());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_nameInputCol());  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_nameInputCol());	  _reportError(   "Current    context    not    an    ARRAY    but   "+_parseName());    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
51	[BUG]  [BUGGY]  if(i!=  INT_QUOTE)  {  _parsingContext.setLocationName(i);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  if(i!=  INT_QUOTE)  {  _parsingContext.setLocationName(i);  }  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	if(i!=  INT_QUOTE)  {  _parsingContext.setLocationName(i);  }	  _parsingContext.setLocationName(i);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
52	[BUG]  [BUGGY]  if(i!=  INT_QUOTE)  {  _parsingContext.setLocationName(i);  }  else  {  _parsingContext.setLocationName(i);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  if(i!=  INT_QUOTE)  {  _parsingContext.setLocationName(i);  }  else  {  _parsingContext.setLocationName(i);  }  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	if(i!=  INT_QUOTE)  {  _parsingContext.setLocationName(i);  }  else  {  _parsingContext.setLocationName(i);  }	  _parsingContext.setLocationName(i);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
53	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol  + ",  but "+_handleOddName(i));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol  + ",  but "+_handleOddName(i));  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_nameInputCol  + ",  but "+_handleOddName(i));	  _reportError(   "Current    context    not    an    object    but   "+_nameInputCol    +   "    but   "+_handleOddName(i));    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
54	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol  + "  but "+_handleOddName(i),  _hashSeed);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol  + "  but "+_handleOddName(i),  _hashSeed);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_nameInputCol  + "  but "+_handleOddName(i),  _hashSeed);	  _reportError(   "Current    context    not    an    object    but   "+_nameInputCol    +   "    but   "+_handleOddName(i));    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
55	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleUnknownName(i),  ']');  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleUnknownName(i),  ']');  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_handleUnknownName(i),  ']');	  _reportError(   "Current    context    not    an    object    but   "+_handleUnknownName(i));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
56	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleUnknownName(i),  _nameInputTotal);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleUnknownName(i),  _nameInputTotal);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_handleUnknownName(i),  _nameInputTotal);	  _reportError(   "Current    context    not    an    object    but   "+_handleUnknownName(i));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
57	[BUG]  [BUGGY]  _reportError( "msg.undef.characterEndMarker ",  i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "msg.undef.characterEndMarker ",  i);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "msg.undef.characterEndMarker ",  i);	  _reportError(   "msg.undef.characterEndMarker   ");    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
58	[BUG]  [BUGGY]  _reportError( "msg.undef.characterEndMarker( "+i+ ") ");  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "msg.undef.characterEndMarker( "+i+ ") ");  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "msg.undef.characterEndMarker( "+i+ ") ");	  _reportError(   "msg.undef.characterEndMarker   ");    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
59	[BUG]  [BUGGY]  _reportMismatchedStartMarker(i,  ']');  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportMismatchedStartMarker(i,  ']');  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportMismatchedStartMarker(i,  ']');	  _reportMismatchedStartMarker(i,    '[');    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
60	[BUG]  [BUGGY]  _reportMismatchedStartMarker(i,  '[',  _currToken);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportMismatchedStartMarker(i,  '[',  _currToken);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportMismatchedStartMarker(i,  '[',  _currToken);	  _reportMismatchedStartMarker(i,    '[');    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
61	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  instance  of  type: "+_nameInputCol,  i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  instance  of  type: "+_nameInputCol,  i);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  instance  of  type: "+_nameInputCol,  i);	  _reportError(   "Current    context    not    an    instance    of    type:   "+_nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
62	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  instance  of  type: "+_nameInputCol.getName());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  instance  of  type: "+_nameInputCol.getName());  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  instance  of  type: "+_nameInputCol.getName());	  _reportError(   "Current    context    not    an    instance    of    type:   "+_nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
63	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  instance  of  type: "+i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  instance  of  type: "+i);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  instance  of  type: "+i);	  _reportError(   "Current    context    not    an    instance    of    type:   "+_nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
64	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext();  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext();	  _parsingContext    =    _parsingContext.createChildObjectContext();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
65	[BUG]  [BUGGY]  if(i!=  INT_RCURLY)  {  _throwInternal();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  if(i!=  INT_RCURLY)  {  _throwInternal();  }  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	if(i!=  INT_RCURLY)  {  _throwInternal();  }	  if(i!=    INT_QUOTE)    {    _throwInternal();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
66	[BUG]  [BUGGY]  _report( "msg.undef.characterEndMarker ");  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _report( "msg.undef.characterEndMarker ");  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_report( "msg.undef.characterEndMarker ");	  _reportError(   "msg.undef.characterEndMarker   ");    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
67	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY)  {  _throwInternal();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  if(i  ==  INT_RCURLY)  {  _throwInternal();  }  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	if(i  ==  INT_RCURLY)  {  _throwInternal();  }	  if(i    ==    INT_QUOTE)    {    _throwInternal();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
68	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+i);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+i);	  _reportError(   "Current    context    not    an    ARRAY    but   "+_parseName());    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
69	[BUG]  [BUGGY]  if(i!=  INT_RCURLY)  {  _parsingContext.setCurrentLocation(i);  }  else  {  _parsingContext.setCurrentLocation(i);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  if(i!=  INT_RCURLY)  {  _parsingContext.setCurrentLocation(i);  }  else  {  _parsingContext.setCurrentLocation(i);  }  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	if(i!=  INT_RCURLY)  {  _parsingContext.setCurrentLocation(i);  }  else  {  _parsingContext.setCurrentLocation(i);  }	  _parsingContext.setCurrentLocation(i);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
70	[BUG]  [BUGGY]  if(i!=  INT_RCURLY)  {  _parsingContext.setCurrentLocation(i);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  if(i!=  INT_RCURLY)  {  _parsingContext.setCurrentLocation(i);  }  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	if(i!=  INT_RCURLY)  {  _parsingContext.setCurrentLocation(i);  }	  _parsingContext.setCurrentLocation(i);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
71	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputTotal  + "  but "+_handleOddName(i),  _nameInputTotal);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputTotal  + "  but "+_handleOddName(i),  _nameInputTotal);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_nameInputTotal  + "  but "+_handleOddName(i),  _nameInputTotal);	  _reportError(   "Current    context    not    an    object    but   "+_handleOddName(i),    _nameInputTotal);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
72	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol+ ",  _nameInputTotal);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol+ ",  _nameInputTotal);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_nameInputCol+ ",  _nameInputTotal);	  _reportError(   "Current    context    not    an    object    but   "+_handleOddName(i),    _nameInputTotal);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
73	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleComma(i));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleComma(i));  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_handleComma(i));	  _reportError(   "Current    context    not    an    object    but   "+_handleOffset(i));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
74	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleUnexpectedChar(i));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleUnexpectedChar(i));  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_handleUnexpectedChar(i));	  _reportError(   "Current    context    not    an    object    but   "+_handleOffset(i));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
75	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleEndOffset(i));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleEndOffset(i));  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_handleEndOffset(i));	  _reportError(   "Current    context    not    an    object    but   "+_handleOffset(i));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
76	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleUnexpectedName(i),  _nameInputCol);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleUnexpectedName(i),  _nameInputCol);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_handleUnexpectedName(i),  _nameInputCol);	  _reportError(   "Current    context    not    an    object    but   "+_handleUnexpectedName(i));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
77	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleUnexpectedName(i),  _tokenIncomplete);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleUnexpectedName(i),  _tokenIncomplete);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_handleUnexpectedName(i),  _tokenIncomplete);	  _reportError(   "Current    context    not    an    object    but   "+_handleUnexpectedName(i));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
78	[BUG]  [BUGGY]  _parsingContext.setLocation(i,  JsonToken.END_OBJECT);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext.setLocation(i,  JsonToken.END_OBJECT);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext.setLocation(i,  JsonToken.END_OBJECT);	  _parsingContext.setLocation(i,    null);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
79	[BUG]  [BUGGY]  _reportUnexpectedChar(i, "was  expecting  a  colon  to  separate  name  and  value ");  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportUnexpectedChar(i, "was  expecting  a  colon  to  separate  name  and  value ");  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportUnexpectedChar(i, "was  expecting  a  colon  to  separate  name  and  value ");	  _reportUnexpectedChar(i,   "was    expecting    a    colon    to    separate    field    name    and    value   ");    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
80	[BUG]  [BUGGY]  _reportMismatchedStartMarker(i,'  {  ');  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportMismatchedStartMarker(i,'  {  ');  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportMismatchedStartMarker(i,'  {  ');	  _reportMismatchedEndMarker(i,'{    ');    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
81	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(0,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(0,  0);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(0,  0);	  _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
82	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);	  _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
83	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+i);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+i);	  _reportError(   "Current    context    not    an    object    but   "+_nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
84	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameOddName(i),  ']');  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameOddName(i),  ']');  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_nameOddName(i),  ']');	  _reportError(   "Current    context    not    an    object    but   "+_handleOddName(i),    ']');    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
85	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleOddName(i),  _nameInputRow);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleOddName(i),  _nameInputRow);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_handleOddName(i),  _nameInputRow);	  _reportError(   "Current    context    not    an    object    but   "+_handleOddName(i),    _nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
86	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i,  _bufferRecyclable);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i,  _bufferRecyclable);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(i,  _bufferRecyclable);	  _parsingContext    =    _parsingContext.createChildObjectContext(i);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
87	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i,  _columnNames);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i,  _columnNames);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(i,  _columnNames);	  _parsingContext    =    _parsingContext.createChildObjectContext(i);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
88	[BUG]  [BUGGY]  _report( "msg.illegal.end-of-string ");  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _report( "msg.illegal.end-of-string ");  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_report( "msg.illegal.end-of-string ");	  _reportError(   "msg.illegal.end-of-string   ");    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
89	[BUG]  [BUGGY]  i  =  _skipChildren(i);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  i  =  _skipChildren(i);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	i  =  _skipChildren(i);	  i    =    _skipComma(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
90	[BUG]  [BUGGY]  i  =  _skipComma(1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  i  =  _skipComma(1);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	i  =  _skipComma(1);	  i    =    _skipComma(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
91	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameOddName(i));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameOddName(i));  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_nameOddName(i));	  _reportError(   "Current    context    not    an    object    but   "+_handleUnknownName(i));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
92	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleUnknownName(i),  _nameInputCol);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_handleUnknownName(i),  _nameInputCol);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_handleUnknownName(i),  _nameInputCol);	  _reportError(   "Current    context    not    an    object    but   "+_handleUnknownName(i));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
93	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_currToken.getTypeDesc());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_currToken.getTypeDesc());  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_currToken.getTypeDesc());	  _reportError(   "Current    context    not    an    ARRAY    but   "+_parsingContext.getTypeDesc());    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
94	[BUG]  [BUGGY]  _reportUnexpectedChar(i,  _nameInputCol);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportUnexpectedChar(i,  _nameInputCol);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportUnexpectedChar(i,  _nameInputCol);	  _reportUnexpectedChar(i,   "was    expecting    a    string    value   ");    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
95	[BUG]  [BUGGY]  _parsingContext.setLocationName(i  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext.setLocationName(i  +  1);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext.setLocationName(i  +  1);	  _parsingContext.setLocationName(i);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
96	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY)  {  _throwInternal();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  if(i  ==  INT_RCURLY)  {  _throwInternal();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	if(i  ==  INT_RCURLY)  {  _throwInternal();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(i    ==    INT_QUOTE)    {    _throwInternal();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
97	[BUG]  [BUGGY]  parsingContext  =  _parsingContext.createChildObjectContext(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  parsingContext  =  _parsingContext.createChildObjectContext(i);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	parsingContext  =  _parsingContext.createChildObjectContext(i);	  if(i!=    INT_QUOTE)    {    _throwInternal();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
98	[BUG]  [BUGGY]  _reportInvalidEOF( "msg.illegal.end-of-string ");  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportInvalidEOF( "msg.illegal.end-of-string ");  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportInvalidEOF( "msg.illegal.end-of-string ");	  _reportError(   "msg.illegal.end-of-string   ");    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
99	[BUG]  [BUGGY]  _reportError( "msg.undef.characterEndmarker ");  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "msg.undef.characterEndmarker ");  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "msg.undef.characterEndmarker ");	  _reportError(   "msg.undef.characterEndMarker   ");    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
100	[BUG]  [BUGGY]  _reportError( "msg.undef.characterEndMarker:  was  expecting  closing  statement ");  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "msg.undef.characterEndMarker:  was  expecting  closing  statement ");  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "msg.undef.characterEndMarker:  was  expecting  closing  statement ");	  _reportError(   "msg.undef.characterEndMarker   ");    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
101	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameUnexpectedName(i));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameUnexpectedName(i));  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_nameUnexpectedName(i));	  _reportError(   "Current    context    not    an    object    but   "+_handleUnexpectedName(i));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
102	[BUG]  [BUGGY]  _reportError( "msg.illegal.end-of-char ");  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "msg.illegal.end-of-char ");  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "msg.illegal.end-of-char ");	  _reportMismatchedEndMarker(i,'{    ');    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
103	[BUG]  [BUGGY]  _reportError( "Msg.illegal.character ");  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Msg.illegal.character ");  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Msg.illegal.character ");	  _reportError(   "msg.illegal.character   ");    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
104	[BUG]  [BUGGY]  _reportError( "Current  token( "+i+ ")not  an  IllegalArgumentException ");  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  token( "+i+ ")not  an  IllegalArgumentException ");  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  token( "+i+ ")not  an  IllegalArgumentException ");	  _reportError(   "msg.illegal.character   ");    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
105	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol  + "  but "+_handleUnknownName(i));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol  + "  but "+_handleUnknownName(i));  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_nameInputCol  + "  but "+_handleUnknownName(i));	  _reportError(   "Current    context    not    an    object    but   "+_handleUnknownName(i));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
106	[BUG]  [BUGGY]  _reportInvalidEOF(i, "was  expecting  a  string  value ");  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportInvalidEOF(i, "was  expecting  a  string  value ");  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportInvalidEOF(i, "was  expecting  a  string  value ");	  _reportUnexpectedChar(i,   "was    expecting    a    string    value   ");    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
107	[BUG]  [BUGGY]  if(i!=  INT_QUOTE)  {  _parsingContext.setCurrentName(i);  }  else  {  _parsingContext.removeChild(i);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  if(i!=  INT_QUOTE)  {  _parsingContext.setCurrentName(i);  }  else  {  _parsingContext.removeChild(i);  }  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	if(i!=  INT_QUOTE)  {  _parsingContext.setCurrentName(i);  }  else  {  _parsingContext.removeChild(i);  }	  _parsingContext.setCurrentName(i);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
108	[BUG]  [BUGGY]  _reportMismatchedStartMarker(i,  '[',  _parsingContext);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportMismatchedStartMarker(i,  '[',  _parsingContext);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportMismatchedStartMarker(i,  '[',  _parsingContext);	  _reportMismatchedStartMarker(i,    '[');    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
109	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol  + ",  but "+_handleOddName(i),  _nameInputCol);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol  + ",  but "+_handleOddName(i),  _nameInputCol);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_nameInputCol  + ",  but "+_handleOddName(i),  _nameInputCol);	  _reportError(   "Current    context    not    an    object    but   "+_handleOddName(i),    _nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
110	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol+ ",  ']');  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol+ ",  ']');  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_nameInputCol+ ",  ']');	  _reportError(   "Current    context    not    an    object    but   "+_handleOddName(i),    ']');    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
111	[BUG]  [BUGGY]  i  =  _skipChildren();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  i  =  _skipChildren();  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	i  =  _skipChildren();	  i    =    _skipComma(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
112	[BUG]  [BUGGY]  i  =  _parsingContext.next();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  i  =  _parsingContext.next();  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	i  =  _parsingContext.next();	  i    =    _skipComma(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
113	[BUG]  [BUGGY]  i  =  _skipEndComma(i);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  i  =  _skipEndComma(i);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	i  =  _skipEndComma(i);	  i    =    _skipComma(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
114	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_parsingContext.getMessage());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_parsingContext.getMessage());  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_parsingContext.getMessage());	  _reportError(   "Current    context    not    an    ARRAY    but   "+_parsingContext.getTypeDesc());    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
115	[BUG]  [BUGGY]  _parsingContext.setLocation(i,  null,  _handleOddName(i));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext.setLocation(i,  null,  _handleOddName(i));  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext.setLocation(i,  null,  _handleOddName(i));	  _parsingContext.setLocation(i,    null);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
116	[BUG]  [BUGGY]  _parsingContext.setLocation(i,  null,  _nameInputCol);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext.setLocation(i,  null,  _nameInputCol);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext.setLocation(i,  null,  _nameInputCol);	  _parsingContext.setLocation(i,    null);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
117	[BUG]  [BUGGY]  _parsingContext.setLocation(i,  null,  _currToken);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext.setLocation(i,  null,  _currToken);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext.setLocation(i,  null,  _currToken);	  _parsingContext.setLocation(i,    null);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
118	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol  + ",  but "+_handleOddName(i),  _nameInputTotal);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol  + ",  but "+_handleOddName(i),  _nameInputTotal);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_nameInputCol  + ",  but "+_handleOddName(i),  _nameInputTotal);	  _reportError(   "Current    context    not    an    object    but   "+_handleOddName(i),    _nameInputTotal);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
119	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol  + ",  but "+_nameInputTotal);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol  + ",  but "+_nameInputTotal);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_nameInputCol  + ",  but "+_nameInputTotal);	  _reportError(   "Current    context    not    an    object    but   "+_handleOddName(i),    _nameInputTotal);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
120	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol  + "  but "+i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  object  but "+_nameInputCol  + "  but "+i);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  object  but "+_nameInputCol  + "  but "+i);	  _reportError(   "Current    context    not    an    object    but   "+_nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
121	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  instance  of  type: "+_nameInputCol.getMessage());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  instance  of  type: "+_nameInputCol.getMessage());  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  instance  of  type: "+_nameInputCol.getMessage());	  _reportError(   "Current    context    not    an    instance    of    type:   "+_nameInputCol);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
122	[BUG]  [BUGGY]  _parsingContext.setLocation(i  +  1,  _handleOddName(i));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext.setLocation(i  +  1,  _handleOddName(i));  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext.setLocation(i  +  1,  _handleOddName(i));	  _parsingContext.setLocation(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
123	[BUG]  [BUGGY]  _parsingContext.setLocation(i  +  1,  _nameInputBuffer);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _parsingContext.setLocation(i  +  1,  _nameInputBuffer);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_parsingContext.setLocation(i  +  1,  _nameInputBuffer);	  _parsingContext.setLocation(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
124	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_currToken);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_currToken);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_currToken);	  _reportError(   "Current    context    not    an    ARRAY    but   "+_parseName());    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
125	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_nameInputCol);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }  if  (_parsingContext.expectComma())  {  i  =  _skipComma(i);  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_nameInputCol);  [BUGGY]          boolean  inObject  =  _parsingContext.inObject();  if  (inObject)  {  String  name  =  (i  ==  INT_QUOTE)  ?  _parseName()  :  _handleOddName(i);  _parsingContext.setCurrentName(name);  _currToken  =  JsonToken.FIELD_NAME;  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  _hashSeed  _nameInputCol  _nameInputRow  bits  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameInputTotal  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	622	622	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_nameInputCol);	  _reportError(   "Current    context    not    an    ARRAY    but   "+_parseName());    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
