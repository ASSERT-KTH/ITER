bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  hash  =  ptr;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  protected  final  String  _parseName()  throws  IOException  {    int  ptr  =  _inputPtr;  [BUGGY]  int  hash  =  ptr;  [BUGGY]  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  ' "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1594	1594	1	replace	int  hash  =  ptr;	int  hash  =  _hashSeed;  	non-compiled	[CE]  illegal  start  of  type	99	None	replace
2	[BUG]  [BUGGY]  int  hash  =  0;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  protected  final  String  _parseName()  throws  IOException  {    int  ptr  =  _inputPtr;  [BUGGY]  int  hash  =  0;  [BUGGY]  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  ' "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1594	1594	1	replace	int  hash  =  0;	int  hash  =  _hashSeed;  	non-compiled	[CE]  illegal  start  of  type	99	None	replace
3	[BUG]  [BUGGY]  int  hash  =  _inputEnd;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  protected  final  String  _parseName()  throws  IOException  {    int  ptr  =  _inputPtr;  [BUGGY]  int  hash  =  _inputEnd;  [BUGGY]  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  ' "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1594	1594	1	replace	int  hash  =  _inputEnd;	int  hash  =  _hashSeed;  	non-compiled	[CE]  illegal  start  of  type	99	None	replace
4	[BUG]  [BUGGY]  int  hash  =  _hashSeed  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  protected  final  String  _parseName()  throws  IOException  {    int  ptr  =  _inputPtr;  [BUGGY]  int  hash  =  _hashSeed  +  1;  [BUGGY]  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  ' "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1594	1594	1	replace	int  hash  =  _hashSeed  +  1;	int  hash  =  _hashSeed;  	non-compiled	[CE]  illegal  start  of  type	99	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  protected  final  String  _parseName()  throws  IOException  {    int  ptr  =  _inputPtr;  [BUGGY]    [BUGGY]  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  ' "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1594	1594	1	replace	  	int  hash  =  _hashSeed;  	non-compiled	[CE]  illegal  start  of  type	99	None	replace
6	[BUG]  [BUGGY]  int  hash  =  _inputPtr;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  protected  final  String  _parseName()  throws  IOException  {    int  ptr  =  _inputPtr;  [BUGGY]  int  hash  =  _inputPtr;  [BUGGY]  final  int[]  codes  =  _icLatin1;  while  (ptr  <  _inputEnd)  {  int  ch  =  _inputBuffer[ptr];  if  (ch  <  codes.length  &&  codes[ch]  !=  0)  {  if  (ch  ==  ' "')  {  int  start  =  _inputPtr;  _inputPtr  =  ptr+1;  //  to  skip  the  quote  return  _symbols.findSymbol(_inputBuffer,  start,  ptr  -  start,  hash);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseName  [RETURN_TYPE]  String  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameInputCol  _nameInputRow  bits  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  hash  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameInputTotal  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore12/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	1594	1594	1	replace	int  hash  =  _inputPtr;	int  hash  =  _hashSeed;  	non-compiled	[CE]  illegal  start  of  type	99	None	replace
