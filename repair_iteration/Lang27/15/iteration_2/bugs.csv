bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos  +  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos  +  1);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.indexOf('  ',  expPos  +  1);	      int    expPos    =    str.indexOf('    ',    expPos);    	non-compiled	[CE]  not  a  statement	9	None	replace
2	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('  ',  expPos);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.lastIndexOf('  ',  expPos);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.lastIndexOf('  ',  expPos);	      int    expPos    =    str.indexOf('    ',    expPos);    	non-compiled	[CE]  not  a  statement	9	None	replace
3	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  decPos);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.indexOf('  ',  decPos);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.indexOf('  ',  decPos);	      int    expPos    =    str.indexOf('    ',    expPos);    	non-compiled	[CE]  not  a  statement	9	None	replace
4	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos  +  2);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos  +  2);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.indexOf('  ',  expPos  +  2);	      int    expPos    =    str.indexOf('    ',    expPos);    	non-compiled	[CE]  not  a  statement	9	None	replace
5	[BUG]  [BUGGY]  Mant  =  str.substring(0,  expPos);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  Mant  =  str.substring(0,  expPos);  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	Mant  =  str.substring(0,  expPos);	      	non-compiled	[CE]  not  a  statement	5	None	replace
6	[BUG]  [BUGGY]  expPos  =  str.indexOf('.')+  1;  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  expPos  =  str.indexOf('.')+  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	expPos  =  str.indexOf('.')+  1;	      if(expPos    >    -1)    {    expPos    =    str.indexOf('.')+    1;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
7	[BUG]  [BUGGY]  Expression  expPos  =  str.indexOf('.')+  1;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  Expression  expPos  =  str.indexOf('.')+  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	Expression  expPos  =  str.indexOf('.')+  1;	      if(expPos    >    -1)    {    expPos    =    str.indexOf('.')+    1;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
8	[BUG]  [BUGGY]  ExpPos  expPos  =  str.indexOf('.')+  1;  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  ExpPos  expPos  =  str.indexOf('.')+  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	ExpPos  expPos  =  str.indexOf('.')+  1;	      if(expPos    >    -1)    {    expPos    =    str.indexOf('.')+    1;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
9	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  1);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  1);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  +  1);	      int    expPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	7	None	replace
10	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  -  1);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  -  1);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  -  1);	      int    expPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	7	None	replace
11	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos);	      int    expPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	7	None	replace
12	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  expPos  +  1;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  expPos  +  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.lastIndexOf('.')+  expPos  +  1;	      int    expPos    =    str.lastIndexOf('.')+    expPos;    	non-compiled	[CE]  not  a  statement	8	None	replace
13	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  1;  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.lastIndexOf('.')+  1;	      int    expPos    =    str.lastIndexOf('.')+    expPos;    	non-compiled	[CE]  not  a  statement	8	None	replace
14	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  expPos;  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.indexOf('.')+  expPos;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.indexOf('.')+  expPos;	      int    expPos    =    str.lastIndexOf('.')+    expPos;    	non-compiled	[CE]  not  a  statement	8	None	replace
15	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  decPos;  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  decPos;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.lastIndexOf('.')+  decPos;	      int    expPos    =    str.lastIndexOf('.')+    expPos;    	non-compiled	[CE]  not  a  statement	8	None	replace
16	[BUG]  [BUGGY]  expPos  =  str.length();  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  expPos  =  str.length();  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	expPos  =  str.length();	      if(expPos    >    -1)    {    expPos    =    str.length();    }    	non-compiled	[CE]  not  a  statement	14	None	replace
17	[BUG]  [BUGGY]  ExpPos  expPos  =  str.length();  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  ExpPos  expPos  =  str.length();  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	ExpPos  expPos  =  str.length();	      if(expPos    >    -1)    {    expPos    =    str.length();    }    	non-compiled	[CE]  not  a  statement	14	None	replace
18	[BUG]  [BUGGY]  Expression  expPos  =  str.length();  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  Expression  expPos  =  str.length();  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	Expression  expPos  =  str.length();	      if(expPos    >    -1)    {    expPos    =    str.length();    }    	non-compiled	[CE]  not  a  statement	14	None	replace
19	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos);  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  expPos);  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	mant  =  str.substring(0,  expPos  +  1,  expPos);	  mant    =    str.substring(0,    expPos    +    1);    	non-compiled	[CE]  not  a  statement	1	None	replace
20	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1).trim();  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  mant  =  str.substring(0,  expPos  +  1).trim();  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	mant  =  str.substring(0,  expPos  +  1).trim();	  mant    =    str.substring(0,    expPos    +    1);    	non-compiled	[CE]  not  a  statement	1	None	replace
21	[BUG]  [BUGGY]  String  expPos  =  str.indexOf('.')+  2;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  String  expPos  =  str.indexOf('.')+  2;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	String  expPos  =  str.indexOf('.')+  2;	      String    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	13	None	replace
22	[BUG]  [BUGGY]  String  expPos  =  str.indexOf('.')+  0;  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  String  expPos  =  str.indexOf('.')+  0;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	String  expPos  =  str.indexOf('.')+  0;	      String    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	13	None	replace
23	[BUG]  [BUGGY]  String  expPos  =  str.lastIndexOf('.')+  1;  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  String  expPos  =  str.lastIndexOf('.')+  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	String  expPos  =  str.lastIndexOf('.')+  1;	      String    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	13	None	replace
24	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('  ')+  1;  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.lastIndexOf('  ')+  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.lastIndexOf('  ')+  1;	      int    expPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  not  a  statement	11	None	replace
25	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ')+  2;  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.indexOf('  ')+  2;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.indexOf('  ')+  2;	      int    expPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  not  a  statement	11	None	replace
26	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ')/  1;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.indexOf('  ')/  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.indexOf('  ')/  1;	      int    expPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  not  a  statement	11	None	replace
27	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1  +  1);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  mant  =  str.substring(0,  expPos  -  1  +  1);  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	mant  =  str.substring(0,  expPos  -  1  +  1);	  mant    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	2	None	replace
28	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  expPos);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  expPos);  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	mant  =  str.substring(0,  expPos  -  1,  expPos);	  mant    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	2	None	replace
29	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.indexOf('.',  expPos  +  1);	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	17	None	replace
30	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  -  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  -  1);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.indexOf('.',  expPos  -  1);	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	17	None	replace
31	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.indexOf('.',  decPos);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.indexOf('.',  decPos);	      int    expPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	16	None	replace
32	[BUG]  [BUGGY]  int  expPos  =  str.length()  -  1;  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.length()  -  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.length()  -  1;	      int    expPos    =    str.length();    	non-compiled	[CE]  not  a  statement	10	None	replace
33	[BUG]  [BUGGY]  int  expPos  =  str.length()  +  1;  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.length()  +  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.length()  +  1;	      int    expPos    =    str.length();    	non-compiled	[CE]  not  a  statement	10	None	replace
34	[BUG]  [BUGGY]  mant  =  str.substring(1,  expPos  +  1);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  mant  =  str.substring(1,  expPos  +  1);  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	mant  =  str.substring(1,  expPos  +  1);	  mant    =    str.substring(1,    expPos);    	non-compiled	[CE]  not  a  statement	3	None	replace
35	[BUG]  [BUGGY]  mant  =  str.substring(1,  expPos  -  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  mant  =  str.substring(1,  expPos  -  1);  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	mant  =  str.substring(1,  expPos  -  1);	  mant    =    str.substring(1,    expPos);    	non-compiled	[CE]  not  a  statement	3	None	replace
36	[BUG]  [BUGGY]  mant  =  str.substring(1,  expPos  +  2);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  mant  =  str.substring(1,  expPos  +  2);  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	mant  =  str.substring(1,  expPos  +  2);	  mant    =    str.substring(1,    expPos);    	non-compiled	[CE]  not  a  statement	3	None	replace
37	[BUG]  [BUGGY]  expPos  =  str.indexOf('.',  expPos);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  expPos  =  str.indexOf('.',  expPos);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	expPos  =  str.indexOf('.',  expPos);	      if(expPos    >    -1)    {    expPos    =    str.indexOf('.',    expPos);    }    	non-compiled	[CE]  not  a  statement	15	None	replace
38	[BUG]  [BUGGY]  Expression  expPos  =  str.indexOf('.',  expPos);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  Expression  expPos  =  str.indexOf('.',  expPos);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	Expression  expPos  =  str.indexOf('.',  expPos);	      if(expPos    >    -1)    {    expPos    =    str.indexOf('.',    expPos);    }    	non-compiled	[CE]  not  a  statement	15	None	replace
39	[BUG]  [BUGGY]  ExpPos  =  str.indexOf('.',  expPos);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  ExpPos  =  str.indexOf('.',  expPos);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	ExpPos  =  str.indexOf('.',  expPos);	      if(expPos    >    -1)    {    expPos    =    str.indexOf('.',    expPos);    }    	non-compiled	[CE]  not  a  statement	15	None	replace
40	[BUG]  [BUGGY]  mant  =  str.substring(expPos  +  1,  expPos);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  mant  =  str.substring(expPos  +  1,  expPos);  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	mant  =  str.substring(expPos  +  1,  expPos);	      	non-compiled	[CE]  not  a  statement	5	None	replace
41	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1).trim();  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  mant  =  str.substring(0,  expPos  -  1).trim();  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	mant  =  str.substring(0,  expPos  -  1).trim();	  mant    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	2	None	replace
42	[BUG]  [BUGGY]  ExpPos  expPos  =  str.indexOf('.',  expPos);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  ExpPos  expPos  =  str.indexOf('.',  expPos);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	ExpPos  expPos  =  str.indexOf('.',  expPos);	      if(expPos    >    -1)    {    expPos    =    str.indexOf('.',    expPos);    }    	non-compiled	[CE]  not  a  statement	15	None	replace
43	[BUG]  [BUGGY]  String  expPos  =  str.indexOf('.',  expPos)+  1;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  String  expPos  =  str.indexOf('.',  expPos)+  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	String  expPos  =  str.indexOf('.',  expPos)+  1;	      String    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	13	None	replace
44	[BUG]  [BUGGY]  ExpPos  =  str.indexOf('.')+  1;  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  ExpPos  =  str.indexOf('.')+  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	ExpPos  =  str.indexOf('.')+  1;	      if(expPos    >    -1)    {    expPos    =    str.indexOf('.')+    1;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
45	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('  ',  expPos);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  Integer  expPos  =  str.indexOf('  ',  expPos);  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	Integer  expPos  =  str.indexOf('  ',  expPos);	      int    expPos    =    str.indexOf('    ',    expPos);    	non-compiled	[CE]  not  a  statement	9	None	replace
46	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  1;  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.indexOf('.')+  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.indexOf('.')+  1;	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	17	None	replace
47	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)+  1;  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)+  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.indexOf('  ',  expPos)+  1;	      int    expPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  not  a  statement	11	None	replace
48	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)+  1;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)+  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos)+  1;	      int    expPos    =    str.lastIndexOf('.')+    expPos;    	non-compiled	[CE]  not  a  statement	8	None	replace
49	[BUG]  [BUGGY]  String  expPos  =  str.indexOf('.')/  1;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  String  expPos  =  str.indexOf('.')/  1;  [BUGGY]    mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	String  expPos  =  str.indexOf('.')/  1;	      String    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	13	None	replace
50	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos).trim();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {    [BUGGY]  mant  =  str.substring(0,  expPos).trim();  [BUGGY]    }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	mant  =  str.substring(0,  expPos).trim();	      	non-compiled	[CE]  not  a  statement	5	None	replace
