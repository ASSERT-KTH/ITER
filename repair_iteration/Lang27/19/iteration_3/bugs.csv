bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  str.substring(0,  f.length()  -  1,  f.length());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  str.substring(0,  f.length()  -  1,  f.length());  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  str.substring(0,  f.length()  -  1,  f.length());	  return    f.substring(0,    f.length()    -    1,    f.length());    	non-compiled	[CE]  not  a  statement	59	None	replace
2	[BUG]  [BUGGY]  return  f.substring(0,  f.length()  -  1,  f.length()  -  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.substring(0,  f.length()  -  1,  f.length()  -  1);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.substring(0,  f.length()  -  1,  f.length()  -  1);	  return    f.substring(0,    f.length()    -    1,    f.length());    	non-compiled	[CE]  not  a  statement	59	None	replace
3	[BUG]  [BUGGY]  String  f  =  f.substring(0,  f.length()  -  1,  f.length());  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  f  =  f.substring(0,  f.length()  -  1,  f.length());  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  f  =  f.substring(0,  f.length()  -  1,  f.length());	  return    f.substring(0,    f.length()    -    1,    f.length());    	non-compiled	[CE]  not  a  statement	59	None	replace
4	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createInteger(str);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Number  f  =  NumberUtils.createInteger(str);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Number  f  =  NumberUtils.createInteger(str);	  Number    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	17	None	replace
5	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric.doubleValue());  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric.doubleValue());  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Number  f  =  NumberUtils.createInteger(numeric.doubleValue());	  Number    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	17	None	replace
6	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric,  0.0F);  [CE]  not  a  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric,  0.0F);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Number  f  =  NumberUtils.createInteger(numeric,  0.0F);	  Number    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	17	None	replace
7	[BUG]  [BUGGY]  String  str  =  f.substring(0,  f.length());  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  str  =  f.substring(0,  f.length());  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  str  =  f.substring(0,  f.length());	  String    str    =    f.substring(0,    f.length()    -    1);    	non-compiled	[CE]  not  a  statement	24	None	replace
8	[BUG]  [BUGGY]  String  str  =  string.substring(0,  f.length()  -  1);  [CE]  not  a  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  str  =  string.substring(0,  f.length()  -  1);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  str  =  string.substring(0,  f.length()  -  1);	  String    str    =    f.substring(0,    f.length()    -    1);    	non-compiled	[CE]  not  a  statement	24	None	replace
9	[BUG]  [BUGGY]  String  str  =  f.substring(0,  f.length()  +  1);  [CE]  not  a  statement  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  str  =  f.substring(0,  f.length()  +  1);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  str  =  f.substring(0,  f.length()  +  1);	  String    str    =    f.substring(0,    f.length()    -    1);    	non-compiled	[CE]  not  a  statement	24	None	replace
10	[BUG]  [BUGGY]  String  str  =  f.substring(0,  f.length()));  [CE]  not  a  statement  [FE]                              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  str  =  f.substring(0,  f.length()));  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  str  =  f.substring(0,  f.length()));	  String    str    =    f.substring(0,    f.length()    -    1);    	non-compiled	[CE]  not  a  statement	24	None	replace
11	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  Float.POSITIVE_INFINITY,  0.0F);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  Float.POSITIVE_INFINITY,  0.0F);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  Float.POSITIVE_INFINITY,  0.0F);	  Integer    f    =    NumberUtils.createInteger(numeric,    Float.POSITIVE_INFINITY);    	non-compiled	[CE]  not  a  statement	53	None	replace
12	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  Float.MAX_VALUE);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  Float.MAX_VALUE);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  Float.MAX_VALUE);	  Integer    f    =    NumberUtils.createInteger(numeric,    Float.POSITIVE_INFINITY);    	non-compiled	[CE]  not  a  statement	53	None	replace
13	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  1);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  1);	  Integer    f    =    NumberUtils.createInteger(numeric,    Float.POSITIVE_INFINITY);    	non-compiled	[CE]  not  a  statement	53	None	replace
14	[BUG]  [BUGGY]  Double  f  =  NumberUtils.createDouble(numeric);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Double  f  =  NumberUtils.createDouble(numeric);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Double  f  =  NumberUtils.createDouble(numeric);	  Integer    f    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  not  a  statement	18	None	replace
15	[BUG]  [BUGGY]  return  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  str.substring(0,  str.length()  -  1);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  str.substring(0,  str.length()  -  1);	  return    str.toString();    	non-compiled	[CE]  not  a  statement	28	None	replace
16	[BUG]  [BUGGY]  return  str.substring(numeric.length()  -  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  str.substring(numeric.length()  -  1);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  str.substring(numeric.length()  -  1);	  return    str.toString();    	non-compiled	[CE]  not  a  statement	28	None	replace
17	[BUG]  [BUGGY]  return  f.infinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros));  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.infinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros));  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.infinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros));	  return    f.infinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros));    	non-compiled	[CE]  not  a  statement	48	None	replace
18	[BUG]  [BUGGY]  return  f.infinite()  ||(f.floatValue()  ==  0.0D  &&!allZeros));  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.infinite()  ||(f.floatValue()  ==  0.0D  &&!allZeros));  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.infinite()  ||(f.floatValue()  ==  0.0D  &&!allZeros));	  return    f.infinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros));    	non-compiled	[CE]  not  a  statement	48	None	replace
19	[BUG]  [BUGGY]  f  =  NumberUtils.createNumber(str);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  f  =  NumberUtils.createNumber(str);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	f  =  NumberUtils.createNumber(str);	  f    =    NumberUtils.createNumber(numeric);    	non-compiled	[CE]  not  a  statement	27	None	replace
20	[BUG]  [BUGGY]  f  =  NumberUtils.createNumber(numeric,  str);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  f  =  NumberUtils.createNumber(numeric,  str);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	f  =  NumberUtils.createNumber(numeric,  str);	  f    =    NumberUtils.createNumber(numeric);    	non-compiled	[CE]  not  a  statement	27	None	replace
21	[BUG]  [BUGGY]  return(f.doubleValue()  >=  0.0F)?  f.doubleValue()  :  f.doubleValue();  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return(f.doubleValue()  >=  0.0F)?  f.doubleValue()  :  f.doubleValue();  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return(f.doubleValue()  >=  0.0F)?  f.doubleValue()  :  f.doubleValue();	  return    f.doubleValue()    +    2;    	non-compiled	[CE]  not  a  statement	20	None	replace
22	[BUG]  [BUGGY]  return(f.doubleValue()  ==  0.0F)?  f.doubleValue()  :  f.doubleValue();  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return(f.doubleValue()  ==  0.0F)?  f.doubleValue()  :  f.doubleValue();  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return(f.doubleValue()  ==  0.0F)?  f.doubleValue()  :  f.doubleValue();	  return    f.doubleValue()    +    2;    	non-compiled	[CE]  not  a  statement	20	None	replace
23	[BUG]  [BUGGY]  return(f.doubleValue()  ==  0.0F)?  f.doubleValue()  :  0;  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return(f.doubleValue()  ==  0.0F)?  f.doubleValue()  :  0;  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return(f.doubleValue()  ==  0.0F)?  f.doubleValue()  :  0;	  return    f.doubleValue()    +    2;    	non-compiled	[CE]  not  a  statement	20	None	replace
24	[BUG]  [BUGGY]  return  f.infinite()  &&  f.floatValue()  ==  0.0F  &&!allZeros)?  null  :  f.infinite();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.infinite()  &&  f.floatValue()  ==  0.0F  &&!allZeros)?  null  :  f.infinite();  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.infinite()  &&  f.floatValue()  ==  0.0F  &&!allZeros)?  null  :  f.infinite();	  return    f.infinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros)?    null    :    f.infinite();    	non-compiled	[CE]  not  a  statement	15	None	replace
25	[BUG]  [BUGGY]  return  f.infinite()  ||  f.floatValue()  ==  0.0F  &&!AllZeros)?  null  :  f.infinite();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.infinite()  ||  f.floatValue()  ==  0.0F  &&!AllZeros)?  null  :  f.infinite();  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.infinite()  ||  f.floatValue()  ==  0.0F  &&!AllZeros)?  null  :  f.infinite();	  return    f.infinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros)?    null    :    f.infinite();    	non-compiled	[CE]  not  a  statement	15	None	replace
26	[BUG]  [BUGGY]  f  =  NumberUtils.createBigDecimal(numeric);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  f  =  NumberUtils.createBigDecimal(numeric);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	f  =  NumberUtils.createBigDecimal(numeric);	  f    =    NumberUtils.createBigInteger(numeric);    	non-compiled	[CE]  not  a  statement	51	None	replace
27	[BUG]  [BUGGY]  f  =  NumberUtils.createBigInteger(f);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  f  =  NumberUtils.createBigInteger(f);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	f  =  NumberUtils.createBigInteger(f);	  f    =    NumberUtils.createBigInteger(numeric);    	non-compiled	[CE]  not  a  statement	51	None	replace
28	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  str  =  str.substring(0,  str.length());	  String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	22	None	replace
29	[BUG]  [BUGGY]  String  str  =  str.substring(0,  f.length()  -  1);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  str  =  str.substring(0,  f.length()  -  1);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  str  =  str.substring(0,  f.length()  -  1);	  String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	22	None	replace
30	[BUG]  [BUGGY]  String  str  =  str.substring(0,  f.length());  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  str  =  str.substring(0,  f.length());  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  str  =  str.substring(0,  f.length());	  String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	22	None	replace
31	[BUG]  [BUGGY]  String  str  =  f.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  str  =  f.substring(0,  str.length()  -  1);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  str  =  f.substring(0,  str.length()  -  1);	  String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	22	None	replace
32	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createFloat(numeric,  0.0);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Number  f  =  NumberUtils.createFloat(numeric,  0.0);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Number  f  =  NumberUtils.createFloat(numeric,  0.0);	  Number    f    =    NumberUtils.createFloat(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	44	None	replace
33	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  +  2);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  +  2);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Float  f  =  NumberUtils.createFloat(numeric  +  2);	  Float    f    =    NumberUtils.createFloat(numeric    +    1);    	non-compiled	[CE]  not  a  statement	38	None	replace
34	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  +  1L);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  +  1L);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Float  f  =  NumberUtils.createFloat(numeric  +  1L);	  Float    f    =    NumberUtils.createFloat(numeric    +    1);    	non-compiled	[CE]  not  a  statement	38	None	replace
35	[BUG]  [BUGGY]  double  f  =  NumberUtils.createInteger(numeric);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  double  f  =  NumberUtils.createInteger(numeric);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	double  f  =  NumberUtils.createInteger(numeric);	  float    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	34	None	replace
36	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  throw  new  NumberFormatException( " ");  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  throw  new  NumberFormatException( " ");  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	41	None	replace
37	[BUG]  [BUGGY]  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  throw  new  NumberFormatException( " ");  }  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  throw  new  NumberFormatException( " ");  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	41	None	replace
38	[BUG]  [BUGGY]  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  throw  new  NumberFormatException( " ");  }  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  throw  new  NumberFormatException( " ");  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	41	None	replace
39	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  NumberUtils.createLong(numeric);  }  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  NumberUtils.createLong(numeric);  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  NumberUtils.createLong(numeric);  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    NumberUtils.createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	56	None	replace
40	[BUG]  [BUGGY]  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  NumberUtils.createLong(numeric);  }  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  NumberUtils.createLong(numeric);  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  NumberUtils.createLong(numeric);  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    NumberUtils.createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	56	None	replace
41	[BUG]  [BUGGY]  if(!f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  NumberUtils.createLong(numeric);  }  [CE]  not  a  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  NumberUtils.createLong(numeric);  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  NumberUtils.createLong(numeric);  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    NumberUtils.createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	56	None	replace
42	[BUG]  [BUGGY]  return  f.toLowerCase(Long.MAX_VALUE);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.toLowerCase(Long.MAX_VALUE);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.toLowerCase(Long.MAX_VALUE);	  return    f.toLowerCase();    	non-compiled	[CE]  not  a  statement	29	None	replace
43	[BUG]  [BUGGY]  return  f.toLowerCase(LONG_MINUS_ONE);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.toLowerCase(LONG_MINUS_ONE);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.toLowerCase(LONG_MINUS_ONE);	  return    f.toLowerCase();    	non-compiled	[CE]  not  a  statement	29	None	replace
44	[BUG]  [BUGGY]  return  f.toLowerCase(Long.MIN_VALUE);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.toLowerCase(Long.MIN_VALUE);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.toLowerCase(Long.MIN_VALUE);	  return    f.toLowerCase();    	non-compiled	[CE]  not  a  statement	29	None	replace
45	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0.0);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0.0);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  0.0);	  Float    f    =    NumberUtils.createFloat(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	37	None	replace
46	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  0.0F);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  0.0F);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	float  f  =  NumberUtils.createFloat(numeric,  0.0F);	  Float    f    =    NumberUtils.createFloat(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	37	None	replace
47	[BUG]  [BUGGY]  double  f  =  NumberUtils.createDouble(str);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  double  f  =  NumberUtils.createDouble(str);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	double  f  =  NumberUtils.createDouble(str);	  double    f    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  not  a  statement	52	None	replace
48	[BUG]  [BUGGY]  float  f  =  NumberUtils.createDouble(numeric);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  float  f  =  NumberUtils.createDouble(numeric);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	float  f  =  NumberUtils.createDouble(numeric);	  double    f    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  not  a  statement	52	None	replace
49	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createInteger(numeric);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Float  f  =  NumberUtils.createInteger(numeric);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Float  f  =  NumberUtils.createInteger(numeric);	  Float    f    =    NumberUtils.createFloat(str);    	non-compiled	[CE]  not  a  statement	1	None	replace
50	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createLong(numeric);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Float  f  =  NumberUtils.createLong(numeric);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Float  f  =  NumberUtils.createLong(numeric);	  Float    f    =    NumberUtils.createFloat(str);    	non-compiled	[CE]  not  a  statement	1	None	replace
51	[BUG]  [BUGGY]  float  f  =  NumberUtils.createLong(numeric);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  float  f  =  NumberUtils.createLong(numeric);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	float  f  =  NumberUtils.createLong(numeric);	  float    f    =    NumberUtils.createFloat(str);    	non-compiled	[CE]  not  a  statement	9	None	replace
52	[BUG]  [BUGGY]  f  =  NumberUtils.createFloat(numeric,  0.0);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  f  =  NumberUtils.createFloat(numeric,  0.0);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	f  =  NumberUtils.createFloat(numeric,  0.0);	  f    =    NumberUtils.createFloat(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	45	None	replace
53	[BUG]  [BUGGY]  f  =  NumberUtils.createLong(numeric,  0.0F);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  f  =  NumberUtils.createLong(numeric,  0.0F);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	f  =  NumberUtils.createLong(numeric,  0.0F);	  f    =    NumberUtils.createFloat(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	45	None	replace
54	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInteger(1);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInteger(1);	  Integer    f    =    NumberUtils.createInteger(0);    	non-compiled	[CE]  not  a  statement	8	None	replace
55	[BUG]  [BUGGY]  String  f  =  NumberUtils.createInteger(numeric).toLowerCase(len);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  f  =  NumberUtils.createInteger(numeric).toLowerCase(len);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  f  =  NumberUtils.createInteger(numeric).toLowerCase(len);	  String    f    =    NumberUtils.createInteger(numeric).toLowerCase();    	non-compiled	[CE]  not  a  statement	49	None	replace
56	[BUG]  [BUGGY]  String  f  =  NumberUtils.createInteger(numeric).toLowerCase(f);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  f  =  NumberUtils.createInteger(numeric).toLowerCase(f);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  f  =  NumberUtils.createInteger(numeric).toLowerCase(f);	  String    f    =    NumberUtils.createInteger(numeric).toLowerCase();    	non-compiled	[CE]  not  a  statement	49	None	replace
57	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  NumberUtils.createNumber(numeric);  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  NumberUtils.createNumber(numeric);  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  NumberUtils.createNumber(numeric);  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    NumberUtils.createNumber(numeric);    }    	non-compiled	[CE]  not  a  statement	55	None	replace
58	[BUG]  [BUGGY]  ||(f.floatValue()  ==  0.0F  &&!allZeros))  {  return  NumberUtils.createNumber(numeric);  }  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  ||(f.floatValue()  ==  0.0F  &&!allZeros))  {  return  NumberUtils.createNumber(numeric);  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	||(f.floatValue()  ==  0.0F  &&!allZeros))  {  return  NumberUtils.createNumber(numeric);  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    NumberUtils.createNumber(numeric);    }    	non-compiled	[CE]  not  a  statement	55	None	replace
59	[BUG]  [BUGGY]  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  NumberUtils.createNumber(numeric);  }  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  NumberUtils.createNumber(numeric);  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  NumberUtils.createNumber(numeric);  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    NumberUtils.createNumber(numeric);    }    	non-compiled	[CE]  not  a  statement	55	None	replace
60	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInt(numeric.intValue());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInt(numeric.intValue());  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInt(numeric.intValue());	  Integer    f    =    NumberUtils.createInt(numeric);    	non-compiled	[CE]  not  a  statement	40	None	replace
61	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInt(numeric.doubleValue());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInt(numeric.doubleValue());  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInt(numeric.doubleValue());	  Integer    f    =    NumberUtils.createInt(numeric);    	non-compiled	[CE]  not  a  statement	40	None	replace
62	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return;  }  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return;  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return;  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return;    }    	non-compiled	[CE]  not  a  statement	43	None	replace
63	[BUG]  [BUGGY]  return  str.substring(numeric.length()  -  1,  f.length());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  str.substring(numeric.length()  -  1,  f.length());  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  str.substring(numeric.length()  -  1,  f.length());	  return    f.substring(numeric.length()    -    1,    f.length());    	non-compiled	[CE]  not  a  statement	58	None	replace
64	[BUG]  [BUGGY]  return  f.substring(numeric.length()  +  1,  f.length());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.substring(numeric.length()  +  1,  f.length());  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.substring(numeric.length()  +  1,  f.length());	  return    f.substring(numeric.length()    -    1,    f.length());    	non-compiled	[CE]  not  a  statement	58	None	replace
65	[BUG]  [BUGGY]  return  string.substring(numeric.length()  -  1,  f.length());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  string.substring(numeric.length()  -  1,  f.length());  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  string.substring(numeric.length()  -  1,  f.length());	  return    f.substring(numeric.length()    -    1,    f.length());    	non-compiled	[CE]  not  a  statement	58	None	replace
66	[BUG]  [BUGGY]  return  f.infinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)?  f.infinite()  :  null;  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.infinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)?  f.infinite()  :  null;  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.infinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros)?  f.infinite()  :  null;	  return    f.infinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros)?    f.infinite()    :    null;    	non-compiled	[CE]  not  a  statement	14	None	replace
67	[BUG]  [BUGGY]  return  f.infinite()  ||  f.floatValue()  ==  0.0F  &&!AllZeros)?  f.infinite()  :  null;  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.infinite()  ||  f.floatValue()  ==  0.0F  &&!AllZeros)?  f.infinite()  :  null;  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.infinite()  ||  f.floatValue()  ==  0.0F  &&!AllZeros)?  f.infinite()  :  null;	  return    f.infinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros)?    f.infinite()    :    null;    	non-compiled	[CE]  not  a  statement	14	None	replace
68	[BUG]  [BUGGY]  return  f.infinite()  +  1;  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.infinite()  +  1;  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.infinite()  +  1;	  return    f.longValue()    +    1;    	non-compiled	[CE]  not  a  statement	5	None	replace
69	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric).floatValue();  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  float  f  =  NumberUtils.createFloat(numeric).floatValue();  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	float  f  =  NumberUtils.createFloat(numeric).floatValue();	  Float    f    =    NumberUtils.createFloat(numeric).floatValue();    	non-compiled	[CE]  not  a  statement	54	None	replace
70	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric).doubleValue();  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric).doubleValue();  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Float  f  =  NumberUtils.createFloat(numeric).doubleValue();	  Float    f    =    NumberUtils.createFloat(numeric).floatValue();    	non-compiled	[CE]  not  a  statement	54	None	replace
71	[BUG]  [BUGGY]  return  f.infinite(str);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.infinite(str);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.infinite(str);	  return    f.infinite(numeric);    	non-compiled	[CE]  not  a  statement	31	None	replace
72	[BUG]  [BUGGY]  return  f.infinite(str,  null);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.infinite(str,  null);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.infinite(str,  null);	  return    f.infinite(numeric);    	non-compiled	[CE]  not  a  statement	31	None	replace
73	[BUG]  [BUGGY]  return  f.infinite(numeric,  str);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.infinite(numeric,  str);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.infinite(numeric,  str);	  return    f.infinite(numeric);    	non-compiled	[CE]  not  a  statement	31	None	replace
74	[BUG]  [BUGGY]  return  f.floatValue()  +  1;  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.floatValue()  +  1;  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.floatValue()  +  1;	  return    f.intValue()    +    1;    	non-compiled	[CE]  not  a  statement	12	None	replace
75	[BUG]  [BUGGY]  return  str.doubleValue()  +  1;  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  str.doubleValue()  +  1;  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  str.doubleValue()  +  1;	  return    f.doubleValue()    +    1;    	non-compiled	[CE]  not  a  statement	19	None	replace
76	[BUG]  [BUGGY]  String  f  =  NumberUtils.createInteger(numeric)+  2;  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  f  =  NumberUtils.createInteger(numeric)+  2;  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  f  =  NumberUtils.createInteger(numeric)+  2;	  String    f    =    NumberUtils.createInteger(numeric)+    1;    	non-compiled	[CE]  not  a  statement	33	None	replace
77	[BUG]  [BUGGY]  String  f  =  NumberUtils.createInteger(numeric)+  3;  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  f  =  NumberUtils.createInteger(numeric)+  3;  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  f  =  NumberUtils.createInteger(numeric)+  3;	  String    f    =    NumberUtils.createInteger(numeric)+    1;    	non-compiled	[CE]  not  a  statement	33	None	replace
78	[BUG]  [BUGGY]  String  f  =  NumberUtils.createInteger(numeric)+  4;  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  f  =  NumberUtils.createInteger(numeric)+  4;  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  f  =  NumberUtils.createInteger(numeric)+  4;	  String    f    =    NumberUtils.createInteger(numeric)+    1;    	non-compiled	[CE]  not  a  statement	33	None	replace
79	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  0.0);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  0.0);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  0.0);	  Integer    f    =    NumberUtils.createInteger(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	35	None	replace
80	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  0.0F,  0.0F);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  0.0F,  0.0F);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  0.0F,  0.0F);	  Integer    f    =    NumberUtils.createInteger(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	35	None	replace
81	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  0.0F,  0);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  0.0F,  0);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  0.0F,  0);	  Integer    f    =    NumberUtils.createInteger(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	35	None	replace
82	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(str);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Number  f  =  NumberUtils.createNumber(str);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Number  f  =  NumberUtils.createNumber(str);	  Number    f    =    NumberUtils.createNumber(numeric);    	non-compiled	[CE]  not  a  statement	16	None	replace
83	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  str);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  str);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Number  f  =  NumberUtils.createNumber(numeric,  str);	  Number    f    =    NumberUtils.createNumber(numeric);    	non-compiled	[CE]  not  a  statement	16	None	replace
84	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric.doubleValue());  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric.doubleValue());  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Number  f  =  NumberUtils.createNumber(numeric.doubleValue());	  Number    f    =    NumberUtils.createNumber(numeric);    	non-compiled	[CE]  not  a  statement	16	None	replace
85	[BUG]  [BUGGY]  return  f.infinite()  &&  f.floatValue()  ==  0.0F  &&!allZeros);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.infinite()  &&  f.floatValue()  ==  0.0F  &&!allZeros);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.infinite()  &&  f.floatValue()  ==  0.0F  &&!allZeros);	  return    f.infinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros);    	non-compiled	[CE]  not  a  statement	13	None	replace
86	[BUG]  [BUGGY]  return  f.infinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.infinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.infinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros);	  return    f.infinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros);    	non-compiled	[CE]  not  a  statement	13	None	replace
87	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric).infinite();  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric).infinite();  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInteger(numeric).infinite();	  Integer    f    =    NumberUtils.createInteger(numeric).intValue();    	non-compiled	[CE]  not  a  statement	36	None	replace
88	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric).doubleValue();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric).doubleValue();  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInteger(numeric).doubleValue();	  Integer    f    =    NumberUtils.createInteger(numeric).intValue();    	non-compiled	[CE]  not  a  statement	36	None	replace
89	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ");  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.   ");	  throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	23	None	replace
90	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  null;  }  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  null;  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  null;  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    null;    }    	non-compiled	[CE]  not  a  statement	42	None	replace
91	[BUG]  [BUGGY]  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  null;  }  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  null;  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  null;  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    null;    }    	non-compiled	[CE]  not  a  statement	42	None	replace
92	[BUG]  [BUGGY]  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  null;  }  [CE]  not  a  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  null;  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	||  f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)  {  return  null;  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    null;    }    	non-compiled	[CE]  not  a  statement	42	None	replace
93	[BUG]  [BUGGY]  f  =  NumberUtils.createInteger(numeric,  0.0F,  Float.parseFloat(f.floatValue()));  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  f  =  NumberUtils.createInteger(numeric,  0.0F,  Float.parseFloat(f.floatValue()));  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	f  =  NumberUtils.createInteger(numeric,  0.0F,  Float.parseFloat(f.floatValue()));	  f    =    NumberUtils.createInteger(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	47	None	replace
94	[BUG]  [BUGGY]  f  =  NumberUtils.createInteger(numeric,  0.0);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  f  =  NumberUtils.createInteger(numeric,  0.0);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	f  =  NumberUtils.createInteger(numeric,  0.0);	  f    =    NumberUtils.createInteger(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	47	None	replace
95	[BUG]  [BUGGY]  f  =  NumberUtils.createInteger(numeric,  0.0F,  Float.floatValue());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  f  =  NumberUtils.createInteger(numeric,  0.0F,  Float.floatValue());  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	f  =  NumberUtils.createInteger(numeric,  0.0F,  Float.floatValue());	  f    =    NumberUtils.createInteger(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	47	None	replace
96	[BUG]  [BUGGY]  return  f.toString()  +  mant;  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.toString()  +  mant;  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.toString()  +  mant;	  return    f.toString()    +    str;    	non-compiled	[CE]  not  a  statement	30	None	replace
97	[BUG]  [BUGGY]  return  str.toString()  +  f;  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  str.toString()  +  f;  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  str.toString()  +  f;	  return    f.toString()    +    str;    	non-compiled	[CE]  not  a  statement	30	None	replace
98	[BUG]  [BUGGY]  return  f.toString()  +  str.charAt(str.length()  -  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.toString()  +  str.charAt(str.length()  -  1);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.toString()  +  str.charAt(str.length()  -  1);	  return    f.toString()    +    str;    	non-compiled	[CE]  not  a  statement	30	None	replace
99	[BUG]  [BUGGY]  return  f.toString()  +  str.charAt(0);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.toString()  +  str.charAt(0);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.toString()  +  str.charAt(0);	  return    f.toString()    +    str;    	non-compiled	[CE]  not  a  statement	30	None	replace
100	[BUG]  [BUGGY]  String  f  =  NumberUtils.createString(numeric);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  f  =  NumberUtils.createString(numeric);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  f  =  NumberUtils.createString(numeric);	  String    f    =    NumberUtils.createInteger(str);    	non-compiled	[CE]  not  a  statement	3	None	replace
101	[BUG]  [BUGGY]  String  f  =  NumberUtils.createLong(numeric);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  f  =  NumberUtils.createLong(numeric);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  f  =  NumberUtils.createLong(numeric);	  String    f    =    NumberUtils.createInteger(str);    	non-compiled	[CE]  not  a  statement	3	None	replace
102	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.doubleValue());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.doubleValue());  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInteger(numeric.doubleValue());	  Integer    f    =    NumberUtils.createInteger(numeric.intValue());    	non-compiled	[CE]  not  a  statement	7	None	replace
103	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue()  +  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue()  +  1);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInteger(numeric.intValue()  +  1);	  Integer    f    =    NumberUtils.createInteger(numeric.intValue());    	non-compiled	[CE]  not  a  statement	7	None	replace
104	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.floatValue());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.floatValue());  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInteger(numeric.floatValue());	  Integer    f    =    NumberUtils.createInteger(numeric.intValue());    	non-compiled	[CE]  not  a  statement	7	None	replace
105	[BUG]  [BUGGY]  return  f.toString(str);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.toString(str);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.toString(str);	  return    f.toString(numeric);    	non-compiled	[CE]  not  a  statement	39	None	replace
106	[BUG]  [BUGGY]  return  f.toString(numeric,  str);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.toString(numeric,  str);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.toString(numeric,  str);	  return    f.toString(numeric);    	non-compiled	[CE]  not  a  statement	39	None	replace
107	[BUG]  [BUGGY]  return  f.infinite()  &&  f.floatValue()  ==  0.0F  &&!allZeros)  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.infinite()  &&  f.floatValue()  ==  0.0F  &&!allZeros)  {  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.infinite()  &&  f.floatValue()  ==  0.0F  &&!allZeros)  {	  return    f.infinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros)    {    	non-compiled	[CE]  not  a  statement	32	None	replace
108	[BUG]  [BUGGY]  return  f.infinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros))  {  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.infinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros))  {  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.infinite()  ||  (f.floatValue()  ==  0.0F  &&!allZeros))  {	  return    f.infinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros)    {    	non-compiled	[CE]  not  a  statement	32	None	replace
109	[BUG]  [BUGGY]  return  f.substring(0,  f.length());  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.substring(0,  f.length());  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.substring(0,  f.length());	  return    f.substring(0,    f.length()    -    1);    	non-compiled	[CE]  not  a  statement	57	None	replace
110	[BUG]  [BUGGY]  return  str.substring(0,  f.length()  -  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  str.substring(0,  f.length()  -  1);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  str.substring(0,  f.length()  -  1);	  return    f.substring(0,    f.length()    -    1);    	non-compiled	[CE]  not  a  statement	57	None	replace
111	[BUG]  [BUGGY]  return  string.substring(0,  f.length()  -  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  string.substring(0,  f.length()  -  1);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  string.substring(0,  f.length()  -  1);	  return    f.substring(0,    f.length()    -    1);    	non-compiled	[CE]  not  a  statement	57	None	replace
112	[BUG]  [BUGGY]  return  String.valueOf(f.substring(0,  f.length()  -  1));  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  String.valueOf(f.substring(0,  f.length()  -  1));  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  String.valueOf(f.substring(0,  f.length()  -  1));	  return    f.substring(0,    f.length()    -    1);    	non-compiled	[CE]  not  a  statement	57	None	replace
113	[BUG]  [BUGGY]  String  f  =  NumberUtils.createInteger(numeric,  0.0);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  f  =  NumberUtils.createInteger(numeric,  0.0);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  f  =  NumberUtils.createInteger(numeric,  0.0);	  String    f    =    NumberUtils.createInteger(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	4	None	replace
114	[BUG]  [BUGGY]  String  f  =  NumberUtils.createInteger(numeric,  1.0);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  f  =  NumberUtils.createInteger(numeric,  1.0);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  f  =  NumberUtils.createInteger(numeric,  1.0);	  String    f    =    NumberUtils.createInteger(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	4	None	replace
115	[BUG]  [BUGGY]  String  f  =  NumberUtils.createInteger(numeric,  0.0F,  0.0F);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  f  =  NumberUtils.createInteger(numeric,  0.0F,  0.0F);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  f  =  NumberUtils.createInteger(numeric,  0.0F,  0.0F);	  String    f    =    NumberUtils.createInteger(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	4	None	replace
116	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  mant);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  mant);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  mant);	  Float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  not  a  statement	2	None	replace
117	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str  +  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str  +  1);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  str  +  1);	  Float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  not  a  statement	2	None	replace
118	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str.length());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str.length());  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  str.length());	  Float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  not  a  statement	2	None	replace
119	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str.floatValue());  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str.floatValue());  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  str.floatValue());	  Float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  not  a  statement	2	None	replace
120	[BUG]  [BUGGY]  return  f.infinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros)?  f.infinite()  :  null;  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.infinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros)?  f.infinite()  :  null;  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.infinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros)?  f.infinite()  :  null;	  return    f.infinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros)?    f.infinite()    :    null;    	non-compiled	[CE]  not  a  statement	14	None	replace
121	[BUG]  [BUGGY]  return  f.toLowerCase(Long.valueOf(numeric));  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.toLowerCase(Long.valueOf(numeric));  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.toLowerCase(Long.valueOf(numeric));	  return    f.toLowerCase();    	non-compiled	[CE]  not  a  statement	29	None	replace
122	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInt(numeric,  0.0F);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInt(numeric,  0.0F);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInt(numeric,  0.0F);	  Integer    f    =    NumberUtils.createInt(numeric);    	non-compiled	[CE]  not  a  statement	40	None	replace
123	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInt(numeric  +  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInt(numeric  +  1);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInt(numeric  +  1);	  Integer    f    =    NumberUtils.createInt(numeric);    	non-compiled	[CE]  not  a  statement	40	None	replace
124	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  f);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  f);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  f);	  Integer    f    =    NumberUtils.createInteger(str);    	non-compiled	[CE]  not  a  statement	6	None	replace
125	[BUG]  [BUGGY]  double  f  =  NumberUtils.createDouble(numeric).doubleValue();  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  double  f  =  NumberUtils.createDouble(numeric).doubleValue();  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	double  f  =  NumberUtils.createDouble(numeric).doubleValue();	  double    f    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  not  a  statement	52	None	replace
126	[BUG]  [BUGGY]  double  f  =  NumberUtils.createDouble(numeric,  0.0F);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  double  f  =  NumberUtils.createDouble(numeric,  0.0F);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	double  f  =  NumberUtils.createDouble(numeric,  0.0F);	  double    f    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  not  a  statement	52	None	replace
127	[BUG]  [BUGGY]  return  FLOAT_ZERO.doubleValue();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  FLOAT_ZERO.doubleValue();  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  FLOAT_ZERO.doubleValue();	  return    f.doubleValue()    +    1;    	non-compiled	[CE]  not  a  statement	19	None	replace
128	[BUG]  [BUGGY]  return  f.substring(0,  f.length())+  1;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.substring(0,  f.length())+  1;  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.substring(0,  f.length())+  1;	  return    f.substring(0,    f.length()    -    1);    	non-compiled	[CE]  not  a  statement	57	None	replace
129	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createInteger(0);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Number  f  =  NumberUtils.createInteger(0);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Number  f  =  NumberUtils.createInteger(0);	  Number    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	17	None	replace
130	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric,  1);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric,  1);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Number  f  =  NumberUtils.createInteger(numeric,  1);	  Number    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	17	None	replace
131	[BUG]  [BUGGY]  String  str  =  this.f.substring(0,  f.length());  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  str  =  this.f.substring(0,  f.length());  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  str  =  this.f.substring(0,  f.length());	  String    str    =    f.substring(0,    f.length()    -    1);    	non-compiled	[CE]  not  a  statement	24	None	replace
132	[BUG]  [BUGGY]  return  f.toString()  +  Util.floatValue(numeric);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.toString()  +  Util.floatValue(numeric);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.toString()  +  Util.floatValue(numeric);	  return    f.toString()    +    str;    	non-compiled	[CE]  not  a  statement	30	None	replace
133	[BUG]  [BUGGY]  return  f.toString()  +  Util.floatValue();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.toString()  +  Util.floatValue();  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.toString()  +  Util.floatValue();	  return    f.toString()    +    str;    	non-compiled	[CE]  not  a  statement	30	None	replace
134	[BUG]  [BUGGY]  f  =  NumberUtils.createBigInteger(numeric,  0.0F);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  f  =  NumberUtils.createBigInteger(numeric,  0.0F);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	f  =  NumberUtils.createBigInteger(numeric,  0.0F);	  f    =    NumberUtils.createBigInteger(numeric);    	non-compiled	[CE]  not  a  statement	51	None	replace
135	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros))  {  return  NumberUtils.createLong(numeric);  }  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros))  {  return  NumberUtils.createLong(numeric);  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros))  {  return  NumberUtils.createLong(numeric);  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    NumberUtils.createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	56	None	replace
136	[BUG]  [BUGGY]  String  f  =  NumberUtils.createInteger(numeric).toLowerCase(f.charAt(0));  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  f  =  NumberUtils.createInteger(numeric).toLowerCase(f.charAt(0));  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  f  =  NumberUtils.createInteger(numeric).toLowerCase(f.charAt(0));	  String    f    =    NumberUtils.createInteger(numeric).toLowerCase();    	non-compiled	[CE]  not  a  statement	49	None	replace
137	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric).infinite();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric).infinite();  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createFloat(numeric).infinite();	  Integer    f    =    NumberUtils.createFloat(numeric).intValue();    	non-compiled	[CE]  not  a  statement	50	None	replace
138	[BUG]  [BUGGY]  return(f.doubleValue()  ==  0.0F  &&!allZeros)?  f.doubleValue()  :  0;  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return(f.doubleValue()  ==  0.0F  &&!allZeros)?  f.doubleValue()  :  0;  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return(f.doubleValue()  ==  0.0F  &&!allZeros)?  f.doubleValue()  :  0;	  return    f.doubleValue()    +    2;    	non-compiled	[CE]  not  a  statement	20	None	replace
139	[BUG]  [BUGGY]  return(f.doubleValue()  ==  0.0F  &&!allZeros)?  f.doubleValue()  :  Integer.MIN_VALUE;  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return(f.doubleValue()  ==  0.0F  &&!allZeros)?  f.doubleValue()  :  Integer.MIN_VALUE;  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return(f.doubleValue()  ==  0.0F  &&!allZeros)?  f.doubleValue()  :  Integer.MIN_VALUE;	  return    f.doubleValue()    +    2;    	non-compiled	[CE]  not  a  statement	20	None	replace
140	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createDouble(numeric,  0.0F);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createDouble(numeric,  0.0F);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createDouble(numeric,  0.0F);	  Integer    f    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  not  a  statement	18	None	replace
141	[BUG]  [BUGGY]  return  number.substring(numeric.length()  -  1,  f.length());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  number.substring(numeric.length()  -  1,  f.length());  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  number.substring(numeric.length()  -  1,  f.length());	  return    f.substring(numeric.length()    -    1,    f.length());    	non-compiled	[CE]  not  a  statement	58	None	replace
142	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  null;  }  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  null;  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  null;  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    null;    }    	non-compiled	[CE]  not  a  statement	42	None	replace
143	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  null;  }  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  null;  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  null;  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    null;    }    	non-compiled	[CE]  not  a  statement	42	None	replace
144	[BUG]  [BUGGY]  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  null;  }  [CE]  not  a  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  null;  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!f.isInfinite()  ||(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return  null;  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    null;    }    	non-compiled	[CE]  not  a  statement	42	None	replace
145	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  0.0F,  Float.floatValue());  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  0.0F,  Float.floatValue());  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  0.0F,  Float.floatValue());	  Integer    f    =    NumberUtils.createInteger(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	35	None	replace
146	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  0.0F,  0.0001);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  0.0F,  0.0001);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  0.0F,  0.0001);	  Integer    f    =    NumberUtils.createInteger(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	35	None	replace
147	[BUG]  [BUGGY]  return  f.infinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros)?  null  :  f.infinite();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.infinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros)?  null  :  f.infinite();  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.infinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros)?  null  :  f.infinite();	  return    f.infinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros)?    null    :    f.infinite();    	non-compiled	[CE]  not  a  statement	15	None	replace
148	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0.0F;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0.0F;  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  0.0F;	  Float    f    =    NumberUtils.createFloat(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	37	None	replace
149	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0.0F  +  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0.0F  +  1);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  0.0F  +  1);	  Float    f    =    NumberUtils.createFloat(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	37	None	replace
150	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  0.0F);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  0.0F);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  0.0F);	  Integer    f    =    NumberUtils.createInteger(numeric.intValue());    	non-compiled	[CE]  not  a  statement	7	None	replace
151	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  0.0F);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  0.0F);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Number  f  =  NumberUtils.createNumber(numeric,  0.0F);	  Number    f    =    NumberUtils.createNumber(numeric);    	non-compiled	[CE]  not  a  statement	16	None	replace
152	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  Float.floatToIntBits(0.0F));  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  Float.floatToIntBits(0.0F));  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Number  f  =  NumberUtils.createNumber(numeric,  Float.floatToIntBits(0.0F));	  Number    f    =    NumberUtils.createNumber(numeric);    	non-compiled	[CE]  not  a  statement	16	None	replace
153	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  Float.POSITIVE_INFINITY);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  Float.POSITIVE_INFINITY);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Number  f  =  NumberUtils.createNumber(numeric,  Float.POSITIVE_INFINITY);	  Number    f    =    NumberUtils.createNumber(numeric);    	non-compiled	[CE]  not  a  statement	16	None	replace
154	[BUG]  [BUGGY]  return  f.infinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros)  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.infinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros)  {  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.infinite()  ||  f.floatValue()  ==  0.0D  &&!allZeros)  {	  return    f.infinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros)    {    	non-compiled	[CE]  not  a  statement	32	None	replace
155	[BUG]  [BUGGY]  return  f.infinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.infinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros;  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.infinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros;	  return    f.infinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros);    	non-compiled	[CE]  not  a  statement	13	None	replace
156	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return;  }  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return;  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return;  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return;    }    	non-compiled	[CE]  not  a  statement	43	None	replace
157	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return;  }  [CE]  not  a  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return;  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  return;  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return;    }    	non-compiled	[CE]  not  a  statement	43	None	replace
158	[BUG]  [BUGGY]  String  f  =  NumberUtils.createInteger(numeric,  0.0F,  Float.floatValue());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  f  =  NumberUtils.createInteger(numeric,  0.0F,  Float.floatValue());  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  f  =  NumberUtils.createInteger(numeric,  0.0F,  Float.floatValue());	  String    f    =    NumberUtils.createInteger(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	4	None	replace
159	[BUG]  [BUGGY]  String  f  =  NumberUtils.createInteger(numeric,  0.0F,  0.0001);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  f  =  NumberUtils.createInteger(numeric,  0.0F,  0.0001);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  f  =  NumberUtils.createInteger(numeric,  0.0F,  0.0001);	  String    f    =    NumberUtils.createInteger(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	4	None	replace
160	[BUG]  [BUGGY]  f  =  NumberUtils.createNumber(numeric,  0.0F);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  f  =  NumberUtils.createNumber(numeric,  0.0F);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	f  =  NumberUtils.createNumber(numeric,  0.0F);	  f    =    NumberUtils.createNumber(numeric);    	non-compiled	[CE]  not  a  statement	27	None	replace
161	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  +  3);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  +  3);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Float  f  =  NumberUtils.createFloat(numeric  +  3);	  Float    f    =    NumberUtils.createFloat(numeric    +    1);    	non-compiled	[CE]  not  a  statement	38	None	replace
162	[BUG]  [BUGGY]  f  =  NumberUtils.createFloat(numeric,  0.0F  +  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  f  =  NumberUtils.createFloat(numeric,  0.0F  +  1);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	f  =  NumberUtils.createFloat(numeric,  0.0F  +  1);	  f    =    NumberUtils.createFloat(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	45	None	replace
163	[BUG]  [BUGGY]  return  NumberUtils.createInteger(numeric);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  NumberUtils.createInteger(numeric);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  NumberUtils.createInteger(numeric);	  return    f.infinite(numeric);    	non-compiled	[CE]  not  a  statement	31	None	replace
164	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createFloat(numeric,  0.0F;  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Number  f  =  NumberUtils.createFloat(numeric,  0.0F;  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Number  f  =  NumberUtils.createFloat(numeric,  0.0F;	  Number    f    =    NumberUtils.createFloat(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	44	None	replace
165	[BUG]  [BUGGY]  return  NumberUtils.toString(numeric);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  NumberUtils.toString(numeric);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  NumberUtils.toString(numeric);	  return    f.toString(numeric);    	non-compiled	[CE]  not  a  statement	39	None	replace
166	[BUG]  [BUGGY]  return  NumberUtils.toInteger(numeric);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  NumberUtils.toInteger(numeric);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  NumberUtils.toInteger(numeric);	  return    f.toString(numeric);    	non-compiled	[CE]  not  a  statement	39	None	replace
167	[BUG]  [BUGGY]  String  f  =  numberUtils.createInteger(numeric);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  f  =  numberUtils.createInteger(numeric);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  f  =  numberUtils.createInteger(numeric);	  String    f    =    NumberUtils.createInteger(str);    	non-compiled	[CE]  not  a  statement	3	None	replace
168	[BUG]  [BUGGY]  String  f  =  NumberUtils.createInteger(numeric,  f);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  f  =  NumberUtils.createInteger(numeric,  f);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  f  =  NumberUtils.createInteger(numeric,  f);	  String    f    =    NumberUtils.createInteger(str);    	non-compiled	[CE]  not  a  statement	3	None	replace
169	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  Float.MIN_VALUE);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  Float.MIN_VALUE);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  Float.MIN_VALUE);	  Integer    f    =    NumberUtils.createInteger(numeric,    Float.POSITIVE_INFINITY);    	non-compiled	[CE]  not  a  statement	53	None	replace
170	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.. ");  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.. ");  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number.. ");	  throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	23	None	replace
171	[BUG]  [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ".);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ".);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	throw  new  NumberFormatException(numeric  + "  is  not  a  valid  number. ".);	  throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	23	None	replace
172	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros))  {  throw  new  NumberFormatException( " ");  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros))  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros))  {  throw  new  NumberFormatException( " ");  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	41	None	replace
173	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  throw  new  NumberFormatException( " ");  }  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  throw  new  NumberFormatException( " ");  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	41	None	replace
174	[BUG]  [BUGGY]  f  =  NumberUtils.createInt(numeric,  0.0F);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  f  =  NumberUtils.createInt(numeric,  0.0F);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	f  =  NumberUtils.createInt(numeric,  0.0F);	  f    =    NumberUtils.createInt(numeric);    	non-compiled	[CE]  not  a  statement	46	None	replace
175	[BUG]  [BUGGY]  f  =  NumberUtils.createInteger(numeric,  0.0F,  0.0F);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  f  =  NumberUtils.createInteger(numeric,  0.0F,  0.0F);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	f  =  NumberUtils.createInteger(numeric,  0.0F,  0.0F);	  f    =    NumberUtils.createInteger(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	47	None	replace
176	[BUG]  [BUGGY]  f  =  NumberUtils.createInteger(numeric,  0.0F,  0.0001);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  f  =  NumberUtils.createInteger(numeric,  0.0F,  0.0001);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	f  =  NumberUtils.createInteger(numeric,  0.0F,  0.0001);	  f    =    NumberUtils.createInteger(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	47	None	replace
177	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.value()  ==  0.0F  &&!allZeros))  {  return  NumberUtils.createNumber(numeric);  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!(f.isInfinite()  ||  f.value()  ==  0.0F  &&!allZeros))  {  return  NumberUtils.createNumber(numeric);  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!(f.isInfinite()  ||  f.value()  ==  0.0F  &&!allZeros))  {  return  NumberUtils.createNumber(numeric);  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    NumberUtils.createNumber(numeric);    }    	non-compiled	[CE]  not  a  statement	55	None	replace
178	[BUG]  [BUGGY]  if(!(numeric.isInfinite()  ||(numeric.floatValue()  ==  0.0F  &&!allZeros)))  {  return  NumberUtils.createLong(numeric);  }  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!(numeric.isInfinite()  ||(numeric.floatValue()  ==  0.0F  &&!allZeros)))  {  return  NumberUtils.createLong(numeric);  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!(numeric.isInfinite()  ||(numeric.floatValue()  ==  0.0F  &&!allZeros)))  {  return  NumberUtils.createLong(numeric);  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    NumberUtils.createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	56	None	replace
179	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.value()  ==  0.0F  &&!allZeros))  {  return  NumberUtils.createLong(numeric);  }  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!(f.isInfinite()  ||  f.value()  ==  0.0F  &&!allZeros))  {  return  NumberUtils.createLong(numeric);  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!(f.isInfinite()  ||  f.value()  ==  0.0F  &&!allZeros))  {  return  NumberUtils.createLong(numeric);  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    NumberUtils.createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	56	None	replace
180	[BUG]  [BUGGY]  float  f  =  NumberUtils.createBigInteger(numeric);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  float  f  =  NumberUtils.createBigInteger(numeric);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	float  f  =  NumberUtils.createBigInteger(numeric);	  f    =    NumberUtils.createBigInteger(numeric);    	non-compiled	[CE]  not  a  statement	51	None	replace
181	[BUG]  [BUGGY]  return  f.infinite(dec);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.infinite(dec);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.infinite(dec);	  return    f.infinite(numeric);    	non-compiled	[CE]  not  a  statement	31	None	replace
182	[BUG]  [BUGGY]  return  f.toUpperCase();  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.toUpperCase();  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.toUpperCase();	  return    f.toLowerCase();    	non-compiled	[CE]  not  a  statement	29	None	replace
183	[BUG]  [BUGGY]  return  f.substring(numeric.length(),  f.length());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.substring(numeric.length(),  f.length());  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.substring(numeric.length(),  f.length());	  return    f.substring(numeric.length()    -    1,    f.length());    	non-compiled	[CE]  not  a  statement	58	None	replace
184	[BUG]  [BUGGY]  if(!(numeric.isInfinite()  ||(numeric.floatValue()  ==  0.0F  &&!allZeros)))  {  return  NumberUtils.createNumber(numeric);  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!(numeric.isInfinite()  ||(numeric.floatValue()  ==  0.0F  &&!allZeros)))  {  return  NumberUtils.createNumber(numeric);  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!(numeric.isInfinite()  ||(numeric.floatValue()  ==  0.0F  &&!allZeros)))  {  return  NumberUtils.createNumber(numeric);  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    NumberUtils.createNumber(numeric);    }    	non-compiled	[CE]  not  a  statement	55	None	replace
185	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F)&&!allZeros)  {  return  NumberUtils.createNumber(numeric);  }  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F)&&!allZeros)  {  return  NumberUtils.createNumber(numeric);  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F)&&!allZeros)  {  return  NumberUtils.createNumber(numeric);  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    NumberUtils.createNumber(numeric);    }    	non-compiled	[CE]  not  a  statement	55	None	replace
186	[BUG]  [BUGGY]  String  str  =  str.substring(0,  f.length()));  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  str  =  str.substring(0,  f.length()));  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  str  =  str.substring(0,  f.length()));	  String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	22	None	replace
187	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInt(numeric).intValue();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInt(numeric).intValue();  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInt(numeric).intValue();	  Integer    f    =    NumberUtils.createInt(numeric);    	non-compiled	[CE]  not  a  statement	40	None	replace
188	[BUG]  [BUGGY]  return  str.substring(numeric.length(),  f.floatValue());  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  str.substring(numeric.length(),  f.floatValue());  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  str.substring(numeric.length(),  f.floatValue());	  return    str.toString();    	non-compiled	[CE]  not  a  statement	28	None	replace
189	[BUG]  [BUGGY]  return(f.doubleValue()  ==  0.0F  &&!allZeros)?  f.doubleValue()  :  f.doubleValue();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return(f.doubleValue()  ==  0.0F  &&!allZeros)?  f.doubleValue()  :  f.doubleValue();  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return(f.doubleValue()  ==  0.0F  &&!allZeros)?  f.doubleValue()  :  f.doubleValue();	  return    f.doubleValue()    +    1;    	non-compiled	[CE]  not  a  statement	19	None	replace
190	[BUG]  [BUGGY]  return(f.doubleValue()  ==  0.0F  &&!allZeros)?  f.doubleValue()  :  f.floatValue();  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return(f.doubleValue()  ==  0.0F  &&!allZeros)?  f.doubleValue()  :  f.floatValue();  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return(f.doubleValue()  ==  0.0F  &&!allZeros)?  f.doubleValue()  :  f.floatValue();	  return    f.doubleValue()    +    1;    	non-compiled	[CE]  not  a  statement	19	None	replace
191	[BUG]  [BUGGY]  return(f.doubleValue()  ==  0.0F  &&!allZeros)?  f.doubleValue()  +  1  :  f.doubleValue();  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return(f.doubleValue()  ==  0.0F  &&!allZeros)?  f.doubleValue()  +  1  :  f.doubleValue();  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return(f.doubleValue()  ==  0.0F  &&!allZeros)?  f.doubleValue()  +  1  :  f.doubleValue();	  return    f.doubleValue()    +    1;    	non-compiled	[CE]  not  a  statement	19	None	replace
192	[BUG]  [BUGGY]  f  =  NumberUtils.createInteger(numeric,  1.0);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  f  =  NumberUtils.createInteger(numeric,  1.0);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	f  =  NumberUtils.createInteger(numeric,  1.0);	  f    =    NumberUtils.createInteger(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	47	None	replace
193	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  1.0);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  1.0);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  1.0);	  Integer    f    =    NumberUtils.createInteger(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	35	None	replace
194	[BUG]  [BUGGY]  return  f.substring(0,  f.lastIndexOf('.')-  1);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.substring(0,  f.lastIndexOf('.')-  1);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.substring(0,  f.lastIndexOf('.')-  1);	  return    f.substring(0,    f.length()    -    1);    	non-compiled	[CE]  not  a  statement	57	None	replace
195	[BUG]  [BUGGY]  return  f.substring(0,  f.floatValue());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.substring(0,  f.floatValue());  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.substring(0,  f.floatValue());	  return    f.substring(0,    f.length()    -    1);    	non-compiled	[CE]  not  a  statement	57	None	replace
196	[BUG]  [BUGGY]  return  f.substring(0,  f.lastChar());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.substring(0,  f.lastChar());  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.substring(0,  f.lastChar());	  return    f.substring(0,    f.length()    -    1);    	non-compiled	[CE]  not  a  statement	57	None	replace
197	[BUG]  [BUGGY]  String  str  =  f.substring(0,  f.lastIndexOf('.')-  1);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  str  =  f.substring(0,  f.lastIndexOf('.')-  1);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  str  =  f.substring(0,  f.lastIndexOf('.')-  1);	  String    str    =    f.substring(0,    f.length()    -    1);    	non-compiled	[CE]  not  a  statement	24	None	replace
198	[BUG]  [BUGGY]  String  str  =  f.substring(0,  f.floatValue());  [CE]  not  a  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  str  =  f.substring(0,  f.floatValue());  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  str  =  f.substring(0,  f.floatValue());	  String    str    =    f.substring(0,    f.length()    -    1);    	non-compiled	[CE]  not  a  statement	24	None	replace
199	[BUG]  [BUGGY]  String  str  =  f.substring(0,  f.charAt(0));  [CE]  not  a  statement  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  str  =  f.substring(0,  f.charAt(0));  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  str  =  f.substring(0,  f.charAt(0));	  String    str    =    f.substring(0,    f.length()    -    1);    	non-compiled	[CE]  not  a  statement	24	None	replace
200	[BUG]  [BUGGY]  return  f.infinite()  &&  f.floatValue()  ==  0.0F  &&!allZeros)?  f.infinite()  :  null;  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.infinite()  &&  f.floatValue()  ==  0.0F  &&!allZeros)?  f.infinite()  :  null;  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.infinite()  &&  f.floatValue()  ==  0.0F  &&!allZeros)?  f.infinite()  :  null;	  return    f.infinite()    ||    f.floatValue()    ==    0.0F    &&!allZeros)?    f.infinite()    :    null;    	non-compiled	[CE]  not  a  statement	14	None	replace
201	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  return;  }  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  return;  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  return;  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return;    }    	non-compiled	[CE]  not  a  statement	43	None	replace
202	[BUG]  [BUGGY]  return  f.substring(0,  f.length()  -  1,  f.length()  -  2);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.substring(0,  f.length()  -  1,  f.length()  -  2);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.substring(0,  f.length()  -  1,  f.length()  -  2);	  return    f.substring(0,    f.length()    -    1,    f.length());    	non-compiled	[CE]  not  a  statement	59	None	replace
203	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createDouble(numeric).intValue();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createDouble(numeric).intValue();  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createDouble(numeric).intValue();	  Integer    f    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  not  a  statement	18	None	replace
204	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric)+  1;  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Number  f  =  NumberUtils.createInteger(numeric)+  1;  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Number  f  =  NumberUtils.createInteger(numeric)+  1;	  Number    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  not  a  statement	17	None	replace
205	[BUG]  [BUGGY]  return(f.doubleValue()  >=  0)?  f.doubleValue()  :  f.doubleValue();  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return(f.doubleValue()  >=  0)?  f.doubleValue()  :  f.doubleValue();  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return(f.doubleValue()  >=  0)?  f.doubleValue()  :  f.doubleValue();	  return    f.doubleValue()    +    2;    	non-compiled	[CE]  not  a  statement	20	None	replace
206	[BUG]  [BUGGY]  return  NumberUtils.createLong(numeric);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  NumberUtils.createLong(numeric);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  NumberUtils.createLong(numeric);	  return    f.toString(numeric);    	non-compiled	[CE]  not  a  statement	39	None	replace
207	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  null;  }  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  null;  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  return  null;  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    return    null;    }    	non-compiled	[CE]  not  a  statement	42	None	replace
208	[BUG]  [BUGGY]  String  f  =  NumberUtils.createInteger(numeric)/  1;  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  String  f  =  NumberUtils.createInteger(numeric)/  1;  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	String  f  =  NumberUtils.createInteger(numeric)/  1;	  String    f    =    NumberUtils.createInteger(numeric)+    1;    	non-compiled	[CE]  not  a  statement	33	None	replace
209	[BUG]  [BUGGY]  double  f  =  NumberUtils.createDouble(numeric)+  1;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  double  f  =  NumberUtils.createDouble(numeric)+  1;  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	double  f  =  NumberUtils.createDouble(numeric)+  1;	  double    f    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  not  a  statement	52	None	replace
210	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.value()  ==  0.0F  &&!allZeros))  {  throw  new  NumberFormatException( " ");  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!(f.isInfinite()  ||  f.value()  ==  0.0F  &&!allZeros))  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!(f.isInfinite()  ||  f.value()  ==  0.0F  &&!allZeros))  {  throw  new  NumberFormatException( " ");  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	41	None	replace
211	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.getValue()  ==  0.0F  &&!allZeros))  {  throw  new  NumberFormatException( " ");  }  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  if(!(f.isInfinite()  ||  f.getValue()  ==  0.0F  &&!allZeros))  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	if(!(f.isInfinite()  ||  f.getValue()  ==  0.0F  &&!allZeros))  {  throw  new  NumberFormatException( " ");  }	  if(!(f.isInfinite()    ||(f.floatValue()    ==    0.0F    &&!allZeros)))    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	41	None	replace
212	[BUG]  [BUGGY]  return  f.toString()  +  Utils.floatValue();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.toString()  +  Utils.floatValue();  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.toString()  +  Utils.floatValue();	  return    f.toString()    +    str;    	non-compiled	[CE]  not  a  statement	30	None	replace
213	[BUG]  [BUGGY]  return  f.toString()  +  Utils.floatValue(numeric);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  return  f.toString()  +  Utils.floatValue(numeric);  [BUGGY]      }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	return  f.toString()  +  Utils.floatValue(numeric);	  return    f.toString()    +    str;    	non-compiled	[CE]  not  a  statement	30	None	replace
214	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  1.0);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  1.0);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  1.0);	  Float    f    =    NumberUtils.createFloat(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	37	None	replace
215	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  Float.POSITIVE_INFINITY,  Float.floatValue());  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  Float.POSITIVE_INFINITY,  Float.floatValue());  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  Float.POSITIVE_INFINITY,  Float.floatValue());	  Integer    f    =    NumberUtils.createInteger(numeric,    Float.POSITIVE_INFINITY);    	non-compiled	[CE]  not  a  statement	53	None	replace
216	[BUG]  [BUGGY]  f  =  NumberUtils.createFloat(numeric,  0.0F;  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  f  =  NumberUtils.createFloat(numeric,  0.0F;  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	f  =  NumberUtils.createFloat(numeric,  0.0F;	  f    =    NumberUtils.createFloat(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	45	None	replace
217	[BUG]  [BUGGY]  f  =  NumberUtils.createFloat(numeric,  1.0);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  f  =  NumberUtils.createFloat(numeric,  1.0);  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	f  =  NumberUtils.createFloat(numeric,  1.0);	  f    =    NumberUtils.createFloat(numeric,    0.0F);    	non-compiled	[CE]  not  a  statement	45	None	replace
218	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric).doubleValue();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {        [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric).doubleValue();  [BUGGY]      return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	Integer  f  =  NumberUtils.createFloat(numeric).doubleValue();	  Integer    f    =    NumberUtils.createFloat(numeric).intValue();    	non-compiled	[CE]  not  a  statement	50	None	replace
