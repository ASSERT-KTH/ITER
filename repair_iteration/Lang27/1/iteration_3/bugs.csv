bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createInteger(numeric);  }  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
2	[BUG]  [BUGGY]  Dec  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Dec  =  str.substring(0,  str.length()  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	Dec  =  str.substring(0,  str.length()  -  1);	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos    +    1))    ||    isDigits(numeric.charAt(0)))    {    dec    =    str.substring(0,    str.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
3	[BUG]  [BUGGY]  Dec  <?>  dec  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Dec  <?>  dec  =  str.substring(0,  str.length()  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	Dec  <?>  dec  =  str.substring(0,  str.length()  -  1);	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos    +    1))    ||    isDigits(numeric.charAt(0)))    {    dec    =    str.substring(0,    str.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
4	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length()  -  1);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length()  -  1);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    isDigits(numeric.charAt(0)))    {    dec    =    str.substring(0,    str.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
5	[BUG]  [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }  [CE]  'catch'  without  'try'  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  'catch'  without  'try'	24	None	replace
6	[BUG]  [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createInteger(numeric);  }  [CE]  'catch'  without  'try'  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  'catch'  without  'try'	24	None	replace
7	[BUG]  [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  String  dec  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]        NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  String  dec  =  str.substring(0,  str.length());  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(IndexOutOfBoundsException  nfe)  {  String  dec  =  str.substring(0,  str.length());	  }    catch    (IndexOutOfBoundsException    nfe)    {    String    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
8	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]          NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	String  dec  =  str.substring(0,  str.length()  -  1);	  }    catch    (IndexOutOfBoundsException    nfe)    {    String    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
9	[BUG]  [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createLong(numeric);  }  [CE]  'catch'  without  'try'  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  'catch'  without  'try'	10	None	replace
10	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('-');  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  int  decPos  =  str.indexOf('-');  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	int  decPos  =  str.indexOf('-');	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.indexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
11	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('-');  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Integer  decPos  =  str.indexOf('-');  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	Integer  decPos  =  str.indexOf('-');	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.indexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
12	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('-');  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  int  decPos  =  str.lastIndexOf('-');  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	int  decPos  =  str.lastIndexOf('-');	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.indexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
13	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('-')+  1;  [CE]  illegal  start  of  expression  [FE]                      NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  int  decPos  =  str.indexOf('-')+  1;  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	int  decPos  =  str.indexOf('-')+  1;	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.indexOf('-');    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
14	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    return    createInteger(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
15	[BUG]  [BUGGY]  Integer  decPos  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Integer  decPos  =  str.substring(0,  str.length()  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	Integer  decPos  =  str.substring(0,  str.length()  -  1);	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1),    str.length())||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
16	[BUG]  [BUGGY]  int  decPos  =  str.length();  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  int  decPos  =  str.length();  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	int  decPos  =  str.length();	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1),    str.length())||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
17	[BUG]  [BUGGY]  Integer  decPos  =  str.charAt(0);  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Integer  decPos  =  str.charAt(0);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	Integer  decPos  =  str.charAt(0);	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1),    str.length())||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
18	[BUG]  [BUGGY]  lastChar  =  str.charAt(numeric.length()  -  1);  [CE]  illegal  start  of  expression  [FE]        NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  lastChar  =  str.charAt(numeric.length()  -  1);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	lastChar  =  str.charAt(numeric.length()  -  1);	  }    catch    (IndexOutOfBoundsException    nfe)    {    lastChar    =    str.charAt(numeric.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
19	[BUG]  [BUGGY]  lastChar  =  str.charAt(numeric.length());  [CE]  illegal  start  of  expression  [FE]          NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  lastChar  =  str.charAt(numeric.length());  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	lastChar  =  str.charAt(numeric.length());	  }    catch    (IndexOutOfBoundsException    nfe)    {    lastChar    =    str.charAt(numeric.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
20	[BUG]  [BUGGY]  LastChar  =  str.charAt(numeric.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  LastChar  =  str.charAt(numeric.length()  -  1);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	LastChar  =  str.charAt(numeric.length()  -  1);	  }    catch    (IndexOutOfBoundsException    nfe)    {    lastChar    =    str.charAt(numeric.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
21	[BUG]  [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [CE]  'catch'  without  'try'  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  'catch'  without  'try'	9	None	replace
22	[BUG]  [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [CE]  'catch'  without  'try'  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  'catch'  without  'try'	9	None	replace
23	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [CE]  illegal  start  of  expression  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  dec  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  dec  =  str.substring(0,  str.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	dec  =  str.substring(0,  str.length());	  dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
25	[BUG]  [BUGGY]  dec  =  str.substring(0,  str.length();  [CE]  ')'  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  dec  =  str.substring(0,  str.length();  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	dec  =  str.substring(0,  str.length();	  dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ')'  expected	19	None	replace
26	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  1))  ||  isDigits(numeric.substring(1,  1)))  {  return  createLong(numeric);  }  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  1))  ||  isDigits(numeric.substring(1,  1)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  1))  ||  isDigits(numeric.substring(1,  1)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    2))    ||    isDigits(numeric.substring(1,    1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
27	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(1,  1)))  {  return  createInteger(numeric);  }  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(1,  1)))  {  return  createInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(1,  1)))  {  return  createInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    2))    ||    isDigits(numeric.substring(1,    1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
28	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(1,  1)))  {  return  createBigInteger(numeric);  }  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(1,  1)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(1,  1)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    2))    ||    isDigits(numeric.substring(1,    1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
29	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos    +    1))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
30	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos  +  1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos  +  1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos  +  1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos    +    1))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
31	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos    +    1))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
32	[BUG]  [BUGGY]  lastChar  =  str.charAt(0);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  lastChar  =  str.charAt(0);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	lastChar  =  str.charAt(0);	  }    catch    (IndexOutOfBoundsException    nfe)    {    lastChar    =    str.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
33	[BUG]  [BUGGY]  lastChar  =  str.charAt(1);  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  lastChar  =  str.charAt(1);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	lastChar  =  str.charAt(1);	  }    catch    (IndexOutOfBoundsException    nfe)    {    lastChar    =    str.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
34	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  1))  ||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  1))  ||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  1))  ||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    1))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	48	None	replace
35	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2))    ||    isDigits(numeric.charAt(0)))    {    return    createInteger(numeric);    }    	non-compiled	[CE]  not  a  statement	34	None	replace
36	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('-');  return  createInteger(decPos);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  int  decPos  =  str.lastIndexOf('-');  return  createInteger(decPos);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	int  decPos  =  str.lastIndexOf('-');  return  createInteger(decPos);	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.lastIndexOf('-');    return    createInteger(decPos);    	non-compiled	[CE]  not  a  statement	44	None	replace
37	[BUG]  [BUGGY]  Integer  decPos  =  str.lastIndexOf('-');  return  createInteger(decPos);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Integer  decPos  =  str.lastIndexOf('-');  return  createInteger(decPos);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	Integer  decPos  =  str.lastIndexOf('-');  return  createInteger(decPos);	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.lastIndexOf('-');    return    createInteger(decPos);    	non-compiled	[CE]  not  a  statement	44	None	replace
38	[BUG]  [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  int  decPos  =  str.lastIndexOf('-',  expPos);  return  createInteger(decPos);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  int  decPos  =  str.lastIndexOf('-',  expPos);  return  createInteger(decPos);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(IndexOutOfBoundsException  nfe)  {  int  decPos  =  str.lastIndexOf('-',  expPos);  return  createInteger(decPos);	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.lastIndexOf('-');    return    createInteger(decPos);    	non-compiled	[CE]  not  a  statement	44	None	replace
39	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.');  [CE]  illegal  start  of  expression  [FE]          NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  int  decPos  =  str.lastIndexOf('.');  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	int  decPos  =  str.lastIndexOf('.');	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
40	[BUG]  [BUGGY]  Integer  decPos  =  str.lastIndexOf('.');  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Integer  decPos  =  str.lastIndexOf('.');  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	Integer  decPos  =  str.lastIndexOf('.');	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
41	[BUG]  [BUGGY]  String  decPos  =  str.lastIndexOf('.');  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  String  decPos  =  str.lastIndexOf('.');  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	String  decPos  =  str.lastIndexOf('.');	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
42	[BUG]  [BUGGY]  DecPos  =  str.lastIndexOf('.');  [CE]  <identifier>  expected  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  DecPos  =  str.lastIndexOf('.');  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	DecPos  =  str.lastIndexOf('.');	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  <identifier>  expected	13	None	replace
43	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( " ");  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Throwables.throw  new  NumberFormatException( " ");  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	Throwables.throw  new  NumberFormatException( " ");	  throw    new    NumberFormatException(   "   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
44	[BUG]  [BUGGY]  throw  new  NumberFormatException( " ",  str);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  throw  new  NumberFormatException( " ",  str);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	throw  new  NumberFormatException( " ",  str);	  throw    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
45	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Expected  numeric  value: "  +  str);  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  throw  new  NumberFormatException( "Expected  numeric  value: "  +  str);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	throw  new  NumberFormatException( "Expected  numeric  value: "  +  str);	  throw    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
46	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('-')+  1;  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Integer  decPos  =  str.indexOf('-')+  1;  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	Integer  decPos  =  str.indexOf('-')+  1;	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.indexOf('-')+    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
47	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('-')+  1;  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  int  decPos  =  str.lastIndexOf('-')+  1;  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	int  decPos  =  str.lastIndexOf('-')+  1;	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.indexOf('-')+    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
48	[BUG]  [BUGGY]  String  decPos  =  str.indexOf('-')+  1;  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  String  decPos  =  str.indexOf('-')+  1;  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	String  decPos  =  str.indexOf('-')+  1;	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.indexOf('-')+    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
49	[BUG]  [BUGGY]  Integer  decPos  =  createInteger(numeric);  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Integer  decPos  =  createInteger(numeric);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	Integer  decPos  =  createInteger(numeric);	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.charAt(0))    ||    isDigits(numeric.charAt(0)))    {    return    createInteger(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
50	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric);  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Integer  dec  =  createInteger(numeric);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	Integer  dec  =  createInteger(numeric);	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.charAt(0))    ||    isDigits(numeric.charAt(0)))    {    return    createInteger(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
51	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  1;  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  int  decPos  =  str.indexOf('.')+  1;  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	int  decPos  =  str.indexOf('.')+  1;	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.charAt(0))    ||    isDigits(numeric.charAt(0)))    {    return    createInteger(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
52	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(Throwable  t)  {  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(Throwable  t)  {	  }    catch(Throwable    e)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
53	[BUG]  [BUGGY]  }  catch(Exception  e)  {  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(Exception  e)  {  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(Exception  e)  {	  }    catch(Throwable    e)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
54	[BUG]  [BUGGY]  }  catch(Throwable  nfe)  {  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(Throwable  nfe)  {  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(Throwable  nfe)  {	  }    catch(Throwable    e)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
55	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.substring(decPos  +  1)))  {  return  createLong(nu  [CE]  ')'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.substring(decPos  +  1)))  {  return  createLong(nu  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.substring(decPos  +  1)))  {  return  createLong(nu	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos    +    1))    ||    isDigits(numeric.substring(decPos    +    1)))    {    return    createLong(nu    	non-compiled	[CE]  ')'  expected	38	None	replace
56	[BUG]  [BUGGY]  if(dec!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.substring(decPos  +  1)))  {  return  createLong(nu  [CE]  ')'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.substring(decPos  +  1)))  {  return  createLong(nu  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.substring(decPos  +  1)))  {  return  createLong(nu	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos    +    1))    ||    isDigits(numeric.substring(decPos    +    1)))    {    return    createLong(nu    	non-compiled	[CE]  ')'  expected	38	None	replace
57	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.substring(decPos  +  1)))  {  return  createLong  [CE]  ';'  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.substring(decPos  +  1)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.substring(decPos  +  1)))  {  return  createLong	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos    +    1))    ||    isDigits(numeric.substring(decPos    +    1)))    {    return    createLong(nu    	non-compiled	[CE]  ';'  expected	38	None	replace
58	[BUG]  [BUGGY]  String  lastChar  =  str.charAt(0);  [CE]  illegal  start  of  expression  [FE]          NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  String  lastChar  =  str.charAt(0);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	String  lastChar  =  str.charAt(0);	  }    catch    (IndexOutOfBoundsException    nfe)    {    String    lastChar    =    str.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
59	[BUG]  [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  String  lastChar  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  String  lastChar  =  str.substring(0,  str.length()  -  1);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(IndexOutOfBoundsException  nfe)  {  String  lastChar  =  str.substring(0,  str.length()  -  1);	  }    catch    (IndexOutOfBoundsException    nfe)    {    String    lastChar    =    str.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
60	[BUG]  [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  String  lastChar  =  str.substring(1);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  String  lastChar  =  str.substring(1);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(IndexOutOfBoundsException  nfe)  {  String  lastChar  =  str.substring(1);	  }    catch    (IndexOutOfBoundsException    nfe)    {    String    lastChar    =    str.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
61	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.');  return  createBigInteger(decPos);  [CE]  illegal  start  of  expression  [FE]          NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  int  decPos  =  str.lastIndexOf('.');  return  createBigInteger(decPos);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	int  decPos  =  str.lastIndexOf('.');  return  createBigInteger(decPos);	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.lastIndexOf('.');    return    createBigInteger(decPos);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
62	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.');  return  createInteger(decPos);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  int  decPos  =  str.lastIndexOf('.');  return  createInteger(decPos);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	int  decPos  =  str.lastIndexOf('.');  return  createInteger(decPos);	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.lastIndexOf('.');    return    createBigInteger(decPos);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
63	[BUG]  [BUGGY]  Integer  decPos  =  str.lastIndexOf('.');  return  createBigInteger(decPos);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Integer  decPos  =  str.lastIndexOf('.');  return  createBigInteger(decPos);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	Integer  decPos  =  str.lastIndexOf('.');  return  createBigInteger(decPos);	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.lastIndexOf('.');    return    createBigInteger(decPos);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
64	[BUG]  [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createInteger(dec);  [CE]  illegal  start  of  expression  [FE]        NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createInteger(dec);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(IndexOutOfBoundsException  nfe)  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createInteger(dec);	  }    catch    (IndexOutOfBoundsException    nfe)    {    String    dec    =    str.substring(0,    str.length()    -    1);    return    createBigInteger(dec);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
65	[BUG]  [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createLong(dec);  [CE]  illegal  start  of  expression  [FE]          NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createLong(dec);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(IndexOutOfBoundsException  nfe)  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createLong(dec);	  }    catch    (IndexOutOfBoundsException    nfe)    {    String    dec    =    str.substring(0,    str.length()    -    1);    return    createBigInteger(dec);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
66	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1);  return  createBigInteger(dec);  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1);  return  createBigInteger(dec);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	String  dec  =  str.substring(0,  str.length()  -  1);  return  createBigInteger(dec);	  }    catch    (IndexOutOfBoundsException    nfe)    {    String    dec    =    str.substring(0,    str.length()    -    1);    return    createBigInteger(dec);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
67	[BUG]  [BUGGY]  }  catch  (Exception  nfe)  {  [CE]  illegal  start  of  expression  [FE]          NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch  (Exception  nfe)  {  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch  (Exception  nfe)  {	  }    catch    (IOException    nfe)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
68	[BUG]  [BUGGY]  Throwable  nfe  =  nfe.getMessage();  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Throwable  nfe  =  nfe.getMessage();  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	Throwable  nfe  =  nfe.getMessage();	  }    catch    (IndexOutOfBoundsException    nfe)    {    e.printStackTrace();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
69	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  e.printStackTrace();  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(Throwable  t)  {  e.printStackTrace();  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(Throwable  t)  {  e.printStackTrace();	  }    catch    (IndexOutOfBoundsException    nfe)    {    e.printStackTrace();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
70	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	throw  new  IllegalArgumentException( " ");	  }    catch    (IndexOutOfBoundsException    nfe)    {    e.printStackTrace();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
71	[BUG]  [BUGGY]  }  catch(NumberFormatException  nfe)  {  throw  new  NumberFormatException( " ");  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  nfe)  {  throw  new  NumberFormatException( " ");  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(NumberFormatException  nfe)  {  throw  new  NumberFormatException( " ");	  }    catch    (IndexOutOfBoundsException    nfe)    {    throw    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
72	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  2);  [CE]  >  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  2);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	String  dec  =  str.substring(0,  str.length()  -  2);	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createInteger(numeric);    }    	non-compiled	[CE]  >  expected	6	None	replace
73	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [CE]  >  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    2))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  >  expected	49	None	replace
74	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0))||  isDigits(numeric.charAt(1)))  {  return  createInteger(numeric);  }  [CE]  >  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0))||  isDigits(numeric.charAt(1)))  {  return  createInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0))||  isDigits(numeric.charAt(1)))  {  return  createInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.charAt(0))    ||    isDigits(numeric.charAt(1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  >  expected	1	None	replace
75	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2))    ||    isDigits(numeric.substring(1)))    {    return    createInteger(numeric);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
76	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos,    decPos))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
77	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos,    decPos))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
78	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [CE]  illegal  start  of  expression  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos,    decPos))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
79	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1,  decPos))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [CE]  illegal  start  of  expression  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1,  decPos))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1,  decPos))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos,    decPos))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
80	[BUG]  [BUGGY]  Dec  <  N,  V>  dec  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Dec  <  N,  V>  dec  =  str.substring(0,  str.length()  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	Dec  <  N,  V>  dec  =  str.substring(0,  str.length()  -  1);	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos,    dec))    ||    isDigits(numeric.charAt(0)))    {    dec    =    str.substring(0,    str.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
81	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2),  str.length())||  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length()  -  1);  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2),  str.length())||  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length()  -  1);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2),  str.length())||  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length()  -  1);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1),    str.length())||    isDigits(numeric.charAt(0)))    {    dec    =    str.substring(0,    str.length()    -    1);    }    	non-compiled	[CE]  not  a  statement	28	None	replace
82	[BUG]  [BUGGY]  catch(Throwable  e)  {  [CE]  'catch'  without  'try'  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  catch(Throwable  e)  {  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	catch(Throwable  e)  {	  catch(NumberFormatException    e)    {    	non-compiled	[CE]  'catch'  without  'try'	36	None	replace
83	[BUG]  [BUGGY]  catch(Exception  e)  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  catch(Exception  e)  {  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	catch(Exception  e)  {	  catch(NumberFormatException    e)    {    	non-compiled	[CE]  not  a  statement	36	None	replace
84	[BUG]  [BUGGY]  catch(IndexOutOfBoundsException  e)  {  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  catch(IndexOutOfBoundsException  e)  {  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	catch(IndexOutOfBoundsException  e)  {	  catch(NumberFormatException    e)    {    	non-compiled	[CE]  not  a  statement	36	None	replace
85	[BUG]  [BUGGY]  Integer  decPos  =  str.lastIndexOf('.');  return  createInteger(decPos);  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Integer  decPos  =  str.lastIndexOf('.');  return  createInteger(decPos);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	Integer  decPos  =  str.lastIndexOf('.');  return  createInteger(decPos);	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.lastIndexOf('.');    return    createInteger(decPos);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
86	[BUG]  [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  int  decPos  =  str.lastIndexOf('.');  return  createInteger(decPos  +  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  int  decPos  =  str.lastIndexOf('.');  return  createInteger(decPos  +  1);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(IndexOutOfBoundsException  nfe)  {  int  decPos  =  str.lastIndexOf('.');  return  createInteger(decPos  +  1);	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.lastIndexOf('.');    return    createInteger(decPos);    	non-compiled	[CE]  not  a  statement	43	None	replace
87	[BUG]  [BUGGY]  while(numeric.charAt(0)!=  '-'  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  dec  =  new  String(numeric.substring(2));  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  while(numeric.charAt(0)!=  '-'  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  dec  =  new  String(numeric.substring(2));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	while(numeric.charAt(0)!=  '-'  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  dec  =  new  String(numeric.substring(2));	  while(numeric.charAt(0)!=    '-'    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    dec    =    new    String(numeric.substring(1));    	non-compiled	[CE]  not  a  statement	11	None	replace
88	[BUG]  [BUGGY]  while(numeric.charAt(0)!=  '-'  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  dec  =  new  String(numeric.substring(1));  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  while(numeric.charAt(0)!=  '-'  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  dec  =  new  String(numeric.substring(1));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	while(numeric.charAt(0)!=  '-'  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  dec  =  new  String(numeric.substring(1));	  while(numeric.charAt(0)!=    '-'    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    dec    =    new    String(numeric.substring(1));    	non-compiled	[CE]  not  a  statement	11	None	replace
89	[BUG]  [BUGGY]  while(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  dec  =  new  String(numeric.substring(2));  [CE]  not  a  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  while(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  dec  =  new  String(numeric.substring(2));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	while(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  dec  =  new  String(numeric.substring(2));	  while(numeric.charAt(0)!=    '-'    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    dec    =    new    String(numeric.substring(1));    	non-compiled	[CE]  not  a  statement	11	None	replace
90	[BUG]  [BUGGY]  }  catch(NumberFormatException  nfe)  {  int  decPos  =  str.lastIndexOf('.');  return  createBigInteger(decPos);  [CE]  not  a  statement  [FE]          NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  nfe)  {  int  decPos  =  str.lastIndexOf('.');  return  createBigInteger(decPos);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(NumberFormatException  nfe)  {  int  decPos  =  str.lastIndexOf('.');  return  createBigInteger(decPos);	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.lastIndexOf('.');    return    createBigInteger(decPos);    	non-compiled	[CE]  not  a  statement	41	None	replace
91	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0))||  isDigits(numeric.charAt(1)))  {  return  createBigInteger(numeric);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0))||  isDigits(numeric.charAt(1)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0))||  isDigits(numeric.charAt(1)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.charAt(0))    ||    isDigits(numeric.charAt(1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
92	[BUG]  [BUGGY]  }  catch(NumberFormatException  nfe)  {  int  decPos  =  str.lastIndexOf('.');  [CE]  not  a  statement  [FE]          NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  nfe)  {  int  decPos  =  str.lastIndexOf('.');  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(NumberFormatException  nfe)  {  int  decPos  =  str.lastIndexOf('.');	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	13	None	replace
93	[BUG]  [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  int  decPos  =  str.lastIndexOf('.',  decPos);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  int  decPos  =  str.lastIndexOf('.',  decPos);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(IndexOutOfBoundsException  nfe)  {  int  decPos  =  str.lastIndexOf('.',  decPos);	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	13	None	replace
94	[BUG]  [BUGGY]  }  catch(NumberFormatException  nfe)  {  int  decPos  =  str.lastIndexOf('.');  return  createInteger(decPos);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  nfe)  {  int  decPos  =  str.lastIndexOf('.');  return  createInteger(decPos);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(NumberFormatException  nfe)  {  int  decPos  =  str.lastIndexOf('.');  return  createInteger(decPos);	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.lastIndexOf('.');    return    createInteger(decPos);    	non-compiled	[CE]  not  a  statement	43	None	replace
95	[BUG]  [BUGGY]  catch(NumberFormatException  nfe)  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  catch(NumberFormatException  nfe)  {  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	catch(NumberFormatException  nfe)  {	  catch(NumberFormatException    e)    {    	non-compiled	[CE]  not  a  statement	36	None	replace
96	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.charAt(1)))  {  return  createLong(numeric);  }  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.charAt(1)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.charAt(1)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos,    decPos))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	51	None	replace
97	[BUG]  [BUGGY]  Dec  <  Object>  dec  =  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Dec  <  Object>  dec  =  str.substring(0,  str.length()  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	Dec  <  Object>  dec  =  str.substring(0,  str.length()  -  1);	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos    +    1))    ||    isDigits(numeric.charAt(0)))    {    dec    =    str.substring(0,    str.length()    -    1);    }    	non-compiled	[CE]  not  a  statement	46	None	replace
98	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createInteger(numeric);    }    	non-compiled	[CE]  not  a  statement	6	None	replace
99	[BUG]  [BUGGY]  return  createBigInteger(numeric);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  return  createBigInteger(numeric);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	return  createBigInteger(numeric);	  throw    new    NumberFormatException(   "   ");    	non-compiled	[CE]  not  a  statement	21	None	replace
100	[BUG]  [BUGGY]  numeric  =  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  numeric  =  str.substring(0,  str.length()  -  1);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	numeric  =  str.substring(0,  str.length()  -  1);	  throw    new    NumberFormatException(   "   ");    	non-compiled	[CE]  not  a  statement	21	None	replace
101	[BUG]  [BUGGY]  new  NumberFormatException( " ");  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  new  NumberFormatException( " ");  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	new  NumberFormatException( " ");	  throw    new    NumberFormatException(   "   ");    	non-compiled	[CE]  not  a  statement	21	None	replace
102	[BUG]  [BUGGY]  numeric  =  str.substring(0,  str.length()  -  2);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  numeric  =  str.substring(0,  str.length()  -  2);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	numeric  =  str.substring(0,  str.length()  -  2);	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    return    createInteger(numeric);    }    	non-compiled	[CE]  not  a  statement	52	None	replace
103	[BUG]  [BUGGY]  }  catch(NumberFormatException  nfe)  {  int  decPos  =  str.indexOf('-');  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  nfe)  {  int  decPos  =  str.indexOf('-');  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(NumberFormatException  nfe)  {  int  decPos  =  str.indexOf('-');	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.indexOf('-');    	non-compiled	[CE]  not  a  statement	16	None	replace
104	[BUG]  [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  int  decPos  =  str.indexOf('-',  decPos);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  int  decPos  =  str.indexOf('-',  decPos);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(IndexOutOfBoundsException  nfe)  {  int  decPos  =  str.indexOf('-',  decPos);	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.indexOf('-');    	non-compiled	[CE]  not  a  statement	16	None	replace
105	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createInteger(numeric);  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	10	None	replace
106	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length()  -  1);  }  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length()  -  1);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length()  -  1);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos,    dec))    ||    isDigits(numeric.charAt(0)))    {    dec    =    str.substring(0,    str.length()    -    1);    }    	non-compiled	[CE]  not  a  statement	45	None	replace
107	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length()  -  1  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length()  -  1  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length()  -  1	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos,    dec))    ||    isDigits(numeric.charAt(0)))    {    dec    =    str.substring(0,    str.length()    -    1);    }    	non-compiled	[CE]  not  a  statement	45	None	replace
108	[BUG]  [BUGGY]  }  catch  (NullPointerException  e)  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch  (NullPointerException  e)  {  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch  (NullPointerException  e)  {	  }    catch    (NoSuchElementException    e)    {    	non-compiled	[CE]  not  a  statement	5	None	replace
109	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong(numeric  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong(numeric  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong(numeric	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos    +    1))    ||    isDigits(numeric.substring(decPos    +    1)))    {    return    createLong(nu    	non-compiled	[CE]  not  a  statement	38	None	replace
110	[BUG]  [BUGGY]  if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos    +    1))    ||    isDigits(numeric.substring(decPos    +    1)))    {    return    createLong(nu    	non-compiled	[CE]  not  a  statement	38	None	replace
111	[BUG]  [BUGGY]  catch(NumberFormatException  nfe)  {  lastChar  =  str.charAt(numeric.length()  -  1);  [CE]  not  a  statement  [FE]        NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  catch(NumberFormatException  nfe)  {  lastChar  =  str.charAt(numeric.length()  -  1);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	catch(NumberFormatException  nfe)  {  lastChar  =  str.charAt(numeric.length()  -  1);	  }    catch    (IndexOutOfBoundsException    nfe)    {    lastChar    =    str.charAt(numeric.length()    -    1);    	non-compiled	[CE]  not  a  statement	30	None	replace
112	[BUG]  [BUGGY]  }  catch(NumberFormatException  nfe)  {  lastChar  =  str.charAt(numeric.length()  -  1);  [CE]  not  a  statement  [FE]          NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  nfe)  {  lastChar  =  str.charAt(numeric.length()  -  1);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(NumberFormatException  nfe)  {  lastChar  =  str.charAt(numeric.length()  -  1);	  }    catch    (IndexOutOfBoundsException    nfe)    {    lastChar    =    str.charAt(numeric.length()    -    1);    	non-compiled	[CE]  not  a  statement	30	None	replace
113	[BUG]  [BUGGY]  catch(NumberFormatException  nfe)  {  lastChar  =  str.charAt(numeric.length()  -  1);  }  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  catch(NumberFormatException  nfe)  {  lastChar  =  str.charAt(numeric.length()  -  1);  }  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	catch(NumberFormatException  nfe)  {  lastChar  =  str.charAt(numeric.length()  -  1);  }	  }    catch    (IndexOutOfBoundsException    nfe)    {    lastChar    =    str.charAt(numeric.length()    -    1);    	non-compiled	[CE]  not  a  statement	30	None	replace
114	[BUG]  [BUGGY]  }  catch(NumberFormatException  nfe)  {  int  decPos  =  str.lastIndexOf('-');  return  createInteger(decPos);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  nfe)  {  int  decPos  =  str.lastIndexOf('-');  return  createInteger(decPos);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(NumberFormatException  nfe)  {  int  decPos  =  str.lastIndexOf('-');  return  createInteger(decPos);	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.lastIndexOf('-');    return    createInteger(decPos);    	non-compiled	[CE]  not  a  statement	44	None	replace
115	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
116	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(1)))  {  return  createBigInteger(numeric);  }  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(1)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(1)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
117	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1),    str.length())||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
118	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2),  str.length())  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2),  str.length())  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2),  str.length())  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1),    str.length())||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
119	[BUG]  [BUGGY]  if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }	  if(numeric    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
120	[BUG]  [BUGGY]  }  catch(NumberFormatException  nfe)  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createBigInteger(dec);  [CE]  <identifier>  expected  [FE]        NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  nfe)  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createBigInteger(dec);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(NumberFormatException  nfe)  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createBigInteger(dec);	  }    catch    (IndexOutOfBoundsException    nfe)    {    String    dec    =    str.substring(0,    str.length()    -    1);    return    createBigInteger(dec);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
121	[BUG]  [BUGGY]  }  catch(NumberFormatException  nfe)  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createInteger(dec);  [CE]  <identifier>  expected  [FE]          NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  nfe)  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createInteger(dec);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(NumberFormatException  nfe)  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createInteger(dec);	  }    catch    (IndexOutOfBoundsException    nfe)    {    String    dec    =    str.substring(0,    str.length()    -    1);    return    createBigInteger(dec);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
122	[BUG]  [BUGGY]  }  catch(NumberFormatException  nfe)  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createLong(dec);  [CE]  <identifier>  expected  [FE]            NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  nfe)  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createLong(dec);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(NumberFormatException  nfe)  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createLong(dec);	  }    catch    (IndexOutOfBoundsException    nfe)    {    String    dec    =    str.substring(0,    str.length()    -    1);    return    createBigInteger(dec);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
123	[BUG]  [BUGGY]  }  catch(NumberFormatException  nfe)  {  e.printStackTrace();  [CE]  <identifier>  expected  [FE]            NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  nfe)  {  e.printStackTrace();  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(NumberFormatException  nfe)  {  e.printStackTrace();	  }    catch    (IndexOutOfBoundsException    nfe)    {    e.printStackTrace();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
124	[BUG]  [BUGGY]  catch(NumberFormatException  nfe)  {  e.printStackTrace();  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  catch(NumberFormatException  nfe)  {  e.printStackTrace();  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	catch(NumberFormatException  nfe)  {  e.printStackTrace();	  }    catch    (IndexOutOfBoundsException    nfe)    {    e.printStackTrace();    	non-compiled	[CE]  not  a  statement	14	None	replace
125	[BUG]  [BUGGY]  }  catch(NumberFormatException  nfe)  {  String  dec  =  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]        NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  nfe)  {  String  dec  =  str.substring(0,  str.length()  -  1);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(NumberFormatException  nfe)  {  String  dec  =  str.substring(0,  str.length()  -  1);	  }    catch    (IndexOutOfBoundsException    nfe)    {    String    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	12	None	replace
126	[BUG]  [BUGGY]  }  catch  (IndexOutOfBoundsException  e)  {  String  dec  =  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]          NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch  (IndexOutOfBoundsException  e)  {  String  dec  =  str.substring(0,  str.length()  -  1);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch  (IndexOutOfBoundsException  e)  {  String  dec  =  str.substring(0,  str.length()  -  1);	  }    catch    (IndexOutOfBoundsException    nfe)    {    String    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	12	None	replace
127	[BUG]  [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  int  decPos  =  str.lastIndexOf('-')+  1;  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  int  decPos  =  str.lastIndexOf('-')+  1;  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(IndexOutOfBoundsException  nfe)  {  int  decPos  =  str.lastIndexOf('-')+  1;	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.indexOf('-')+    1;    	non-compiled	[CE]  not  a  statement	32	None	replace
128	[BUG]  [BUGGY]  }  catch(NumberFormatException  nfe)  {  String  lastChar  =  str.charAt(0);  [CE]  not  a  statement  [FE]          NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  nfe)  {  String  lastChar  =  str.charAt(0);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(NumberFormatException  nfe)  {  String  lastChar  =  str.charAt(0);	  }    catch    (IndexOutOfBoundsException    nfe)    {    String    lastChar    =    str.charAt(0);    	non-compiled	[CE]  not  a  statement	31	None	replace
129	[BUG]  [BUGGY]  }  catch(NumberFormatException  nfe)  {  String  lastChar  =  str.charAt(1);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  nfe)  {  String  lastChar  =  str.charAt(1);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(NumberFormatException  nfe)  {  String  lastChar  =  str.charAt(1);	  }    catch    (IndexOutOfBoundsException    nfe)    {    String    lastChar    =    str.charAt(0);    	non-compiled	[CE]  not  a  statement	31	None	replace
130	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.charAt(1)))  {  return  createLong(numeric);  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.charAt(1)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.charAt(1)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos    +    1))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	50	None	replace
131	[BUG]  [BUGGY]  while(dec!=  '-'  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  dec  =  new  String(numeric.substring(1));  [CE]  <identifier>  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  while(dec!=  '-'  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  dec  =  new  String(numeric.substring(1));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	while(dec!=  '-'  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  dec  =  new  String(numeric.substring(1));	  while(numeric.charAt(0)!=    '-'    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    dec    =    new    String(numeric.substring(1));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
132	[BUG]  [BUGGY]  Dec  =  str.substring(0,  str.length());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Dec  =  str.substring(0,  str.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	Dec  =  str.substring(0,  str.length());	  dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	19	None	replace
133	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1),  str)||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1),  str)||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1),  str)||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos    +    1))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
134	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(2,  1)))  {  return  createLong(numeric);  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(2,  1)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(2,  1)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    2))    ||    isDigits(numeric.substring(1,    1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
135	[BUG]  [BUGGY]  numericDec  =  str.substring(0,  str.length()  -  1);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  numericDec  =  str.substring(0,  str.length()  -  1);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	numericDec  =  str.substring(0,  str.length()  -  1);	  throw    new    NumberFormatException(   "   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
136	[BUG]  [BUGGY]  return  createBigDecimal(numeric);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  return  createBigDecimal(numeric);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	return  createBigDecimal(numeric);	  throw    new    NumberFormatException(   "   ");    	non-compiled	[CE]  not  a  statement	21	None	replace
137	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }	  if(numeric    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	18	None	replace
138	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.charAt(1)))  {  return  createLong(numeric);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.charAt(1)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.charAt(1)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    2))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	49	None	replace
139	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1)))  {  return  createBigInteger(numeric);  }  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	9	None	replace
140	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1)))  {  return  createLong(numeric);  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    return    createInteger(numeric);    }    	non-compiled	[CE]  not  a  statement	52	None	replace
141	[BUG]  [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  dec  =  str.substring(0,  str.length());  [CE]  not  a  statement  [FE]        NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(IndexOutOfBoundsException  nfe)  {  dec  =  str.substring(0,  str.length());  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(IndexOutOfBoundsException  nfe)  {  dec  =  str.substring(0,  str.length());	  }    catch    (IndexOutOfBoundsException    nfe)    {    String    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	12	None	replace
142	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(2,  2)))  {  return  createBigInteger(numeric);  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(2,  2)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(2,  2)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createInteger(numeric);    }    	non-compiled	[CE]  not  a  statement	6	None	replace
143	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(2,  2)))  {  return  createInteger(numeric);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(2,  2)))  {  return  createInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(2,  2)))  {  return  createInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createInteger(numeric);    }    	non-compiled	[CE]  not  a  statement	6	None	replace
144	[BUG]  [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
145	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length())||  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length()  -  1);  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length())||  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length()  -  1);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length())||  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length()  -  1);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1),    str.length())||    isDigits(numeric.charAt(0)))    {    dec    =    str.substring(0,    str.length()    -    1);    }    	non-compiled	[CE]  not  a  statement	28	None	replace
146	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos,  1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos,  1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos,  1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos,    decPos))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	51	None	replace
147	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2,  decPos))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2,  decPos))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2,  decPos))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos,    decPos))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	51	None	replace
148	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2,  2)))  {  return  createBigInteger(numeric);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2,  2)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2,  2)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  not  a  statement	7	None	replace
149	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  not  a  statement	7	None	replace
150	[BUG]  [BUGGY]  }  catch(Throwable  e,  SHORT_MINUS_ONE)  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(Throwable  e,  SHORT_MINUS_ONE)  {  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(Throwable  e,  SHORT_MINUS_ONE)  {	  }    catch(Throwable    e)    {    	non-compiled	[CE]  not  a  statement	22	None	replace
151	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.');  [CE]  not  a  statement  [FE]          NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  int  decPos  =  str.indexOf('.');  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	int  decPos  =  str.indexOf('.');	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	13	None	replace
152	[BUG]  [BUGGY]  while(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  dec  =  new  String(numeric.substring(1));  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  while(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  dec  =  new  String(numeric.substring(1));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	while(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  dec  =  new  String(numeric.substring(1));	  while(numeric.charAt(0)!=    '-'    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    dec    =    new    String(numeric.substring(1));    	non-compiled	[CE]  not  a  statement	11	None	replace
153	[BUG]  [BUGGY]  while(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  dec  =  new  String(numeric.substring(1));  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  while(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  dec  =  new  String(numeric.substring(1));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	while(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  dec  =  new  String(numeric.substring(1));	  while(numeric.charAt(0)!=    '-'    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    dec    =    new    String(numeric.substring(1));    	non-compiled	[CE]  not  a  statement	11	None	replace
154	[BUG]  [BUGGY]  while(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  dec  =  new  String(numeric.substring(1));  [CE]  not  a  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  while(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  dec  =  new  String(numeric.substring(1));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	while(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  dec  =  new  String(numeric.substring(1));	  while(numeric.charAt(0)!=    '-'    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    dec    =    new    String(numeric.substring(1));    	non-compiled	[CE]  not  a  statement	11	None	replace
155	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length())))  {  dec  =  str.substring(0,  str.length());  }  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length())))  {  dec  =  str.substring(0,  str.length());  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length())))  {  dec  =  str.substring(0,  str.length());  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    str.length()    -    1)))    {    dec    =    str.substring(0,    str.length()    -    1);    }    	non-compiled	[CE]  not  a  statement	47	None	replace
156	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1))  ||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1))  ||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1))  ||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.charAt(0))    ||    isDigits(numeric.charAt(0)))    {    return    createInteger(numeric);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
157	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2,  str.length())||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2,  str.length())||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2,  str.length())||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1),    str.length())||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	35	None	replace
158	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1,  str.length())||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1,  str.length())||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1,  str.length())||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1),    str.length())||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	35	None	replace
159	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2,  str.length())||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2,  str.length())||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2,  str.length())||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1),    str.length())||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	35	None	replace
160	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createBigInteger(dec);  }  [CE]  not  a  statement  [FE]        NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createBigInteger(dec);  }  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createBigInteger(dec);  }	  }    catch    (IndexOutOfBoundsException    nfe)    {    String    dec    =    str.substring(0,    str.length()    -    1);    return    createBigInteger(dec);    	non-compiled	[CE]  not  a  statement	40	None	replace
161	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createInteger(dec);  }  [CE]  not  a  statement  [FE]          NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createInteger(dec);  }  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createInteger(dec);  }	  }    catch    (IndexOutOfBoundsException    nfe)    {    String    dec    =    str.substring(0,    str.length()    -    1);    return    createBigInteger(dec);    	non-compiled	[CE]  not  a  statement	40	None	replace
162	[BUG]  [BUGGY]  }  catch(IndexOutOfBoundsException  e)  {  throw  new  NumberFormatException( " ");  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(IndexOutOfBoundsException  e)  {  throw  new  NumberFormatException( " ");  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	}  catch(IndexOutOfBoundsException  e)  {  throw  new  NumberFormatException( " ");	  }    catch    (IndexOutOfBoundsException    nfe)    {    throw    new    NumberFormatException(   "   ");    	non-compiled	[CE]  not  a  statement	42	None	replace
163	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  &&  isDigits(numeric.substring(2,  2)))  {  return  createLong(numeric);  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  &&  isDigits(numeric.substring(2,  2)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  &&  isDigits(numeric.substring(2,  2)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	37	None	replace
164	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  &&  isDigits(numeric.substring(2,  2))  {  return  createLong(numeric);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  &&  isDigits(numeric.substring(2,  2))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  &&  isDigits(numeric.substring(2,  2))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	37	None	replace
165	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos    +    1))    ||    isDigits(numeric.substring(decPos    +    1)))    {    return    createLong(nu    	non-compiled	[CE]  not  a  statement	38	None	replace
166	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.substring(decPos  +  1))  {  return  createLong(nu  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.substring(decPos  +  1))  {  return  createLong(nu  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.substring(decPos  +  1))  {  return  createLong(nu	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos    +    1))    ||    isDigits(numeric.substring(decPos    +    1)))    {    return    createLong(nu    	non-compiled	[CE]  not  a  statement	38	None	replace
167	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.substring(decPos  +  1)))  {  return  createLong(nu  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.substring(decPos  +  1)))  {  return  createLong(nu  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.substring(decPos  +  1)))  {  return  createLong(nu	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos    +    1))    ||    isDigits(numeric.substring(decPos    +    1)))    {    return    createLong(nu    	non-compiled	[CE]  not  a  statement	38	None	replace
168	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length());  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length());  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1))  ||  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length());  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(decPos    +    1))    ||    isDigits(numeric.charAt(0)))    {    dec    =    str.substring(0,    str.length()    -    1);    }    	non-compiled	[CE]  not  a  statement	46	None	replace
169	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.');  return  createInteger(decPos  +  1);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  int  decPos  =  str.lastIndexOf('.');  return  createInteger(decPos  +  1);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	int  decPos  =  str.lastIndexOf('.');  return  createInteger(decPos  +  1);	  }    catch    (IndexOutOfBoundsException    nfe)    {    int    decPos    =    str.lastIndexOf('.');    return    createInteger(decPos);    	non-compiled	[CE]  not  a  statement	43	None	replace
