bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  mant  =  str.substring(0,  decPos  +  1);  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]  mant  =  str.substring(0,  decPos  +  1);  [BUGGY]  }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	486	486	1	replace	mant  =  str.substring(0,  decPos  +  1);	mant  =  str.substring(0,  decPos);  	non-compiled	[CE]  not  a  statement	27	None	replace
2	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos);  [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]  mant  =  str.substring(0,  expPos);  [BUGGY]  }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	486	486	1	replace	mant  =  str.substring(0,  expPos);	mant  =  str.substring(0,  decPos);  	non-compiled	[CE]  not  a  statement	27	None	replace
3	[BUG]  [BUGGY]  mant  =  str.substring(0,  1);  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]  mant  =  str.substring(0,  1);  [BUGGY]  }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	486	486	1	replace	mant  =  str.substring(0,  1);	mant  =  str.substring(0,  decPos);  	non-compiled	[CE]  not  a  statement	27	None	replace
4	[BUG]  [BUGGY]  mant  =  str.substring(1,  decPos);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]  mant  =  str.substring(1,  decPos);  [BUGGY]  }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	486	486	1	replace	mant  =  str.substring(1,  decPos);	mant  =  str.substring(0,  decPos);  	non-compiled	[CE]  not  a  statement	27	None	replace
5	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException  [CONTEXT]  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    [BUGGY]  }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	486	486	1	replace	  	mant  =  str.substring(0,  decPos);  	non-compiled	[CE]  not  a  statement	27	None	replace
6	[BUG]  [BUGGY]    int  expPos  =  str.lastIndexOf('.');  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    int  expPos  =  str.lastIndexOf('.');  [BUGGY]  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	486	486	1	replace	    int  expPos  =  str.lastIndexOf('.');		non-compiled	[CE]  not  a  statement	28	None	add
7	[BUG]  [BUGGY]    dec  =  str.substring(decPos  +  1);  [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    dec  =  str.substring(decPos  +  1);  [BUGGY]  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	486	486	1	replace	    dec  =  str.substring(decPos  +  1);		non-compiled	[CE]  not  a  statement	28	None	add
8	[BUG]  [BUGGY]    int  expPos  =  str.indexOf(dec);  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    int  expPos  =  str.indexOf(dec);  [BUGGY]  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	486	486	1	replace	    int  expPos  =  str.indexOf(dec);		non-compiled	[CE]  not  a  statement	28	None	add
9	[BUG]  [BUGGY]    int  expPos  =  str.lastIndexOf(dec);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    int  expPos  =  str.lastIndexOf(dec);  [BUGGY]  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	486	486	1	replace	    int  expPos  =  str.lastIndexOf(dec);		non-compiled	[CE]  not  a  statement	28	None	add
10	[BUG]  [BUGGY]    int  expPos  =  str.indexOf('  ');  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException  [CONTEXT]  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    int  expPos  =  str.indexOf('  ');  [BUGGY]  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	486	486	1	replace	    int  expPos  =  str.indexOf('  ');		non-compiled	[CE]  not  a  statement	28	None	add
11	[BUG]  [BUGGY]    int  decPos  =  str.lastIndexOf('.');  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    int  decPos  =  str.lastIndexOf('.');  [BUGGY]  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	486	486	1	replace	    int  decPos  =  str.lastIndexOf('.');		non-compiled	[CE]  not  a  statement	28	None	add
12	[BUG]  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	486	486	1	replace	    dec  =  str.substring(decPos  +  1,  expPos);		non-compiled	[CE]  not  a  statement	28	None	add
13	[BUG]  [BUGGY]    int  decPos  =  str.indexOf('  ');  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    int  decPos  =  str.indexOf('  ');  [BUGGY]  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	486	486	1	replace	    int  decPos  =  str.indexOf('  ');		non-compiled	[CE]  not  a  statement	28	None	add
14	[BUG]  [BUGGY]  mant  =  str.substring(0,  decPos  -  1);  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]  mant  =  str.substring(0,  decPos  -  1);  [BUGGY]  }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	486	486	1	replace	mant  =  str.substring(0,  decPos  -  1);	mant  =  str.substring(0,  decPos);  	non-compiled	[CE]  not  a  statement	27	None	replace
15	[BUG]  [BUGGY]    int  expPos  =  str.indexOf('.');  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    int  expPos  =  str.indexOf('.');  [BUGGY]  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	486	486	1	replace	    int  expPos  =  str.indexOf('.');		non-compiled	[CE]  not  a  statement	28	None	add
16	[BUG]  [BUGGY]    int  expPos  =  dec.length();  [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    int  expPos  =  dec.length();  [BUGGY]  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	486	486	1	replace	    int  expPos  =  dec.length();		non-compiled	[CE]  not  a  statement	28	None	add
17	[BUG]  [BUGGY]    int  expPos  =  dec.lastIndexOf('.');  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [BUGGY]    int  expPos  =  dec.lastIndexOf('.');  [BUGGY]  mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	486	486	1	replace	    int  expPos  =  dec.lastIndexOf('.');		non-compiled	[CE]  not  a  statement	28	None	add
