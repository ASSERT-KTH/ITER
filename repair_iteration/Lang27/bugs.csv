bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] } catch (NumberFormatException nfe) { [FE] StringIndexOutOfBoundsException [CONTEXT] if (dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) { try { return createLong(numeric); [BUGGY] } catch (NumberFormatException nfe) { [BUGGY]  } return createBigInteger(numeric); } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	replace	
2	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] if (dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) { try { return createLong(numeric); [BUGGY] [BUGGY] } catch (NumberFormatException nfe) {  } return createBigInteger(numeric); } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	512	512	1	add	
3	[BUG] [BUGGY] return createBigInteger(numeric); [FE] StringIndexOutOfBoundsException [CONTEXT] if (dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) { try { return createLong(numeric); } catch (NumberFormatException nfe) {  } [BUGGY] return createBigInteger(numeric); [BUGGY]  } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	515	515	1	replace	
4	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] if (dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) { try { return createLong(numeric); } catch (NumberFormatException nfe) {  } [BUGGY] [BUGGY] return createBigInteger(numeric); } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	515	515	1	add	
5	[BUG] [BUGGY] } [FE] StringIndexOutOfBoundsException [CONTEXT] try { Float f = NumberUtils.createFloat(numeric); if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {   return f; } } catch (NumberFormatException nfe) {  [BUGGY] } [BUGGY]  case 'd' : case 'D' : try { Double d = NumberUtils.createDouble(numeric); if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) { return d; } } catch (NumberFormatException nfe) {  [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	531	531	1	replace	
6	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] try { Float f = NumberUtils.createFloat(numeric); if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {   return f; } } catch (NumberFormatException nfe) {  [BUGGY] [BUGGY] }  case 'd' : case 'D' : try { Double d = NumberUtils.createDouble(numeric); if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) { return d; } } catch (NumberFormatException nfe) {  [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	531	531	1	add	
7	[BUG] [BUGGY] } [FE] StringIndexOutOfBoundsException [CONTEXT]  case 'd' : case 'D' : try { Double d = NumberUtils.createDouble(numeric); if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) { return d; } } catch (NumberFormatException nfe) {  [BUGGY] } [BUGGY] try { return createBigDecimal(numeric); } catch (NumberFormatException e) {  }  default : throw new NumberFormatException(str + " is not a valid number."); } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	542	542	1	replace	
8	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT]  case 'd' : case 'D' : try { Double d = NumberUtils.createDouble(numeric); if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) { return d; } } catch (NumberFormatException nfe) {  [BUGGY] [BUGGY] } try { return createBigDecimal(numeric); } catch (NumberFormatException e) {  }  default : throw new NumberFormatException(str + " is not a valid number."); } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	542	542	1	add	
9	[BUG] [BUGGY] } [FE] StringIndexOutOfBoundsException [CONTEXT] } else {  boolean allZeros = isAllZeros(mant) && isAllZeros(exp); try { Float f = createFloat(str); if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) { return f; } } catch (NumberFormatException nfe) {  [BUGGY] } [BUGGY] try { Double d = createDouble(str); if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) { return d; } } catch (NumberFormatException nfe) {  } return createBigDecimal(str); [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	585	585	1	replace	
10	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] } else {  boolean allZeros = isAllZeros(mant) && isAllZeros(exp); try { Float f = createFloat(str); if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) { return f; } } catch (NumberFormatException nfe) {  [BUGGY] [BUGGY] } try { Double d = createDouble(str); if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) { return d; } } catch (NumberFormatException nfe) {  } return createBigDecimal(str); [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	585	585	1	add	
11	[BUG] [BUGGY] if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) { [FE] StringIndexOutOfBoundsException [CONTEXT] try { Float f = createFloat(str); if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) { return f; } } catch (NumberFormatException nfe) {  } try { Double d = createDouble(str); [BUGGY] if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) { [BUGGY] return d; } } catch (NumberFormatException nfe) {  } return createBigDecimal(str); } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	588	588	1	replace	
12	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] try { Float f = createFloat(str); if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) { return f; } } catch (NumberFormatException nfe) {  } try { Double d = createDouble(str); [BUGGY] [BUGGY] if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) { return d; } } catch (NumberFormatException nfe) {  } return createBigDecimal(str); } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	588	588	1	add	
13	[BUG] [BUGGY] return d; [FE] StringIndexOutOfBoundsException [CONTEXT] Float f = createFloat(str); if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) { return f; } } catch (NumberFormatException nfe) {  } try { Double d = createDouble(str); if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) { [BUGGY] return d; [BUGGY] } } catch (NumberFormatException nfe) {  } return createBigDecimal(str); } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	589	589	1	replace	
14	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] Float f = createFloat(str); if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) { return f; } } catch (NumberFormatException nfe) {  } try { Double d = createDouble(str); if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) { [BUGGY] [BUGGY] return d; } } catch (NumberFormatException nfe) {  } return createBigDecimal(str); } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	589	589	1	add	
15	[BUG] [BUGGY] return null; [FE] StringIndexOutOfBoundsException [CONTEXT] public static Number createNumber(String str) throws NumberFormatException { if (str == null) { [BUGGY] return null; [BUGGY] } if (StringUtils.isBlank(str)) { throw new NumberFormatException("A blank string is not a valid number"); } if (str.startsWith("--")) {     return null; [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	454	454	1	replace	
16	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public static Number createNumber(String str) throws NumberFormatException { if (str == null) { [BUGGY] [BUGGY] return null; } if (StringUtils.isBlank(str)) { throw new NumberFormatException("A blank string is not a valid number"); } if (str.startsWith("--")) {     return null; [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	454	454	1	add	
17	[BUG] [BUGGY] return createInteger(str); [FE] StringIndexOutOfBoundsException [CONTEXT] throw new NumberFormatException("A blank string is not a valid number"); } if (str.startsWith("--")) {     return null; } if (str.startsWith("0x") || str.startsWith("-0x")) { [BUGGY] return createInteger(str); [BUGGY] } char lastChar = str.charAt(str.length() - 1); String mant; String dec; String exp; int decPos = str.indexOf('.'); int expPos = str.indexOf('e') + str.indexOf('E') + 1; if (decPos > -1) {  [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	467	467	1	replace	
18	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] throw new NumberFormatException("A blank string is not a valid number"); } if (str.startsWith("--")) {     return null; } if (str.startsWith("0x") || str.startsWith("-0x")) { [BUGGY] [BUGGY] return createInteger(str); } char lastChar = str.charAt(str.length() - 1); String mant; String dec; String exp; int decPos = str.indexOf('.'); int expPos = str.indexOf('e') + str.indexOf('E') + 1; if (decPos > -1) {  [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	467	467	1	add	
19	[BUG] [BUGGY] if (expPos > -1) { [FE] StringIndexOutOfBoundsException [CONTEXT] } char lastChar = str.charAt(str.length() - 1); String mant; String dec; String exp; int decPos = str.indexOf('.'); int expPos = str.indexOf('e') + str.indexOf('E') + 1; if (decPos > -1) { [BUGGY] if (expPos > -1) { [BUGGY] if (expPos < decPos) { throw new NumberFormatException(str + " is not a valid number."); } dec = str.substring(decPos + 1, expPos); } else { dec = str.substring(decPos + 1); } mant = str.substring(0, decPos); } else { if (expPos > -1) { [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	478	478	1	replace	
20	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] } char lastChar = str.charAt(str.length() - 1); String mant; String dec; String exp; int decPos = str.indexOf('.'); int expPos = str.indexOf('e') + str.indexOf('E') + 1; if (decPos > -1) { [BUGGY] [BUGGY] if (expPos > -1) { if (expPos < decPos) { throw new NumberFormatException(str + " is not a valid number."); } dec = str.substring(decPos + 1, expPos); } else { dec = str.substring(decPos + 1); } mant = str.substring(0, decPos); } else { if (expPos > -1) { [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	478	478	1	add	
21	[BUG] [BUGGY] if (expPos < decPos) { [FE] StringIndexOutOfBoundsException [CONTEXT] char lastChar = str.charAt(str.length() - 1); String mant; String dec; String exp; int decPos = str.indexOf('.'); int expPos = str.indexOf('e') + str.indexOf('E') + 1; if (decPos > -1) { if (expPos > -1) { [BUGGY] if (expPos < decPos) { [BUGGY] throw new NumberFormatException(str + " is not a valid number."); } dec = str.substring(decPos + 1, expPos); } else { dec = str.substring(decPos + 1); } mant = str.substring(0, decPos); } else { if (expPos > -1) { mant = str.substring(0, expPos); [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	479	479	1	replace	
22	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] char lastChar = str.charAt(str.length() - 1); String mant; String dec; String exp; int decPos = str.indexOf('.'); int expPos = str.indexOf('e') + str.indexOf('E') + 1; if (decPos > -1) { if (expPos > -1) { [BUGGY] [BUGGY] if (expPos < decPos) { throw new NumberFormatException(str + " is not a valid number."); } dec = str.substring(decPos + 1, expPos); } else { dec = str.substring(decPos + 1); } mant = str.substring(0, decPos); } else { if (expPos > -1) { mant = str.substring(0, expPos); [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	479	479	1	add	
23	[BUG] [BUGGY] dec = str.substring(decPos + 1, expPos); [FE] StringIndexOutOfBoundsException [CONTEXT] if (expPos > -1) { if (expPos < decPos) { throw new NumberFormatException(str + " is not a valid number."); } [BUGGY] dec = str.substring(decPos + 1, expPos); [BUGGY] } else { dec = str.substring(decPos + 1); } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	
24	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] if (expPos > -1) { if (expPos < decPos) { throw new NumberFormatException(str + " is not a valid number."); } [BUGGY] [BUGGY] dec = str.substring(decPos + 1, expPos); } else { dec = str.substring(decPos + 1); } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	add	
25	[BUG] [BUGGY] dec = str.substring(decPos + 1); [FE] StringIndexOutOfBoundsException [CONTEXT] if (expPos > -1) { if (expPos < decPos) { throw new NumberFormatException(str + " is not a valid number."); } dec = str.substring(decPos + 1, expPos); } else { [BUGGY] dec = str.substring(decPos + 1); [BUGGY] } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	replace	
26	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] if (expPos > -1) { if (expPos < decPos) { throw new NumberFormatException(str + " is not a valid number."); } dec = str.substring(decPos + 1, expPos); } else { [BUGGY] [BUGGY] dec = str.substring(decPos + 1); } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	484	484	1	add	
27	[BUG] [BUGGY] mant = str.substring(0, decPos); [FE] StringIndexOutOfBoundsException [CONTEXT] if (decPos > -1) { if (expPos > -1) { if (expPos < decPos) { throw new NumberFormatException(str + " is not a valid number."); } dec = str.substring(decPos + 1, expPos); } else { dec = str.substring(decPos + 1); } [BUGGY] mant = str.substring(0, decPos); [BUGGY] } else { if (expPos > -1) { mant = str.substring(0, expPos); } else { mant = str; } dec = null; } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	486	486	1	replace	
28	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] if (decPos > -1) { if (expPos > -1) { if (expPos < decPos) { throw new NumberFormatException(str + " is not a valid number."); } dec = str.substring(decPos + 1, expPos); } else { dec = str.substring(decPos + 1); } [BUGGY] [BUGGY] mant = str.substring(0, decPos); } else { if (expPos > -1) { mant = str.substring(0, expPos); } else { mant = str; } dec = null; } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	486	486	1	add	
29	[BUG] [BUGGY] mant = str.substring(0, expPos); [FE] StringIndexOutOfBoundsException [CONTEXT] if (expPos < decPos) { throw new NumberFormatException(str + " is not a valid number."); } dec = str.substring(decPos + 1, expPos); } else { dec = str.substring(decPos + 1); } mant = str.substring(0, decPos); } else { if (expPos > -1) { [BUGGY] mant = str.substring(0, expPos); [BUGGY] } else { mant = str; } dec = null; } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	replace	
30	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] if (expPos < decPos) { throw new NumberFormatException(str + " is not a valid number."); } dec = str.substring(decPos + 1, expPos); } else { dec = str.substring(decPos + 1); } mant = str.substring(0, decPos); } else { if (expPos > -1) { [BUGGY] [BUGGY] mant = str.substring(0, expPos); } else { mant = str; } dec = null; } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	489	489	1	add	
31	[BUG] [BUGGY] exp = str.substring(expPos + 1, str.length() - 1); [FE] StringIndexOutOfBoundsException [CONTEXT] } else { if (expPos > -1) { mant = str.substring(0, expPos); } else { mant = str; } dec = null; } if (!Character.isDigit(lastChar) && lastChar != '.') { if (expPos > -1 && expPos < str.length() - 1) { [BUGGY] exp = str.substring(expPos + 1, str.length() - 1); [BUGGY] } else { exp = null; }  String numeric = str.substring(0, str.length() - 1); boolean allZeros = isAllZeros(mant) && isAllZeros(exp); switch (lastChar) { case 'l' : case 'L' : if (dec == null [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	
32	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] } else { if (expPos > -1) { mant = str.substring(0, expPos); } else { mant = str; } dec = null; } if (!Character.isDigit(lastChar) && lastChar != '.') { if (expPos > -1 && expPos < str.length() - 1) { [BUGGY] [BUGGY] exp = str.substring(expPos + 1, str.length() - 1); } else { exp = null; }  String numeric = str.substring(0, str.length() - 1); boolean allZeros = isAllZeros(mant) && isAllZeros(exp); switch (lastChar) { case 'l' : case 'L' : if (dec == null [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	add	
33	[BUG] [BUGGY] Float f = NumberUtils.createFloat(numeric); [FE] StringIndexOutOfBoundsException [CONTEXT] } catch (NumberFormatException nfe) {  } return createBigInteger(numeric); } throw new NumberFormatException(str + " is not a valid number."); case 'f' : case 'F' : try { [BUGGY] Float f = NumberUtils.createFloat(numeric); [BUGGY] if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {   return f; } } catch (NumberFormatException nfe) {  }  [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	522	522	1	replace	
34	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] } catch (NumberFormatException nfe) {  } return createBigInteger(numeric); } throw new NumberFormatException(str + " is not a valid number."); case 'f' : case 'F' : try { [BUGGY] [BUGGY] Float f = NumberUtils.createFloat(numeric); if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {   return f; } } catch (NumberFormatException nfe) {  }  [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	522	522	1	add	
35	[BUG] [BUGGY] if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) { [FE] StringIndexOutOfBoundsException [CONTEXT]  } return createBigInteger(numeric); } throw new NumberFormatException(str + " is not a valid number."); case 'f' : case 'F' : try { Float f = NumberUtils.createFloat(numeric); [BUGGY] if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) { [BUGGY]   return f; } } catch (NumberFormatException nfe) {  }  case 'd' : [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	523	523	1	replace	
36	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT]  } return createBigInteger(numeric); } throw new NumberFormatException(str + " is not a valid number."); case 'f' : case 'F' : try { Float f = NumberUtils.createFloat(numeric); [BUGGY] [BUGGY] if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {   return f; } } catch (NumberFormatException nfe) {  }  case 'd' : [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	523	523	1	add	
37	[BUG] [BUGGY] return f; [FE] StringIndexOutOfBoundsException [CONTEXT] } throw new NumberFormatException(str + " is not a valid number."); case 'f' : case 'F' : try { Float f = NumberUtils.createFloat(numeric); if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {   [BUGGY] return f; [BUGGY] } } catch (NumberFormatException nfe) {  }  case 'd' : case 'D' : try { Double d = NumberUtils.createDouble(numeric); [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	replace	
38	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] } throw new NumberFormatException(str + " is not a valid number."); case 'f' : case 'F' : try { Float f = NumberUtils.createFloat(numeric); if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {   [BUGGY] [BUGGY] return f; } } catch (NumberFormatException nfe) {  }  case 'd' : case 'D' : try { Double d = NumberUtils.createDouble(numeric); [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	526	526	1	add	
39	[BUG] [BUGGY] Double d = NumberUtils.createDouble(numeric); [FE] StringIndexOutOfBoundsException [CONTEXT] return f; } } catch (NumberFormatException nfe) {  }  case 'd' : case 'D' : try { [BUGGY] Double d = NumberUtils.createDouble(numeric); [BUGGY] if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) { return d; } } catch (NumberFormatException nfe) {  } try { return createBigDecimal(numeric); } catch (NumberFormatException e) {  [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	536	536	1	replace	
40	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] return f; } } catch (NumberFormatException nfe) {  }  case 'd' : case 'D' : try { [BUGGY] [BUGGY] Double d = NumberUtils.createDouble(numeric); if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) { return d; } } catch (NumberFormatException nfe) {  } try { return createBigDecimal(numeric); } catch (NumberFormatException e) {  [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	536	536	1	add	
41	[BUG] [BUGGY] if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) { [FE] StringIndexOutOfBoundsException [CONTEXT] } } catch (NumberFormatException nfe) {  }  case 'd' : case 'D' : try { Double d = NumberUtils.createDouble(numeric); [BUGGY] if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) { [BUGGY] return d; } } catch (NumberFormatException nfe) {  } try { return createBigDecimal(numeric); } catch (NumberFormatException e) {  } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	
42	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] } } catch (NumberFormatException nfe) {  }  case 'd' : case 'D' : try { Double d = NumberUtils.createDouble(numeric); [BUGGY] [BUGGY] if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) { return d; } } catch (NumberFormatException nfe) {  } try { return createBigDecimal(numeric); } catch (NumberFormatException e) {  } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	add	
43	[BUG] [BUGGY] return d; [FE] StringIndexOutOfBoundsException [CONTEXT] } catch (NumberFormatException nfe) {  }  case 'd' : case 'D' : try { Double d = NumberUtils.createDouble(numeric); if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) { [BUGGY] return d; [BUGGY] } } catch (NumberFormatException nfe) {  } try { return createBigDecimal(numeric); } catch (NumberFormatException e) {  }  [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	538	538	1	replace	
44	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] } catch (NumberFormatException nfe) {  }  case 'd' : case 'D' : try { Double d = NumberUtils.createDouble(numeric); if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) { [BUGGY] [BUGGY] return d; } } catch (NumberFormatException nfe) {  } try { return createBigDecimal(numeric); } catch (NumberFormatException e) {  }  [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	538	538	1	add	
45	[BUG] [BUGGY] return createBigDecimal(numeric); [FE] StringIndexOutOfBoundsException [CONTEXT] case 'D' : try { Double d = NumberUtils.createDouble(numeric); if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) { return d; } } catch (NumberFormatException nfe) {  } try { [BUGGY] return createBigDecimal(numeric); [BUGGY] } catch (NumberFormatException e) {  }  default : throw new NumberFormatException(str + " is not a valid number."); } } else {  [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	544	544	1	replace	
46	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] case 'D' : try { Double d = NumberUtils.createDouble(numeric); if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) { return d; } } catch (NumberFormatException nfe) {  } try { [BUGGY] [BUGGY] return createBigDecimal(numeric); } catch (NumberFormatException e) {  }  default : throw new NumberFormatException(str + " is not a valid number."); } } else {  [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	544	544	1	add	
47	[BUG] [BUGGY] if (expPos > -1 && expPos < str.length() - 1) { [FE] StringIndexOutOfBoundsException [CONTEXT]  }  default : throw new NumberFormatException(str + " is not a valid number."); } } else {   [BUGGY] if (expPos > -1 && expPos < str.length() - 1) { [BUGGY] exp = str.substring(expPos + 1, str.length()); } else { exp = null; } if (dec == null && exp == null) {  try { return createInteger(str); } catch (NumberFormatException nfe) {  [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	
48	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT]  }  default : throw new NumberFormatException(str + " is not a valid number."); } } else {   [BUGGY] [BUGGY] if (expPos > -1 && expPos < str.length() - 1) { exp = str.substring(expPos + 1, str.length()); } else { exp = null; } if (dec == null && exp == null) {  try { return createInteger(str); } catch (NumberFormatException nfe) {  [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	add	
49	[BUG] [BUGGY] exp = str.substring(expPos + 1, str.length()); [FE] StringIndexOutOfBoundsException [CONTEXT] }  default : throw new NumberFormatException(str + " is not a valid number."); } } else {   if (expPos > -1 && expPos < str.length() - 1) { [BUGGY] exp = str.substring(expPos + 1, str.length()); [BUGGY] } else { exp = null; } if (dec == null && exp == null) {  try { return createInteger(str); } catch (NumberFormatException nfe) {  } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	557	557	1	replace	
50	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] }  default : throw new NumberFormatException(str + " is not a valid number."); } } else {   if (expPos > -1 && expPos < str.length() - 1) { [BUGGY] [BUGGY] exp = str.substring(expPos + 1, str.length()); } else { exp = null; } if (dec == null && exp == null) {  try { return createInteger(str); } catch (NumberFormatException nfe) {  } [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	557	557	1	add	
