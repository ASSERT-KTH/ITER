bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Float  f  =  NumberUtils.createFloat(numeric);  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]    }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  [BUGGY]    Float  f  =  NumberUtils.createFloat(numeric);  [BUGGY]  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	523	523	1	replace	    Float  f  =  NumberUtils.createFloat(numeric);		non-compiled	[CE]  not  a  statement	36	None	add
2	[BUG]  [BUGGY]    Integer  f  =  NumberUtils.createInteger(numeric);  [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException  [CONTEXT]    }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  [BUGGY]    Integer  f  =  NumberUtils.createInteger(numeric);  [BUGGY]  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	523	523	1	replace	    Integer  f  =  NumberUtils.createInteger(numeric);		non-compiled	[CE]  not  a  statement	36	None	add
3	[BUG]  [BUGGY]    Float  f  =  NumberUtils.createLong(numeric);  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException  [CONTEXT]    }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  [BUGGY]    Float  f  =  NumberUtils.createLong(numeric);  [BUGGY]  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	523	523	1	replace	    Float  f  =  NumberUtils.createLong(numeric);		non-compiled	[CE]  not  a  statement	36	None	add
4	[BUG]  [BUGGY]    Float  f  =  NumberUtils.createInteger(numeric);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException  [CONTEXT]    }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  [BUGGY]    Float  f  =  NumberUtils.createInteger(numeric);  [BUGGY]  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	523	523	1	replace	    Float  f  =  NumberUtils.createInteger(numeric);		non-compiled	[CE]  not  a  statement	36	None	add
5	[BUG]  [BUGGY]    float  f  =  NumberUtils.createFloat(numeric);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException  [CONTEXT]    }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  [BUGGY]    float  f  =  NumberUtils.createFloat(numeric);  [BUGGY]  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	523	523	1	replace	    float  f  =  NumberUtils.createFloat(numeric);		non-compiled	[CE]  not  a  statement	36	None	add
6	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]    }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  [BUGGY]    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	523	523	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {	if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  	non-compiled	[CE]  not  a  statement	35	None	replace
7	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException  [CONTEXT]    }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	523	523	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros)))  {	if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  	non-compiled	[CE]  not  a  statement	35	None	replace
8	[BUG]  [BUGGY]    int  f  =  NumberUtils.createInteger(numeric);  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]    }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  [BUGGY]    int  f  =  NumberUtils.createInteger(numeric);  [BUGGY]  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	523	523	1	replace	    int  f  =  NumberUtils.createInteger(numeric);		non-compiled	[CE]  not  a  statement	36	None	add
9	[BUG]  [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]    }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  [BUGGY]  if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {  [BUGGY]    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	523	523	1	replace	if(!f.isInfinite()  &&(f.floatValue()  ==  0.0F  &&!allZeros)))  {	if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  	non-compiled	[CE]  not  a  statement	35	None	replace
10	[BUG]  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]    }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  [BUGGY]  if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {  [BUGGY]    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	523	523	1	replace	if(!(f.isNaN()  ||  f.isInfinite()  ||  f.floatValue()  ==  0.0F  &&!allZeros))  {	if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  	non-compiled	[CE]  not  a  statement	35	None	replace
11	[BUG]  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  ||!allZeros))  {  [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException  [CONTEXT]    }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  [BUGGY]  if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  ||!allZeros))  {  [BUGGY]    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	523	523	1	replace	if(!(f.isInfinite()  ||  f.floatValue()  ==  0.0F  ||!allZeros))  {	if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  	non-compiled	[CE]  not  a  statement	35	None	replace
12	[BUG]  [BUGGY]    Integer  f  =  NumberUtils.createLong(numeric);  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]    }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  [BUGGY]    Integer  f  =  NumberUtils.createLong(numeric);  [BUGGY]  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	523	523	1	replace	    Integer  f  =  NumberUtils.createLong(numeric);		non-compiled	[CE]  not  a  statement	36	None	add
13	[BUG]  [BUGGY]    Integer  f  =  NumberUtils.createFloat(numeric);  [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException  [CONTEXT]    }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  case  'f'  :  case  'F'  :  try  {  Float  f  =  NumberUtils.createFloat(numeric);  [BUGGY]    Integer  f  =  NumberUtils.createFloat(numeric);  [BUGGY]  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  }  case  'd'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	523	523	1	replace	    Integer  f  =  NumberUtils.createFloat(numeric);		non-compiled	[CE]  not  a  statement	36	None	add
