bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  +  1,  expPos);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  str.length()  +  1,  expPos);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(0,  str.length()  +  1,  expPos);	  exp    =    str.substring(0,    str.length()    -    1    +    1);    	non-compiled	[CE]  not  a  statement	65	None	replace
2	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  *  1  +  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  str.length()  *  1  +  1);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(0,  str.length()  *  1  +  1);	  exp    =    str.substring(0,    str.length()    -    1    +    1);    	non-compiled	[CE]  not  a  statement	65	None	replace
3	[BUG]  [BUGGY]  mant  =  str.substring(expPos,  str.length());  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  mant  =  str.substring(expPos,  str.length());  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(expPos,  str.length());	  mant    =    str.substring(expPos,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	49	None	replace
4	[BUG]  [BUGGY]  mant  =  str.substring(expPos,  str.length()  +  1);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  mant  =  str.substring(expPos,  str.length()  +  1);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(expPos,  str.length()  +  1);	  mant    =    str.substring(expPos,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	49	None	replace
5	[BUG]  [BUGGY]  exp  =   "   "  +  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =   "   "  +  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =   "   "  +  str.substring(expPos  +  1,  str.length()  -  1);	  exp    =   "   "    +    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	12	None	replace
6	[BUG]  [BUGGY]  StaticBucketMap.this.put(lastChar,  new  Long(expPos  +  1));  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(lastChar,  new  Long(expPos  +  1));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(lastChar,  new  Long(expPos  +  1));	  StaticBucketMap.this.put(lastChar,    new    Long(expPos));    	non-compiled	[CE]  not  a  statement	59	None	replace
7	[BUG]  [BUGGY]  StaticBucketMap.this.put(lastChar,  new  Long(expPos),  dec);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(lastChar,  new  Long(expPos),  dec);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(lastChar,  new  Long(expPos),  dec);	  StaticBucketMap.this.put(lastChar,    new    Long(expPos));    	non-compiled	[CE]  not  a  statement	59	None	replace
8	[BUG]  [BUGGY]  StaticBucketMap.this.put(lastChar,  new  Long(decPos));  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(lastChar,  new  Long(decPos));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(lastChar,  new  Long(decPos));	  StaticBucketMap.this.put(lastChar,    new    Long(expPos));    	non-compiled	[CE]  not  a  statement	59	None	replace
9	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  expPos  -  1  +  1);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  numeric  =  str.substring(0,  expPos  -  1  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  numeric  =  str.substring(0,  expPos  -  1  +  1);	  String    numeric    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	4	None	replace
10	[BUG]  [BUGGY]  Character.isDigit(lastChar)&&  expPos  >  str.length());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Character.isDigit(lastChar)&&  expPos  >  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character.isDigit(lastChar)&&  expPos  >  str.length());	  Character.isDigit(lastChar)&&    expPos    <    str.length());    	non-compiled	[CE]  not  a  statement	29	None	replace
11	[BUG]  [BUGGY]  Character.isDigit(lastChar)&&  expPos  ==  str.length());  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Character.isDigit(lastChar)&&  expPos  ==  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character.isDigit(lastChar)&&  expPos  ==  str.length());	  Character.isDigit(lastChar)&&    expPos    <    str.length());    	non-compiled	[CE]  not  a  statement	29	None	replace
12	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  expPos  +  2);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  numeric  =  str.substring(0,  expPos  +  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  numeric  =  str.substring(0,  expPos  +  2);	  String    numeric    =    str.substring(0,    expPos    +    1);    	non-compiled	[CE]  not  a  statement	2	None	replace
13	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length()  +  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  numeric  =  str.substring(0,  str.length()  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  numeric  =  str.substring(0,  str.length()  +  1);	  String    numeric    =    str.substring(0,    expPos    +    1);    	non-compiled	[CE]  not  a  statement	2	None	replace
14	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  -  2);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  str.length()  -  2);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(0,  str.length()  -  2);	  exp    =    str.substring(0,    str.length());    	non-compiled	[CE]  not  a  statement	39	None	replace
15	[BUG]  [BUGGY]  exp  =  str.substring(1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(1,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(1,  str.length()  -  1);	  exp    =    str.substring(0,    str.length());    	non-compiled	[CE]  not  a  statement	39	None	replace
16	[BUG]  [BUGGY]  StaticBucketMap.this.put(lastChar,  str.substring(expPos  +  1,  str.length()  -  1));  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(lastChar,  str.substring(expPos  +  1,  str.length()  -  1));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(lastChar,  str.substring(expPos  +  1,  str.length()  -  1));	  StaticBucketMap.this.put(lastChar,    str.substring(expPos    +    1));    	non-compiled	[CE]  not  a  statement	18	None	replace
17	[BUG]  [BUGGY]  StaticBucketMap.this.put(lastChar,  str.substring(expPos  +  1,  str.length()));  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(lastChar,  str.substring(expPos  +  1,  str.length()));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(lastChar,  str.substring(expPos  +  1,  str.length()));	  StaticBucketMap.this.put(lastChar,    str.substring(expPos    +    1));    	non-compiled	[CE]  not  a  statement	18	None	replace
18	[BUG]  [BUGGY]  StaticBucketMap.this.put(expPos,  str.substring(expPos  +  1));  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(expPos,  str.substring(expPos  +  1));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(expPos,  str.substring(expPos  +  1));	  StaticBucketMap.this.put(lastChar,    str.substring(expPos    +    1));    	non-compiled	[CE]  not  a  statement	18	None	replace
19	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  expPos  +  1);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  expPos  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  expPos  =  str.lastIndexOf('.',  expPos  +  1);	  Integer    expPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	46	None	replace
20	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  decPos);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  decPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  expPos  =  str.lastIndexOf('.',  decPos);	  Integer    expPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	46	None	replace
21	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  expPos  -  1);  [CE]  not  a  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  expPos  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  expPos  =  str.lastIndexOf('.',  expPos  -  1);	  Integer    expPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	46	None	replace
22	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);	  int    expPos    =    str.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  not  a  statement	60	None	replace
23	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.indexOf('.',  DEC_POP);	  int    expPos    =    str.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  not  a  statement	60	None	replace
24	[BUG]  [BUGGY]  mant  =  str.substring(1,  decPos);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  mant  =  str.substring(1,  decPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(1,  decPos);	  mant    =    str.substring(0,    decPos);    	non-compiled	[CE]  not  a  statement	68	None	replace
25	[BUG]  [BUGGY]  Integer  expPos  =  str.length()  -  1;  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  expPos  =  str.length()  -  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  expPos  =  str.length()  -  1;	  long    expPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	16	None	replace
26	[BUG]  [BUGGY]  Character.isDigit(lastChar)&&  expPos  >=  str.length()  -  1);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Character.isDigit(lastChar)&&  expPos  >=  str.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character.isDigit(lastChar)&&  expPos  >=  str.length()  -  1);	  Character.isDigit(lastChar)&&    expPos    >=    str.length());    	non-compiled	[CE]  not  a  statement	31	None	replace
27	[BUG]  [BUGGY]  Character.isDigit(lastChar)&&  expPos  ==  str.length()  -  1);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Character.isDigit(lastChar)&&  expPos  ==  str.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character.isDigit(lastChar)&&  expPos  ==  str.length()  -  1);	  Character.isDigit(lastChar)&&    expPos    >=    str.length());    	non-compiled	[CE]  not  a  statement	31	None	replace
28	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.indexOf('.',  expPos  +  1);	  int    expPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	25	None	replace
29	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  decPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.indexOf('.',  decPos);	  int    expPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	25	None	replace
30	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  -  1);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.indexOf('.',  expPos  -  1);	  int    expPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	25	None	replace
31	[BUG]  [BUGGY]  expPos  =  str.substring(0,  expPos);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.substring(0,  expPos);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	expPos  =  str.substring(0,  expPos);	  if(expPos    >    -1)    {    mant    =    str.substring(0,    expPos);    }    else    {    exp    =    null;    }    	non-compiled	[CE]  not  a  statement	67	None	replace
32	[BUG]  [BUGGY]  Mant  =  str.substring(0,  expPos);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Mant  =  str.substring(0,  expPos);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Mant  =  str.substring(0,  expPos);	  if(expPos    >    -1)    {    mant    =    str.substring(0,    expPos);    }    else    {    exp    =    null;    }    	non-compiled	[CE]  not  a  statement	67	None	replace
33	[BUG]  [BUGGY]  exp  =  null;  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  null;  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  null;	  if(expPos    >    -1)    {    mant    =    str.substring(0,    expPos);    }    else    {    exp    =    null;    }    	non-compiled	[CE]  not  a  statement	67	None	replace
34	[BUG]  [BUGGY]  Character.isDigit(lastChar)&&  expPos  >  str.length();  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Character.isDigit(lastChar)&&  expPos  >  str.length();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character.isDigit(lastChar)&&  expPos  >  str.length();	  Character.isDigit(lastChar)&&    expPos    >    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	30	None	replace
35	[BUG]  [BUGGY]  StaticBucketMap.this.put(lastChar,  str.substring(0,  expPos));  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(lastChar,  str.substring(0,  expPos));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(lastChar,  str.substring(0,  expPos));	  StaticBucketMap.this.put(lastChar,    str.substring(expPos));    	non-compiled	[CE]  not  a  statement	19	None	replace
36	[BUG]  [BUGGY]  StaticBucketMap.this.put(lastChar,  str.substring(0,  str.length()  -  1));  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(lastChar,  str.substring(0,  str.length()  -  1));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(lastChar,  str.substring(0,  str.length()  -  1));	  StaticBucketMap.this.put(lastChar,    str.substring(expPos));    	non-compiled	[CE]  not  a  statement	19	None	replace
37	[BUG]  [BUGGY]  StaticBucketMap.this.put(expPos,  str.substring(expPos));  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(expPos,  str.substring(expPos));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(expPos,  str.substring(expPos));	  StaticBucketMap.this.put(lastChar,    str.substring(expPos));    	non-compiled	[CE]  not  a  statement	19	None	replace
38	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.',  expPos));  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.',  expPos));  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.',  expPos));	  exp    =    str.substring(expPos    +    1,    str.lastIndexOf('.'));    	non-compiled	[CE]  not  a  statement	70	None	replace
39	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.')+  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.')+  1);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.')+  1);	  exp    =    str.substring(expPos    +    1,    str.lastIndexOf('.'));    	non-compiled	[CE]  not  a  statement	70	None	replace
40	[BUG]  [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	expPos  =  str.substring(expPos  +  1,  str.length()  -  2);	  exp    =    str.substring(expPos    +    1,    str.length()    *    2);    	non-compiled	[CE]  not  a  statement	21	None	replace
41	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  3,  str.length());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  3,  str.length());  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(expPos  +  3,  str.length());	  exp    =    str.substring(expPos    +    3,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	64	None	replace
42	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  4,  str.length()  -  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  4,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(expPos  +  4,  str.length()  -  1);	  exp    =    str.substring(expPos    +    3,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	64	None	replace
43	[BUG]  [BUGGY]  StaticBucketMap.this.put(expPos,  lastChar);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(expPos,  lastChar);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(expPos,  lastChar);	  StaticBucketMap.this.put(lastChar,    expPos);    	non-compiled	[CE]  not  a  statement	57	None	replace
44	[BUG]  [BUGGY]  StaticBucketMap.this.put(exp,  str);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(exp,  str);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(exp,  str);	  StaticBucketMap.this.put(mant,    str);    	non-compiled	[CE]  not  a  statement	77	None	replace
45	[BUG]  [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  *  2);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  *  2);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	expPos  =  str.substring(expPos  +  1,  str.length()  *  2);	  expPos    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	11	None	replace
46	[BUG]  [BUGGY]  Character.isDigit(lastChar)&&  expPos  >=  str.length()  -  1;  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Character.isDigit(lastChar)&&  expPos  >=  str.length()  -  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character.isDigit(lastChar)&&  expPos  >=  str.length()  -  1;	  Character.isDigit(lastChar)&&    expPos    >=    str.length();    	non-compiled	[CE]  not  a  statement	78	None	replace
47	[BUG]  [BUGGY]  Character.isDigit(lastChar)&&  expPos  <  str.length()  -  1;  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Character.isDigit(lastChar)&&  expPos  <  str.length()  -  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character.isDigit(lastChar)&&  expPos  <  str.length()  -  1;	  Character.isDigit(lastChar)&&    expPos    >=    str.length();    	non-compiled	[CE]  not  a  statement	78	None	replace
48	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos  +  1,  str.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  expPos  =  str.indexOf('.',  expPos  +  1,  str.length()  -  1);	  Integer    expPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  not  a  statement	44	None	replace
49	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  expPos  =  str.indexOf('.',  expPos  +  1,  str.length());	  Integer    expPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  not  a  statement	44	None	replace
50	[BUG]  [BUGGY]  mant  =  str.substring(0,  str.length());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  mant  =  str.substring(0,  str.length());  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(0,  str.length());	  mant    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	48	None	replace
51	[BUG]  [BUGGY]  mant  =  str.substring(0,  str.length()  +  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  mant  =  str.substring(0,  str.length()  +  1);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(0,  str.length()  +  1);	  mant    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	48	None	replace
52	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  1,  str.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  +  1,  str.length()  -  1);	  int    expPos    =    str.lastIndexOf('.',    expPos    +    1);    	non-compiled	[CE]  not  a  statement	22	None	replace
53	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  +  1,  str.length());	  int    expPos    =    str.lastIndexOf('.',    expPos    +    1);    	non-compiled	[CE]  not  a  statement	22	None	replace
54	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  1)-  1;  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  1)-  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  +  1)-  1;	  int    expPos    =    str.lastIndexOf('.',    expPos)-    1;    	non-compiled	[CE]  not  a  statement	75	None	replace
55	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)/  1;  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)/  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos)/  1;	  int    expPos    =    str.lastIndexOf('.',    expPos)-    1;    	non-compiled	[CE]  not  a  statement	75	None	replace
56	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos)-  1;  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos)-  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.indexOf('.',  expPos)-  1;	  int    expPos    =    str.lastIndexOf('.',    expPos)-    1;    	non-compiled	[CE]  not  a  statement	75	None	replace
57	[BUG]  [BUGGY]  exp  =  str.substring(expPos,  str.length());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos,  str.length());  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(expPos,  str.length());	  exp    =    str.substring(expPos,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	74	None	replace
58	[BUG]  [BUGGY]  exp  =  str.substring(expPos,  str.length()  +  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos,  str.length()  +  1);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(expPos,  str.length()  +  1);	  exp    =    str.substring(expPos,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	74	None	replace
59	[BUG]  [BUGGY]  expPos  =  str.substring(expPos,  str.length());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.substring(expPos,  str.length());  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	expPos  =  str.substring(expPos,  str.length());	  exp    =    str.substring(expPos,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	74	None	replace
60	[BUG]  [BUGGY]  expPos  -=  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  -=  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	expPos  -=  str.substring(expPos  +  1,  str.length()  -  1);	  expPos    -=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	27	None	replace
61	[BUG]  [BUGGY]  expPos  -=  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  -=  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	expPos  -=  str.substring(expPos  +  1,  str.length()  -  2);	  expPos    -=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	27	None	replace
62	[BUG]  [BUGGY]  expPos  -=  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  -=  str.substring(0,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	expPos  -=  str.substring(0,  str.length()  -  1);	  expPos    -=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	27	None	replace
63	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1)-  1;  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1)-  1;  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(expPos  +  1,  str.length()  -  1)-  1;	  exp    =    str.substring(expPos    +    1,    str.length())-    1;    	non-compiled	[CE]  not  a  statement	69	None	replace
64	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1)/  1;  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1)/  1;  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(expPos  +  1,  str.length()  -  1)/  1;	  exp    =    str.substring(expPos    +    1,    str.length())-    1;    	non-compiled	[CE]  not  a  statement	69	None	replace
65	[BUG]  [BUGGY]  StaticBucketMap.this.put(lastChar,  exp);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(lastChar,  exp);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(lastChar,  exp);	  StaticBucketMap.this.put(lastChar,    dec);    	non-compiled	[CE]  not  a  statement	58	None	replace
66	[BUG]  [BUGGY]  StaticBucketMap.this.put(expPos,  dec);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(expPos,  dec);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(expPos,  dec);	  StaticBucketMap.this.put(lastChar,    dec);    	non-compiled	[CE]  not  a  statement	58	None	replace
67	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  str.length()  -  2);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  str.length()  -  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(0,  expPos  +  1,  str.length()  -  2);	  mant    =    str.substring(0,    expPos    +    2);    	non-compiled	[CE]  not  a  statement	10	None	replace
68	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(0,  expPos  +  1,  str.length());	  mant    =    str.substring(0,    expPos    +    2);    	non-compiled	[CE]  not  a  statement	10	None	replace
69	[BUG]  [BUGGY]  Mant  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Mant  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Mant  =  str.substring(expPos  +  1,  str.length()  -  1);	  Mant    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	43	None	replace
70	[BUG]  [BUGGY]  Mant  =  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Mant  =  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Mant  =  str.substring(expPos  +  1,  str.length()  -  2);	  Mant    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	43	None	replace
71	[BUG]  [BUGGY]  Mant  =  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Mant  =  str.substring(0,  str.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Mant  =  str.substring(0,  str.length()  -  1);	  Mant    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	43	None	replace
72	[BUG]  [BUGGY]  String  expPos  =  str.length();  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  expPos  =  str.length();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  expPos  =  str.length();	  char    expPos    =    str.length();    	non-compiled	[CE]  not  a  statement	55	None	replace
73	[BUG]  [BUGGY]  Character  expPos  =  str.length();  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Character  expPos  =  str.length();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character  expPos  =  str.length();	  char    expPos    =    str.length();    	non-compiled	[CE]  not  a  statement	55	None	replace
74	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  1  +  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  1  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  numeric  =  str.substring(0,  str.length()  -  1  +  1);	  String    numeric    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	1	None	replace
75	[BUG]  [BUGGY]  Integer  str  =  createInteger(mant,  decPos);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(mant,  decPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(mant,  decPos);	  Integer    str    =    createInteger(dec,    expPos);    	non-compiled	[CE]  not  a  statement	37	None	replace
76	[BUG]  [BUGGY]  Integer  str  =  createInteger(mant,  expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(mant,  expPos  +  1,  str.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(mant,  expPos  +  1,  str.length()  -  1);	  Integer    str    =    createInteger(mant,    expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	73	None	replace
77	[BUG]  [BUGGY]  Integer  str  =  createInteger(mant,  expPos  +  1,  str.charAt(expPos  -  1));  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(mant,  expPos  +  1,  str.charAt(expPos  -  1));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(mant,  expPos  +  1,  str.charAt(expPos  -  1));	  Integer    str    =    createInteger(mant,    expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	73	None	replace
78	[BUG]  [BUGGY]  Integer  str  =  createInteger(mant,  expPos  +  1,  str.charAt(expPos  +  1));  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(mant,  expPos  +  1,  str.charAt(expPos  +  1));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(mant,  expPos  +  1,  str.charAt(expPos  +  1));	  Integer    str    =    createInteger(mant,    expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	73	None	replace
79	[BUG]  [BUGGY]  Integer  str  =  createInteger(mant,  expPos  +  1,  str.charAt(expPos));  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(mant,  expPos  +  1,  str.charAt(expPos));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(mant,  expPos  +  1,  str.charAt(expPos));	  Integer    str    =    createInteger(mant,    expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	73	None	replace
80	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(0,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  exp  =  str.substring(0,  str.length());	  String    exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	34	None	replace
81	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length()  +  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(0,  str.length()  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  exp  =  str.substring(0,  str.length()  +  1);	  String    exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	34	None	replace
82	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  1  +  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  1  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  exp  =  str.substring(0,  str.length()  -  1  +  1);	  String    exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	34	None	replace
83	[BUG]  [BUGGY]  exp  +=  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  +=  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  +=  str.substring(expPos  +  1,  str.length()  -  1);	  exp    +=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	13	None	replace
84	[BUG]  [BUGGY]  expPos  +=  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  +=  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	expPos  +=  str.substring(expPos  +  1,  str.length()  -  1);	  exp    +=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	13	None	replace
85	[BUG]  [BUGGY]  exp  +=  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  +=  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  +=  str.substring(expPos  +  1,  str.length()  -  2);	  exp    +=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	13	None	replace
86	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')/  1;  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.')/  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.lastIndexOf('.')/  1;	  int    expPos    =    str.lastIndexOf('.')-    1;    	non-compiled	[CE]  not  a  statement	54	None	replace
87	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  decPos  -  1);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  expPos  =  str.indexOf('.',  decPos  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  expPos  =  str.indexOf('.',  decPos  -  1);	  Integer    expPos    =    str.indexOf('.',    expPos    -    1);    	non-compiled	[CE]  not  a  statement	47	None	replace
88	[BUG]  [BUGGY]  Integer  str  =  createInteger(expPos,  mant  -  1);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(expPos,  mant  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(expPos,  mant  -  1);	  Integer    str    =    createInteger(mant,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	38	None	replace
89	[BUG]  [BUGGY]  Integer  str  =  createInteger(dec,  expPos  -  1);  [CE]  not  a  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(dec,  expPos  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(dec,  expPos  -  1);	  Integer    str    =    createInteger(mant,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	38	None	replace
90	[BUG]  [BUGGY]  Integer  str  =  createInteger(decPos,  expPos  -  1);  [CE]  not  a  statement  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(decPos,  expPos  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(decPos,  expPos  -  1);	  Integer    str    =    createInteger(mant,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	38	None	replace
91	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  -  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos  -  1);	  int    expPos    =    str.lastIndexOf('.',    expPos    -    1);    	non-compiled	[CE]  not  a  statement	24	None	replace
92	[BUG]  [BUGGY]  Integer  str  =  createInteger(decPos,  expPos);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(decPos,  expPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(decPos,  expPos);	  Integer    str    =    createInteger(durationPos,    expPos);    	non-compiled	[CE]  not  a  statement	61	None	replace
93	[BUG]  [BUGGY]  Integer  str  =  createInteger(expPos,  decPos);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(expPos,  decPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(expPos,  decPos);	  Integer    str    =    createInteger(durationPos,    expPos);    	non-compiled	[CE]  not  a  statement	61	None	replace
94	[BUG]  [BUGGY]  Integer  str  =  createInteger(expPos,  descriptionPos);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(expPos,  descriptionPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(expPos,  descriptionPos);	  Integer    str    =    createInteger(durationPos,    expPos);    	non-compiled	[CE]  not  a  statement	61	None	replace
95	[BUG]  [BUGGY]  Integer  str  =  createInteger(expPos,  mant  +  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(expPos,  mant  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(expPos,  mant  +  1);	  Integer    str    =    createInteger(mant,    expPos    +    1);    	non-compiled	[CE]  not  a  statement	35	None	replace
96	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1).trim();  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  mant  =  str.substring(0,  expPos  +  1).trim();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(0,  expPos  +  1).trim();	  mant    =    str.substring(0,    expPos    +    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
97	[BUG]  [BUGGY]  StaticBucketMap.this.put(expPos,  mant);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(expPos,  mant);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(expPos,  mant);	  StaticBucketMap.this.put(expPos,    str);    	non-compiled	[CE]  not  a  statement	20	None	replace
98	[BUG]  [BUGGY]  StaticBucketMap.this.put(str,  expPos);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(str,  expPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(str,  expPos);	  StaticBucketMap.this.put(expPos,    str);    	non-compiled	[CE]  not  a  statement	20	None	replace
99	[BUG]  [BUGGY]  String  exp  =  str.substring(expPos  +  1,  str.length()  *  2);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(expPos  +  1,  str.length()  *  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  exp  =  str.substring(expPos  +  1,  str.length()  *  2);	  String    exp    =    str.substring(expPos    +    1,    str.length()    *    1);    	non-compiled	[CE]  not  a  statement	63	None	replace
100	[BUG]  [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  -=  str.substring(expPos  +  1,  str.length()  -  2);	  exp    -=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	26	None	replace
101	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  dec);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  dec);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.indexOf('.',  dec);	  int    expPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  not  a  statement	50	None	replace
102	[BUG]  [BUGGY]  String  exp  =  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  exp  =  str.substring(expPos  +  1,  str.length()  -  2);	  String    exp    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	32	None	replace
103	[BUG]  [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  *  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  *  1);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	expPos  =  str.substring(expPos  +  1,  str.length()  *  1);	  expPos    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
104	[BUG]  [BUGGY]  expPos  =  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.substring(0,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	expPos  =  str.substring(0,  str.length()  -  1);	  expPos    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
105	[BUG]  [BUGGY]  Character.isDigit(lastChar)&&  expPos  <  -1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Character.isDigit(lastChar)&&  expPos  <  -1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character.isDigit(lastChar)&&  expPos  <  -1);	  Character.isDigit(lastChar)&&    expPos    >    -1);    	non-compiled	[CE]  not  a  statement	79	None	replace
106	[BUG]  [BUGGY]  Character.isDigit(lastChar)&&  expPos  >=  -1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Character.isDigit(lastChar)&&  expPos  >=  -1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character.isDigit(lastChar)&&  expPos  >=  -1);	  Character.isDigit(lastChar)&&    expPos    >    -1);    	non-compiled	[CE]  not  a  statement	79	None	replace
107	[BUG]  [BUGGY]  Character.isDigit(lastChar)&&  expPos  ==  -1);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Character.isDigit(lastChar)&&  expPos  ==  -1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character.isDigit(lastChar)&&  expPos  ==  -1);	  Character.isDigit(lastChar)&&    expPos    >    -1);    	non-compiled	[CE]  not  a  statement	79	None	replace
108	[BUG]  [BUGGY]  Character.isDigit(lastChar)&&  expPos  >  -1;  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Character.isDigit(lastChar)&&  expPos  >  -1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character.isDigit(lastChar)&&  expPos  >  -1;	  Character.isDigit(lastChar)&&    expPos    >    -1);    	non-compiled	[CE]  not  a  statement	79	None	replace
109	[BUG]  [BUGGY]  exp  -=  str.substring(0,  str.length());  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  -=  str.substring(0,  str.length());  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  -=  str.substring(0,  str.length());	  exp    -=    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	56	None	replace
110	[BUG]  [BUGGY]  exp  -=  str.substring(0,  str.length()  +  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  -=  str.substring(0,  str.length()  +  1);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  -=  str.substring(0,  str.length()  +  1);	  exp    -=    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	56	None	replace
111	[BUG]  [BUGGY]  String  exp  =  str.substring(expPos  +  1,  str.length()  -  1)+  1;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(expPos  +  1,  str.length()  -  1)+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  exp  =  str.substring(expPos  +  1,  str.length()  -  1)+  1;	  String    exp    =    str.substring(expPos    +    1,    str.length())+    1;    	non-compiled	[CE]  not  a  statement	62	None	replace
112	[BUG]  [BUGGY]  String  exp  =  str.substring(expPos  +  1,  str.length())/  1;  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(expPos  +  1,  str.length())/  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  exp  =  str.substring(expPos  +  1,  str.length())/  1;	  String    exp    =    str.substring(expPos    +    1,    str.length())+    1;    	non-compiled	[CE]  not  a  statement	62	None	replace
113	[BUG]  [BUGGY]  char  exp  =  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  char  exp  =  str.substring(expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	char  exp  =  str.substring(expPos  +  1,  str.length());	  char    exp    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	33	None	replace
114	[BUG]  [BUGGY]  Character  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Character  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character  exp  =  str.substring(expPos  +  1,  str.length()  -  1);	  char    exp    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	33	None	replace
115	[BUG]  [BUGGY]  Char  exp  =  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Char  exp  =  str.substring(expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Char  exp  =  str.substring(expPos  +  1,  str.length());	  char    exp    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	33	None	replace
116	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  2);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  numeric  =  str.substring(0,  str.length()  -  2);	  String    numeric    =    str.substring(0,    str.length());    	non-compiled	[CE]  not  a  statement	3	None	replace
117	[BUG]  [BUGGY]  String  numeric  =  str.substring(1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  numeric  =  str.substring(1,  str.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  numeric  =  str.substring(1,  str.length()  -  1);	  String    numeric    =    str.substring(0,    str.length());    	non-compiled	[CE]  not  a  statement	3	None	replace
118	[BUG]  [BUGGY]  mant  =  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  mant  =  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(expPos  +  1,  str.length()  -  2);	  mant    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	42	None	replace
119	[BUG]  [BUGGY]  Expression  exp  =  null;  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Expression  exp  =  null;  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Expression  exp  =  null;	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  not  a  statement	72	None	replace
120	[BUG]  [BUGGY]  Expr  exp  =  null;  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Expr  exp  =  null;  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Expr  exp  =  null;	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  not  a  statement	72	None	replace
121	[BUG]  [BUGGY]  Exp  =  null;  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Exp  =  null;  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Exp  =  null;	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  not  a  statement	72	None	replace
122	[BUG]  [BUGGY]  Integer  expPos  =  str.length()  +  1;  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  expPos  =  str.length()  +  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  expPos  =  str.length()  +  1;	  Integer    expPos    =    str.length();    	non-compiled	[CE]  not  a  statement	15	None	replace
123	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.');  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  expPos  =  str.lastIndexOf('.');  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  expPos  =  str.lastIndexOf('.');	  Integer    expPos    =    str.length();    	non-compiled	[CE]  not  a  statement	15	None	replace
124	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  numeric  =  str.substring(0,  expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  numeric  =  str.substring(0,  expPos  +  1,  str.length());	  String    numeric    =    str.substring(0,    expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	53	None	replace
125	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length()  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  numeric  =  str.substring(0,  str.length()  +  1,  str.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  numeric  =  str.substring(0,  str.length()  +  1,  str.length()  -  1);	  String    numeric    =    str.substring(0,    expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	53	None	replace
126	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  decPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  numeric  =  str.substring(0,  decPos  +  1,  str.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  numeric  =  str.substring(0,  decPos  +  1,  str.length()  -  1);	  String    numeric    =    str.substring(0,    expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	53	None	replace
127	[BUG]  [BUGGY]  String  expPos  =  str.length()  -  1;  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  expPos  =  str.length()  -  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  expPos  =  str.length()  -  1;	  char    expPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	14	None	replace
128	[BUG]  [BUGGY]  mant  =  str.substring(0,  decPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  mant  =  str.substring(0,  decPos  +  1,  str.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(0,  decPos  +  1,  str.length()  -  1);	  mant    =    str.substring(0,    expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
129	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  decPos);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(str,  decPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(str,  decPos);	  Integer    str    =    createInteger(str,    expPos);    	non-compiled	[CE]  not  a  statement	36	None	replace
130	[BUG]  [BUGGY]  Integer  str  =  createInteger(mant,  strPos);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(mant,  strPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(mant,  strPos);	  Integer    str    =    createInteger(str,    expPos);    	non-compiled	[CE]  not  a  statement	36	None	replace
131	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1  +  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  mant  =  str.substring(0,  expPos  -  1  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(0,  expPos  -  1  +  1);	  mant    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	9	None	replace
132	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  str.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(0,  expPos  -  1,  str.length()  -  1);	  mant    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	9	None	replace
133	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  1;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.')+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.indexOf('.')+  1;	  int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	76	None	replace
134	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)+  1;  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos)+  1;	  int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	76	None	replace
135	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  2;  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  2;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.lastIndexOf('.')+  2;	  int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	76	None	replace
136	[BUG]  [BUGGY]  String  exp  =  str.substring(expPos  +  1,  str.length())-  1;  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(expPos  +  1,  str.length())-  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  exp  =  str.substring(expPos  +  1,  str.length())-  1;	  String    exp    =    str.substring(expPos    +    1,    str.length()    *    1);    	non-compiled	[CE]  not  a  statement	63	None	replace
137	[BUG]  [BUGGY]  Integer  str  =  createInteger(lastChar,  expPos);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(lastChar,  expPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(lastChar,  expPos);	  Integer    str    =    createInteger(dec,    expPos);    	non-compiled	[CE]  not  a  statement	37	None	replace
138	[BUG]  [BUGGY]  StaticBucketMap.this.put(lastChar,  new  Long(expPos)+  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(lastChar,  new  Long(expPos)+  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(lastChar,  new  Long(expPos)+  1);	  StaticBucketMap.this.put(lastChar,    new    Long(expPos));    	non-compiled	[CE]  not  a  statement	59	None	replace
139	[BUG]  [BUGGY]  StaticBucketMap.this.put(str,  dec);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(str,  dec);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(str,  dec);	  StaticBucketMap.this.put(mant,    str);    	non-compiled	[CE]  not  a  statement	77	None	replace
140	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPos.length()  -  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  expPos.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(0,  expPos.length()  -  1);	  exp    =    str.substring(0,    str.length();    	non-compiled	[CE]  not  a  statement	41	None	replace
141	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPos);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  expPos);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(0,  expPos);	  exp    =    str.substring(0,    str.length();    	non-compiled	[CE]  not  a  statement	41	None	replace
142	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  2);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  +  2);	  int    expPos    =    str.lastIndexOf('.',    expPos    +    1);    	non-compiled	[CE]  not  a  statement	22	None	replace
143	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  decPos);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  decPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(0,  expPos  +  1,  decPos);	  mant    =    str.substring(0,    expPos    +    2);    	non-compiled	[CE]  not  a  statement	10	None	replace
144	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  mant  =  str.substring(0,  expPos  -  1  +  1,  str.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(0,  expPos  -  1  +  1,  str.length()  -  1);	  mant    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	9	None	replace
145	[BUG]  [BUGGY]  Mant  =  str.substring(0,  expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Mant  =  str.substring(0,  expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Mant  =  str.substring(0,  expPos  +  1,  str.length());	  mant    =    str.substring(0,    expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
146	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  1  +  1,  expPos);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  1  +  1,  expPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  exp  =  str.substring(0,  str.length()  -  1  +  1,  expPos);	  String    exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	34	None	replace
147	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos  +  2);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos  +  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  expPos  =  str.indexOf('.',  expPos  +  2);	  Integer    expPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  not  a  statement	44	None	replace
148	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  -  1  +  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  -  1  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  -  1  +  1);	  int    expPos    =    str.lastIndexOf('.',    expPos    -    1);    	non-compiled	[CE]  not  a  statement	24	None	replace
149	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  expPos  -  1  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  numeric  =  str.substring(0,  expPos  -  1  +  1,  str.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  numeric  =  str.substring(0,  expPos  -  1  +  1,  str.length()  -  1);	  String    numeric    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	4	None	replace
150	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  decPos  =  str.lastIndexOf('.',  expPos);	  int    expPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  not  a  statement	50	None	replace
151	[BUG]  [BUGGY]  mant  =  str.substring(0,  str.length()  -  1  +  expPos);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  mant  =  str.substring(0,  str.length()  -  1  +  expPos);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(0,  str.length()  -  1  +  expPos);	  mant    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	48	None	replace
152	[BUG]  [BUGGY]  StaticBucketMap.this.put(expPos  +  1,  str);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(expPos  +  1,  str);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(expPos  +  1,  str);	  StaticBucketMap.this.put(expPos,    str);    	non-compiled	[CE]  not  a  statement	20	None	replace
153	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(str,  expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(str,  expPos  +  1,  str.length());	  Integer    str    =    createInteger(mant,    expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	73	None	replace
154	[BUG]  [BUGGY]  Integer  str  =  createInteger(mant,  expPos  +  1,  str.charAt(0));  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(mant,  expPos  +  1,  str.charAt(0));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(mant,  expPos  +  1,  str.charAt(0));	  Integer    str    =    createInteger(mant,    expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	73	None	replace
155	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  DEC_POP);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  expPos  =  str.indexOf('.',  DEC_POP);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  expPos  =  str.indexOf('.',  DEC_POP);	  Integer    expPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  not  a  statement	45	None	replace
156	[BUG]  [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length())+  1;  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length())+  1;  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	expPos  =  str.substring(expPos  +  1,  str.length())+  1;	  expPos    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
157	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  expPos  -  1);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(str,  expPos  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(str,  expPos  -  1);	  Integer    str    =    createInteger(mant,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	38	None	replace
158	[BUG]  [BUGGY]  Integer  str  =  createInteger(durationPos,  expPos  -  1);  [CE]  not  a  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(durationPos,  expPos  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(durationPos,  expPos  -  1);	  Integer    str    =    createInteger(mant,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	38	None	replace
159	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  expPos);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  dec  =  str.substring(0,  expPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  dec  =  str.substring(0,  expPos);	  String    numeric    =    str.substring(0,    decPos);    	non-compiled	[CE]  not  a  statement	71	None	replace
160	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')-  1;  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.')-  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.indexOf('.')-  1;	  int    expPos    =    str.lastIndexOf('.')-    1;    	non-compiled	[CE]  not  a  statement	54	None	replace
161	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  expPos  +  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(str,  expPos  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(str,  expPos  +  1);	  Integer    str    =    createInteger(mant,    expPos    +    1);    	non-compiled	[CE]  not  a  statement	35	None	replace
162	[BUG]  [BUGGY]  StaticBucketMap.this.put(lastChar,  expPos  +  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(lastChar,  expPos  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(lastChar,  expPos  +  1);	  StaticBucketMap.this.put(lastChar,    expPos);    	non-compiled	[CE]  not  a  statement	57	None	replace
163	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  exp  =  str.substring(0,  str.length()  -  1)+  1;	  String    exp    =    str.substring(expPos    +    1,    str.length())+    1;    	non-compiled	[CE]  not  a  statement	62	None	replace
164	[BUG]  [BUGGY]  Character  expPos  =  str.charAt(expPos);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Character  expPos  =  str.charAt(expPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character  expPos  =  str.charAt(expPos);	  char    expPos    =    str.length();    	non-compiled	[CE]  not  a  statement	55	None	replace
165	[BUG]  [BUGGY]  Integer  str  =  createInteger(durationPos,  expPos  +  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(durationPos,  expPos  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(durationPos,  expPos  +  1);	  Integer    str    =    createInteger(durationPos,    expPos);    	non-compiled	[CE]  not  a  statement	61	None	replace
166	[BUG]  [BUGGY]  Integer  str  =  createInteger(expPos,  duePos);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(expPos,  duePos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(expPos,  duePos);	  Integer    str    =    createInteger(durationPos,    expPos);    	non-compiled	[CE]  not  a  statement	61	None	replace
167	[BUG]  [BUGGY]  ExpPos  expPos  =  str.indexOf('.')+  1;  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  ExpPos  expPos  =  str.indexOf('.')+  1;  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	ExpPos  expPos  =  str.indexOf('.')+  1;	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  not  a  statement	72	None	replace
168	[BUG]  [BUGGY]  ExpPos  expPos  =  str.charAt(expPos);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  ExpPos  expPos  =  str.charAt(expPos);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	ExpPos  expPos  =  str.charAt(expPos);	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  not  a  statement	72	None	replace
169	[BUG]  [BUGGY]  ExpPos  expPos  =  str.length();  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  ExpPos  expPos  =  str.length();  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	ExpPos  expPos  =  str.length();	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  not  a  statement	72	None	replace
170	[BUG]  [BUGGY]  Integer  str  =  createInteger(durationPos,  str);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(durationPos,  str);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(durationPos,  str);	  Integer    str    =    createInteger(str,    expPos);    	non-compiled	[CE]  not  a  statement	36	None	replace
171	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos  -  1  +  1);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos  -  1  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  expPos  =  str.indexOf('.',  expPos  -  1  +  1);	  Integer    expPos    =    str.indexOf('.',    expPos    -    1);    	non-compiled	[CE]  not  a  statement	47	None	replace
172	[BUG]  [BUGGY]  StaticBucketMap.this.put(lastChar,  str.substring(1,  expPos));  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(lastChar,  str.substring(1,  expPos));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(lastChar,  str.substring(1,  expPos));	  StaticBucketMap.this.put(lastChar,    str.substring(expPos));    	non-compiled	[CE]  not  a  statement	19	None	replace
173	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()));  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  str.length()));  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(0,  str.length()));	  exp    =    str.substring(0,    str.length()    +    1);    	non-compiled	[CE]  not  a  statement	40	None	replace
174	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1  -  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  mant  =  str.substring(0,  expPos  +  1  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(0,  expPos  +  1  -  1);	  mant    =    str.substring(0,    expPos    +    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
175	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  dec);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  dec);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(0,  expPos  -  1,  dec);	  mant    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	9	None	replace
176	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPos  +  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  expPos  +  1);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(0,  expPos  +  1);	  exp    =    str.substring(0,    str.length());    	non-compiled	[CE]  not  a  statement	39	None	replace
177	[BUG]  [BUGGY]  Integer  str  =  createInteger(expPos,  dec);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(expPos,  dec);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(expPos,  dec);	  Integer    str    =    createInteger(durationPos,    expPos);    	non-compiled	[CE]  not  a  statement	61	None	replace
178	[BUG]  [BUGGY]  Integer  str  =  createInteger(expPos,  expPos);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(expPos,  expPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(expPos,  expPos);	  Integer    str    =    createInteger(durationPos,    expPos);    	non-compiled	[CE]  not  a  statement	61	None	replace
179	[BUG]  [BUGGY]  Character.isDigit(dec)&&  expPos  >  -1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Character.isDigit(dec)&&  expPos  >  -1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character.isDigit(dec)&&  expPos  >  -1);	  Character.isDigit(lastChar)&&    expPos    >    -1);    	non-compiled	[CE]  not  a  statement	79	None	replace
180	[BUG]  [BUGGY]  ExpPos  =  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  ExpPos  =  str.substring(expPos  +  1,  str.length());  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	ExpPos  =  str.substring(expPos  +  1,  str.length());	  expPos    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
181	[BUG]  [BUGGY]  exp  -=  str.substring(expPos  +  2,  str.length());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  -=  str.substring(expPos  +  2,  str.length());  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  -=  str.substring(expPos  +  2,  str.length());	  exp    =    str.substring(expPos    +    2,    str.length());    	non-compiled	[CE]  not  a  statement	5	None	replace
182	[BUG]  [BUGGY]  exp  =  mant  +  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  mant  +  str.substring(expPos  +  1,  str.length());  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  mant  +  str.substring(expPos  +  1,  str.length());	  exp    =   "   "    +    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	12	None	replace
183	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  +  1,  expPos  +  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  str.length()  +  1,  expPos  +  1);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(0,  str.length()  +  1,  expPos  +  1);	  exp    =    str.substring(0,    str.length()    -    1    +    1);    	non-compiled	[CE]  not  a  statement	65	None	replace
184	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  decPos  +  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  numeric  =  str.substring(0,  decPos  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  numeric  =  str.substring(0,  decPos  +  1);	  String    numeric    =    str.substring(0,    expPos    +    1);    	non-compiled	[CE]  not  a  statement	2	None	replace
185	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  -  1)-  1;  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  -  1)-  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  -  1)-  1;	  int    expPos    =    str.lastIndexOf('.',    expPos)-    1;    	non-compiled	[CE]  not  a  statement	75	None	replace
186	[BUG]  [BUGGY]  Integer  str  =  createInteger(expPos,  expPos  -  1);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(expPos,  expPos  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(expPos,  expPos  -  1);	  Integer    str    =    createInteger(mant,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	38	None	replace
187	[BUG]  [BUGGY]  Integer  str  =  createInteger(mant,  expPos  -  1,  str.length());  [CE]  not  a  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(mant,  expPos  -  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(mant,  expPos  -  1,  str.length());	  Integer    str    =    createInteger(mant,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	38	None	replace
188	[BUG]  [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.lastIndexOf('.'));  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.lastIndexOf('.'));  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	expPos  =  str.substring(expPos  +  1,  str.lastIndexOf('.'));	  expPos    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	11	None	replace
189	[BUG]  [BUGGY]  Character  expPos  =  str.charAt(expPos  +  1);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Character  expPos  =  str.charAt(expPos  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character  expPos  =  str.charAt(expPos  +  1);	  char    expPos    =    str.length();    	non-compiled	[CE]  not  a  statement	55	None	replace
190	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length();  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length();  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(expPos  +  1,  str.length();	  exp    =    str.substring(expPos    +    1,    str.length()    *    2);    	non-compiled	[CE]  not  a  statement	21	None	replace
191	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.')+  1;  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  expPos  =  str.indexOf('.')+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  expPos  =  str.indexOf('.')+  1;	  Integer    expPos    =    str.length();    	non-compiled	[CE]  not  a  statement	15	None	replace
192	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.');  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  expPos  =  str.indexOf('.');  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  expPos  =  str.indexOf('.');	  Integer    expPos    =    str.length();    	non-compiled	[CE]  not  a  statement	15	None	replace
193	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos.length()  -  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  mant  =  str.substring(0,  expPos.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(0,  expPos.length()  -  1);	  mant    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	48	None	replace
194	[BUG]  [BUGGY]  StaticBucketMap.this.put(lastChar,  str.substring(expPos  +  1,  expPos));  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(lastChar,  str.substring(expPos  +  1,  expPos));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(lastChar,  str.substring(expPos  +  1,  expPos));	  StaticBucketMap.this.put(lastChar,    str.substring(expPos    +    1));    	non-compiled	[CE]  not  a  statement	18	None	replace
195	[BUG]  [BUGGY]  Character  expPos  =  str.charAt(expPos  -  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Character  expPos  =  str.charAt(expPos  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character  expPos  =  str.charAt(expPos  -  1);	  char    expPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	14	None	replace
196	[BUG]  [BUGGY]  Character  expPos  =  str.charAt(expPos)-  1;  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Character  expPos  =  str.charAt(expPos)-  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character  expPos  =  str.charAt(expPos)-  1;	  char    expPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	14	None	replace
197	[BUG]  [BUGGY]  StaticBucketMap.this.put(mant,  expPos);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(mant,  expPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(mant,  expPos);	  StaticBucketMap.this.put(lastChar,    expPos);    	non-compiled	[CE]  not  a  statement	57	None	replace
198	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  dec);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(str,  dec);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(str,  dec);	  Integer    str    =    createInteger(str,    expPos);    	non-compiled	[CE]  not  a  statement	36	None	replace
199	[BUG]  [BUGGY]  ExpPos  expPos  =  expPos  >  -1?  str.substring(0,  expPos):  null;  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  ExpPos  expPos  =  expPos  >  -1?  str.substring(0,  expPos):  null;  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	ExpPos  expPos  =  expPos  >  -1?  str.substring(0,  expPos):  null;	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  not  a  statement	72	None	replace
200	[BUG]  [BUGGY]  ExpPos  expPos  =  expPos  >  -1?  str.charAt(expPos  -  1):  null;  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  ExpPos  expPos  =  expPos  >  -1?  str.charAt(expPos  -  1):  null;  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	ExpPos  expPos  =  expPos  >  -1?  str.charAt(expPos  -  1):  null;	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  not  a  statement	72	None	replace
201	[BUG]  [BUGGY]  ExpPos  expPos  =  expPos  >  -1?  str.charAt(expPos):  '-';  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  ExpPos  expPos  =  expPos  >  -1?  str.charAt(expPos):  '-';  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	ExpPos  expPos  =  expPos  >  -1?  str.charAt(expPos):  '-';	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  not  a  statement	72	None	replace
202	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  expPos  -  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  numeric  =  str.substring(0,  expPos  -  1,  str.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  numeric  =  str.substring(0,  expPos  -  1,  str.length()  -  1);	  String    numeric    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  not  a  statement	4	None	replace
203	[BUG]  [BUGGY]  StaticBucketMap.this.put(lastChar,  new  Integer(expPos));  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(lastChar,  new  Integer(expPos));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(lastChar,  new  Integer(expPos));	  StaticBucketMap.this.put(lastChar,    mant);    	non-compiled	[CE]  not  a  statement	17	None	replace
204	[BUG]  [BUGGY]  mant  =  str.substring(expPos,  expPos.length());  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  mant  =  str.substring(expPos,  expPos.length());  [BUGGY]      }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(expPos,  expPos.length());	  mant    =    str.substring(expPos,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	49	None	replace
205	[BUG]  [BUGGY]  Integer  str  =  createInteger(mant,  expPos  +  1,  str.substring(expPos  +  1));  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(mant,  expPos  +  1,  str.substring(expPos  +  1));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(mant,  expPos  +  1,  str.substring(expPos  +  1));	  Integer    str    =    createInteger(mant,    expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	73	None	replace
206	[BUG]  [BUGGY]  Integer  str  =  createInteger(mant,  expPos  +  1,  str.substring(expPos));  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  str  =  createInteger(mant,  expPos  +  1,  str.substring(expPos));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(mant,  expPos  +  1,  str.substring(expPos));	  Integer    str    =    createInteger(mant,    expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	73	None	replace
207	[BUG]  [BUGGY]  StaticBucketMap.this.put(mant,  str.substring(expPos));  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  StaticBucketMap.this.put(mant,  str.substring(expPos));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(mant,  str.substring(expPos));	  StaticBucketMap.this.put(lastChar,    str.substring(expPos));    	non-compiled	[CE]  not  a  statement	19	None	replace
