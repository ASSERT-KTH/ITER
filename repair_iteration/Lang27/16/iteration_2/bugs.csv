bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  String  numeric  =  str.substring(0,  str.length()  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  numeric  =  str.substring(0,  str.length()  -  1);	      String    numeric    =    str.substring(0,    expPos);    	non-compiled	[CE]  not  a  statement	12	None	replace
2	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  expPos  +  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  String  numeric  =  str.substring(0,  expPos  +  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  numeric  =  str.substring(0,  expPos  +  1);	      String    numeric    =    str.substring(0,    expPos);    	non-compiled	[CE]  not  a  statement	12	None	replace
3	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  String  numeric  =  str.substring(0,  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  numeric  =  str.substring(0,  str.length());	      String    numeric    =    str.substring(0,    expPos);    	non-compiled	[CE]  not  a  statement	12	None	replace
4	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  expPos  -  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  String  numeric  =  str.substring(0,  expPos  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  numeric  =  str.substring(0,  expPos  -  1);	      String    numeric    =    str.substring(0,    expPos);    	non-compiled	[CE]  not  a  statement	12	None	replace
5	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  2,  str.length());  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  2,  str.length());  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(expPos  +  2,  str.length());	  exp    =    str.substring(expPos    +    2,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
6	[BUG]  [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	expPos  =  str.substring(expPos  +  1,  str.length()  -  1);	  exp    =    str.substring(expPos    +    2,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
7	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  mant  =  str.substring(0,  expPos  +  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(0,  expPos  +  1);	      mant    =    str.substring(0,    expPos);    	non-compiled	[CE]  not  a  statement	11	None	replace
8	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  str.length()  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(0,  expPos  +  1,  str.length()  -  1);	      mant    =    str.substring(0,    expPos);    	non-compiled	[CE]  not  a  statement	11	None	replace
9	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  mant  =  str.substring(0,  expPos  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(0,  expPos  -  1);	      mant    =    str.substring(0,    expPos);    	non-compiled	[CE]  not  a  statement	11	None	replace
10	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  2);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  mant  =  str.substring(0,  expPos  +  2);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(0,  expPos  +  2);	      mant    =    str.substring(0,    expPos);    	non-compiled	[CE]  not  a  statement	11	None	replace
11	[BUG]  [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	expPos  =  str.substring(expPos  +  1,  str.length());	  exp    =    str.substring(expPos    +    1,    str.length()    -    2);    	non-compiled	[CE]  not  a  statement	14	None	replace
12	[BUG]  [BUGGY]  exp  = " "  +  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  = " "  +  str.substring(expPos  +  1,  str.length());  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  = " "  +  str.substring(expPos  +  1,  str.length());	  exp    =    str.substring(expPos    +    1,    str.length()    -    2);    	non-compiled	[CE]  not  a  statement	14	None	replace
13	[BUG]  [BUGGY]  exp  +=  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  +=  str.substring(expPos  +  1,  str.length());  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  +=  str.substring(expPos  +  1,  str.length());	  exp    =    str.substring(expPos    +    1,    str.length()    -    2);    	non-compiled	[CE]  not  a  statement	14	None	replace
14	[BUG]  [BUGGY]  char  expPos  =  str.length()  -  1;  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  char  expPos  =  str.length()  -  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	char  expPos  =  str.length()  -  1;	      int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	9	None	replace
15	[BUG]  [BUGGY]  Integer  expPos  =  str.length();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Integer  expPos  =  str.length();  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  expPos  =  str.length();	      int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	9	None	replace
16	[BUG]  [BUGGY]  long  expPos  =  str.length()  -  1;  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  long  expPos  =  str.length()  -  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	long  expPos  =  str.length()  -  1;	      int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	9	None	replace
17	[BUG]  [BUGGY]  StaticBucketMap.this.put(lastChar,  mant);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  StaticBucketMap.this.put(lastChar,  mant);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(lastChar,  mant);	      StaticBucketMap.this.put(lastChar,    str);    	non-compiled	[CE]  not  a  statement	19	None	replace
18	[BUG]  [BUGGY]  StaticBucketMap.this.put(lastChar,  str.substring(expPos  +  1));  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  StaticBucketMap.this.put(lastChar,  str.substring(expPos  +  1));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(lastChar,  str.substring(expPos  +  1));	      StaticBucketMap.this.put(lastChar,    str);    	non-compiled	[CE]  not  a  statement	19	None	replace
19	[BUG]  [BUGGY]  StaticBucketMap.this.put(lastChar,  str.substring(expPos));  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  StaticBucketMap.this.put(lastChar,  str.substring(expPos));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(lastChar,  str.substring(expPos));	      StaticBucketMap.this.put(lastChar,    str);    	non-compiled	[CE]  not  a  statement	19	None	replace
20	[BUG]  [BUGGY]  StaticBucketMap.this.put(expPos,  str);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  StaticBucketMap.this.put(expPos,  str);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(expPos,  str);	      StaticBucketMap.this.put(lastChar,    str);    	non-compiled	[CE]  not  a  statement	19	None	replace
21	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  *  2);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  *  2);  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(expPos  +  1,  str.length()  *  2);	  exp    =    str.substring(expPos    +    1,    str.length()    *    1);    	non-compiled	[CE]  not  a  statement	15	None	replace
22	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  1);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  +  1);	      int    expPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	18	None	replace
23	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos);	      int    expPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	18	None	replace
24	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  -  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  -  1);	      int    expPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	18	None	replace
25	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  int  expPos  =  str.indexOf('.',  expPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.indexOf('.',  expPos);	      int    expPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	18	None	replace
26	[BUG]  [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length());  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  -=  str.substring(expPos  +  1,  str.length());	  exp    -=    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	16	None	replace
27	[BUG]  [BUGGY]  expPos  -=  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  expPos  -=  str.substring(expPos  +  1,  str.length());  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	expPos  -=  str.substring(expPos  +  1,  str.length());	  exp    -=    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	16	None	replace
28	[BUG]  [BUGGY]  Character.isDigit(lastChar)&&  expPos  <  str.length();  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Character.isDigit(lastChar)&&  expPos  <  str.length();  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character.isDigit(lastChar)&&  expPos  <  str.length();	      Character.isDigit(lastChar)&&    expPos    <    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
29	[BUG]  [BUGGY]  Character.isDigit(lastChar)&&  expPos  <  str.length());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Character.isDigit(lastChar)&&  expPos  <  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character.isDigit(lastChar)&&  expPos  <  str.length());	      Character.isDigit(lastChar)&&    expPos    <    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
30	[BUG]  [BUGGY]  Character.isDigit(lastChar)&&  expPos  >  str.length()  -  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Character.isDigit(lastChar)&&  expPos  >  str.length()  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character.isDigit(lastChar)&&  expPos  >  str.length()  -  1);	      Character.isDigit(lastChar)&&    expPos    <    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
31	[BUG]  [BUGGY]  Character.isDigit(lastChar)&&  expPos  >=  str.length());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Character.isDigit(lastChar)&&  expPos  >=  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character.isDigit(lastChar)&&  expPos  >=  str.length());	      Character.isDigit(lastChar)&&    expPos    <    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
32	[BUG]  [BUGGY]  String  exp  =  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  String  exp  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  exp  =  str.substring(expPos  +  1,  str.length());	      String    exp    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	17	None	replace
33	[BUG]  [BUGGY]  char  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  char  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	char  exp  =  str.substring(expPos  +  1,  str.length()  -  1);	      String    exp    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	17	None	replace
34	[BUG]  [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  String  exp  =  str.substring(0,  str.length()  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  exp  =  str.substring(0,  str.length()  -  1);	      String    exp    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	17	None	replace
35	[BUG]  [BUGGY]  Integer  str  =  createInteger(mant,  expPos  +  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Integer  str  =  createInteger(mant,  expPos  +  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(mant,  expPos  +  1);	      Integer    str    =    createInteger(mant,    expPos);    	non-compiled	[CE]  not  a  statement	13	None	replace
36	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  expPos);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Integer  str  =  createInteger(str,  expPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(str,  expPos);	      Integer    str    =    createInteger(mant,    expPos);    	non-compiled	[CE]  not  a  statement	13	None	replace
37	[BUG]  [BUGGY]  Integer  str  =  createInteger(dec,  expPos);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Integer  str  =  createInteger(dec,  expPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(dec,  expPos);	      Integer    str    =    createInteger(mant,    expPos);    	non-compiled	[CE]  not  a  statement	13	None	replace
38	[BUG]  [BUGGY]  Integer  str  =  createInteger(mant,  expPos  -  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Integer  str  =  createInteger(mant,  expPos  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(mant,  expPos  -  1);	      Integer    str    =    createInteger(mant,    expPos);    	non-compiled	[CE]  not  a  statement	13	None	replace
39	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length());  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(0,  str.length());  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(0,  str.length());	  exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	2	None	replace
40	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  +  1);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(0,  str.length()  +  1);  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(0,  str.length()  +  1);	  exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	2	None	replace
41	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length();  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(0,  str.length();  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(0,  str.length();	  exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	2	None	replace
42	[BUG]  [BUGGY]  mant  =  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  mant  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(expPos  +  1,  str.length());	      mant    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	10	None	replace
43	[BUG]  [BUGGY]  Mant  =  str.substring(expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Mant  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Mant  =  str.substring(expPos  +  1,  str.length());	      mant    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	10	None	replace
44	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos  +  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos  +  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  expPos  =  str.indexOf('.',  expPos  +  1);	      Integer    expPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	8	None	replace
45	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  decPos);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Integer  expPos  =  str.indexOf('.',  decPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  expPos  =  str.indexOf('.',  decPos);	      Integer    expPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	8	None	replace
46	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  expPos);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  expPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  expPos  =  str.lastIndexOf('.',  expPos);	      Integer    expPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	8	None	replace
47	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos  -  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Integer  expPos  =  str.indexOf('.',  expPos  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  expPos  =  str.indexOf('.',  expPos  -  1);	      Integer    expPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  not  a  statement	8	None	replace
48	[BUG]  [BUGGY]  mant  =  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  mant  =  str.substring(0,  str.length()  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(0,  str.length()  -  1);	      	non-compiled	[CE]  not  a  statement	4	None	replace
49	[BUG]  [BUGGY]  mant  =  str.substring(expPos,  str.length()  -  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  mant  =  str.substring(expPos,  str.length()  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(expPos,  str.length()  -  1);	      	non-compiled	[CE]  not  a  statement	4	None	replace
50	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.lastIndexOf('.',  dec);	      int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	6	None	replace
51	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.');  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  int  expPos  =  str.indexOf('.');  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.indexOf('.');	      int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	6	None	replace
52	[BUG]  [BUGGY]  int  expPos  =  str.length()  +  1;  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  int  expPos  =  str.length()  +  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.length()  +  1;	      int    expPos    =    str.length();    	non-compiled	[CE]  not  a  statement	5	None	replace
53	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  expPos  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  String  numeric  =  str.substring(0,  expPos  +  1,  str.length()  -  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  numeric  =  str.substring(0,  expPos  +  1,  str.length()  -  1);	      String    numeric    =    str.substring(0,    expPos);    	non-compiled	[CE]  not  a  statement	12	None	replace
54	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')-  1;  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  int  expPos  =  str.lastIndexOf('.')-  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.lastIndexOf('.')-  1;	      int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	9	None	replace
55	[BUG]  [BUGGY]  char  expPos  =  str.length();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  char  expPos  =  str.length();  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	char  expPos  =  str.length();	      int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	9	None	replace
56	[BUG]  [BUGGY]  exp  -=  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  -=  str.substring(0,  str.length()  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  -=  str.substring(0,  str.length()  -  1);	  exp    -=    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	16	None	replace
57	[BUG]  [BUGGY]  StaticBucketMap.this.put(lastChar,  expPos);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  StaticBucketMap.this.put(lastChar,  expPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(lastChar,  expPos);	      StaticBucketMap.this.put(lastChar,    str);    	non-compiled	[CE]  not  a  statement	19	None	replace
58	[BUG]  [BUGGY]  StaticBucketMap.this.put(lastChar,  dec);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  StaticBucketMap.this.put(lastChar,  dec);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(lastChar,  dec);	      StaticBucketMap.this.put(lastChar,    str);    	non-compiled	[CE]  not  a  statement	19	None	replace
59	[BUG]  [BUGGY]  StaticBucketMap.this.put(lastChar,  new  Long(expPos));  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  StaticBucketMap.this.put(lastChar,  new  Long(expPos));  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(lastChar,  new  Long(expPos));	      StaticBucketMap.this.put(lastChar,    str);    	non-compiled	[CE]  not  a  statement	19	None	replace
60	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.lastIndexOf('.',  DEC_POP);	      int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	6	None	replace
61	[BUG]  [BUGGY]  Integer  str  =  createInteger(durationPos,  expPos);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Integer  str  =  createInteger(durationPos,  expPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(durationPos,  expPos);	      Integer    str    =    createInteger(mant,    expPos);    	non-compiled	[CE]  not  a  statement	13	None	replace
62	[BUG]  [BUGGY]  String  exp  =  str.substring(expPos  +  1,  str.length())+  1;  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  String  exp  =  str.substring(expPos  +  1,  str.length())+  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  exp  =  str.substring(expPos  +  1,  str.length())+  1;	      String    exp    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	17	None	replace
63	[BUG]  [BUGGY]  String  exp  =  str.substring(expPos  +  1,  str.length()  *  1);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  String  exp  =  str.substring(expPos  +  1,  str.length()  *  1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  exp  =  str.substring(expPos  +  1,  str.length()  *  1);	      String    exp    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	17	None	replace
64	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  3,  str.length()  -  1);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  3,  str.length()  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(expPos  +  3,  str.length()  -  1);	  exp    =    str.substring(expPos    +    2,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
65	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  -  1  +  1);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(0,  str.length()  -  1  +  1);  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(0,  str.length()  -  1  +  1);	  exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	2	None	replace
66	[BUG]  [BUGGY]  if(expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	if(expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }	      	non-compiled	[CE]  not  a  statement	4	None	replace
67	[BUG]  [BUGGY]  if(expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  exp  =  null;  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  exp  =  null;  }  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	if(expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  exp  =  null;  }	      	non-compiled	[CE]  not  a  statement	4	None	replace
68	[BUG]  [BUGGY]  mant  =  str.substring(0,  decPos);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  mant  =  str.substring(0,  decPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	mant  =  str.substring(0,  decPos);	      mant    =    str.substring(0,    expPos);    	non-compiled	[CE]  not  a  statement	11	None	replace
69	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())-  1;  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())-  1;  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(expPos  +  1,  str.length())-  1;	  exp    =    str.substring(expPos    +    1,    str.length()    *    1);    	non-compiled	[CE]  not  a  statement	15	None	replace
70	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.'));  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.'));  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(expPos  +  1,  str.lastIndexOf('.'));	  exp    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	1	None	replace
71	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  decPos);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  String  numeric  =  str.substring(0,  decPos);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	String  numeric  =  str.substring(0,  decPos);	      String    numeric    =    str.substring(0,    expPos);    	non-compiled	[CE]  not  a  statement	12	None	replace
72	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  null;  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  null;  }  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  null;  }	      	non-compiled	[CE]  not  a  statement	4	None	replace
73	[BUG]  [BUGGY]  Integer  str  =  createInteger(mant,  expPos  +  1,  str.length());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Integer  str  =  createInteger(mant,  expPos  +  1,  str.length());  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Integer  str  =  createInteger(mant,  expPos  +  1,  str.length());	      Integer    str    =    createInteger(mant,    expPos);    	non-compiled	[CE]  not  a  statement	13	None	replace
74	[BUG]  [BUGGY]  exp  =  str.substring(expPos,  str.length()  -  1);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  exp  =  str.substring(expPos,  str.length()  -  1);  [BUGGY]    }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	exp  =  str.substring(expPos,  str.length()  -  1);	  exp    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	2	None	replace
75	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)-  1;  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)-  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos)-  1;	      int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  not  a  statement	9	None	replace
76	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  1;  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  1;  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	int  expPos  =  str.lastIndexOf('.')+  1;	      int    expPos    =    str.length();    	non-compiled	[CE]  not  a  statement	5	None	replace
77	[BUG]  [BUGGY]  StaticBucketMap.this.put(mant,  str);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  StaticBucketMap.this.put(mant,  str);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	StaticBucketMap.this.put(mant,  str);	      StaticBucketMap.this.put(lastChar,    str);    	non-compiled	[CE]  not  a  statement	19	None	replace
78	[BUG]  [BUGGY]  Character.isDigit(lastChar)&&  expPos  >=  str.length();  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Character.isDigit(lastChar)&&  expPos  >=  str.length();  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character.isDigit(lastChar)&&  expPos  >=  str.length();	      Character.isDigit(lastChar)&&    expPos    <    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
79	[BUG]  [BUGGY]  Character.isDigit(lastChar)&&  expPos  >  -1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  else  {  if  (expPos  >  -1)  {  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar)  &&  lastChar  !=  '.')  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {    [BUGGY]  Character.isDigit(lastChar)&&  expPos  >  -1);  [BUGGY]    exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang27/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	497	497	1	replace	Character.isDigit(lastChar)&&  expPos  >  -1);	      Character.isDigit(lastChar)&&    expPos    <    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
