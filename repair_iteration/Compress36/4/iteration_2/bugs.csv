bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
2	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
3	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  ReadUnpackInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  ReadUnpackInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,    archive);    ReadUnpackInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
4	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  reader.readUnpackInfo(header,  archive);  [CE]  cannot  find  symbol  reader  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  reader.readUnpackInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,    archive);    reader.readUnpackInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol  reader	1	None	add
5	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  int  nid  =  header.readUnpackInfo(  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  int  nid  =  header.readUnpackInfo(  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,    archive);    int  nid  =  header.readUnpackInfo(  archive);	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	1	None	add
6	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  int  nid  =  header.readUnpackInfo(header,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  int  nid  =  header.readUnpackInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,    archive);    int  nid  =  header.readUnpackInfo(header,  archive);	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	1	None	add
7	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,    archive);    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	1	None	add
8	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
9	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  [FE]  java.io.IOException:  Expected  kFolder  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
10	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);	  	compilable	  [FE]  IOException  	3	12	add
11	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);	  	compilable	  [FE]  IOException  	3	12	add
12	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ReadStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ReadStreamsInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,    archive);    ReadStreamsInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
13	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,    archive);    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	3	None	add
14	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]          IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  Lists	3	None	add
15	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  reader.readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  reader  [FE]            IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  reader.readStreamsInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,    archive);    reader.readStreamsInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol  reader	3	None	add
16	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	compilable	  [FE]  IOException  	3	12	add
17	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [FE]  IOException  [FE]              IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	compilable	  [FE]  IOException  	3	12	add
18	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);  [CE]  cannot  find  symbol  length  [FE]                IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);	  	non-compiled	[CE]  cannot  find  symbol  length	3	None	add
19	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  ReadUnpackInfo(header,  archive.folders);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders);	  ReadUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
20	[BUG]  [BUGGY]  ReadUnpackInfo(nid,  archive);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  ReadUnpackInfo(nid,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(nid,  archive);	  ReadUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
21	[BUG]  [BUGGY]  ReadUnpackInfo(nid,  header,  archive);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  ReadUnpackInfo(nid,  header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(nid,  header,  archive);	  ReadUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
22	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive));  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive));  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(header,  archive));	  ReadUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
23	[BUG]  [BUGGY]  ReadUnpackInfo(file,  header,  archive);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  ReadUnpackInfo(file,  header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(file,  header,  archive);	  ReadUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
24	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive.folders));  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive.folders));  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(header,  archive.folders));	  ReadUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
25	[BUG]  [BUGGY]      int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]      int  nid  =  header.readUnsignedByte();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	        int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	8	None	add
26	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]      nid  =  header.readUnsignedByte();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	        nid  =  header.readUnsignedByte();	  	compilable	  [FE]  NoClassDefFoundError  	8	12	add
27	[BUG]  [BUGGY]      nid  =  header.readUnsignedByte();  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]      nid  =  header.readUnsignedByte();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	        nid  =  header.readUnsignedByte();	  	compilable	  [FE]  NoClassDefFoundError  	8	12	add
28	[BUG]  [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	        ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  Lists	8	None	add
29	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]          IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	        ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	compilable	  [FE]  NoClassDefFoundError  	8	12	add
30	[BUG]  [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [FE]  NoClassDefFoundError  [FE]          IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	        ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	compilable	  [FE]  NoClassDefFoundError  	8	12	add
31	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]            IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	        ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	compilable	  [FE]  NoClassDefFoundError  	8	12	add
32	[BUG]  [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [FE]  NoClassDefFoundError  [FE]            IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	        ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	compilable	  [FE]  NoClassDefFoundError  	8	12	add
33	[BUG]  [BUGGY]      byte[]  nextHeaderSize  =  header.readUnsignedByte();  [CE]  incompatible  types  [FE]              IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]      byte[]  nextHeaderSize  =  header.readUnsignedByte();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	        byte[]  nextHeaderSize  =  header.readUnsignedByte();	  	non-compiled	[CE]  incompatible  types	8	None	add
34	[BUG]  [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);  [CE]  cannot  find  symbol  length  [FE]                IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	        ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);	  	non-compiled	[CE]  cannot  find  symbol  length	8	None	add
35	[BUG]  [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());  [CE]  cannot  find  symbol  inputStreamStack  [FE]                  IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	        ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	8	None	add
36	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readPackInfo(header,  archive.folders,  nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  nid);	  readPackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	7	None	replace
37	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  NID.kPackInfo);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readPackInfo(header,  archive.folders,  NID.kPackInfo);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  NID.kPackInfo);	  readPackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	7	None	replace
38	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  signature);  [CE]  cannot  find  symbol  signature  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readPackInfo(header,  archive.folders,  signature);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  signature);	  readPackInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  signature	7	None	replace
39	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  null);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readPackInfo(header,  archive.folders,  null);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  null);	  readPackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	7	None	replace
40	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  fileName);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readPackInfo(header,  archive.folders,  fileName);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  fileName);	  readPackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	7	None	replace
41	[BUG]  [BUGGY]  readPackInfo(nid,  header,  archive.folders);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readPackInfo(nid,  header,  archive.folders);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(nid,  header,  archive.folders);	  readPackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	7	None	replace
42	[BUG]  [BUGGY]  reader.readStreamsInfo(nid,  archive);  [CE]  cannot  find  symbol  reader  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  reader.readStreamsInfo(nid,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(nid,  archive);	  reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	6	None	replace
43	[BUG]  [BUGGY]  reader.readStreamsInfo(header,  archive.folders);  [CE]  cannot  find  symbol  reader  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  reader.readStreamsInfo(header,  archive.folders);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(header,  archive.folders);	  reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	6	None	replace
44	[BUG]  [BUGGY]  Reader.readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  Reader  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  Reader.readStreamsInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader.readStreamsInfo(header,  archive);	  reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  Reader	6	None	replace
45	[BUG]  [BUGGY]  reader.readStreamsInfo(header,  nid);  [CE]  cannot  find  symbol  reader  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  reader.readStreamsInfo(header,  nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(header,  nid);	  reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	6	None	replace
46	[BUG]  [BUGGY]  reader.readStreamsInfo(file,  archive);  [CE]  cannot  find  symbol  reader  [FE]                      NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  reader.readStreamsInfo(file,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(file,  archive);	  reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	6	None	replace
47	[BUG]  [BUGGY]  readStreamsInfo(header,  archive,  nid);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive,  nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive,  nid);	  readStreamsInfo(header,    archive);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	4	None	replace
48	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive.folders);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive.folders);	  readStreamsInfo(header,    archive);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	4	None	replace
49	[BUG]  [BUGGY]  readStreamsInfo(nid,  archive);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(nid,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(nid,  archive);	  readStreamsInfo(header,    archive);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	4	None	replace
50	[BUG]  [BUGGY]  readStreamsInfo(header,  archive,  NID.kPackInfo);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive,  NID.kPackInfo);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive,  NID.kPackInfo);	  readStreamsInfo(header,    archive);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	4	None	replace
51	[BUG]  [BUGGY]  readBlockInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]            IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readBlockInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readBlockInfo(header,  archive);	  readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
52	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive.folders);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive.folders);	  readUnpackInfo(header,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	2	None	replace
53	[BUG]  [BUGGY]  readUnpackInfo(nid,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(nid,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(nid,  archive);	  readUnpackInfo(header,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	2	None	replace
54	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);	  readPackInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	10	None	replace
55	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kPackInfo);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kPackInfo);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  NID.kPackInfo);	  readPackInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	10	None	replace
56	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  NID);  [CE]  cannot  find  symbol  NID  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readPackInfo(header,  archive,  nid,  NID);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  NID);	  readPackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  NID	10	None	replace
57	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  fileName);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readPackInfo(header,  archive,  nid,  fileName);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  fileName);	  readPackInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	10	None	replace
58	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kUnpackInfo);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kUnpackInfo);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  NID.kUnpackInfo);	  readPackInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	10	None	replace
59	[BUG]  [BUGGY]  readPackInfo(header,  archive,  NID.kPackInfo);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readPackInfo(header,  archive,  NID.kPackInfo);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  NID.kPackInfo);	  readPackInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	10	None	replace
60	[BUG]  [BUGGY]  readStreamInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamInfo(header,  archive.folders);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive.folders);	  readStreamInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
61	[BUG]  [BUGGY]  ReadStreamInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  ReadStreamInfo(header,  archive.folders);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamInfo(header,  archive.folders);	  readStreamInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
62	[BUG]  [BUGGY]  readStreamInfo(nid,  archive);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamInfo(nid,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(nid,  archive);	  readStreamInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
63	[BUG]  [BUGGY]  readPackInfo(header,  archive,  fileName,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readPackInfo(header,  archive,  fileName,  nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  fileName,  nid);	  readPackInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	10	None	replace
64	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  signature);  [CE]  cannot  find  symbol  signature  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readPackInfo(header,  archive,  nid,  signature);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  signature);	  readPackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  signature	10	None	replace
65	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  header.length);  [CE]  cannot  find  symbol  length  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readPackInfo(header,  archive,  nid,  header.length);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  header.length);	  readPackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  length	10	None	replace
66	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
67	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
68	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  Lists	1	None	add
69	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
70	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [FE]  java.io.IOException:  Expected  kFolder  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
71	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,    archive);    byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);	  	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	1	None	add
72	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  inputStreamStack  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());	      	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	9	None	replace
73	[BUG]  [BUGGY]  reader.readStreamsInfo(header,  archive,  nid);  [CE]  cannot  find  symbol  reader  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  reader.readStreamsInfo(header,  archive,  nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(header,  archive,  nid);	  reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	6	None	replace
74	[BUG]  [BUGGY]  Reader  reader  =  new  SevenZFileReader(header,  archive);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  Reader  reader  =  new  SevenZFileReader(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  new  SevenZFileReader(header,  archive);	  reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
75	[BUG]  [BUGGY]  reader.readStreamsInfo(fileName,  archive);  [CE]  cannot  find  symbol  reader  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  reader.readStreamsInfo(fileName,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(fileName,  archive);	  reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	6	None	replace
76	[BUG]  [BUGGY]  readStreamInfo(header,  archive,  nid);  [CE]  cannot  find  symbol  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamInfo(header,  archive,  nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive,  nid);	  readStreamInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
77	[BUG]  [BUGGY]  readStreamInfo(header,  archive,  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamInfo(header,  archive,  NID.kPackInfo);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive,  NID.kPackInfo);	  readStreamInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
78	[BUG]  [BUGGY]  readStreamInfo(header,  nid,  archive);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamInfo(header,  nid,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  nid,  archive);	  readStreamInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
79	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive,  nid);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  ReadUnpackInfo(header,  archive,  nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive,  nid);	  ReadUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
80	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive).folders  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  ReadUnpackInfo(header,  archive).folders  =  new  ArrayList  <  String>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive).folders  =  new  ArrayList  <  String>();	  ReadUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
81	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive).folders  =  new  ArrayList  <  NoClassDefFoundError>();  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  ReadUnpackInfo(header,  archive).folders  =  new  ArrayList  <  NoClassDefFoundError>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive).folders  =  new  ArrayList  <  NoClassDefFoundError>();	  ReadUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
82	[BUG]  [BUGGY]  ReadUnpackInfo(header,  nid,  archive);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  ReadUnpackInfo(header,  nid,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  nid,  archive);	  ReadUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
83	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive).folders  =  new  ArrayList  <  NID>();  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  ReadUnpackInfo(header,  archive).folders  =  new  ArrayList  <  NID>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive).folders  =  new  ArrayList  <  NID>();	  ReadUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
84	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive,  nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive,  nid);	  readUnpackInfo(header,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	2	None	replace
85	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  inputStreamStack  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	3	None	add
86	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	compilable	  [FE]  IOException  	3	12	add
87	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	compilable	  [FE]  IOException  	3	12	add
88	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,    archive);    byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);	  	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	3	None	add
89	[BUG]  [BUGGY]  ReadPackInfo(header,  archive.folders,  nid);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  ReadPackInfo(header,  archive.folders,  nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadPackInfo(header,  archive.folders,  nid);	  readPackInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
90	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  false);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readPackInfo(header,  archive.folders,  false);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  false);	  readPackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	7	None	replace
91	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	        ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	  	compilable	  [FE]  NoClassDefFoundError  	8	12	add
92	[BUG]  [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	        ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	  	compilable	  [FE]  NoClassDefFoundError  	8	12	add
93	[BUG]  [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length());  [CE]  int  cannot  be  dereferenced  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length());  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	        ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length());	  	non-compiled	[CE]  int  cannot  be  dereferenced	8	None	add
94	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  DEFERREDBlockStreams);  [CE]  cannot  find  symbol  DEFERREDBlockStreams  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readPackInfo(header,  archive,  nid,  DEFERREDBlockStreams);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  DEFERREDBlockStreams);	  readPackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  DEFERREDBlockStreams	10	None	replace
95	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  DEFERRED_HEADER_SIZE);  [CE]  cannot  find  symbol  DEFERRED_HEADER_SIZE  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readPackInfo(header,  archive,  nid,  DEFERRED_HEADER_SIZE);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  DEFERRED_HEADER_SIZE);	  readPackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  DEFERRED_HEADER_SIZE	10	None	replace
96	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);	  readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
97	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(header);  [CE]  cannot  find  symbol  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(header);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,    archive);    InputStream  inputStreamStack  =  getInputStreamStack(header);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
98	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
99	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
100	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
101	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [FE]  java.io.IOException:  Expected  kFolder  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
102	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  Lists.newArrayList();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  Lists	1	None	add
103	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack();  [CE]  cannot  find  symbol  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,    archive);    InputStream  inputStreamStack  =  getInputStreamStack();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
104	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	  	compilable	  [FE]  IOException  	3	12	add
105	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	  	compilable	  [FE]  IOException  	3	12	add
106	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  InputStream  header  =  inputStreamStack.peek();  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  InputStream  header  =  inputStreamStack.peek();  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,    archive);    InputStream  header  =  inputStreamStack.peek();	  	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	3	None	add
107	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());  [CE]  cannot  find  symbol  inputStreamStack  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	3	None	add
108	[BUG]  [BUGGY]  readPackInfo(fileName,  header,  archive.folders);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readPackInfo(fileName,  header,  archive.folders);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(fileName,  header,  archive.folders);	  readPackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	7	None	replace
109	[BUG]  [BUGGY]  readPackInfo(file,  header,  archive.folders);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readPackInfo(file,  header,  archive.folders);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(file,  header,  archive.folders);	  readPackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	7	None	replace
110	[BUG]  [BUGGY]  Reader  reader  =  inputStreamStack.readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  Reader  reader  =  inputStreamStack.readStreamsInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  inputStreamStack.readStreamsInfo(header,  archive);	  reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
111	[BUG]  [BUGGY]  reader.readStreamsInfo(currentFolder,  archive);  [CE]  cannot  find  symbol  currentFolder  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  reader.readStreamsInfo(currentFolder,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(currentFolder,  archive);	  reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	6	None	replace
112	[BUG]  [BUGGY]  ReadUnpackInfo(inputStreamStack,  header,  archive);  [CE]  cannot  find  symbol  inputStreamStack  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  ReadUnpackInfo(inputStreamStack,  header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(inputStreamStack,  header,  archive);	  ReadUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	5	None	replace
113	[BUG]  [BUGGY]  ReadUnpackInfo(fileName,  header,  archive);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  ReadUnpackInfo(fileName,  header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(fileName,  header,  archive);	  ReadUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
114	[BUG]  [BUGGY]  ReadUnpackInfo(currentFolder,  archive);  [CE]  cannot  find  symbol  currentFolder  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  ReadUnpackInfo(currentFolder,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(currentFolder,  archive);	  ReadUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	5	None	replace
115	[BUG]  [BUGGY]  readStreamInfo(fileName,  header,  archive);  [CE]  cannot  find  symbol  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamInfo(fileName,  header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(fileName,  header,  archive);	  readStreamInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
116	[BUG]  [BUGGY]  readStreamInfo(file,  archive);  [CE]  cannot  find  symbol  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {    [BUGGY]  readStreamInfo(file,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(file,  archive);	  readStreamInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
