bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	29	None	add
2	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	29	None	add
3	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  Collection  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  Collection  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    Collection  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	29	None	add
4	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  arrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  arrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    arrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	29	None	add
5	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  Set  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  Set  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    Set  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	29	None	add
6	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  String  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol  String	29	None	add
7	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kPackInfo);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	compilable	  [FE]  IOException  	34	12	replace
8	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kPackInfo);  [FE]  IOException  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kPackInfo);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	compilable	  [FE]  IOException  	34	12	replace
9	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  cannot  find  symbol  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
10	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.deferredBlockStreams);  [CE]  cannot  find  symbol  deferredBlockStreams  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.deferredBlockStreams);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  cannot  find  symbol  deferredBlockStreams	34	None	replace
11	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.length);  [CE]  cannot  find  symbol  length  [FE]                          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.length);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.length);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  cannot  find  symbol  length	34	None	replace
12	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  fileName,  signature);  [CE]  cannot  find  symbol  signature  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  fileName,  signature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  fileName,  signature);	  readPackInfo(header,    archive,    nid,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	57	None	replace
13	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  fileName);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  fileName);	  readPackInfo(header,    archive,    nid,    fileName);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	57	None	replace
14	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  fileName,  SIGNATURE_HEADER_SIZE);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  fileName,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  fileName,  SIGNATURE_HEADER_SIZE);	  readPackInfo(header,    archive,    nid,    fileName);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	57	None	replace
15	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	30	12	replace
16	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	30	12	replace
17	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
18	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	30	12	replace
19	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	30	12	replace
20	[BUG]  [BUGGY]  [FE]  IOException  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	30	12	replace
21	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [FE]  IOException  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	30	12	replace
22	[BUG]  [BUGGY]  reader.readStreamsInfo(nid,  header);  [CE]  cannot  find  symbol  reader  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(nid,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(nid,  header);	  reader.readStreamsInfo(header,    nid);    	non-compiled	[CE]  cannot  find  symbol  reader	45	None	replace
23	[BUG]  [BUGGY]  reader.readStreamsInfo(fileName,  nid);  [CE]  cannot  find  symbol  reader  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(fileName,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(fileName,  nid);	  reader.readStreamsInfo(header,    nid);    	non-compiled	[CE]  cannot  find  symbol  reader	45	None	replace
24	[BUG]  [BUGGY]  reader.readStreamsInfo(currentFolderIndex,  nid);  [CE]  cannot  find  symbol  reader  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(currentFolderIndex,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(currentFolderIndex,  nid);	  reader.readStreamsInfo(header,    nid);    	non-compiled	[CE]  cannot  find  symbol  reader	45	None	replace
25	[BUG]  [BUGGY]  reader.readStreamsInfo(inputStreamStack,  nid);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(inputStreamStack,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(inputStreamStack,  nid);	  reader.readStreamsInfo(header,    nid);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	45	None	replace
26	[BUG]  [BUGGY]  reader.readStreamsInfo(currentFolder,  nid);  [CE]  cannot  find  symbol  currentFolder  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(currentFolder,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(currentFolder,  nid);	  reader.readStreamsInfo(header,    nid);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	45	None	replace
27	[BUG]  [BUGGY]  reader.readStreamsInfo(file,  nid);  [CE]  cannot  find  symbol  reader  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(file,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(file,  nid);	  reader.readStreamsInfo(header,    nid);    	non-compiled	[CE]  cannot  find  symbol  reader	45	None	replace
28	[BUG]  [BUGGY]  [FE]  IOException  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	101	12	replace
29	[BUG]  [BUGGY]  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [FE]  IOException  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	101	12	replace
30	[BUG]  [BUGGY]  [FE]  IOException  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readStreamsInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	101	12	replace
31	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [FE]  IOException  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	101	12	replace
32	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
33	[BUG]  [BUGGY]  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);	  readUnpackInfo(header,    archive);    byte[]    header    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	71	None	replace
34	[BUG]  [BUGGY]  readUnpackInfo(nid,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(nid,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(nid,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);	  readUnpackInfo(header,    archive);    byte[]    header    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	71	None	replace
35	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[archive.folders.size()  ]);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[archive.folders.size()  ]);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[archive.folders.size()  ]);	  readUnpackInfo(header,    archive);    byte[]    header    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	71	None	replace
36	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[0]);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                    java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[0]);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[0]);	  readUnpackInfo(header,    archive);    byte[]    header    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	71	None	replace
37	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  nid,  SIGNATURE_HEADER_SIZE);	  readPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	36	None	replace
38	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  nid,  NID.kPackInfo);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  nid,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  nid,  NID.kPackInfo);	  readPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	36	None	replace
39	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  nid,  kPackInfo);  [CE]  cannot  find  symbol  kPackInfo  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  nid,  kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  nid,  kPackInfo);	  readPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  cannot  find  symbol  kPackInfo	36	None	replace
40	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  nid,  NID);  [CE]  cannot  find  symbol  NID  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  nid,  NID);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  nid,  NID);	  readPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  cannot  find  symbol  NID	36	None	replace
41	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  fileName,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  fileName,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  fileName,  nid);	  readPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	36	None	replace
42	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  nid,  fileName);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  nid,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  nid,  fileName);	  readPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	36	None	replace
43	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  nid,  NID.kUnpackInfo);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  nid,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  nid,  NID.kUnpackInfo);	  readPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	36	None	replace
44	[BUG]  [BUGGY]  readPackInfo(header,  archive,  NID.kPackInfo,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  NID.kPackInfo,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  NID.kPackInfo,  nid);	  readPackInfo(header,    archive,    nid,    signature);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	64	None	replace
45	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  7ZSignature);  [CE]  ')'  expected  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  7ZSignature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  7ZSignature);	  readPackInfo(header,    archive,    nid,    signature);    	non-compiled	[CE]  ')'  expected	64	None	replace
46	[BUG]  [BUGGY]  ReadPackInfo(header,  archive.folders,  nid,  NID);  [CE]  cannot  find  symbol  NID  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive.folders,  nid,  NID);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadPackInfo(header,  archive.folders,  nid,  NID);	  ReadPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  cannot  find  symbol  NID	89	None	replace
47	[BUG]  [BUGGY]  ReadPackInfo(header,  archive.folders,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive.folders,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadPackInfo(header,  archive.folders,  nid,  SIGNATURE_HEADER_SIZE);	  ReadPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
48	[BUG]  [BUGGY]  ReadPackInfo(header,  archive.folders,  nid,  nid);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive.folders,  nid,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadPackInfo(header,  archive.folders,  nid,  nid);	  ReadPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
49	[BUG]  [BUGGY]  ReadPackInfo(nid,  archive.folders,  header);  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadPackInfo(nid,  archive.folders,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadPackInfo(nid,  archive.folders,  header);	  ReadPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
50	[BUG]  [BUGGY]  ReadPackInfo(header,  archive.folders,  nid,  null);  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive.folders,  nid,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadPackInfo(header,  archive.folders,  nid,  null);	  ReadPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
51	[BUG]  [BUGGY]  ReadPackInfo(header,  archive.folders,  nid,  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive.folders,  nid,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadPackInfo(header,  archive.folders,  nid,  NID.kPackInfo);	  ReadPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
52	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  reader.readStreamsInfo(nid,  archive);  [CE]  cannot  find  symbol  reader  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  reader.readStreamsInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  reader.readStreamsInfo(nid,  archive);	  readStreamsInfo(header,    archive);    reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	15	None	replace
53	[BUG]  [BUGGY]  ReadStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo(header,  archive);	  readStreamsInfo(header,    archive);    reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
54	[BUG]  [BUGGY]  ReadStreamsInfo(header,  archive);  reader.readStreamsInfo(nid,  archive);  [CE]  cannot  find  symbol  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo(header,  archive);  reader.readStreamsInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo(header,  archive);  reader.readStreamsInfo(nid,  archive);	  readStreamsInfo(header,    archive);    reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
55	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  nid  =  reader.readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  reader  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  nid  =  reader.readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  nid  =  reader.readStreamsInfo(header,  archive);	  readStreamsInfo(header,    archive);    reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	15	None	replace
56	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders).addAll(new  ArrayList  <  NID>();  [CE]  ')'  expected  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders).addAll(new  ArrayList  <  NID>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders).addAll(new  ArrayList  <  NID>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NID>();    	non-compiled	[CE]  ')'  expected	83	None	replace
57	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders).addAll(new  ArrayList  <  NID>());  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders).addAll(new  ArrayList  <  NID>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders).addAll(new  ArrayList  <  NID>());	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NID>();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
58	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive).folders  =  new  LinkedList  <  NID>();  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive).folders  =  new  LinkedList  <  NID>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive).folders  =  new  LinkedList  <  NID>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NID>();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
59	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive),  archive.folders  =  new  ArrayList  <  NID>();  [CE]  ';'  expected  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive),  archive.folders  =  new  ArrayList  <  NID>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive),  archive.folders  =  new  ArrayList  <  NID>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NID>();    	non-compiled	[CE]  ';'  expected	83	None	replace
60	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders).length  =  new  ArrayList  <  NID>();  [CE]  cannot  find  symbol  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders).length  =  new  ArrayList  <  NID>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders).length  =  new  ArrayList  <  NID>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NID>();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
61	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders).reset();  [CE]  cannot  find  symbol  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders).reset();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders).reset();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NID>();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
62	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	                nid    =    header.readUnsignedByte();    nid  =  header.readUnsignedByte();	  	compilable	  [FE]  IOException  	26	12	add
63	[BUG]  [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                nid    =    header.readUnsignedByte();    nid  =  header.readUnsignedByte();	  	compilable	  [FE]  IOException  	26	12	add
64	[BUG]  [BUGGY]          nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                nid    =    header.readUnsignedByte();    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	26	None	add
65	[BUG]  [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.ReadUnsignedByte();  [CE]  cannot  find  symbol  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.ReadUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                nid    =    header.readUnsignedByte();    nid  =  header.ReadUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol	26	None	add
66	[BUG]  [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte(1);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte(1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                nid    =    header.readUnsignedByte();    nid  =  header.readUnsignedByte(1);	  	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	26	None	add
67	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	86	None	add
68	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	86	None	add
69	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  cannot  find  symbol  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  cannot  find  symbol	86	None	add
70	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  reader.readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  cannot  find  symbol  reader  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  reader.readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    reader.readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  cannot  find  symbol  reader	86	None	add
71	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	86	None	add
72	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	86	None	add
73	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	86	None	add
74	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);  [CE]  cannot  find  symbol  [FE]                  IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);	  	non-compiled	[CE]  cannot  find  symbol	86	None	add
75	[BUG]  [BUGGY]  ReadUnpackInfo(header,  nid);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  nid);	  ReadUnpackInfo(nid,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
76	[BUG]  [BUGGY]  ReadUnpackInfo(nid,  header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(nid,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(nid,  header,  archive.folders);	  ReadUnpackInfo(nid,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
77	[BUG]  [BUGGY]  ReadUnpackInfo(nid,  archive,  header);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(nid,  archive,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(nid,  archive,  header);	  ReadUnpackInfo(nid,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
78	[BUG]  [BUGGY]  ReadUnpackInfo(header,  null,  archive);  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  null,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  null,  archive);	  ReadUnpackInfo(nid,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
79	[BUG]  [BUGGY]  ReadUnpackInfo(header,  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  NID.kPackInfo);	  ReadUnpackInfo(nid,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
80	[BUG]  [BUGGY]  ReadUnpackInfo(header,  null,  nid);  [CE]  cannot  find  symbol  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  null,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  null,  nid);	  ReadUnpackInfo(nid,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
81	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  nid,  null);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  nid,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  nid,  null);	  readPackInfo(header,    archive.folders,    null);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	39	None	replace
82	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  fileName,  null);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  fileName,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  fileName,  null);	  readPackInfo(header,    archive.folders,    null);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	39	None	replace
83	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  null,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  null,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  null,  nid);	  readPackInfo(header,    archive.folders,    null);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	39	None	replace
84	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  nid,  false);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  nid,  false);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  nid,  false);	  readPackInfo(header,    archive.folders,    null);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	39	None	replace
85	[BUG]  [BUGGY]  [FE]  IOException  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);	  readUnpackInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	70	12	replace
86	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);  [FE]  IOException  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);	  readUnpackInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	70	12	replace
87	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);	  readUnpackInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	70	12	replace
88	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);	  readUnpackInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	70	12	replace
89	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.packInfo);  [CE]  cannot  find  symbol  packInfo  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.packInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.packInfo);	  readUnpackInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  cannot  find  symbol  packInfo	70	None	replace
90	[BUG]  [BUGGY]  readStreamsInfo(header,  nid,  archive);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  nid,  archive);	  readStreamsInfo(nid,    archive);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
91	[BUG]  [BUGGY]  readStreamsInfo(nid,  NID.kPackInfo,  archive);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(nid,  NID.kPackInfo,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(nid,  NID.kPackInfo,  archive);	  readStreamsInfo(nid,    archive);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
92	[BUG]  [BUGGY]  readStreamsInfo(header,  null,  archive);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  null,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  null,  archive);	  readStreamsInfo(nid,    archive);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
93	[BUG]  [BUGGY]  readStreamsInfo(nid,  header,  archive);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(nid,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(nid,  header,  archive);	  readStreamsInfo(nid,    archive);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
94	[BUG]  [BUGGY]  readStreamsInfo(nid,  archive.folders);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(nid,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(nid,  archive.folders);	  readStreamsInfo(nid,    archive);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
95	[BUG]  [BUGGY]  readStreamsInfo(header,  fileName,  archive);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  fileName,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  fileName,  archive);	  readStreamsInfo(nid,    archive);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
96	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders,  nid);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders,  nid);	  ReadUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
97	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders,  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders,  NID.kPackInfo);	  ReadUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
98	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders,  null);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders,  null);	  ReadUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
99	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders,  false);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders,  false);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders,  false);	  ReadUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
100	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders,  fileName);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders,  fileName);	  ReadUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
101	[BUG]  [BUGGY]  ReadUnpackInfo(nid,  archive.folders);  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(nid,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(nid,  archive.folders);	  ReadUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
102	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive.folders),  nid);  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive.folders),  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(header,  archive.folders),  nid);	  ReadUnpackInfo(new    FileInputStream(header,    archive.folders));    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
103	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive.folders),  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive.folders),  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(header,  archive.folders),  NID.kPackInfo);	  ReadUnpackInfo(new    FileInputStream(header,    archive.folders));    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
104	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive.folders),  nid));  [CE]  ';'  expected  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive.folders),  nid));  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(header,  archive.folders),  nid));	  ReadUnpackInfo(new    FileInputStream(header,    archive.folders));    	non-compiled	[CE]  ';'  expected	24	None	replace
105	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive.folders),  NID.kPackInfo));  [CE]  ';'  expected  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive.folders),  NID.kPackInfo));  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(header,  archive.folders),  NID.kPackInfo));	  ReadUnpackInfo(new    FileInputStream(header,    archive.folders));    	non-compiled	[CE]  ';'  expected	24	None	replace
106	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive.folders,  nid));  [CE]  cannot  find  symbol  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive.folders,  nid));  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(header,  archive.folders,  nid));	  ReadUnpackInfo(new    FileInputStream(header,    archive.folders));    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
107	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive.folders),  fileName);  [CE]  cannot  find  symbol  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive.folders),  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(header,  archive.folders),  fileName);	  ReadUnpackInfo(new    FileInputStream(header,    archive.folders));    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
108	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  6);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  6);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	32	12	replace
109	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  6);  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  6);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  6);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	32	12	replace
110	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	32	12	replace
111	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	32	12	replace
112	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  4);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  4);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	32	12	replace
113	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  4);  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  4);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  4);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	32	12	replace
114	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  7ZSignature);  [CE]  ')'  expected  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  7ZSignature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  7ZSignature);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  ')'  expected	32	None	replace
115	[BUG]  [BUGGY]  [FE]  IOException  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  3);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  3);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	32	12	replace
116	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  3);  [FE]  IOException  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  3);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  3);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	32	12	replace
117	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	98	None	add
118	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	98	None	add
119	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  ReadUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [CE]  cannot  find  symbol  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  ReadUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    ReadUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  cannot  find  symbol	98	None	add
120	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  reader.readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [CE]  cannot  find  symbol  reader  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  reader.readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    reader.readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  cannot  find  symbol  reader	98	None	add
121	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	98	None	add
122	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(Nid);  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(Nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(Nid);	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	98	None	add
123	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(sid);  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(sid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(sid);	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	98	None	add
124	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders);  InputStream  inputStreamStack  =  getInputStreamStack();  [CE]  cannot  find  symbol  [FE]                java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders);  InputStream  inputStreamStack  =  getInputStreamStack();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders);  InputStream  inputStreamStack  =  getInputStreamStack();	  readUnpackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
125	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders);  InputStream  inputStreamStack  =  getInputStreamStack();  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders);  InputStream  inputStreamStack  =  getInputStreamStack();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive.folders);  InputStream  inputStreamStack  =  getInputStreamStack();	  readUnpackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	103	None	replace
126	[BUG]  [BUGGY]  ReadUnpackInfo(currentFolderInputStream,  header);  InputStream  inputStreamStack  =  getInputStreamStack();  [CE]  cannot  find  symbol  [FE]                    java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(currentFolderInputStream,  header);  InputStream  inputStreamStack  =  getInputStreamStack();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(currentFolderInputStream,  header);  InputStream  inputStreamStack  =  getInputStreamStack();	  readUnpackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
127	[BUG]  [BUGGY]  ReadUnpackInfo(currentFolderInputStream,  header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack();  [CE]  cannot  find  symbol  [FE]                      java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(currentFolderInputStream,  header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(currentFolderInputStream,  header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack();	  readUnpackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
128	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack();  [CE]  cannot  find  symbol  [FE]                        java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	InputStream  inputStreamStack  =  getInputStreamStack();	  readUnpackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
129	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  nid  =  NID.kPackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	nid  =  NID.kPackInfo;	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    	compilable	  [FE]  IOException  	11	12	replace
130	[BUG]  [BUGGY]  nid  =  NID.kPackInfo;  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  nid  =  NID.kPackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	nid  =  NID.kPackInfo;	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    	compilable	  [FE]  IOException  	11	12	replace
131	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
132	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
133	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  ReadUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  ReadUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    ReadUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
134	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  reader.readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  [CE]  cannot  find  symbol  reader  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  reader.readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    reader.readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol  reader	1	None	add
135	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  readUnpackInfo(header,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  readUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    int  nid  =  header.readUnsignedByte();  readUnpackInfo(header,  archive);	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	1	None	add
136	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  deferredBlockStreams.add(nid);  [CE]  no  suitable  method  found  for  add(int)  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  deferredBlockStreams.add(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  deferredBlockStreams.add(nid);	  	non-compiled	[CE]  no  suitable  method  found  for  add(int)	1	None	add
137	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
138	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  [FE]  java.io.IOException:  Expected  kFolder  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
139	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
140	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  [FE]  java.io.IOException:  Expected  kFolder  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
141	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kPackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive,  nid,  NID.kPackInfo);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	84	None	replace
142	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	84	None	replace
143	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID);  [CE]  cannot  find  symbol  NID  [FE]            java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive,  nid,  NID);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  NID	84	None	replace
144	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  fileName);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive,  nid,  fileName);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	84	None	replace
145	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  kPackInfo);  [CE]  cannot  find  symbol  kPackInfo  [FE]                java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive,  nid,  kPackInfo);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  kPackInfo	84	None	replace
146	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive.folders,  nid);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	84	None	replace
147	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  signature);  [CE]  cannot  find  symbol  signature  [FE]                    java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  signature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive,  nid,  signature);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  signature	84	None	replace
148	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo  header  =  readStreamsInfo(header,  archive.folders);	  ReadStreamsInfo    header    =    readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
149	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive,  nid);  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo  header  =  readStreamsInfo(header,  archive,  nid);	  ReadStreamsInfo    header    =    readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
150	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(nid,  archive);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo  header  =  readStreamsInfo(nid,  archive);	  ReadStreamsInfo    header    =    readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
151	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo  header  =  readStreamsInfo(header,  NID.kPackInfo);	  ReadStreamsInfo    header    =    readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
152	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive,  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo  header  =  readStreamsInfo(header,  archive,  NID.kPackInfo);	  ReadStreamsInfo    header    =    readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
153	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(file,  header,  archive);  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(file,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo  header  =  readStreamsInfo(file,  header,  archive);	  ReadStreamsInfo    header    =    readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
154	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	100	None	add
155	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	100	None	add
156	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  ReadUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  ReadUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    ReadUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	100	None	add
157	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  reader.readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  reader  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  reader.readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    reader.readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol  reader	100	None	add
158	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStream(header);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStream(header);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    InputStream  inputStreamStack  =  getInputStreamStream(header);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	100	None	add
159	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  String  headerSize  =  new  ArrayList  <  String>();  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  String  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    String  headerSize  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	100	None	add
160	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  this.currentFolderIndex  =  currentFolderInputStream.readUnpackInfo(header,  archive);  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  this.currentFolderIndex  =  currentFolderInputStream.readUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  this.currentFolderIndex  =  currentFolderInputStream.readUnpackInfo(header,  archive);	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	100	None	add
161	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  true);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  true);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  true);	  readPackInfo(header,    archive.folders,    false);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	90	None	replace
162	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  false,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  false,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  false,  nid);	  readPackInfo(header,    archive.folders,    false);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	90	None	replace
163	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  null,  false);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  null,  false);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  null,  false);	  readPackInfo(header,    archive.folders,    false);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	90	None	replace
164	[BUG]  [BUGGY]  ReadUnpackInfo(inputStreamStack,  archive);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(inputStreamStack,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(inputStreamStack,  archive);	  ReadUnpackInfo(currentFolder,    archive);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	114	None	replace
165	[BUG]  [BUGGY]  ReadUnpackInfo(currentEntryIndex,  archive);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(currentEntryIndex,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(currentEntryIndex,  archive);	  ReadUnpackInfo(currentFolder,    archive);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
166	[BUG]  [BUGGY]  ReadUnpackInfo(file,  archive);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(file,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(file,  archive);	  ReadUnpackInfo(currentFolder,    archive);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
167	[BUG]  [BUGGY]  ReadUnpackInfo(currentFolder,  archive.folders);  [CE]  cannot  find  symbol  currentFolder  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(currentFolder,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(currentFolder,  archive.folders);	  ReadUnpackInfo(currentFolder,    archive);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	114	None	replace
168	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Integer  nid  =  header.readUnsignedByte();	  readStreamsInfo(header,    archive);    int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	13	None	replace
169	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();	  readStreamsInfo(header,    archive);    int    nid    =    header.readUnsignedByte();    	compilable	  [FE]  IOException  	13	12	replace
170	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [FE]  IOException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();	  readStreamsInfo(header,    archive);    int    nid    =    header.readUnsignedByte();    	compilable	  [FE]  IOException  	13	12	replace
171	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  byte  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	byte  nid  =  header.readUnsignedByte();	  readStreamsInfo(header,    archive);    int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	13	None	replace
172	[BUG]  [BUGGY]  readStreamInfo(header,  archive,  nid,  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive,  nid,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive,  nid,  NID.kPackInfo);	  readStreamInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
173	[BUG]  [BUGGY]  readStreamInfo(header,  archive,  nid,  NID);  [CE]  cannot  find  symbol  NID  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive,  nid,  NID);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive,  nid,  NID);	  readStreamInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  NID	76	None	replace
174	[BUG]  [BUGGY]  readStreamInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);	  readStreamInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
175	[BUG]  [BUGGY]  readStreamInfo(header,  archive.folders,  nid);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive.folders,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive.folders,  nid);	  readStreamInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
176	[BUG]  [BUGGY]  readStreamInfo(header,  archive,  nid,  NID.kUnpackInfo);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive,  nid,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive,  nid,  NID.kUnpackInfo);	  readStreamInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
177	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive,  nid,  NID);  [CE]  cannot  find  symbol  NID  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive,  nid,  NID);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive,  nid,  NID);	  ReadUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  NID	79	None	replace
178	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive,  nid,  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive,  nid,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive,  nid,  NID.kPackInfo);	  ReadUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
179	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);	  ReadUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
180	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive,  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive,  NID.kPackInfo);	  ReadUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
181	[BUG]  [BUGGY]  readPackInfo(header,  fileName,  archive.folders);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  fileName,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  fileName,  archive.folders);	  readPackInfo(fileName,    header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	108	None	replace
182	[BUG]  [BUGGY]  readPackInfo(fileName,  archive.folders,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(fileName,  archive.folders,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(fileName,  archive.folders,  nid);	  readPackInfo(fileName,    header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	108	None	replace
183	[BUG]  [BUGGY]  ReadPackInfo(header,  fileName,  archive.folders);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadPackInfo(header,  fileName,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadPackInfo(header,  fileName,  archive.folders);	  readPackInfo(fileName,    header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
184	[BUG]  [BUGGY]  readPackInfo(header,  fileName,  archives.folders);  [CE]  cannot  find  symbol  archives  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  fileName,  archives.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  fileName,  archives.folders);	  readPackInfo(fileName,    header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  archives	108	None	replace
185	[BUG]  [BUGGY]  readPackInfo(headers,  fileName,  archive.folders);  [CE]  cannot  find  symbol  headers  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(headers,  fileName,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(headers,  fileName,  archive.folders);	  readPackInfo(fileName,    header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  headers	108	None	replace
186	[BUG]  [BUGGY]  readPackInfo(fileName,  archive.folders,  header);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(fileName,  archive.folders,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(fileName,  archive.folders,  header);	  readPackInfo(fileName,    header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	108	None	replace
187	[BUG]  [BUGGY]  ReadStreamInfo(header,  archive.folders,  nid);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamInfo(header,  archive.folders,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamInfo(header,  archive.folders,  nid);	  ReadStreamInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
188	[BUG]  [BUGGY]  ReadStreamInfo(header,  archive.folders,  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamInfo(header,  archive.folders,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamInfo(header,  archive.folders,  NID.kPackInfo);	  ReadStreamInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
189	[BUG]  [BUGGY]  ReadStreamInfo(header,  archive.folders,  null);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamInfo(header,  archive.folders,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamInfo(header,  archive.folders,  null);	  ReadStreamInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
190	[BUG]  [BUGGY]  ReadStreamInfo(header,  archive.folders,  false);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamInfo(header,  archive.folders,  false);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamInfo(header,  archive.folders,  false);	  ReadStreamInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
191	[BUG]  [BUGGY]  ReadStreamInfo(header,  archive.folders,  fileName);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamInfo(header,  archive.folders,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamInfo(header,  archive.folders,  fileName);	  ReadStreamInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
192	[BUG]  [BUGGY]  ReadStreamInfo(header,  archive.folders,  signature);  [CE]  cannot  find  symbol  signature  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamInfo(header,  archive.folders,  signature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamInfo(header,  archive.folders,  signature);	  ReadStreamInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  signature	61	None	replace
193	[BUG]  [BUGGY]  ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  cannot  find  symbol  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
194	[BUG]  [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  cannot  find  symbol  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
195	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	104	None	add
196	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	104	None	add
197	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	  	non-compiled	[CE]  cannot  find  symbol	104	None	add
198	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  reader.readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  reader  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  reader.readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    reader.readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	  	non-compiled	[CE]  cannot  find  symbol  reader	104	None	add
199	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEAFDER_SIZE);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEAFDER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEAFDER_SIZE);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	104	None	add
200	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEAFDER_SIZE);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEAFDER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEAFDER_SIZE);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	104	None	add
201	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEAFDER_SIZE);  [CE]  cannot  find  symbol  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEAFDER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEAFDER_SIZE);	  	non-compiled	[CE]  cannot  find  symbol	104	None	add
202	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(nid,  archive));  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(new  FileInputStream(nid,  archive));  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(nid,  archive));	  ReadUnpackInfo(new    FileInputStream(header,    archive));    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
203	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive),  nid);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive),  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(header,  archive),  nid);	  ReadUnpackInfo(new    FileInputStream(header,    archive));    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
204	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(file,  header,  archive));  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(new  FileInputStream(file,  header,  archive));  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(file,  header,  archive));	  ReadUnpackInfo(new    FileInputStream(header,    archive));    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
205	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(fileName,  header,  archive));  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(new  FileInputStream(fileName,  header,  archive));  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(fileName,  header,  archive));	  ReadUnpackInfo(new    FileInputStream(header,    archive));    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
206	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive),  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive),  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(header,  archive),  NID.kPackInfo);	  ReadUnpackInfo(new    FileInputStream(header,    archive));    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
207	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  nid);	  readPackInfo(header,    archive,    nid,    header.length);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	65	None	replace
208	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  fileName.length);  [CE]  cannot  find  symbol  length  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  fileName.length);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  fileName.length);	  readPackInfo(header,    archive,    nid,    header.length);    	non-compiled	[CE]  cannot  find  symbol  length	65	None	replace
209	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive.folders);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive.folders);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);	  readStreamsInfo(header,    archive);    byte[]    header    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	88	None	replace
210	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[archive.folders.size()  ]);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[archive.folders.size()  ]);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[archive.folders.size()  ]);	  readStreamsInfo(header,    archive);    byte[]    header    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	88	None	replace
211	[BUG]  [BUGGY]  readStreamsInfo(nid,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(nid,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(nid,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);	  readStreamsInfo(header,    archive);    byte[]    header    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	88	None	replace
212	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[0]);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[0]);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[0]);	  readStreamsInfo(header,    archive);    byte[]    header    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	88	None	replace
213	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders,  nid);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive.folders,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive.folders,  nid);	  readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	48	None	replace
214	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders,  NID.kPackInfo);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive.folders,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive.folders,  NID.kPackInfo);	  readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	48	None	replace
215	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders,  signature);  [CE]  cannot  find  symbol  signature  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive.folders,  signature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive.folders,  signature);	  readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  signature	48	None	replace
216	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders,  null);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive.folders,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive.folders,  null);	  readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	48	None	replace
217	[BUG]  [BUGGY]  readStreamsInfo(nid,  header,  archive.folders);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(nid,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(nid,  header,  archive.folders);	  readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	48	None	replace
218	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders,  fileName);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive.folders,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive.folders,  fileName);	  readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	48	None	replace
219	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive),  archive.folders  =  new  ArrayList  <  String>();  [CE]  ';'  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive),  archive.folders  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive),  archive.folders  =  new  ArrayList  <  String>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  ';'  expected	80	None	replace
220	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders).length  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders).length  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders).length  =  new  ArrayList  <  String>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
221	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders).addAll(new  ArrayList  <  String>();  [CE]  ')'  expected  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders).addAll(new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders).addAll(new  ArrayList  <  String>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  ')'  expected	80	None	replace
222	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders).addAll(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders).addAll(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders).addAll(new  ArrayList  <  String>());	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
223	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive).folders  =  new  LinkedList  <  String>();  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive).folders  =  new  LinkedList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive).folders  =  new  LinkedList  <  String>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
224	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders).addAll(archive.folders);  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders).addAll(archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders).addAll(archive.folders);	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
225	[BUG]  [BUGGY]  readStreamInfo(header,  fileName,  archive);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  fileName,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  fileName,  archive);	  readStreamInfo(fileName,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
226	[BUG]  [BUGGY]  ReadStreamInfo(header,  fileName,  archive);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamInfo(header,  fileName,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamInfo(header,  fileName,  archive);	  readStreamInfo(fileName,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
227	[BUG]  [BUGGY]  readStreamInfo(header,  fileName);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  fileName);	  readStreamInfo(fileName,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
228	[BUG]  [BUGGY]  readStreamInfo(fileName,  archive,  nid);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(fileName,  archive,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(fileName,  archive,  nid);	  readStreamInfo(fileName,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
229	[BUG]  [BUGGY]  readStreamInfo(fileName,  archive.folders);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(fileName,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(fileName,  archive.folders);	  readStreamInfo(fileName,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
230	[BUG]  [BUGGY]  byte[]  nextHeaderSize  =  header.readUnsignedByte(nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  byte[]  nextHeaderSize  =  header.readUnsignedByte(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	byte[]  nextHeaderSize  =  header.readUnsignedByte(nid);	          byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	33	None	replace
231	[BUG]  [BUGGY]  byte[]  nextHeaderSize  =  header.readUnsignedByte()  +  1;  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  byte[]  nextHeaderSize  =  header.readUnsignedByte()  +  1;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	byte[]  nextHeaderSize  =  header.readUnsignedByte()  +  1;	          byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  incompatible  types	33	None	replace
232	[BUG]  [BUGGY]  byte[]  nextHeaderSize  =  header.readUnsignedByte(),  nid;  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  byte[]  nextHeaderSize  =  header.readUnsignedByte(),  nid;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	byte[]  nextHeaderSize  =  header.readUnsignedByte(),  nid;	          byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  incompatible  types	33	None	replace
233	[BUG]  [BUGGY]  byte[]  nextHeaderSize  =  header.readUnsignedByte()  +  nid;  [CE]  incompatible  types  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  byte[]  nextHeaderSize  =  header.readUnsignedByte()  +  nid;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	byte[]  nextHeaderSize  =  header.readUnsignedByte()  +  nid;	          byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  incompatible  types	33	None	replace
234	[BUG]  [BUGGY]  readStreamsInfo(header,  archive,  NID.kPackInfo,  nid);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive,  NID.kPackInfo,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive,  NID.kPackInfo,  nid);	  readStreamsInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	50	None	replace
235	[BUG]  [BUGGY]  readStreamsInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  NID.kPackInfo);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  NID.kPackInfo);	  readStreamsInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	50	None	replace
236	[BUG]  [BUGGY]  readStreamsInfo(header,  archive,  nid,  NID.kPackInfo);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive,  nid,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive,  nid,  NID.kPackInfo);	  readStreamsInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	50	None	replace
237	[BUG]  [BUGGY]  readStreamsInfo(header,  archive,  NID.kPackInfo,  signature);  [CE]  cannot  find  symbol  signature  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive,  NID.kPackInfo,  signature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive,  NID.kPackInfo,  signature);	  readStreamsInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  signature	50	None	replace
238	[BUG]  [BUGGY]  readStreamsInfo(header,  archive,  NID.kPackInfo,  null);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive,  NID.kPackInfo,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive,  NID.kPackInfo,  null);	  readStreamsInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	50	None	replace
239	[BUG]  [BUGGY]  readStreamInfo(header,  archive.nid,  nid);  [CE]  cannot  find  symbol  nid  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive.nid,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive.nid,  nid);	  readStreamInfo(header,    nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  nid	78	None	replace
240	[BUG]  [BUGGY]  readStreamInfo(header,  archive.nextHeaderSize,  nid);  [CE]  cannot  find  symbol  nextHeaderSize  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive.nextHeaderSize,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive.nextHeaderSize,  nid);	  readStreamInfo(header,    nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  nextHeaderSize	78	None	replace
241	[BUG]  [BUGGY]  readStreamInfo(nid,  header,  archive);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(nid,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(nid,  header,  archive);	  readStreamInfo(header,    nid,    archive);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
242	[BUG]  [BUGGY]  readStreamInfo(header,  archive.nid);  [CE]  cannot  find  symbol  nid  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive.nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive.nid);	  readStreamInfo(header,    nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  nid	78	None	replace
243	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  signature,  fileName);  [CE]  cannot  find  symbol  signature  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  signature,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  signature,  fileName);	  readPackInfo(header,    archive.folders,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	40	None	replace
244	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  fileName,  signature);  [CE]  cannot  find  symbol  signature  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  fileName,  signature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  fileName,  signature);	  readPackInfo(header,    archive.folders,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	40	None	replace
245	[BUG]  [BUGGY]  reader.readStreamsInfo(file,  header);  [CE]  cannot  find  symbol  reader  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(file,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(file,  header);	  reader.readStreamsInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	46	None	replace
246	[BUG]  [BUGGY]  reader.readStreamsInfo(file,  archive.folders);  [CE]  cannot  find  symbol  reader  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(file,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(file,  archive.folders);	  reader.readStreamsInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	46	None	replace
247	[BUG]  [BUGGY]  reader.readStreamsInfo(file,  NID.kPackInfo);  [CE]  cannot  find  symbol  reader  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(file,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(file,  NID.kPackInfo);	  reader.readStreamsInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	46	None	replace
248	[BUG]  [BUGGY]  Reader.readStreamsInfo(file,  archive);  [CE]  cannot  find  symbol  Reader  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader.readStreamsInfo(file,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader.readStreamsInfo(file,  archive);	  reader.readStreamsInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol  Reader	46	None	replace
249	[BUG]  [BUGGY]  Reader  reader  =  archive.readStreamsInfo(header,  inputStreamStack);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  archive.readStreamsInfo(header,  inputStreamStack);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  archive.readStreamsInfo(header,  inputStreamStack);	  Reader    reader    =    inputStreamStack.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
250	[BUG]  [BUGGY]  Reader  reader  =  this.inputStreamStack.readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  this.inputStreamStack.readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  this.inputStreamStack.readStreamsInfo(header,  archive);	  Reader    reader    =    inputStreamStack.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
251	[BUG]  [BUGGY]  Reader  reader  =  currentFolderInputStream.readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  currentFolderInputStream.readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  currentFolderInputStream.readStreamsInfo(header,  archive);	  Reader    reader    =    inputStreamStack.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
252	[BUG]  [BUGGY]  Reader  reader  =  archive.readStreamsInfo(header,  outputStreamStack);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  archive.readStreamsInfo(header,  outputStreamStack);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  archive.readStreamsInfo(header,  outputStreamStack);	  Reader    reader    =    inputStreamStack.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
253	[BUG]  [BUGGY]  Reader  reader  =  inputStreamStack.readStreamsInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  inputStreamStack.readStreamsInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  inputStreamStack.readStreamsInfo(header,  archive.folders);	  Reader    reader    =    inputStreamStack.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
254	[BUG]  [BUGGY]  Reader  reader  =  archives.readStreamsInfo(header,  inputStreamStack);  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  archives.readStreamsInfo(header,  inputStreamStack);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  archives.readStreamsInfo(header,  inputStreamStack);	  Reader    reader    =    inputStreamStack.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
255	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  inputStreamStack.peek();  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo  header  =  inputStreamStack.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo  header  =  inputStreamStack.peek();	  readStreamsInfo(header,    archive);    InputStream    header    =    inputStreamStack.peek();    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
256	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders);  InputStream  header  =  inputStreamStack.peek();  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive.folders);  InputStream  header  =  inputStreamStack.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive.folders);  InputStream  header  =  inputStreamStack.peek();	  readStreamsInfo(header,    archive);    InputStream    header    =    inputStreamStack.peek();    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	106	None	replace
257	[BUG]  [BUGGY]  InputStream  header  =  inputStreamStack.peek();  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  InputStream  header  =  inputStreamStack.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	InputStream  header  =  inputStreamStack.peek();	  readStreamsInfo(header,    archive);    InputStream    header    =    inputStreamStack.peek();    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	106	None	replace
258	[BUG]  [BUGGY]  ReadStreamsInfo(header,  archive.folders);  InputStream  header  =  inputStreamStack.peek();  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo(header,  archive.folders);  InputStream  header  =  inputStreamStack.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo(header,  archive.folders);  InputStream  header  =  inputStreamStack.peek();	  readStreamsInfo(header,    archive);    InputStream    header    =    inputStreamStack.peek();    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
259	[BUG]  [BUGGY]  ReadStreamsInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo(header,  archive.folders);	  readStreamsInfo(header,    archive);    InputStream    header    =    inputStreamStack.peek();    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
260	[BUG]  [BUGGY]  reader.readStreamsInfo(nid,  NID.kPackInfo);  [CE]  cannot  find  symbol  reader  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(nid,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(nid,  NID.kPackInfo);	  reader.readStreamsInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	42	None	replace
261	[BUG]  [BUGGY]  reader.readStreamsInfo(nid,  fileName);  [CE]  cannot  find  symbol  reader  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(nid,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(nid,  fileName);	  reader.readStreamsInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	42	None	replace
262	[BUG]  [BUGGY]  reader.readStreamsInfo(nid,  kPackInfo);  [CE]  cannot  find  symbol  kPackInfo  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(nid,  kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(nid,  kPackInfo);	  reader.readStreamsInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  kPackInfo	42	None	replace
263	[BUG]  [BUGGY]  reader.readStreamsInfo(nid,  archive.folders);  [CE]  cannot  find  symbol  reader  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(nid,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(nid,  archive.folders);	  reader.readStreamsInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	42	None	replace
264	[BUG]  [BUGGY]  reader.readStreamsInfo(nid,  nid);  [CE]  cannot  find  symbol  reader  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(nid,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(nid,  nid);	  reader.readStreamsInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	42	None	replace
265	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  ReadUnpackInfo(nid,  archive);  [CE]  cannot  find  symbol  [FE]          java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  ReadUnpackInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive);  ReadUnpackInfo(nid,  archive);	  readUnpackInfo(header,    archive);    ReadUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
266	[BUG]  [BUGGY]  readUnpackInfo(nid,  archive);  ReadUnpackInfo(header,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(nid,  archive);  ReadUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(nid,  archive);  ReadUnpackInfo(header,  archive);	  readUnpackInfo(header,    archive);    ReadUnpackInfo(header,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	3	None	replace
267	[BUG]  [BUGGY]  readPackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid,  NID.kPackInfo);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid,  NID.kPackInfo);	  readPackInfo(header,    archive,    nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	55	None	replace
268	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kPackInfo,  signature);  [CE]  cannot  find  symbol  signature  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kPackInfo,  signature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  NID.kPackInfo,  signature);	  readPackInfo(header,    archive,    nid,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  signature	55	None	replace
269	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kPackInfo,  header);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kPackInfo,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  NID.kPackInfo,  header);	  readPackInfo(header,    archive,    nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	55	None	replace
270	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kPackInfo,  fileName);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kPackInfo,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  NID.kPackInfo,  fileName);	  readPackInfo(header,    archive,    nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	55	None	replace
271	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kPackInfo,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kPackInfo,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  NID.kPackInfo,  nid);	  readPackInfo(header,    archive,    nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	55	None	replace
272	[BUG]  [BUGGY]  readPackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid);	  readPackInfo(header,    archive,    nid,    DEFERRED_HEADER_SIZE);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	95	None	replace
273	[BUG]  [BUGGY]  readPackInfo(header,  archive,  DEFERRED_HEADER_SIZE,  nid);  [CE]  cannot  find  symbol  DEFERRED_HEADER_SIZE  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  DEFERRED_HEADER_SIZE,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  DEFERRED_HEADER_SIZE,  nid);	  readPackInfo(header,    archive,    nid,    DEFERRED_HEADER_SIZE);    	non-compiled	[CE]  cannot  find  symbol  DEFERRED_HEADER_SIZE	95	None	replace
274	[BUG]  [BUGGY]  readPackInfo(header,  archive,  fileName,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  fileName,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  fileName,  nid,  SIGNATURE_HEADER_SIZE);	  readPackInfo(header,    archive,    nid,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	54	None	replace
275	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  NID);  [CE]  cannot  find  symbol  NID  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  NID);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  NID);	  readPackInfo(header,    archive,    nid,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  cannot  find  symbol  NID	54	None	replace
276	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  NID.kPackInfo);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  NID.kPackInfo);	  readPackInfo(header,    archive,    nid,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	54	None	replace
277	[BUG]  [BUGGY]  readPackInfo(header,  archive,  NID.kPackInfo,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  NID.kPackInfo,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  NID.kPackInfo,  nid,  SIGNATURE_HEADER_SIZE);	  readPackInfo(header,    archive,    nid,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	54	None	replace
278	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  nextHeaderSize);  [CE]  cannot  find  symbol  nextHeaderSize  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  nextHeaderSize);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  nextHeaderSize);	  readPackInfo(header,    archive,    nid,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  cannot  find  symbol  nextHeaderSize	54	None	replace
279	[BUG]  [BUGGY]  ReadUnpackInfo(header,  file,  archive);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  file,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  file,  archive);	  ReadUnpackInfo(file,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
280	[BUG]  [BUGGY]  ReadUnpackInfo(file,  header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(file,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(file,  header,  archive.folders);	  ReadUnpackInfo(file,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
281	[BUG]  [BUGGY]  ReadUnpackInfo(header,  file,  header);  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  file,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  file,  header);	  ReadUnpackInfo(file,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
282	[BUG]  [BUGGY]  ReadUnpackInfo(file,  nid,  archive);  [CE]  cannot  find  symbol  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(file,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(file,  nid,  archive);	  ReadUnpackInfo(file,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
283	[BUG]  [BUGGY]  ReadUnpackInfo(header,  file,  nid);  [CE]  cannot  find  symbol  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  file,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  file,  nid);	  ReadUnpackInfo(file,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
284	[BUG]  [BUGGY]  ReadUnpackInfo(file,  archive.folders);  [CE]  cannot  find  symbol  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(file,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(file,  archive.folders);	  ReadUnpackInfo(file,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
285	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  DEFERRED_BLOCKS);  [CE]  cannot  find  symbol  DEFERRED_BLOCKS  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  DEFERRED_BLOCKS);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  DEFERRED_BLOCKS);	  readPackInfo(header,    archive,    nid,    DEFERREDBlockStreams);    	non-compiled	[CE]  cannot  find  symbol  DEFERRED_BLOCKS	94	None	replace
286	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  NID.kPackInfo,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  NID.kPackInfo,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  NID.kPackInfo,  nid);	  readPackInfo(header,    archive.folders,    NID.kPackInfo);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	37	None	replace
287	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  SIGNATURE_HEADER_SIZE,  NID.kPackInfo);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  SIGNATURE_HEADER_SIZE,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  SIGNATURE_HEADER_SIZE,  NID.kPackInfo);	  readPackInfo(header,    archive.folders,    NID.kPackInfo);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	37	None	replace
288	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  NID.kUnpackInfo,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  NID.kUnpackInfo,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  NID.kUnpackInfo,  nid);	  readPackInfo(header,    archive.folders,    NID.kPackInfo);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	37	None	replace
289	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  fileName,  NID.kPackInfo);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  fileName,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  fileName,  NID.kPackInfo);	  readPackInfo(header,    archive.folders,    NID.kPackInfo);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	37	None	replace
290	[BUG]  [BUGGY]  int  nid  =  header.readUnpackInfo(archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  int  nid  =  header.readUnpackInfo(archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	int  nid  =  header.readUnpackInfo(archive);	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnpackInfo(    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	5	None	replace
291	[BUG]  [BUGGY]  int  nid  =  header.readUnpackInfo(header,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  int  nid  =  header.readUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	int  nid  =  header.readUnpackInfo(header,  archive);	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnpackInfo(    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	5	None	replace
292	[BUG]  [BUGGY]  Integer  nid  =  header.readUnpackInfo(archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Integer  nid  =  header.readUnpackInfo(archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Integer  nid  =  header.readUnpackInfo(archive);	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnpackInfo(    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	5	None	replace
293	[BUG]  [BUGGY]  int  nid  =  header.readUnpackInfo(dataInput);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                    java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  int  nid  =  header.readUnpackInfo(dataInput);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	int  nid  =  header.readUnpackInfo(dataInput);	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnpackInfo(    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	5	None	replace
294	[BUG]  [BUGGY]  nid  =  header.readUnpackInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]                      java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  nid  =  header.readUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	nid  =  header.readUnpackInfo(header,  archive);	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnpackInfo(    archive);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
295	[BUG]  [BUGGY]  int  nid  =  header.readUnpackInfo(file);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                        java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  int  nid  =  header.readUnpackInfo(file);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	int  nid  =  header.readUnpackInfo(file);	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnpackInfo(    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	5	None	replace
296	[BUG]  [BUGGY]  int  nid  =  header.readUnpackInfo(data);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                          java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  int  nid  =  header.readUnpackInfo(data);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	int  nid  =  header.readUnpackInfo(data);	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnpackInfo(    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	5	None	replace
297	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders).addAll(new  ArrayList  <  NoClassDefFoundError>();  [CE]  ')'  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders).addAll(new  ArrayList  <  NoClassDefFoundError>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders).addAll(new  ArrayList  <  NoClassDefFoundError>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NoClassDefFoundError>();    	non-compiled	[CE]  ')'  expected	81	None	replace
298	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive).folders  =  new  LinkedList  <  NoClassDefFoundError>();  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive).folders  =  new  LinkedList  <  NoClassDefFoundError>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive).folders  =  new  LinkedList  <  NoClassDefFoundError>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NoClassDefFoundError>();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
299	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive),  archive.folders  =  new  ArrayList  <  NoClassDefFoundError>();  [CE]  ';'  expected  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive),  archive.folders  =  new  ArrayList  <  NoClassDefFoundError>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive),  archive.folders  =  new  ArrayList  <  NoClassDefFoundError>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NoClassDefFoundError>();    	non-compiled	[CE]  ';'  expected	81	None	replace
300	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders).length  =  new  ArrayList  <  NoClassDefFoundError>();  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders).length  =  new  ArrayList  <  NoClassDefFoundError>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders).length  =  new  ArrayList  <  NoClassDefFoundError>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NoClassDefFoundError>();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
301	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive).folders  =  new  TreeSet  <  NoClassDefFoundError>();  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive).folders  =  new  TreeSet  <  NoClassDefFoundError>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive).folders  =  new  TreeSet  <  NoClassDefFoundError>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NoClassDefFoundError>();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
302	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders).addAll(new  ArrayList  <  NoClassDefFoundError>());  [CE]  cannot  find  symbol  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders).addAll(new  ArrayList  <  NoClassDefFoundError>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders).addAll(new  ArrayList  <  NoClassDefFoundError>());	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NoClassDefFoundError>();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
303	[BUG]  [BUGGY]  ArrayList  <  String>  headerSize  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]              java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  headerSize  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  headerSize  =  Lists.newArrayList();	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	102	None	replace
304	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders);  ArrayList  <  String>  headerSize  =  Lists.newArrayList();  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders);  ArrayList  <  String>  headerSize  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive.folders);  ArrayList  <  String>  headerSize  =  Lists.newArrayList();	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    Lists.newArrayList();    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	102	None	replace
305	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  Lists.newArrayList();  [CE]  cannot  find  symbol  [FE]                  java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  Lists.newArrayList();	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
306	[BUG]  [BUGGY]  List  <  String>  headerSize  =  Lists.newArrayList();  [CE]  cannot  find  symbol  [FE]                    java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  List  <  String>  headerSize  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	List  <  String>  headerSize  =  Lists.newArrayList();	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
307	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders);  List  <  String>  headerSize  =  Lists.newArrayList();  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders);  List  <  String>  headerSize  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive.folders);  List  <  String>  headerSize  =  Lists.newArrayList();	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    Lists.newArrayList();    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	102	None	replace
308	[BUG]  [BUGGY]  readStreamsInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);	  readStreamsInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	47	None	replace
309	[BUG]  [BUGGY]  readStreamsInfo(header,  archive,  nid,  NID);  [CE]  cannot  find  symbol  NID  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive,  nid,  NID);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive,  nid,  NID);	  readStreamsInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  NID	47	None	replace
310	[BUG]  [BUGGY]  readStreamsInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid);	  readStreamsInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	47	None	replace
311	[BUG]  [BUGGY]  readStreamsInfo(header,  archive,  nid,  fileName);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive,  nid,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive,  nid,  fileName);	  readStreamsInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	47	None	replace
312	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  -  1);  [CE]  int  cannot  be  dereferenced  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  -  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  -  1);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid.length());    	non-compiled	[CE]  int  cannot  be  dereferenced	93	None	replace
313	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  +  SIGNATURE_HEADER_SIZE);  [CE]  int  cannot  be  dereferenced  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  +  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  +  SIGNATURE_HEADER_SIZE);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid.length());    	non-compiled	[CE]  int  cannot  be  dereferenced	93	None	replace
314	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid,  header.length());  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid,  header.length());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid,  header.length());	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid.length());    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
315	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  -  2);  [CE]  int  cannot  be  dereferenced  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  -  2);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  -  2);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid.length());    	non-compiled	[CE]  int  cannot  be  dereferenced	93	None	replace
316	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length(),  nid);  [CE]  int  cannot  be  dereferenced  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length(),  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length(),  nid);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid.length());    	non-compiled	[CE]  int  cannot  be  dereferenced	93	None	replace
317	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.length());  [CE]  cannot  find  symbol  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.length());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.length());	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid.length());    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
318	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
319	[BUG]  [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
320	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
321	[BUG]  [BUGGY]  ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
322	[BUG]  [BUGGY]  ReadStreamsInfo(currentFolderInput,  header);  ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  currentFolderInput  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo(currentFolderInput,  header);  ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo(currentFolderInput,  header);  ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol  currentFolderInput	85	None	replace
323	[BUG]  [BUGGY]  readStreamInfo(file,  archive.folders);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(file,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(file,  archive.folders);	  readStreamInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
324	[BUG]  [BUGGY]  ReadStreamInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamInfo(header,  archive);	  readStreamInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
325	[BUG]  [BUGGY]  readStreamInfo(file,  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(file,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(file,  NID.kPackInfo);	  readStreamInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
326	[BUG]  [BUGGY]  readStreamInfo(file,  nid);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(file,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(file,  nid);	  readStreamInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
327	[BUG]  [BUGGY]  readBlockInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readBlockInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readBlockInfo(header,  archive.folders);	  readBlockInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
328	[BUG]  [BUGGY]  ReadBlockInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadBlockInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadBlockInfo(header,  archive.folders);	  readBlockInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
329	[BUG]  [BUGGY]  readBlockInfo(nid,  archive);  [CE]  cannot  find  symbol  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readBlockInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readBlockInfo(nid,  archive);	  readBlockInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
330	[BUG]  [BUGGY]  [FE]  IOException  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	99	12	replace
331	[BUG]  [BUGGY]  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [FE]  IOException  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	99	12	replace
332	[BUG]  [BUGGY]  [FE]  IOException  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readStreamsInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	99	12	replace
333	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [FE]  IOException  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	99	12	replace
334	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid  +  1);	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	99	12	replace
335	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid  +  1);  [FE]  java.io.IOException:  Expected  kFolder  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid  +  1);	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	99	12	replace
336	[BUG]  [BUGGY]  readPackInfo(header,  file,  archive.folders);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  file,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  file,  archive.folders);	  readPackInfo(file,    header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	109	None	replace
337	[BUG]  [BUGGY]  readPackInfo(header,  file,  header.folders);  [CE]  cannot  find  symbol  folders  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  file,  header.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  file,  header.folders);	  readPackInfo(file,    header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  folders	109	None	replace
338	[BUG]  [BUGGY]  readPackInfo(file,  archive.folders,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(file,  archive.folders,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(file,  archive.folders,  nid);	  readPackInfo(file,    header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	109	None	replace
339	[BUG]  [BUGGY]  readPackInfo(file,  header,  archive.folders,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(file,  header,  archive.folders,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(file,  header,  archive.folders,  nid);	  readPackInfo(file,    header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	109	None	replace
340	[BUG]  [BUGGY]  ReadPackInfo(header,  file,  archive.folders);  [CE]  cannot  find  symbol  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadPackInfo(header,  file,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadPackInfo(header,  file,  archive.folders);	  readPackInfo(file,    header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
341	[BUG]  [BUGGY]  readPackInfo(header,  file,  header);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  file,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  file,  header);	  readPackInfo(file,    header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	109	None	replace
342	[BUG]  [BUGGY]  readUnpackInfo(header,  nid,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  nid,  archive);	  readUnpackInfo(nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	53	None	replace
343	[BUG]  [BUGGY]  readUnpackInfo(header,  null,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  null,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  null,  archive);	  readUnpackInfo(nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	53	None	replace
344	[BUG]  [BUGGY]  readUnpackInfo(header,  fileName,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  fileName,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  fileName,  archive);	  readUnpackInfo(nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	53	None	replace
345	[BUG]  [BUGGY]  readUnpackInfo(nid,  archive.folders);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(nid,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(nid,  archive.folders);	  readUnpackInfo(nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	53	None	replace
346	[BUG]  [BUGGY]  readUnpackInfo(header,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  nid);	  readUnpackInfo(nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	53	None	replace
347	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	69	None	add
348	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	69	None	add
349	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ReadUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  cannot  find  symbol  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ReadUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ReadUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  cannot  find  symbol	69	None	add
350	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  reader.readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  cannot  find  symbol  reader  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  reader.readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    reader.readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  cannot  find  symbol  reader	69	None	add
351	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	69	None	add
352	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	69	None	add
353	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	69	None	add
354	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	16	None	add
355	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	16	None	add
356	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
357	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  reader.readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  reader  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  reader.readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    reader.readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol  reader	16	None	add
358	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  fileName  =  header.readUnsignedByte();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  fileName  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  fileName  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	16	None	add
359	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.inputStreamStack.add(deferredBlockStreams);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.inputStreamStack.add(deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.inputStreamStack.add(deferredBlockStreams);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	16	None	add
360	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	16	None	add
361	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  currentFolderInputStream.initialise(nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  currentFolderInputStream.initialise(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  currentFolderInputStream.initialise(nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	16	None	add
362	[BUG]  [BUGGY]  readStreamInfo(header,  archive.folders,  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive.folders,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive.folders,  NID.kPackInfo);	  readStreamInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
363	[BUG]  [BUGGY]  readStreamInfo(header,  archive.folders,  null);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive.folders,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive.folders,  null);	  readStreamInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
364	[BUG]  [BUGGY]  readStreamInfo(header,  archive.folders,  false);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive.folders,  false);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive.folders,  false);	  readStreamInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
365	[BUG]  [BUGGY]  Reader  reader  =  new  SevenZFileReader(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  new  SevenZFileReader(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  new  SevenZFileReader(header,  archive.folders);	  Reader    reader    =    new    SevenZFileReader(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
366	[BUG]  [BUGGY]  Reader  reader  =  new  SevenZFileReader(nid,  archive);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  new  SevenZFileReader(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  new  SevenZFileReader(nid,  archive);	  Reader    reader    =    new    SevenZFileReader(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
367	[BUG]  [BUGGY]  Reader  reader  =  new  SevenZFileReader(fileName,  header,  archive);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  new  SevenZFileReader(fileName,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  new  SevenZFileReader(fileName,  header,  archive);	  Reader    reader    =    new    SevenZFileReader(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
368	[BUG]  [BUGGY]  Reader  reader  =  new  SevenZFileReader(nid,  header,  archive);  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  new  SevenZFileReader(nid,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  new  SevenZFileReader(nid,  header,  archive);	  Reader    reader    =    new    SevenZFileReader(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
369	[BUG]  [BUGGY]  Reader  reader  =  new  SevenZFileReader(header,  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  new  SevenZFileReader(header,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  new  SevenZFileReader(header,  NID.kPackInfo);	  Reader    reader    =    new    SevenZFileReader(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
370	[BUG]  [BUGGY]  Reader  reader  =  new  SevenZFileReader(header,  nid);  [CE]  cannot  find  symbol  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  new  SevenZFileReader(header,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  new  SevenZFileReader(header,  nid);	  Reader    reader    =    new    SevenZFileReader(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
371	[BUG]  [BUGGY]  Reader  reader  =  new  SevenZFileReader(file,  header,  archive);  [CE]  cannot  find  symbol  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  new  SevenZFileReader(file,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  new  SevenZFileReader(file,  header,  archive);	  Reader    reader    =    new    SevenZFileReader(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
372	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kPackInfo);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    	compilable	  [FE]  IOException  	105	12	replace
373	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kPackInfo);  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kPackInfo);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    	compilable	  [FE]  IOException  	105	12	replace
374	[BUG]  [BUGGY]  readStreamInfo(nid,  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(nid,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(nid,  NID.kPackInfo);	  readStreamInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
375	[BUG]  [BUGGY]  readStreamInfo(nid,  archive.folders);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(nid,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(nid,  archive.folders);	  readStreamInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
376	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.size());  [CE]  int  cannot  be  dereferenced  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.size());	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  int  cannot  be  dereferenced	35	None	replace
377	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(currentFolderInputStream.size());  [CE]  cannot  find  symbol  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(currentFolderInputStream.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(currentFolderInputStream.size());	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
378	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.size());  [CE]  cannot  find  symbol  [FE]                          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.size());	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
379	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(file.size());  [CE]  cannot  find  symbol  [FE]                            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(file.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(file.size());	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
380	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.size());  [CE]  cannot  find  symbol  [FE]                              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.size());	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
381	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length.size());  [CE]  cannot  find  symbol  length  [FE]                                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length.size());	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  cannot  find  symbol  length	35	None	replace
382	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.size());  [CE]  cannot  find  symbol  [FE]                                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.size());	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
383	[BUG]  [BUGGY]  Integer  nid  =  header.readUnpackInfo(header,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Integer  nid  =  header.readUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Integer  nid  =  header.readUnpackInfo(header,  archive);	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnpackInfo(header,    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	6	None	replace
384	[BUG]  [BUGGY]  int  nid  =  header.readUnpackInfo(nid,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  int  nid  =  header.readUnpackInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	int  nid  =  header.readUnpackInfo(nid,  archive);	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnpackInfo(header,    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	6	None	replace
385	[BUG]  [BUGGY]  int  nid  =  header.readUnpackInfo(fileName,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                    java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  int  nid  =  header.readUnpackInfo(fileName,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	int  nid  =  header.readUnpackInfo(fileName,  archive);	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnpackInfo(header,    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	6	None	replace
386	[BUG]  [BUGGY]  int  nid  =  header.readUnpackInfo(base,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                      java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  int  nid  =  header.readUnpackInfo(base,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	int  nid  =  header.readUnpackInfo(base,  archive);	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnpackInfo(header,    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	6	None	replace
387	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  readUnpackInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
388	[BUG]  [BUGGY]  reader.readStreamsInfo(fileName,  NID.kPackInfo);  [CE]  cannot  find  symbol  reader  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(fileName,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(fileName,  NID.kPackInfo);	  reader.readStreamsInfo(fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	75	None	replace
389	[BUG]  [BUGGY]  reader.readStreamsInfo(fileName,  archive.folders);  [CE]  cannot  find  symbol  reader  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(fileName,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(fileName,  archive.folders);	  reader.readStreamsInfo(fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	75	None	replace
390	[BUG]  [BUGGY]  Reader.readStreamsInfo(fileName,  archive);  [CE]  cannot  find  symbol  Reader  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader.readStreamsInfo(fileName,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader.readStreamsInfo(fileName,  archive);	  reader.readStreamsInfo(fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  Reader	75	None	replace
391	[BUG]  [BUGGY]  reader.readStreamsInfo(fileName,  header);  [CE]  cannot  find  symbol  reader  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(fileName,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(fileName,  header);	  reader.readStreamsInfo(fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	75	None	replace
392	[BUG]  [BUGGY]  readStreamInfo(header,  archive,  NID.zPackInfo);  [CE]  cannot  find  symbol  zPackInfo  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive,  NID.zPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive,  NID.zPackInfo);	  readStreamInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  zPackInfo	77	None	replace
393	[BUG]  [BUGGY]  readStreamInfo(header,  archive.kPackInfo);  [CE]  cannot  find  symbol  kPackInfo  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive.kPackInfo);	  readStreamInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  kPackInfo	77	None	replace
394	[BUG]  [BUGGY]  readStreamInfo(header,  archive,  NID.KPackInfo);  [CE]  cannot  find  symbol  KPackInfo  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive,  NID.KPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive,  NID.KPackInfo);	  readStreamInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  KPackInfo	77	None	replace
395	[BUG]  [BUGGY]  readStreamInfo(header,  archive,  NID.K_PackInfo);  [CE]  cannot  find  symbol  K_PackInfo  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive,  NID.K_PackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive,  NID.K_PackInfo);	  readStreamInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  K_PackInfo	77	None	replace
396	[BUG]  [BUGGY]  readStreamInfo(header,  archive,  NID.folders);  [CE]  cannot  find  symbol  folders  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive,  NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive,  NID.folders);	  readStreamInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  folders	77	None	replace
397	[BUG]  [BUGGY]  Reader  reader  =  new  Reader(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  new  Reader(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  new  Reader(header,  archive.folders);	  reader.readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
398	[BUG]  [BUGGY]  Reader.readStreamsInfo(header,  archive.folders);  [CE]  cannot  find  symbol  Reader  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader.readStreamsInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader.readStreamsInfo(header,  archive.folders);	  reader.readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  Reader	43	None	replace
399	[BUG]  [BUGGY]  Reader  reader  =  new  ReadStreamsInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  new  ReadStreamsInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  new  ReadStreamsInfo(header,  archive.folders);	  reader.readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
400	[BUG]  [BUGGY]  reader.readStreamsInfo(header,  archive.folders,  nid);  [CE]  cannot  find  symbol  reader  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(header,  archive.folders,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(header,  archive.folders,  nid);	  reader.readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  reader	43	None	replace
401	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	87	12	replace
402	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	87	12	replace
403	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  [FE]          java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	List  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  readUnpackInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
404	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive.folders);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  readUnpackInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	68	None	replace
405	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  [FE]              java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  readUnpackInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
406	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList();  [CE]  cannot  find  symbol  Collections  [FE]                java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList();	  readUnpackInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Collections	68	None	replace
407	[BUG]  [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
408	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive.folders);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive.folders);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	14	None	replace
409	[BUG]  [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
410	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);	  	compilable	  [FE]  IOException  	10	12	add
411	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);	  	compilable	  [FE]  IOException  	10	12	add
412	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ReadStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ReadStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ReadStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
413	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  reader.readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  reader  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  reader.readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    reader.readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol  reader	10	None	add
414	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  Lists	10	None	add
415	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	compilable	  [FE]  IOException  	10	12	add
416	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	compilable	  [FE]  IOException  	10	12	add
417	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	compilable	  [FE]  IOException  	10	12	add
418	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [FE]  IOException  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	compilable	  [FE]  IOException  	10	12	add
419	[BUG]  [BUGGY]  ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders.size());  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders.size());	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
420	[BUG]  [BUGGY]  readStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders.size());  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders.size());	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	107	None	replace
421	[BUG]  [BUGGY]  ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.size());  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.size());	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
422	[BUG]  [BUGGY]  ReadStreamsInfo(currentFolderInput,  header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders.size());  [CE]  cannot  find  symbol  currentFolderInput  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo(currentFolderInput,  header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo(currentFolderInput,  header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders.size());	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  cannot  find  symbol  currentFolderInput	107	None	replace
423	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	int  nid  =  header.readUnsignedByte()  +  1;	          int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	25	None	replace
424	[BUG]  [BUGGY]  readPackInfo(header,  archive,  NID,  nid);  [CE]  cannot  find  symbol  NID  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  NID,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  NID,  nid);	  readPackInfo(header,    archive,    nid,    NID);    	non-compiled	[CE]  cannot  find  symbol  NID	56	None	replace
425	[BUG]  [BUGGY]  readPackInfo(header,  archive,  NID);  [CE]  cannot  find  symbol  NID  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  NID);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  NID);	  readPackInfo(header,    archive,    nid,    NID);    	non-compiled	[CE]  cannot  find  symbol  NID	56	None	replace
426	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
427	[BUG]  [BUGGY]  readUnpackInfo(nid,  header,  archive.folders);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(nid,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(nid,  header,  archive.folders);	  readUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	52	None	replace
428	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  NID.kPackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive.folders,  NID.kPackInfo);	  readUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	52	None	replace
429	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  null);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive.folders,  null);	  readUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	52	None	replace
430	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	8	12	add
431	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	8	12	add
432	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  ReadUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  [CE]  cannot  find  symbol  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  ReadUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    ReadUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
433	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  reader.readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  [CE]  cannot  find  symbol  reader  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  reader.readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    reader.readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;	  	non-compiled	[CE]  cannot  find  symbol  reader	8	None	add
434	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  nid  =  NID.kPackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    nid  =  NID.kPackInfo;	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	8	12	add
435	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  nid  =  NID.kPackInfo;  [FE]  java.io.IOException:  Expected  kFolder  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  nid  =  NID.kPackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    nid  =  NID.kPackInfo;	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	8	12	add
436	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	8	12	add
437	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  [FE]  java.io.IOException:  Expected  kFolder  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	8	12	add
438	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  reader.readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  [CE]  cannot  find  symbol  reader  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  reader.readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    reader.readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol  reader	8	None	add
439	[BUG]  [BUGGY]  ReadUnpackInfo(currentFolderInputStream,  header,  archive);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(currentFolderInputStream,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(currentFolderInputStream,  header,  archive);	  ReadUnpackInfo(inputStreamStack,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
440	[BUG]  [BUGGY]  ReadUnpackInfo(currentFolderInput,  header,  archive);  [CE]  cannot  find  symbol  currentFolderInput  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(currentFolderInput,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(currentFolderInput,  header,  archive);	  ReadUnpackInfo(inputStreamStack,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol  currentFolderInput	112	None	replace
441	[BUG]  [BUGGY]  ReadUnpackInfo(false,  header,  archive);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(false,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(false,  header,  archive);	  ReadUnpackInfo(inputStreamStack,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
442	[BUG]  [BUGGY]  ReadUnpackInfo(nid,  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(nid,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(nid,  NID.kPackInfo);	  ReadUnpackInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
443	[BUG]  [BUGGY]  ReadUnpackInfo(nid,  nid,  archive.folders);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(nid,  nid,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(nid,  nid,  archive.folders);	  ReadUnpackInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
444	[BUG]  [BUGGY]  ReadUnpackInfo(nid,  fileName,  archive);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(nid,  fileName,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(nid,  fileName,  archive);	  ReadUnpackInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
445	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.nid);  [CE]  cannot  find  symbol  nid  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.nid);	  ReadUnpackInfo(header,    nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  nid	82	None	replace
446	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.nid,  nid);  [CE]  cannot  find  symbol  nid  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.nid,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.nid,  nid);	  ReadUnpackInfo(header,    nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  nid	82	None	replace
447	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.nextHeaderSize,  nid);  [CE]  cannot  find  symbol  nextHeaderSize  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.nextHeaderSize,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.nextHeaderSize,  nid);	  ReadUnpackInfo(header,    nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  nextHeaderSize	82	None	replace
448	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	31	None	add
449	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  cannot  find  symbol  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  cannot  find  symbol	31	None	add
450	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  Collection  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  cannot  find  symbol  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  Collection  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    Collection  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  cannot  find  symbol	31	None	add
451	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  arrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  cannot  find  symbol  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  arrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    arrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  cannot  find  symbol	31	None	add
452	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  Set  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  Set  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    Set  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  cannot  find  symbol	31	None	add
453	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  cannot  find  symbol  String  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  cannot  find  symbol  String	31	None	add
454	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  NID);  [CE]  cannot  find  symbol  NID  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  NID);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  NID);	  readPackInfo(header,    archive.folders,    signature);    	non-compiled	[CE]  cannot  find  symbol  NID	38	None	replace
455	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  password);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  password);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  password);	  readPackInfo(header,    archive.folders,    signature);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	38	None	replace
456	[BUG]  [BUGGY]  readPackInfo(header,  archive,  fileName,  nid,  NID.kPackInfo);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  fileName,  nid,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  fileName,  nid,  NID.kPackInfo);	  readPackInfo(header,    archive,    fileName,    nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	63	None	replace
457	[BUG]  [BUGGY]  readPackInfo(header,  archive,  fileName,  nid,  NID);  [CE]  cannot  find  symbol  NID  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  fileName,  nid,  NID);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  fileName,  nid,  NID);	  readPackInfo(header,    archive,    fileName,    nid);    	non-compiled	[CE]  cannot  find  symbol  NID	63	None	replace
458	[BUG]  [BUGGY]  readPackInfo(header,  archive,  fileName,  NID.kPackInfo);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  fileName,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  fileName,  NID.kPackInfo);	  readPackInfo(header,    archive,    fileName,    nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	63	None	replace
459	[BUG]  [BUGGY]  readPackInfo(header,  archive,  fileName,  nid,  signature);  [CE]  cannot  find  symbol  signature  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  fileName,  nid,  signature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  fileName,  nid,  signature);	  readPackInfo(header,    archive,    fileName,    nid);    	non-compiled	[CE]  cannot  find  symbol  signature	63	None	replace
460	[BUG]  [BUGGY]  readPackInfo(header,  archive,  fileName,  nid,  DEFERREDBlockStreams);  [CE]  cannot  find  symbol  DEFERREDBlockStreams  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  fileName,  nid,  DEFERREDBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  fileName,  nid,  DEFERREDBlockStreams);	  readPackInfo(header,    archive,    fileName,    nid);    	non-compiled	[CE]  cannot  find  symbol  DEFERREDBlockStreams	63	None	replace
461	[BUG]  [BUGGY]  reader.readUnpackInfo(header,  archive);  [CE]  cannot  find  symbol  reader  [FE]            java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readUnpackInfo(header,  archive);	  readUnpackInfo(header,    archive);    reader.readUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	4	None	replace
462	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  reader.readUnpackInfo(nid,  archive);  [CE]  cannot  find  symbol  reader  [FE]              java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  reader.readUnpackInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive);  reader.readUnpackInfo(nid,  archive);	  readUnpackInfo(header,    archive);    reader.readUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	4	None	replace
463	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive);  reader.readUnpackInfo(nid,  archive);  [CE]  cannot  find  symbol  [FE]                java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive);  reader.readUnpackInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive);  reader.readUnpackInfo(nid,  archive);	  readUnpackInfo(header,    archive);    reader.readUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
464	[BUG]  [BUGGY]  ReadUnpackInfo(header,  fileName,  archive);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  fileName,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  fileName,  archive);	  ReadUnpackInfo(fileName,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
465	[BUG]  [BUGGY]  ReadUnpackInfo(fileName,  archive.folders);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(fileName,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(fileName,  archive.folders);	  ReadUnpackInfo(fileName,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
466	[BUG]  [BUGGY]  ReadUnpackInfo(fileName,  NID.kPackInfo,  header,  archive);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(fileName,  NID.kPackInfo,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(fileName,  NID.kPackInfo,  header,  archive);	  ReadUnpackInfo(fileName,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
467	[BUG]  [BUGGY]  ReadUnpackInfo(fileName,  archive,  nid);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(fileName,  archive,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(fileName,  archive,  nid);	  ReadUnpackInfo(fileName,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
468	[BUG]  [BUGGY]  ReadUnpackInfo(fileName,  archive,  header);  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(fileName,  archive,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(fileName,  archive,  header);	  ReadUnpackInfo(fileName,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
469	[BUG]  [BUGGY]  ReadUnpackInfo(fileName,  header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(fileName,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(fileName,  header,  archive.folders);	  ReadUnpackInfo(fileName,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
470	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;	  readUnpackInfo(header,    archive);    readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	9	12	replace
471	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;	  readUnpackInfo(header,    archive);    readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	9	12	replace
472	[BUG]  [BUGGY]  [FE]  IOException  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  nid  =  NID.kPackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readStreamsInfo(header,  archive);  nid  =  NID.kPackInfo;	  readUnpackInfo(header,    archive);    readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    	compilable	  [FE]  IOException  	9	12	replace
473	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  nid  =  NID.kPackInfo;  [FE]  IOException  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  nid  =  NID.kPackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  nid  =  NID.kPackInfo;	  readUnpackInfo(header,    archive);    readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    	compilable	  [FE]  IOException  	9	12	replace
474	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  [CE]  cannot  find  symbol  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;	  readUnpackInfo(header,    archive);    readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
475	[BUG]  [BUGGY]  reader.readStreamsInfo(header,  archive);  nid  =  NID.kPackInfo;  [CE]  cannot  find  symbol  reader  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(header,  archive);  nid  =  NID.kPackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(header,  archive);  nid  =  NID.kPackInfo;	  readUnpackInfo(header,    archive);    readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    	non-compiled	[CE]  cannot  find  symbol  reader	9	None	replace
476	[BUG]  [BUGGY]  readPackInfo(header,  archive,  NID.kUnpackInfo,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  NID.kUnpackInfo,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  NID.kUnpackInfo,  nid);	  readPackInfo(header,    archive,    nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	58	None	replace
477	[BUG]  [BUGGY]  readPackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid,  NID.kUnpackInfo);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid,  NID.kUnpackInfo);	  readPackInfo(header,    archive,    nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	58	None	replace
478	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kUnpackInfo,  header);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kUnpackInfo,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  NID.kUnpackInfo,  header);	  readPackInfo(header,    archive,    nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	58	None	replace
479	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kUnpackInfo,  SIGNATURE_HEADER_SIZE);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kUnpackInfo,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  NID.kUnpackInfo,  SIGNATURE_HEADER_SIZE);	  readPackInfo(header,    archive,    nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	58	None	replace
480	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kUnpackInfo,  signature);  [CE]  cannot  find  symbol  signature  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kUnpackInfo,  signature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  NID.kUnpackInfo,  signature);	  readPackInfo(header,    archive,    nid,    NID.kUnpackInfo);    	non-compiled	[CE]  cannot  find  symbol  signature	58	None	replace
481	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kUnpackInfo,  fileName);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kUnpackInfo,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  NID.kUnpackInfo,  fileName);	  readPackInfo(header,    archive,    nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	58	None	replace
482	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kUnpackInfo,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kUnpackInfo,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  NID.kUnpackInfo,  nid);	  readPackInfo(header,    archive,    nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	58	None	replace
483	[BUG]  [BUGGY]  Reader.readStreamsInfo(file,  header,  archive);  [CE]  cannot  find  symbol  Reader  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader.readStreamsInfo(file,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader.readStreamsInfo(file,  header,  archive);	  Reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  Reader	44	None	replace
484	[BUG]  [BUGGY]  Reader.readStreamsInfo(nid,  archive);  [CE]  cannot  find  symbol  Reader  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader.readStreamsInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader.readStreamsInfo(nid,  archive);	  Reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  Reader	44	None	replace
485	[BUG]  [BUGGY]  Reader.readStreamsInfo(fileName,  header,  archive);  [CE]  cannot  find  symbol  Reader  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader.readStreamsInfo(fileName,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader.readStreamsInfo(fileName,  header,  archive);	  Reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  Reader	44	None	replace
486	[BUG]  [BUGGY]  Reader.readStreamsInfo(currentFolderInput,  header,  archive);  [CE]  cannot  find  symbol  currentFolderInput  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader.readStreamsInfo(currentFolderInput,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader.readStreamsInfo(currentFolderInput,  header,  archive);	  Reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  currentFolderInput	44	None	replace
487	[BUG]  [BUGGY]  Reader.readStreamsInfo(currentFolder,  archive);  [CE]  cannot  find  symbol  currentFolder  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader.readStreamsInfo(currentFolder,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader.readStreamsInfo(currentFolder,  archive);	  Reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	44	None	replace
488	[BUG]  [BUGGY]  readPackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  NID.kPackInfo);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  NID.kPackInfo);	  readPackInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	59	None	replace
489	[BUG]  [BUGGY]  readPackInfo(header,  archive,  NID.kPackInfo,  signature);  [CE]  cannot  find  symbol  signature  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  NID.kPackInfo,  signature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  NID.kPackInfo,  signature);	  readPackInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  signature	59	None	replace
490	[BUG]  [BUGGY]  readPackInfo(header,  archive,  NID.kPackInfo,  fileName);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  NID.kPackInfo,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  NID.kPackInfo,  fileName);	  readPackInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	59	None	replace
491	[BUG]  [BUGGY]  reader.readStreamsInfo(header,  archive,  NID.kPackInfo);  [CE]  cannot  find  symbol  reader  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(header,  archive,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(header,  archive,  NID.kPackInfo);	  reader.readStreamsInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  reader	73	None	replace
492	[BUG]  [BUGGY]  reader.readStreamsInfo(header,  archive,  SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  reader  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(header,  archive,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(header,  archive,  SIGNATURE_HEADER_SIZE);	  reader.readStreamsInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  reader	73	None	replace
493	[BUG]  [BUGGY]  reader.readStreamsInfo(nid,  archive,  header);  [CE]  cannot  find  symbol  reader  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(nid,  archive,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(nid,  archive,  header);	  reader.readStreamsInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  reader	73	None	replace
494	[BUG]  [BUGGY]  reader.readStreamsInfo(header,  archive,  SIGDECIMAL_HEADER_SIZE);  [CE]  cannot  find  symbol  SIGDECIMAL_HEADER_SIZE  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(header,  archive,  SIGDECIMAL_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(header,  archive,  SIGDECIMAL_HEADER_SIZE);	  reader.readStreamsInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  SIGDECIMAL_HEADER_SIZE	73	None	replace
495	[BUG]  [BUGGY]  reader.readStreamsInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  reader  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);	  reader.readStreamsInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  reader	73	None	replace
496	[BUG]  [BUGGY]  reader.readStreamsInfo(header,  archive,  nid  +  1);  [CE]  cannot  find  symbol  reader  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(header,  archive,  nid  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(header,  archive,  nid  +  1);	  reader.readStreamsInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  reader	73	None	replace
497	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]                  java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnsignedByte();    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	7	12	replace
498	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  [FE]  java.io.IOException:  Expected  kFolder  [FE]                  java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnsignedByte();    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	7	12	replace
499	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);  [CE]  cannot  find  symbol  Lists  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);	          ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	28	None	replace
500	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  list.newArrayList();  [CE]  cannot  find  symbol  list  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  list.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  list.newArrayList();	          ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  list	28	None	replace
501	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	nid  =  header.readUnsignedByte(nid);	          nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	27	None	replace
502	[BUG]  [BUGGY]  nid  =  header.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  nid  =  header.readUnsignedInt();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	nid  =  header.readUnsignedInt();	          nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
503	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	nid  =  header.readUnsignedByte()  +  1;	          nid    =    header.readUnsignedByte();    	compilable	  [FE]  IOException  	27	12	replace
504	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	nid  =  header.readUnsignedByte()  +  1;	          nid    =    header.readUnsignedByte();    	compilable	  [FE]  IOException  	27	12	replace
505	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  nid  =  NID.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	nid  =  NID.readUnsignedByte();	          nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
506	[BUG]  [BUGGY]  nid  =  header.readPackInfo();  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  nid  =  header.readPackInfo();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	nid  =  header.readPackInfo();	          nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
507	[BUG]  [BUGGY]  ReadUnpackInfo(currentFolderInputStream,  header);  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);  [CE]  cannot  find  symbol  [FE]        java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(currentFolderInputStream,  header);  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(currentFolderInputStream,  header);  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);	  readUnpackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack(header);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
508	[BUG]  [BUGGY]  InputStream  headerStack  =  getInputStreamStack(header);  [CE]  cannot  find  symbol  [FE]          java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  InputStream  headerStack  =  getInputStreamStack(header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	InputStream  headerStack  =  getInputStreamStack(header);	  readUnpackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack(header);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
509	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(nid);  [CE]  cannot  find  symbol  [FE]            java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(nid);	  readUnpackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack(header);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
510	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(nid);  [CE]  cannot  find  symbol  [FE]              java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(nid);	  readUnpackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack(header);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
511	[BUG]  [BUGGY]  ReadUnpackInfo(currentFolderInputStream,  header);  InputStream  inputStreamStack  =  getInputStreamStack(header);  [CE]  cannot  find  symbol  [FE]                java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(currentFolderInputStream,  header);  InputStream  inputStreamStack  =  getInputStreamStack(header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(currentFolderInputStream,  header);  InputStream  inputStreamStack  =  getInputStreamStack(header);	  readUnpackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack(header);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
512	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	66	None	add
513	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	66	None	add
514	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ReadUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ReadUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ReadUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	66	None	add
515	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  getUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  getUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  getUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	66	None	add
516	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.inputStreamStack.add(deferredBlockStreams);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.inputStreamStack.add(deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.inputStreamStack.add(deferredBlockStreams);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	66	None	add
517	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  currentFolderInputStream.initialise(nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  currentFolderInputStream.initialise(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  currentFolderInputStream.initialise(nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	66	None	add
518	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	66	None	add
519	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.currentFolderInputStream.deferredBlockStreams.add(nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.currentFolderInputStream.deferredBlockStreams.add(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.currentFolderInputStream.deferredBlockStreams.add(nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	66	None	add
520	[BUG]  [BUGGY]  readPackInfo(header,  nid,  archive.folders);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  nid,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  nid,  archive.folders);	  readPackInfo(nid,    header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	41	None	replace
521	[BUG]  [BUGGY]  readPackInfo(header,  null,  archive.folders);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  null,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  null,  archive.folders);	  readPackInfo(nid,    header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	41	None	replace
522	[BUG]  [BUGGY]  readPackInfo(header,  header,  archive.folders);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  header,  archive.folders);	  readPackInfo(nid,    header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	41	None	replace
523	[BUG]  [BUGGY]  readPackInfo(header,  null,  header,  archive.folders);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  null,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  null,  header,  archive.folders);	  readPackInfo(nid,    header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	41	None	replace
524	[BUG]  [BUGGY]  readPackInfo(header,  node,  archive.folders);  [CE]  cannot  find  symbol  node  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  node,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  node,  archive.folders);	  readPackInfo(nid,    header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  node	41	None	replace
525	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	91	None	add
526	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
527	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  Collection  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  Collection  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    Collection  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
528	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  arrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  arrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    arrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
529	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  Set  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  Set  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    Set  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
530	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  String  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	  	non-compiled	[CE]  cannot  find  symbol  String	91	None	add
531	[BUG]  [BUGGY]  reader.readStreamsInfo(new  FileInputStream(header,  archive));  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(new  FileInputStream(header,  archive));  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(new  FileInputStream(header,  archive));	  reader.readStreamsInfo(currentFolder,    archive);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
532	[BUG]  [BUGGY]  reader.readStreamsInfo(currentEntryIndex,  archive);  [CE]  cannot  find  symbol  reader  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(currentEntryIndex,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(currentEntryIndex,  archive);	  reader.readStreamsInfo(currentFolder,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	111	None	replace
533	[BUG]  [BUGGY]  reader.readStreamsInfo(inputStreamStack,  archive);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(inputStreamStack,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(inputStreamStack,  archive);	  reader.readStreamsInfo(currentFolder,    archive);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	111	None	replace
534	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
535	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  this.currentFolderInputStream.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  this.currentFolderInputStream.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  this.currentFolderInputStream.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
536	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	List  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
537	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  header.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  header.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  header.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
538	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  file.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  file.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  file.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
539	[BUG]  [BUGGY]  Reader.readStreamsInfo(header,  archive,  nid);  [CE]  cannot  find  symbol  Reader  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader.readStreamsInfo(header,  archive,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader.readStreamsInfo(header,  archive,  nid);	  Reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  Reader	44	None	replace
540	[BUG]  [BUGGY]  Reader.readStreamsInfo(currentFolder,  header,  archive);  [CE]  cannot  find  symbol  currentFolder  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader.readStreamsInfo(currentFolder,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader.readStreamsInfo(currentFolder,  header,  archive);	  Reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	44	None	replace
541	[BUG]  [BUGGY]  Reader.readStreamsInfo(header,  archive,  NID.kPackInfo);  [CE]  cannot  find  symbol  Reader  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader.readStreamsInfo(header,  archive,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader.readStreamsInfo(header,  archive,  NID.kPackInfo);	  Reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  Reader	44	None	replace
542	[BUG]  [BUGGY]  Reader.readStreamsInfo(header,  nid,  archive);  [CE]  cannot  find  symbol  Reader  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader.readStreamsInfo(header,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader.readStreamsInfo(header,  nid,  archive);	  Reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  Reader	44	None	replace
543	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ReadStreamsInfo(nid,  archive);  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ReadStreamsInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  ReadStreamsInfo(nid,  archive);	  readStreamsInfo(header,    archive);    ReadStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
544	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ReadStreamsInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ReadStreamsInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  ReadStreamsInfo(header,  archive.folders);	  readStreamsInfo(header,    archive);    ReadStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
545	[BUG]  [BUGGY]  Reader  reader  =  archive.readStreamsInfo(nid,  archive);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  archive.readStreamsInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  archive.readStreamsInfo(nid,  archive);	  reader.readStreamsInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
546	[BUG]  [BUGGY]  readers.readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  readers  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readers.readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readers.readStreamsInfo(header,  archive);	  reader.readStreamsInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  readers	42	None	replace
547	[BUG]  [BUGGY]  readBlockInfo(header,  archive,  nid);  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readBlockInfo(header,  archive,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readBlockInfo(header,  archive,  nid);	  readBlockInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
548	[BUG]  [BUGGY]  readBlockInfo(header,  archive,  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readBlockInfo(header,  archive,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readBlockInfo(header,  archive,  NID.kPackInfo);	  readBlockInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
549	[BUG]  [BUGGY]  [FE]  IOException  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }	  readUnpackInfo(header,    archive);    readUnpackInfo(header,    archive);    	compilable	  [FE]  IOException  	2	12	replace
550	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  [FE]  IOException  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }	  readUnpackInfo(header,    archive);    readUnpackInfo(header,    archive);    	compilable	  [FE]  IOException  	2	12	replace
551	[BUG]  [BUGGY]  [FE]  IOException  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  }	  readUnpackInfo(header,    archive);    readUnpackInfo(header,    archive);    	compilable	  [FE]  IOException  	2	12	replace
552	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  }  [FE]  IOException  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  }	  readUnpackInfo(header,    archive);    readUnpackInfo(header,    archive);    	compilable	  [FE]  IOException  	2	12	replace
553	[BUG]  [BUGGY]  [FE]  IOException  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  }	  readUnpackInfo(header,    archive);    readUnpackInfo(header,    archive);    	compilable	  [FE]  IOException  	2	12	replace
554	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  }  [FE]  IOException  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  }	  readUnpackInfo(header,    archive);    readUnpackInfo(header,    archive);    	compilable	  [FE]  IOException  	2	12	replace
555	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  }  else  {  int  nid  =  header.readUnsignedByte();  readUnpackInfo(header,  archive);  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  }  else  {  int  nid  =  header.readUnsignedByte();  readUnpackInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  }  else  {  int  nid  =  header.readUnsignedByte();  readUnpackInfo(header,  archive);  }	  readUnpackInfo(header,    archive);    readUnpackInfo(header,    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	2	None	replace
556	[BUG]  [BUGGY]  [FE]  IOException  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }	  readUnpackInfo(header,    archive);    readUnpackInfo(header,    archive);    	compilable	  [FE]  IOException  	2	12	replace
557	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  [FE]  IOException  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }	  readUnpackInfo(header,    archive);    readUnpackInfo(header,    archive);    	compilable	  [FE]  IOException  	2	12	replace
558	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	30	12	replace
559	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	30	12	replace
560	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  WARNING_SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  WARNING_SIGNATURE_HEADER_SIZE  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  WARNING_SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  WARNING_SIGNATURE_HEADER_SIZE);	  readPackInfo(header,    archive,    nid,    signature);    	non-compiled	[CE]  cannot  find  symbol  WARNING_SIGNATURE_HEADER_SIZE	64	None	replace
561	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kPackInfoSize);  [CE]  cannot  find  symbol  kPackInfoSize  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kPackInfoSize);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  NID.kPackInfoSize);	  readPackInfo(header,    archive,    nid,    signature);    	non-compiled	[CE]  cannot  find  symbol  kPackInfoSize	64	None	replace
562	[BUG]  [BUGGY]  reader.readStreamsInfo(fileName,  NID.folders);  [CE]  cannot  find  symbol  folders  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(fileName,  NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(fileName,  NID.folders);	  reader.readStreamsInfo(fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  folders	75	None	replace
563	[BUG]  [BUGGY]  reader.readStreamsInfo(fileName,  NID.zipPackInfo);  [CE]  cannot  find  symbol  zipPackInfo  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(fileName,  NID.zipPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(fileName,  NID.zipPackInfo);	  reader.readStreamsInfo(fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  zipPackInfo	75	None	replace
564	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readStreamsInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readStreamsInfo(header,  archive);  }	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    	compilable	  [FE]  IOException  	11	12	replace
565	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readStreamsInfo(header,  archive);  }  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readStreamsInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readStreamsInfo(header,  archive);  }	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    	compilable	  [FE]  IOException  	11	12	replace
566	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readStreamsInfo(header,  archive);  }  else  {  int  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readStreamsInfo(header,  archive);  }  else  {  int  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readStreamsInfo(header,  archive);  }  else  {  int  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  }	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	11	None	replace
567	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readStreamsInfo(header,  archive);  }  else  {  deferredBlockStreams.add(header);  }  [CE]  no  suitable  method  found  for  add(DataInput)  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readStreamsInfo(header,  archive);  }  else  {  deferredBlockStreams.add(header);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readStreamsInfo(header,  archive);  }  else  {  deferredBlockStreams.add(header);  }	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    	non-compiled	[CE]  no  suitable  method  found  for  add(DataInput)	11	None	replace
568	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readStreamsInfo(header,  archive);  }  else  {  fileName  =  NID.kPackInfo;  }  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readStreamsInfo(header,  archive);  }  else  {  fileName  =  NID.kPackInfo;  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readStreamsInfo(header,  archive);  }  else  {  fileName  =  NID.kPackInfo;  }	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	11	None	replace
569	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readStreamsInfo(header,  archive);  }  else  {  int  nid  =  header.readUnsignedByte();  return;  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readStreamsInfo(header,  archive);  }  else  {  int  nid  =  header.readUnsignedByte();  return;  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readStreamsInfo(header,  archive);  }  else  {  int  nid  =  header.readUnsignedByte();  return;  }	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	11	None	replace
570	[BUG]  [BUGGY]  reader.readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  reader  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol  reader	101	None	replace
571	[BUG]  [BUGGY]  readStreamsInfo(currentFolderInput,  header);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [CE]  cannot  find  symbol  currentFolderInput  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(currentFolderInput,  header);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(currentFolderInput,  header);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);	  readStreamsInfo(header,    archive);    byte[]    header    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  cannot  find  symbol  currentFolderInput	88	None	replace
572	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[NID.kPackInfo.size()  ]);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[NID.kPackInfo.size()  ]);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[NID.kPackInfo.size()  ]);	  readStreamsInfo(header,    archive);    byte[]    header    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	88	None	replace
573	[BUG]  [BUGGY]  readStreamsInfo(currentFolder,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [CE]  cannot  find  symbol  currentFolder  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(currentFolder,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(currentFolder,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);	  readStreamsInfo(header,    archive);    byte[]    header    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	88	None	replace
574	[BUG]  [BUGGY]  readPackInfo(header,  fileName,  archives);  [CE]  cannot  find  symbol  archives  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  fileName,  archives);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  fileName,  archives);	  readPackInfo(fileName,    header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  archives	108	None	replace
575	[BUG]  [BUGGY]  readPackInfo(header,  archive,  fileName,  nid,  NID.kUnpackInfo);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  fileName,  nid,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  fileName,  nid,  NID.kUnpackInfo);	  readPackInfo(header,    archive,    nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	58	None	replace
576	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kPackInfo,  NID.kUnpackInfo);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kPackInfo,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  NID.kPackInfo,  NID.kUnpackInfo);	  readPackInfo(header,    archive,    nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	58	None	replace
577	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
578	[BUG]  [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
579	[BUG]  [BUGGY]  ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
580	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  file.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  file.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  file.toArray(new  ArrayList  <  String>());	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
581	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  this.currentFolderInputStream.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  this.currentFolderInputStream.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  this.currentFolderInputStream.toArray(new  ArrayList  <  String>());	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
582	[BUG]  [BUGGY]  reader.readStreamsInfo(new  FileInputStream(header,  archive),  nid);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(new  FileInputStream(header,  archive),  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(new  FileInputStream(header,  archive),  nid);	  reader.readStreamsInfo(currentFolder,    archive);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
583	[BUG]  [BUGGY]  reader.readStreamsInfo(new  FileInputStream(file,  nid));  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(new  FileInputStream(file,  nid));  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(new  FileInputStream(file,  nid));	  reader.readStreamsInfo(currentFolder,    archive);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
584	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(64);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(64);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    	compilable	  [FE]  IOException  	92	12	replace
585	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(64);  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(64);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(64);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    	compilable	  [FE]  IOException  	92	12	replace
586	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  header);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  header);	  readPackInfo(header,    archive,    nid,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	54	None	replace
587	[BUG]  [BUGGY]  readPackInfo(header,  archive,  fileName,  NID.kPackInfo,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  fileName,  NID.kPackInfo,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  fileName,  NID.kPackInfo,  nid);	  readPackInfo(header,    archive,    fileName,    nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	63	None	replace
588	[BUG]  [BUGGY]  readPackInfo(header,  archive,  fileName,  nid,  WARNING_SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  WARNING_SIGNATURE_HEADER_SIZE  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  fileName,  nid,  WARNING_SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  fileName,  nid,  WARNING_SIGNATURE_HEADER_SIZE);	  readPackInfo(header,    archive,    fileName,    nid);    	non-compiled	[CE]  cannot  find  symbol  WARNING_SIGNATURE_HEADER_SIZE	63	None	replace
589	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archives.folders);  [CE]  cannot  find  symbol  archives  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archives.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archives.folders);	  ReadUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  archives	19	None	replace
590	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.files);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.files);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.files);	  ReadUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
591	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders).initFolders();  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders).initFolders();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders).initFolders();	  ReadUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
592	[BUG]  [BUGGY]  readStreamInfo(header,  archive,  NID.bytes);  [CE]  cannot  find  symbol  bytes  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive,  NID.bytes);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive,  NID.bytes);	  readStreamInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  bytes	77	None	replace
593	[BUG]  [BUGGY]  readStreamInfo(header,  archive,  NID.KBPackInfo);  [CE]  cannot  find  symbol  KBPackInfo  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive,  NID.KBPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive,  NID.KBPackInfo);	  readStreamInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  KBPackInfo	77	None	replace
594	[BUG]  [BUGGY]  readStreamInfo(header,  archive,  NID.zipPackInfo);  [CE]  cannot  find  symbol  zipPackInfo  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive,  NID.zipPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive,  NID.zipPackInfo);	  readStreamInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  zipPackInfo	77	None	replace
595	[BUG]  [BUGGY]  readStreamInfo(header,  archive,  NID.KACK_INFO);  [CE]  cannot  find  symbol  KACK_INFO  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive,  NID.KACK_INFO);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive,  NID.KACK_INFO);	  readStreamInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  KACK_INFO	77	None	replace
596	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  InputStream  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  type  InputStream  does  not  take  parameters  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  InputStream  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    InputStream  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  type  InputStream  does  not  take  parameters	31	None	add
597	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  readUnpackInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
598	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.size();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  int  nid  =  inputStreamStack.size();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	int  nid  =  inputStreamStack.size();	  readUnpackInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	67	None	replace
599	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
600	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
601	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  ReadUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  [CE]  cannot  find  symbol  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  ReadUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    if(nid  ==  SIGNATURE_HEADER_SIZE)  {  ReadUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
602	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  java.io.IOException:  Expected  kFolder!=  SIGNATURE_HEADER_SIZE;  readUnpackInfo(header,  archive);  readUnpackInfo(head  [CE]  not  a  statement  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  java.io.IOException:  Expected  kFolder!=  SIGNATURE_HEADER_SIZE;  readUnpackInfo(header,  archive);  readUnpackInfo(head  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    if(nid  ==  SIGNATURE_HEADER_SIZE)  {  java.io.IOException:  Expected  kFolder!=  SIGNATURE_HEADER_SIZE;  readUnpackInfo(header,  archive);  readUnpackInfo(head	  	non-compiled	[CE]  not  a  statement	1	None	add
603	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  java.io.IOException:  Expected  kFolder!=  SIGNATURE_HEADER_SIZE;  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  [CE]  not  a  statement  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  java.io.IOException:  Expected  kFolder!=  SIGNATURE_HEADER_SIZE;  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    if(nid  ==  SIGNATURE_HEADER_SIZE)  {  java.io.IOException:  Expected  kFolder!=  SIGNATURE_HEADER_SIZE;  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }	  	non-compiled	[CE]  not  a  statement	1	None	add
604	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  java.io.IOException:  Expected  kFolder!=  SIGNATURE_HEADER_SIZE;  readUnpackInfo(header,  archive);  readUnpackInfo(header  [CE]  not  a  statement  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  java.io.IOException:  Expected  kFolder!=  SIGNATURE_HEADER_SIZE;  readUnpackInfo(header,  archive);  readUnpackInfo(header  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    if(nid  ==  SIGNATURE_HEADER_SIZE)  {  java.io.IOException:  Expected  kFolder!=  SIGNATURE_HEADER_SIZE;  readUnpackInfo(header,  archive);  readUnpackInfo(header	  	non-compiled	[CE]  not  a  statement	1	None	add
605	[BUG]  [BUGGY]  readStreamInfo(fileName,  archive,  header);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(fileName,  archive,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(fileName,  archive,  header);	  readStreamInfo(fileName,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
606	[BUG]  [BUGGY]  readStreamInfo(fileName,  header,  archive.folders);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(fileName,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(fileName,  header,  archive.folders);	  readStreamInfo(fileName,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
607	[BUG]  [BUGGY]  readStreamInfo(header,  fileName,  archives);  [CE]  cannot  find  symbol  archives  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  fileName,  archives);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  fileName,  archives);	  readStreamInfo(fileName,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol  archives	115	None	replace
608	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.bytes);  [CE]  cannot  find  symbol  bytes  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.bytes);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.bytes);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  cannot  find  symbol  bytes	34	None	replace
609	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	34	None	replace
610	[BUG]  [BUGGY]  reader.readStreamsInfo(header,  archive,  nid,  NID.kPackInfo);  [CE]  cannot  find  symbol  reader  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(header,  archive,  nid,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(header,  archive,  nid,  NID.kPackInfo);	  reader.readStreamsInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  reader	73	None	replace
611	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kPackInfoLength);  [CE]  cannot  find  symbol  kPackInfoLength  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kPackInfoLength);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  NID.kPackInfoLength);	  readPackInfo(header,    archive,    nid,    header.length);    	non-compiled	[CE]  cannot  find  symbol  kPackInfoLength	65	None	replace
612	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  NID.bytes);  [CE]  cannot  find  symbol  bytes  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  NID.bytes);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  NID.bytes);	  readPackInfo(header,    archive,    nid,    header.length);    	non-compiled	[CE]  cannot  find  symbol  bytes	65	None	replace
613	[BUG]  [BUGGY]  readStreamsInfo(header,  archive,  nid,  DEFERREDBlockStreams);  [CE]  cannot  find  symbol  DEFERREDBlockStreams  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive,  nid,  DEFERREDBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive,  nid,  DEFERREDBlockStreams);	  readStreamsInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  DEFERREDBlockStreams	47	None	replace
614	[BUG]  [BUGGY]  readStreamsInfo(header,  archive,  nid,  WARNING_SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  WARNING_SIGNATURE_HEADER_SIZE  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive,  nid,  WARNING_SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive,  nid,  WARNING_SIGNATURE_HEADER_SIZE);	  readStreamsInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  WARNING_SIGNATURE_HEADER_SIZE	47	None	replace
615	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive),  NID.folders  =  new  ArrayList  <  NID>();  [CE]  ';'  expected  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive),  NID.folders  =  new  ArrayList  <  NID>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive),  NID.folders  =  new  ArrayList  <  NID>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NID>();    	non-compiled	[CE]  ';'  expected	83	None	replace
616	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive)).folders  =  new  ArrayList  <  NID>();  [CE]  ';'  expected  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive)).folders  =  new  ArrayList  <  NID>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive)).folders  =  new  ArrayList  <  NID>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NID>();    	non-compiled	[CE]  ';'  expected	83	None	replace
617	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive).files  =  new  ArrayList  <  NID>();  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive).files  =  new  ArrayList  <  NID>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive).files  =  new  ArrayList  <  NID>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NID>();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
618	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive),  fileName  =  new  ArrayList  <  NID>();  [CE]  ';'  expected  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive),  fileName  =  new  ArrayList  <  NID>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive),  fileName  =  new  ArrayList  <  NID>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NID>();    	non-compiled	[CE]  ';'  expected	83	None	replace
619	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid,  inputStreamStack.length());  [CE]  cannot  find  symbol  inputStreamStack  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid,  inputStreamStack.length());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid,  inputStreamStack.length());	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid.length());    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	93	None	replace
620	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length());  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length());	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid.length());    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
621	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid,  NID.length());  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid,  NID.length());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid,  NID.length());	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid.length());    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
622	[BUG]  [BUGGY]  readStreamInfo(header,  archive,  nid,  DEFERREDBlockStreams);  [CE]  cannot  find  symbol  DEFERREDBlockStreams  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive,  nid,  DEFERREDBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive,  nid,  DEFERREDBlockStreams);	  readStreamInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  DEFERREDBlockStreams	76	None	replace
623	[BUG]  [BUGGY]  readStreamInfo(header,  archive,  nid  +  1);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive,  nid  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive,  nid  +  1);	  readStreamInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
624	[BUG]  [BUGGY]  Reader  reader  =  header.readStreamsInfo(inputStreamStack,  archive);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  header.readStreamsInfo(inputStreamStack,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  header.readStreamsInfo(inputStreamStack,  archive);	  Reader    reader    =    inputStreamStack.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
625	[BUG]  [BUGGY]  Reader  reader  =  streamStack.readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  streamStack.readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  streamStack.readStreamsInfo(header,  archive);	  Reader    reader    =    inputStreamStack.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
626	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive),  header);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(new  FileInputStream(header,  archive),  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(header,  archive),  header);	  ReadUnpackInfo(inputStreamStack,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
627	[BUG]  [BUGGY]  ReadStreamInfo(header,  archive.folders,  header);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamInfo(header,  archive.folders,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamInfo(header,  archive.folders,  header);	  ReadStreamInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
628	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  fileName,  false);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  fileName,  false);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  fileName,  false);	  readPackInfo(header,    archive.folders,    false);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	90	None	replace
629	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive.folders);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive.folders);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	18	None	replace
630	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEAFDER_SIZE);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEAFDER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEAFDER_SIZE);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	91	None	add
631	[BUG]  [BUGGY]  ReadPackInfo(header,  archive.folders,  nid  +  1);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive.folders,  nid  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadPackInfo(header,  archive.folders,  nid  +  1);	  ReadPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
632	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[NID.kPackInfo.size()  ]);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[NID.kPackInfo.size()  ]);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[NID.kPackInfo.size()  ]);	  readUnpackInfo(header,    archive);    byte[]    header    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	71	None	replace
633	[BUG]  [BUGGY]  byte[]  header  =  inputStreamStack.toArray(new  byte[NID.kPackInfo.size()  ]);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  byte[]  header  =  inputStreamStack.toArray(new  byte[NID.kPackInfo.size()  ]);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	byte[]  header  =  inputStreamStack.toArray(new  byte[NID.kPackInfo.size()  ]);	  readUnpackInfo(header,    archive);    byte[]    header    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	71	None	replace
634	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  fileName,  deferredBlockStreams);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  fileName,  deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  fileName,  deferredBlockStreams);	  readPackInfo(header,    archive.folders,    fileName);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	40	None	replace
635	[BUG]  [BUGGY]  int  nid  =  header.readUnpackInfo(header);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  int  nid  =  header.readUnpackInfo(header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	int  nid  =  header.readUnpackInfo(header);	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnpackInfo(    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	5	None	replace
636	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	86	None	add
637	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	86	None	add
638	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  SIGNATURE_HEAFDER_SIZE);  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  SIGNATURE_HEAFDER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  SIGNATURE_HEAFDER_SIZE);	  readPackInfo(header,    archive,    nid,    NID);    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	56	None	replace
639	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(0);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte(0);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	nid  =  header.readUnsignedByte(0);	          nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	27	None	replace
640	[BUG]  [BUGGY]  nid  =  NID.kPackInfo.readUnsignedByte();  [CE]  int  cannot  be  dereferenced  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  nid  =  NID.kPackInfo.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	nid  =  NID.kPackInfo.readUnsignedByte();	          nid    =    header.readUnsignedByte();    	non-compiled	[CE]  int  cannot  be  dereferenced	27	None	replace
641	[BUG]  [BUGGY]  ReadUnpackInfo(currentFolder,  nid);  [CE]  cannot  find  symbol  currentFolder  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(currentFolder,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(currentFolder,  nid);	  ReadUnpackInfo(currentFolder,    archive);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	114	None	replace
642	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    InputStream  inputStreamStack  =  inputStreamStack.peek();  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
643	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
644	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(header,  0,  deferredBlockStreams,  0,  nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(header,  0,  deferredBlockStreams,  0,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(header,  0,  deferredBlockStreams,  0,  nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	16	None	add
645	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(header,  0,  deferredBlockStreams,  1,  nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(header,  0,  deferredBlockStreams,  1,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(header,  0,  deferredBlockStreams,  1,  nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	16	None	add
646	[BUG]  [BUGGY]  ReadUnpackInfo(nid,  NID.folders);  [CE]  cannot  find  symbol  folders  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(nid,  NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(nid,  NID.folders);	  ReadUnpackInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  folders	20	None	replace
647	[BUG]  [BUGGY]  ReadUnpackInfo(inputStreamStack,  nid);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(inputStreamStack,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(inputStreamStack,  nid);	  ReadUnpackInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	20	None	replace
648	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  WARNING_SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  WARNING_SIGNATURE_HEADER_SIZE  [FE]        java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  WARNING_SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive,  nid,  WARNING_SIGNATURE_HEADER_SIZE);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  WARNING_SIGNATURE_HEADER_SIZE	84	None	replace
649	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.bytes);  [CE]  cannot  find  symbol  bytes  [FE]          java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.bytes);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive,  nid,  NID.bytes);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  bytes	84	None	replace
650	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  WARNING_HEADER_SIZE);  [CE]  cannot  find  symbol  WARNING_HEADER_SIZE  [FE]            java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  WARNING_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive,  nid,  WARNING_HEADER_SIZE);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  WARNING_HEADER_SIZE	84	None	replace
651	[BUG]  [BUGGY]  readPackInfo(header,  archive,  NID.folders);  [CE]  cannot  find  symbol  folders  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  NID.folders);	  readPackInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  folders	59	None	replace
652	[BUG]  [BUGGY]  readPackInfo(header,  archive,  NID.kPackInfo,  header);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  NID.kPackInfo,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  NID.kPackInfo,  header);	  readPackInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	59	None	replace
653	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  nid  =  NID.packInfo;  [CE]  cannot  find  symbol  packInfo  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  nid  =  NID.packInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  nid  =  NID.packInfo;	  readUnpackInfo(header,    archive);    readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    	non-compiled	[CE]  cannot  find  symbol  packInfo	9	None	replace
654	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders,  false);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive.folders,  false);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive.folders,  false);	  readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	48	None	replace
655	[BUG]  [BUGGY]  Reader  reader  =  archive.readStreamsInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  archive.readStreamsInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  archive.readStreamsInfo(header,  archive.folders);	  reader.readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
656	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  reader.readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  reader.readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  reader.readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	100	None	add
657	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  reader.writeUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  reader.writeUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  reader.writeUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	100	None	add
658	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  new  InputStreamReader(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  new  InputStreamReader(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    InputStream  inputStreamStack  =  new  InputStreamReader(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	100	None	add
659	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(header);  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(header);	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	98	None	add
660	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	98	None	add
661	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(headerSize);  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(headerSize);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  readUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(headerSize);	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	98	None	add
662	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(headerSize);  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(headerSize);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(headerSize);	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	98	None	add
663	[BUG]  [BUGGY]  readStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.size());  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.size());	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	107	None	replace
664	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  nid,  signature);  [CE]  cannot  find  symbol  signature  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  nid,  signature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  nid,  signature);	  readPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  cannot  find  symbol  signature	36	None	replace
665	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  nid,  header);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  nid,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  nid,  header);	  readPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	36	None	replace
666	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  nid,  DEFERREDBlockStreams);  [CE]  cannot  find  symbol  DEFERREDBlockStreams  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  nid,  DEFERREDBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  nid,  DEFERREDBlockStreams);	  readPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  cannot  find  symbol  DEFERREDBlockStreams	36	None	replace
667	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  7PackInfo.length);  [CE]  ')'  expected  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  7PackInfo.length);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  7PackInfo.length);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  ')'  expected	32	None	replace
668	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  7ZSignature,  NID.kPackInfo);  [CE]  ')'  expected  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  7ZSignature,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  7ZSignature,  NID.kPackInfo);	  readPackInfo(header,    archive.folders,    NID.kPackInfo);    	non-compiled	[CE]  ')'  expected	37	None	replace
669	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack();  [CE]  cannot  find  symbol  [FE]                java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack();	  readUnpackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
670	[BUG]  [BUGGY]  readStreamsInfo(header,  archive,  NID.folders);  [CE]  cannot  find  symbol  folders  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive,  NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive,  NID.folders);	  readStreamsInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  folders	50	None	replace
671	[BUG]  [BUGGY]  readStreamsInfo(header,  archive,  NID.kPackInfo,  header);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive,  NID.kPackInfo,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive,  NID.kPackInfo,  header);	  readStreamsInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	50	None	replace
672	[BUG]  [BUGGY]  readStreamsInfo(header,  archive,  NID.KACK_INFO,  nid);  [CE]  cannot  find  symbol  KACK_INFO  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive,  NID.KACK_INFO,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive,  NID.KACK_INFO,  nid);	  readStreamsInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  KACK_INFO	50	None	replace
673	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  nextFolderInputStream.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  nextFolderInputStream  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  nextFolderInputStream.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  nextFolderInputStream.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol  nextFolderInputStream	72	None	replace
674	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	List  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
675	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  7ZSignature);  [CE]  ')'  expected  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  7ZSignature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  7ZSignature);	  readPackInfo(header,    archive.folders,    signature);    	non-compiled	[CE]  ')'  expected	38	None	replace
676	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive,  nid  +  1);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive,  nid  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive,  nid  +  1);	  ReadUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
677	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive,  nid,  NID.bytes);  [CE]  cannot  find  symbol  bytes  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive,  nid,  NID.bytes);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive,  nid,  NID.bytes);	  ReadUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  bytes	79	None	replace
678	[BUG]  [BUGGY]  readers.readStreamsInfo(file,  archive);  [CE]  cannot  find  symbol  readers  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readers.readStreamsInfo(file,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readers.readStreamsInfo(file,  archive);	  reader.readStreamsInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol  readers	46	None	replace
679	[BUG]  [BUGGY]  readStreamInfo(file,  nid,  archive);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(file,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(file,  nid,  archive);	  readStreamInfo(header,    nid,    archive);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
680	[BUG]  [BUGGY]  readStreamInfo(header,  nid,  archive.folders);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  nid,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  nid,  archive.folders);	  readStreamInfo(header,    nid,    archive);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
681	[BUG]  [BUGGY]  ReadUnpackInfo(header,  file);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  file);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  file);	  ReadUnpackInfo(file,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
682	[BUG]  [BUGGY]  ReadUnpackInfo(header,  file,  archives);  [CE]  cannot  find  symbol  archives  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  file,  archives);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  file,  archives);	  ReadUnpackInfo(file,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol  archives	23	None	replace
683	[BUG]  [BUGGY]  readUnpackInfo(header,  file,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  file,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  file,  archive);	  ReadUnpackInfo(file,    header,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
684	[BUG]  [BUGGY]  ReadUnpackInfo(header,  file,  source);  [CE]  cannot  find  symbol  source  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  file,  source);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  file,  source);	  ReadUnpackInfo(file,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol  source	23	None	replace
685	[BUG]  [BUGGY]  ReadUnpackInfo(fileName,  archive.header,  nid);  [CE]  cannot  find  symbol  header  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(fileName,  archive.header,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(fileName,  archive.header,  nid);	  ReadUnpackInfo(fileName,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol  header	113	None	replace
686	[BUG]  [BUGGY]  ReadUnpackInfo(header,  fileName);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  fileName);	  ReadUnpackInfo(fileName,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
687	[BUG]  [BUGGY]  ReadUnpackInfo(fileName,  nid,  archive);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(fileName,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(fileName,  nid,  archive);	  ReadUnpackInfo(fileName,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
688	[BUG]  [BUGGY]  if(header!=  null)  {  readUnpackInfo(header,  archive);  int  nid  =  header.readUnpackInfo(header,  archive);  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(header!=  null)  {  readUnpackInfo(header,  archive);  int  nid  =  header.readUnpackInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	if(header!=  null)  {  readUnpackInfo(header,  archive);  int  nid  =  header.readUnpackInfo(header,  archive);  }	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnpackInfo(header,    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	6	None	replace
689	[BUG]  [BUGGY]  byte  nid  =  header.readUnpackInfo(header,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  byte  nid  =  header.readUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	byte  nid  =  header.readUnpackInfo(header,  archive);	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnpackInfo(header,    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	6	None	replace
690	[BUG]  [BUGGY]  if(header!=  null)  {  readUnpackInfo(header,  archive);  int  nid  =  header.readUnpackInfo(header,  archive);  }  else  {  return;  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                    java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(header!=  null)  {  readUnpackInfo(header,  archive);  int  nid  =  header.readUnpackInfo(header,  archive);  }  else  {  return;  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	if(header!=  null)  {  readUnpackInfo(header,  archive);  int  nid  =  header.readUnpackInfo(header,  archive);  }  else  {  return;  }	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnpackInfo(header,    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	6	None	replace
691	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  ReadUnpackInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]          java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  ReadUnpackInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive);  ReadUnpackInfo(header,  archive.folders);	  readUnpackInfo(header,    archive);    ReadUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
692	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  type  InputStream  does  not  take  parameters  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    InputStream  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  type  InputStream  does  not  take  parameters	29	None	add
693	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.packInfoSize);  [CE]  cannot  find  symbol  packInfoSize  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.packInfoSize);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.packInfoSize);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  cannot  find  symbol  packInfoSize	105	None	replace
694	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.zipPackInfo);  [CE]  cannot  find  symbol  zipPackInfo  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.zipPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.zipPackInfo);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  cannot  find  symbol  zipPackInfo	105	None	replace
695	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [CE]  cannot  find  symbol  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
696	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  reader.readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  reader.readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  reader.readUnpackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	66	None	add
697	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  header  =  new  ArrayList  <  String>();  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  header  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  header  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	66	None	add
698	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(header,  0,  deferredBlockStreams,  0,  nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(header,  0,  deferredBlockStreams,  0,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(header,  0,  deferredBlockStreams,  0,  nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	66	None	add
699	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(header,  1,  deferredBlockStreams,  0,  nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(header,  1,  deferredBlockStreams,  0,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(header,  1,  deferredBlockStreams,  0,  nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	66	None	add
700	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive,  null);  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo  header  =  readStreamsInfo(header,  archive,  null);	  ReadStreamsInfo    header    =    readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
701	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive,  fileName);  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo  header  =  readStreamsInfo(header,  archive,  fileName);	  ReadStreamsInfo    header    =    readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
702	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(fileName,  archive.folders));  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(new  FileInputStream(fileName,  archive.folders));  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(fileName,  archive.folders));	  ReadUnpackInfo(new    FileInputStream(header,    archive.folders));    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
703	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive),  fileName  =  new  ArrayList  <  NoClassDefFoundError>();  [CE]  ';'  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive),  fileName  =  new  ArrayList  <  NoClassDefFoundError>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive),  fileName  =  new  ArrayList  <  NoClassDefFoundError>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NoClassDefFoundError>();    	non-compiled	[CE]  ';'  expected	81	None	replace
704	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive)).folders  =  new  ArrayList  <  NoClassDefFoundError>();  [CE]  ';'  expected  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive)).folders  =  new  ArrayList  <  NoClassDefFoundError>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive)).folders  =  new  ArrayList  <  NoClassDefFoundError>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NoClassDefFoundError>();    	non-compiled	[CE]  ';'  expected	81	None	replace
705	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive).files  =  new  ArrayList  <  NoClassDefFoundError>();  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive).files  =  new  ArrayList  <  NoClassDefFoundError>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive).files  =  new  ArrayList  <  NoClassDefFoundError>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NoClassDefFoundError>();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
706	[BUG]  [BUGGY]  byte[]  headerSize  =  header.readUnsignedByte();  [CE]  incompatible  types  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  byte[]  headerSize  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	byte[]  headerSize  =  header.readUnsignedByte();	          byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  incompatible  types	33	None	replace
707	[BUG]  [BUGGY]  byte[]  nextHeaderSize  =  header.readUnsignedByte(0);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  byte[]  nextHeaderSize  =  header.readUnsignedByte(0);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	byte[]  nextHeaderSize  =  header.readUnsignedByte(0);	          byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	33	None	replace
708	[BUG]  [BUGGY]  byte[]  nextHeaderSize  =  header.readUnsignedByte()  +  6;  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  byte[]  nextHeaderSize  =  header.readUnsignedByte()  +  6;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	byte[]  nextHeaderSize  =  header.readUnsignedByte()  +  6;	          byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  incompatible  types	33	None	replace
709	[BUG]  [BUGGY]  readUnpackInfo(header,  noPackInfo,  archive);  [CE]  cannot  find  symbol  noPackInfo  [FE]          java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  noPackInfo,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  noPackInfo,  archive);	  readUnpackInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  noPackInfo	53	None	replace
710	[BUG]  [BUGGY]  int  nid  =  NID.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  int  nid  =  NID.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	int  nid  =  NID.readUnsignedByte();	          int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	25	None	replace
711	[BUG]  [BUGGY]  Int  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Int  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Int  nid  =  header.readUnsignedByte();	          int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
712	[BUG]  [BUGGY]  readStreamInfo(file,  header);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(file,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(file,  header);	  readStreamInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
713	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(inputStreamStack);  [CE]  cannot  find  symbol  [FE]        java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(inputStreamStack);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(inputStreamStack);	  readUnpackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack(header);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
714	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);  [CE]  cannot  find  symbol  [FE]          java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);	  readUnpackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack(header);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
715	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(inputStreamStack);  [CE]  cannot  find  symbol  [FE]            java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(inputStreamStack);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(inputStreamStack);	  readUnpackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack(header);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
716	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  header  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  header  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  header  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	69	None	add
717	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	69	None	add
718	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  header  =  new  ArrayList  <  String>(nid);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  header  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  header  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	69	None	add
719	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  NID.folders);  [CE]  cannot  find  symbol  folders  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  NID.folders);	  readPackInfo(header,    archive,    nid,    DEFERREDBlockStreams);    	non-compiled	[CE]  cannot  find  symbol  folders	94	None	replace
720	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  NID.deferredBlockStreams);  [CE]  cannot  find  symbol  deferredBlockStreams  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  NID.deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  NID.deferredBlockStreams);	  readPackInfo(header,    archive,    nid,    DEFERREDBlockStreams);    	non-compiled	[CE]  cannot  find  symbol  deferredBlockStreams	94	None	replace
721	[BUG]  [BUGGY]  if(header!=  null)  {  readUnpackInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(header!=  null)  {  readUnpackInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	if(header!=  null)  {  readUnpackInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  }	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	7	None	replace
722	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.size());  [CE]  cannot  find  symbol  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(header.size());	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
723	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams.size());  [CE]  variable  deferredBlockStreams  might  not  have  been  initialized  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams.size());	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  variable  deferredBlockStreams  might  not  have  been  initialized	35	None	replace
724	[BUG]  [BUGGY]  readPackInfo(header,  null,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  null,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  null,  nid);	  readPackInfo(nid,    header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	41	None	replace
725	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	8	12	add
726	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	8	12	add
727	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  ReadUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  ReadUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    ReadUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
728	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  inputStreamStack  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	10	None	add
729	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.values();  [CE]  cannot  find  symbol  inputStreamStack  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.values();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.values();	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	10	None	add
730	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());  [CE]  cannot  find  symbol  inputStreamStack  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	10	None	add
731	[BUG]  [BUGGY]  ReadUnpackInfo(header,  nid,  archive.folders);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  nid,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  nid,  archive.folders);	  ReadUnpackInfo(header,    nid,    archive);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
732	[BUG]  [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  fileName.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  fileName.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                nid    =    header.readUnsignedByte();    nid  =  fileName.readUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol	26	None	add
733	[BUG]  [BUGGY]          nid  =  header.readUnsignedByte();  id  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  id  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  id  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                nid    =    header.readUnsignedByte();    id  =  header.readUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol  id	26	None	add
734	[BUG]  [BUGGY]  readStreamsInfo(header,  noPackInfo,  archive);  [CE]  cannot  find  symbol  noPackInfo  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  noPackInfo,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  noPackInfo,  archive);	  readStreamsInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  noPackInfo	49	None	replace
735	[BUG]  [BUGGY]  readStreamsInfo(header,  new  FileInputStream(nid),  archive);  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  new  FileInputStream(nid),  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  new  FileInputStream(nid),  archive);	  readStreamsInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
736	[BUG]  [BUGGY]  readStreamsInfo(header,  new  FileInputStream(nid,  archive));  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  new  FileInputStream(nid,  archive));  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  new  FileInputStream(nid,  archive));	  readStreamsInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
737	[BUG]  [BUGGY]  readPackInfo(header,  file,  sourceFile,  archive.folders);  [CE]  cannot  find  symbol  sourceFile  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  file,  sourceFile,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  file,  sourceFile,  archive.folders);	  readPackInfo(file,    header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  sourceFile	109	None	replace
738	[BUG]  [BUGGY]  readPackInfo(header,  file,  sourceFile.folders);  [CE]  cannot  find  symbol  sourceFile  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  file,  sourceFile.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  file,  sourceFile.folders);	  readPackInfo(file,    header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  sourceFile	109	None	replace
739	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(file,  archive));  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(new  FileInputStream(file,  archive));  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(file,  archive));	  ReadUnpackInfo(new    FileInputStream(header,    archive));    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
740	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(fileName,  archive));  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(new  FileInputStream(fileName,  archive));  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(fileName,  archive));	  ReadUnpackInfo(new    FileInputStream(header,    archive));    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
741	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive),  fileName  =  new  ArrayList  <  String>();  [CE]  ';'  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive),  fileName  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive),  fileName  =  new  ArrayList  <  String>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  ';'  expected	80	None	replace
742	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive).files  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive).files  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive).files  =  new  ArrayList  <  String>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
743	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive)).folders  =  new  ArrayList  <  String>();  [CE]  ';'  expected  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive)).folders  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive)).folders  =  new  ArrayList  <  String>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  ';'  expected	80	None	replace
744	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders).setValues(new  ArrayList  <  String>();  [CE]  ')'  expected  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders).setValues(new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders).setValues(new  ArrayList  <  String>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  ')'  expected	80	None	replace
745	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(nid);  [CE]  cannot  find  symbol  Lists  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(nid);	          ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	28	None	replace
746	[BUG]  [BUGGY]  readStreamInfo(currentFolder,  archive);  [CE]  cannot  find  symbol  currentFolder  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(currentFolder,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(currentFolder,  archive);	  readStreamInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	62	None	replace
747	[BUG]  [BUGGY]  byte[]  nextHeaderSize  =  archive.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  byte[]  nextHeaderSize  =  archive.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	byte[]  nextHeaderSize  =  archive.readUnsignedByte();	          byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
748	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  SIGNATURE_HEAKDER_SIZE);  [CE]  cannot  find  symbol  SIGNATURE_HEAKDER_SIZE  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  SIGNATURE_HEAKDER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  SIGNATURE_HEAKDER_SIZE);	  readPackInfo(header,    archive,    nid,    NID);    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAKDER_SIZE	56	None	replace
749	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  this.deferredBlockStreams.toArray(new  ArrayList  <  String>());  [CE]  no  suitable  method  found  for  toArray(ArrayList<String>)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  this.deferredBlockStreams.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  this.deferredBlockStreams.toArray(new  ArrayList  <  String>());	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  no  suitable  method  found  for  toArray(ArrayList<String>)	85	None	replace
750	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  header.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  header.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  header.toArray(new  ArrayList  <  String>());	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
751	[BUG]  [BUGGY]  readStreamsInfo(fileName,  nid,  archive);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(fileName,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(fileName,  nid,  archive);	  readStreamsInfo(nid,    archive);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
752	[BUG]  [BUGGY]  readStreamsInfo(inputStreamStack,  nid,  archive);  [CE]  cannot  find  symbol  inputStreamStack  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(inputStreamStack,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(inputStreamStack,  nid,  archive);	  readStreamsInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	49	None	replace
753	[BUG]  [BUGGY]  readStreamsInfo(file,  nid,  archive);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(file,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(file,  nid,  archive);	  readStreamsInfo(nid,    archive);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
754	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders).base  =  new  ArrayList  <  NoClassDefFoundError>();  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders).base  =  new  ArrayList  <  NoClassDefFoundError>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders).base  =  new  ArrayList  <  NoClassDefFoundError>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NoClassDefFoundError>();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
755	[BUG]  [BUGGY]  Reader  reader  =  new  SevenZFileReader(archive,  header);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  new  SevenZFileReader(archive,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  new  SevenZFileReader(archive,  header);	  Reader    reader    =    new    SevenZFileReader(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
756	[BUG]  [BUGGY]  Reader  reader  =  new  SevenZFileReader(file,  header);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  new  SevenZFileReader(file,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  new  SevenZFileReader(file,  header);	  Reader    reader    =    new    SevenZFileReader(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
757	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	30	12	replace
758	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	30	12	replace
759	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  *  SIGNATURE_HEADER_SIZE);  [CE]  int  cannot  be  dereferenced  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  *  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  *  SIGNATURE_HEADER_SIZE);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid.length());    	non-compiled	[CE]  int  cannot  be  dereferenced	93	None	replace
760	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders).clear();  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders).clear();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders).clear();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
761	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders).base();  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders).base();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders).base();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
762	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  System.arraycopy(header,  SIGNATURE_HEADER_SIZE,  currentFolderIndex);  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  System.arraycopy(header,  SIGNATURE_HEADER_SIZE,  currentFolderIndex);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  System.arraycopy(header,  SIGNATURE_HEADER_SIZE,  currentFolderIndex);	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	98	None	add
763	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  Integer  headerSize  =  new  Integer(nid);  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  Integer  headerSize  =  new  Integer(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    Integer  headerSize  =  new  Integer(nid);	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	98	None	add
764	[BUG]  [BUGGY]          nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                nid    =    header.readUnsignedByte();    Integer  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	26	None	add
765	[BUG]  [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedInt();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                nid    =    header.readUnsignedByte();    nid  =  header.readUnsignedInt();	  	non-compiled	[CE]  cannot  find  symbol	26	None	add
766	[BUG]  [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte(0);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte(0);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                nid    =    header.readUnsignedByte();    nid  =  header.readUnsignedByte(0);	  	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	26	None	add
767	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders).setValues(new  ArrayList  <  NID>();  [CE]  ')'  expected  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders).setValues(new  ArrayList  <  NID>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders).setValues(new  ArrayList  <  NID>();	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NID>();    	non-compiled	[CE]  ')'  expected	83	None	replace
768	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive.folders).setValues(new  ArrayList  <  NID>());  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive.folders).setValues(new  ArrayList  <  NID>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive.folders).setValues(new  ArrayList  <  NID>());	  ReadUnpackInfo(header,    archive).folders    =    new    ArrayList    <    NID>();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
769	[BUG]  [BUGGY]  Integer  headerSize  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]              java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Integer  headerSize  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Integer  headerSize  =  Lists.newArrayList();	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	102	None	replace
770	[BUG]  [BUGGY]  int  headerSize  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]                java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  int  headerSize  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	int  headerSize  =  Lists.newArrayList();	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	102	None	replace
771	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  nid  =  NID.zipPackInfo();  [CE]  cannot  find  symbol  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  nid  =  NID.zipPackInfo();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive);  nid  =  NID.zipPackInfo();	  readUnpackInfo(header,    archive);    readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
772	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo  +  1;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo  +  1;	  readUnpackInfo(header,    archive);    readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	9	12	replace
773	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo  +  1;  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo  +  1;  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo  +  1;	  readUnpackInfo(header,    archive);    readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	9	12	replace
774	[BUG]  [BUGGY]  ReadPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);	  readPackInfo(header,    archive,    nid,    DEFERRED_HEADER_SIZE);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
775	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE  +  1);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE  +  1);	  readPackInfo(header,    archive,    nid,    DEFERRED_HEADER_SIZE);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	95	None	replace
776	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
777	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  int  headerSize  =  inputStreamStack.size();  [CE]  cannot  find  symbol  inputStreamStack  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  int  headerSize  =  inputStreamStack.size();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    int  headerSize  =  inputStreamStack.size();	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	10	None	add
778	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  	compilable	  [FE]  IOException  	10	12	add
779	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  	compilable	  [FE]  IOException  	10	12	add
780	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);	  	compilable	  [FE]  IOException  	10	12	add
781	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid);	  	compilable	  [FE]  IOException  	10	12	add
782	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid.length());  [CE]  int  cannot  be  dereferenced  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid.length());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(nid.length());	  	non-compiled	[CE]  int  cannot  be  dereferenced	10	None	add
783	[BUG]  [BUGGY]  reader.readStreamsInfo(currentFolder,  archive.folders);  [CE]  cannot  find  symbol  currentFolder  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(currentFolder,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(currentFolder,  archive.folders);	  reader.readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	43	None	replace
784	[BUG]  [BUGGY]  reader.readStreamsInfo(fileName,  archive,  nid);  [CE]  cannot  find  symbol  reader  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(fileName,  archive,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(fileName,  archive,  nid);	  reader.readStreamsInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  reader	73	None	replace
785	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  <  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    if(nid  <  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
786	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  <  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  <  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    if(nid  <  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
787	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
788	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
789	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty())  {  return;  }  [CE]  illegal  start  of  expression  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty())  {  return;  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty())  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
790	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  throw  new  IOException( " ");  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  throw  new  IOException( " ");  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
791	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  throw  new  IOException( " ");  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  throw  new  IOException( " ");  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  throw  new  IOException( " ");  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
792	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  <  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    if(nid  <  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  else  {  throw  new  IOException( " ");  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
793	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  <  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  else  {  throw  new  IOException( " ");  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  if(nid  <  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    if(nid  <  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  readUnpackInfo(header,  archive);  }  else  {  throw  new  IOException( " ");  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	1	12	add
794	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	87	12	replace
795	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	87	12	replace
796	[BUG]  [BUGGY]  readPackInfo(header,  index,  archive.folders);  [CE]  cannot  find  symbol  index  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  index,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  index,  archive.folders);	  readPackInfo(nid,    header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  index	41	None	replace
797	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  nid,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  nid,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  nid,  nid);	  readPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	36	None	replace
798	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  nid,  0);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  nid,  0);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive.folders,  nid,  0);	  readPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	36	None	replace
799	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  InputStream  inputStreamStack  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [CE]  incompatible  types  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  InputStream  inputStreamStack  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    InputStream  inputStreamStack  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	  	non-compiled	[CE]  incompatible  types	104	None	add
800	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	104	None	add
801	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE  [CE]  ')'  expected  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE	  	non-compiled	[CE]  ')'  expected	104	None	add
802	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	  	non-compiled	[CE]  cannot  find  symbol	104	None	add
803	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  Integer  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  Integer  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    Integer  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	29	None	add
804	[BUG]  [BUGGY]  readPackInfo(fileName,  archive,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(fileName,  archive,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(fileName,  archive,  nid);	  readPackInfo(header,    archive,    nid,    fileName);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	57	None	replace
805	[BUG]  [BUGGY]  readStreamsInfo(header,  archive,  null,  nid);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive,  null,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive,  null,  nid);	  readStreamsInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	47	None	replace
806	[BUG]  [BUGGY]  readStreamsInfo(header,  archive,  nid,  NID.name);  [CE]  cannot  find  symbol  name  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive,  nid,  NID.name);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive,  nid,  NID.name);	  readStreamsInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  name	47	None	replace
807	[BUG]  [BUGGY]  readStreamsInfo(header,  archive,  fileName,  nid);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive,  fileName,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive,  fileName,  nid);	  readStreamsInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	47	None	replace
808	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive,  nid,  NID.folders);  [CE]  cannot  find  symbol  folders  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive,  nid,  NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive,  nid,  NID.folders);	  ReadUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  folders	79	None	replace
809	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  reader.readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  reader.readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  reader.readStreamsInfo(header,  archive);	  readStreamsInfo(header,    archive);    reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
810	[BUG]  [BUGGY]  ReadPackInfo(inputStreamStack,  header,  archive.folders,  nid);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadPackInfo(inputStreamStack,  header,  archive.folders,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadPackInfo(inputStreamStack,  header,  archive.folders,  nid);	  ReadPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	89	None	replace
811	[BUG]  [BUGGY]  ReadPackInfo(fileName,  archive.folders,  nid);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadPackInfo(fileName,  archive.folders,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadPackInfo(fileName,  archive.folders,  nid);	  ReadPackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
812	[BUG]  [BUGGY]  reader.readStreamsInfo(currentFolder,  header);  [CE]  cannot  find  symbol  currentFolder  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(currentFolder,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(currentFolder,  header);	  reader.readStreamsInfo(currentFolder,    archive);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	111	None	replace
813	[BUG]  [BUGGY]  reader.readStreamsInfo(currentFolderIndex,  archive);  [CE]  cannot  find  symbol  reader  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(currentFolderIndex,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(currentFolderIndex,  archive);	  reader.readStreamsInfo(currentFolder,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	111	None	replace
814	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kPackInfoId);  [CE]  cannot  find  symbol  kPackInfoId  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kPackInfoId);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  NID.kPackInfoId);	  readPackInfo(header,    archive,    nid,    signature);    	non-compiled	[CE]  cannot  find  symbol  kPackInfoId	64	None	replace
815	[BUG]  [BUGGY]  readPackInfo(header,  archive,  file.folders);  [CE]  cannot  find  symbol  folders  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  file.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  file.folders);	  readPackInfo(file,    header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  folders	109	None	replace
816	[BUG]  [BUGGY]  readPackInfo(file,  archive.folders,  header);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(file,  archive.folders,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(file,  archive.folders,  header);	  readPackInfo(file,    header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	109	None	replace
817	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(archive,  header));  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(new  FileInputStream(archive,  header));  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(archive,  header));	  ReadUnpackInfo(new    FileInputStream(header,    archive));    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
818	[BUG]  [BUGGY]  if(inputStreamStack.size()  >  0)  {  readStreamsInfo(header,  archive);  }  else  {  int  nid  =  inputStreamStack.size();  readStreamsInfo(header,  archive);  }  [CE]  cannot  find  symbol  inputStreamStack  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(inputStreamStack.size()  >  0)  {  readStreamsInfo(header,  archive);  }  else  {  int  nid  =  inputStreamStack.size();  readStreamsInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	if(inputStreamStack.size()  >  0)  {  readStreamsInfo(header,  archive);  }  else  {  int  nid  =  inputStreamStack.size();  readStreamsInfo(header,  archive);  }	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	11	None	replace
819	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  readStreamsInfo(deferredBlockStreams,  header,  archive);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  readStreamsInfo(deferredBlockStreams,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  readStreamsInfo(deferredBlockStreams,  header,  archive);	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	11	None	replace
820	[BUG]  [BUGGY]  if(inputStreamStack.size()  >  0)  {  readStreamsInfo(header,  archive);  }  else  {  int  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  }  [CE]  cannot  find  symbol  inputStreamStack  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(inputStreamStack.size()  >  0)  {  readStreamsInfo(header,  archive);  }  else  {  int  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	if(inputStreamStack.size()  >  0)  {  readStreamsInfo(header,  archive);  }  else  {  int  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  }	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	11	None	replace
821	[BUG]  [BUGGY]  if(inputStreamStack.size()  >  0)  {  readStreamsInfo(header,  archive);  }  [CE]  cannot  find  symbol  inputStreamStack  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  if(inputStreamStack.size()  >  0)  {  readStreamsInfo(header,  archive);  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	if(inputStreamStack.size()  >  0)  {  readStreamsInfo(header,  archive);  }	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	11	None	replace
822	[BUG]  [BUGGY]  readUnpackInfo(file,  nid,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(file,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(file,  nid,  archive);	  readUnpackInfo(nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	53	None	replace
823	[BUG]  [BUGGY]  readUnpackInfo(nid,  header,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(nid,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(nid,  header,  archive);	  readUnpackInfo(nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	53	None	replace
824	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [CE]  cannot  find  symbol  [FE]              java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);	  readUnpackInfo(header,    archive);    byte[]    header    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
825	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[InputStream.size()  ]);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[InputStream.size()  ]);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[InputStream.size()  ]);	  readUnpackInfo(header,    archive);    byte[]    header    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	71	None	replace
826	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[nid  -  1]);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[nid  -  1]);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[nid  -  1]);	  readUnpackInfo(header,    archive);    byte[]    header    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	71	None	replace
827	[BUG]  [BUGGY]  ReadUnpackInfo(nid,  NID);  [CE]  cannot  find  symbol  NID  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(nid,  NID);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(nid,  NID);	  ReadUnpackInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  NID	20	None	replace
828	[BUG]  [BUGGY]  ReadUnpackInfo(inputStreamStack,  nid,  archive);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(inputStreamStack,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(inputStreamStack,  nid,  archive);	  ReadUnpackInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	20	None	replace
829	[BUG]  [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kPackInfo,  header.readUnsignedByte());  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  nid,  NID.kPackInfo,  header.readUnsignedByte());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  nid,  NID.kPackInfo,  header.readUnsignedByte());	  readPackInfo(header,    archive,    nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	55	None	replace
830	[BUG]  [BUGGY]  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(NID.packInfo);  [CE]  cannot  find  symbol  packInfo  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(NID.packInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>(NID.packInfo);	  readUnpackInfo(header,    archive);    ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  cannot  find  symbol  packInfo	99	None	replace
831	[BUG]  [BUGGY]  readStreamInfo(fileName,  nid,  archive);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(fileName,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(fileName,  nid,  archive);	  readStreamInfo(header,    nid,    archive);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
832	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  nid  =  reader.readUnpackInfo(header,  archive);  [CE]  cannot  find  symbol  reader  [FE]            java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  nid  =  reader.readUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive);  nid  =  reader.readUnpackInfo(header,  archive);	  readUnpackInfo(header,    archive);    reader.readUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	4	None	replace
833	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  writer.readUnpackInfo(header,  archive);  [CE]  cannot  find  symbol  writer  [FE]              java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  writer.readUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive);  writer.readUnpackInfo(header,  archive);	  readUnpackInfo(header,    archive);    reader.readUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  writer	4	None	replace
834	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  Integer  headerSize  =  new  Integer(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  Integer  headerSize  =  new  Integer(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    Integer  headerSize  =  new  Integer(nid);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	100	None	add
835	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  Integer  headerSize  =  new  Integer(currentFolderIndex);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  Integer  headerSize  =  new  Integer(currentFolderIndex);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    Integer  headerSize  =  new  Integer(currentFolderIndex);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	100	None	add
836	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  Integer  headerSize  =  new  Integer(currentFolderInputStream.readUnsignedByte());  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  Integer  headerSize  =  new  Integer(currentFolderInputStream.readUnsignedByte());  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    Integer  headerSize  =  new  Integer(currentFolderInputStream.readUnsignedByte());  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	100	None	add
837	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  Integer  headerSize  =  new  Integer(currentFolderInputStream.readUnpackInfo());  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  Integer  headerSize  =  new  Integer(currentFolderInputStream.readUnpackInfo());  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    Integer  headerSize  =  new  Integer(currentFolderInputStream.readUnpackInfo());  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	100	None	add
838	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  Integer  headerSize  =  new  Integer(currentFolderInputStream.length);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  Integer  headerSize  =  new  Integer(currentFolderInputStream.length);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    headerSize    =    new    ArrayList    <    String>();    Integer  headerSize  =  new  Integer(currentFolderInputStream.length);  ArrayList  <  String>  headerSize  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  headerSize  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	100	None	add
839	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  this.deferredBlockStreams.addAll(deferredBlockStreams);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  this.deferredBlockStreams.addAll(deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  this.deferredBlockStreams.addAll(deferredBlockStreams);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	69	None	add
840	[BUG]  [BUGGY]  Reader  reader  =  new  RandomAccessFile(file,  nid);  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader  reader  =  new  RandomAccessFile(file,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader  reader  =  new  RandomAccessFile(file,  nid);	  reader.readStreamsInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
841	[BUG]  [BUGGY]  Reader.readStreamsInfo(file,  archive.folders);  [CE]  cannot  find  symbol  Reader  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader.readStreamsInfo(file,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader.readStreamsInfo(file,  archive.folders);	  reader.readStreamsInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol  Reader	46	None	replace
842	[BUG]  [BUGGY]  RandomAccessFile  file  =  inputStreamStack.peek();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  RandomAccessFile  file  =  inputStreamStack.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	RandomAccessFile  file  =  inputStreamStack.peek();	  reader.readStreamsInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	46	None	replace
843	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.z);  [CE]  cannot  find  symbol  z  [FE]        java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.z);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive,  nid,  NID.z);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  z	84	None	replace
844	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.folders);  [CE]  cannot  find  symbol  folders  [FE]          java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive,  nid,  NID.folders);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  folders	84	None	replace
845	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.name);  [CE]  cannot  find  symbol  name  [FE]            java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.name);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive,  nid,  NID.name);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  name	84	None	replace
846	[BUG]  [BUGGY]  ReadStreamInfo(inputStreamStack,  header,  archive.folders);  [CE]  cannot  find  symbol  inputStreamStack  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamInfo(inputStreamStack,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamInfo(inputStreamStack,  header,  archive.folders);	  ReadStreamInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	61	None	replace
847	[BUG]  [BUGGY]  ReadStreamInfo(file,  header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamInfo(file,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamInfo(file,  header,  archive.folders);	  ReadStreamInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
848	[BUG]  [BUGGY]  ReadStreamInfo(new  FileInputStream(file,  header,  archive.folders));  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamInfo(new  FileInputStream(file,  header,  archive.folders));  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamInfo(new  FileInputStream(file,  header,  archive.folders));	  ReadStreamInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
849	[BUG]  [BUGGY]  ReadStreamInfo(currentFolder,  header,  archive.folders);  [CE]  cannot  find  symbol  currentFolder  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamInfo(currentFolder,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamInfo(currentFolder,  header,  archive.folders);	  ReadStreamInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	61	None	replace
850	[BUG]  [BUGGY]  ReadStreamInfo(fileName,  header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamInfo(fileName,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamInfo(fileName,  header,  archive.folders);	  ReadStreamInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
851	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  *  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  *  SIGNATURE_HEADER_SIZE);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	32	12	replace
852	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  *  SIGNATURE_HEADER_SIZE);  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  *  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  *  SIGNATURE_HEADER_SIZE);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	32	12	replace
853	[BUG]  [BUGGY]  readUnpackInfo(file,  header,  archive.folders);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(file,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(file,  header,  archive.folders);	  readUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	52	None	replace
854	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  false);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  false);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,  archive.folders,  false);	  readUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	52	None	replace
855	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
856	[BUG]  [BUGGY]  readStreamInfo(currentFolderIndex,  archive);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(currentFolderIndex,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(currentFolderIndex,  archive);	  readStreamInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
857	[BUG]  [BUGGY]  readStreamInfo(currentFolderIndex,  nid);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(currentFolderIndex,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(currentFolderIndex,  nid);	  readStreamInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
858	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(file,  header,  archive.folders));  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(new  FileInputStream(file,  header,  archive.folders));  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(file,  header,  archive.folders));	  ReadUnpackInfo(new    FileInputStream(header,    archive.folders));    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
859	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(base,  header,  archive.folders));  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(new  FileInputStream(base,  header,  archive.folders));  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(base,  header,  archive.folders));	  ReadUnpackInfo(new    FileInputStream(header,    archive.folders));    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
860	[BUG]  [BUGGY]  ReadUnpackInfo(new  FileInputStream(file,  archive.folders));  [CE]  cannot  find  symbol  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(new  FileInputStream(file,  archive.folders));  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(new  FileInputStream(file,  archive.folders));	  ReadUnpackInfo(new    FileInputStream(header,    archive.folders));    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
861	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  Integer  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  Integer  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    Integer  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	31	None	add
862	[BUG]  [BUGGY]  reader.readStreamsInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [CE]  cannot  find  symbol  reader  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  reader.readStreamsInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	reader.readStreamsInfo(header,  archive);  byte[]  header  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);	  readStreamsInfo(header,    archive);    byte[]    header    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  cannot  find  symbol  reader	88	None	replace
863	[BUG]  [BUGGY]  readStreamInfo(header,  archive,  NID.KAMP_INFO);  [CE]  cannot  find  symbol  KAMP_INFO  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive,  NID.KAMP_INFO);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive,  NID.KAMP_INFO);	  readStreamInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  KAMP_INFO	77	None	replace
864	[BUG]  [BUGGY]  readStreamInfo(header,  archive,  NID.z);  [CE]  cannot  find  symbol  z  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archive,  NID.z);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archive,  NID.z);	  readStreamInfo(header,    archive,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  z	77	None	replace
865	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive.info);  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive.info);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo  header  =  readStreamsInfo(header,  archive.info);	  ReadStreamsInfo    header    =    readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
866	[BUG]  [BUGGY]  ReadUnpackInfo(currentFolderIndex,  archive);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(currentFolderIndex,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(currentFolderIndex,  archive);	  ReadUnpackInfo(currentFolder,    archive);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
867	[BUG]  [BUGGY]  ReadUnpackInfo(currentFolder,  header);  [CE]  cannot  find  symbol  currentFolder  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(currentFolder,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(currentFolder,  header);	  ReadUnpackInfo(currentFolder,    archive);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	114	None	replace
868	[BUG]  [BUGGY]  ReadUnpackInfo(inputStreamStack,  header,  archive.folders);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(inputStreamStack,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(inputStreamStack,  header,  archive.folders);	  ReadUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	19	None	replace
869	[BUG]  [BUGGY]  ReadUnpackInfo(base,  header,  archive.folders);  [CE]  cannot  find  symbol  base  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(base,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(base,  header,  archive.folders);	  ReadUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  base	19	None	replace
870	[BUG]  [BUGGY]  ReadUnpackInfo(source,  header,  archive.folders);  [CE]  cannot  find  symbol  source  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(source,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(source,  header,  archive.folders);	  ReadUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  source	19	None	replace
871	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.deferredBlockInfo);  [CE]  cannot  find  symbol  deferredBlockInfo  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.deferredBlockInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.deferredBlockInfo);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  cannot  find  symbol  deferredBlockInfo	18	None	replace
872	[BUG]  [BUGGY]  ReadUnpackInfo(file,  archive.header,  nid);  [CE]  cannot  find  symbol  header  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadUnpackInfo(file,  archive.header,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadUnpackInfo(file,  archive.header,  nid);	  ReadUnpackInfo(file,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol  header	23	None	replace
873	[BUG]  [BUGGY]  readPackInfo(header,  archive,  NID,  SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  NID  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  NID,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  NID,  SIGNATURE_HEADER_SIZE);	  readPackInfo(header,    archive,    nid,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  cannot  find  symbol  NID	54	None	replace
874	[BUG]  [BUGGY]  ReadBlockInfo  header  =  readBlockInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadBlockInfo  header  =  readBlockInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadBlockInfo  header  =  readBlockInfo(header,  archive);	  readBlockInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
875	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  int  nid  =  NID.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    readUnpackInfo(header,  archive);  nid  =  NID.kPackInfo;  int  nid  =  NID.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        readUnpackInfo(header,    archive);    nid    =    NID.kPackInfo;    int  nid  =  NID.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	8	None	add
876	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.readUnpackInfo(header,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  int  nid  =  inputStreamStack.readUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	int  nid  =  inputStreamStack.readUnpackInfo(header,  archive);	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnpackInfo(header,    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	6	None	replace
877	[BUG]  [BUGGY]  int  nid  =  file.readUnpackInfo(header,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  int  nid  =  file.readUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	int  nid  =  file.readUnpackInfo(header,  archive);	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnpackInfo(header,    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	6	None	replace
878	[BUG]  [BUGGY]  int  nid  =  header.readUnpackInfo(inputStreamStack,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                    java.io.IOException:  Expected  kFolder      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  int  nid  =  header.readUnpackInfo(inputStreamStack,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	int  nid  =  header.readUnpackInfo(inputStreamStack,  archive);	  readUnpackInfo(header,    archive);    int    nid    =    header.readUnpackInfo(header,    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	6	None	replace
879	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE  +  1);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    	compilable	  [FE]  IOException  	92	12	replace
880	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE  +  1);  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE  +  1);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    	compilable	  [FE]  IOException  	92	12	replace
881	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE  +  7ZSignature);  [CE]  ')'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE  +  7ZSignature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE  +  7ZSignature);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  ')'  expected	92	None	replace
882	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  this.deferredBlockStreams.toArray(new  ArrayList  <  String>());  [CE]  no  suitable  method  found  for  toArray(ArrayList<String>)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  this.deferredBlockStreams.toArray(new  ArrayList  <  String>());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  this.deferredBlockStreams.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  no  suitable  method  found  for  toArray(ArrayList<String>)	72	None	replace
883	[BUG]  [BUGGY]  nid  =  NID.packInfo();  [CE]  cannot  find  symbol  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  nid  =  NID.packInfo();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	nid  =  NID.packInfo();	  readUnpackInfo(header,    archive);    readUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
884	[BUG]  [BUGGY]  readStreamsInfo(fileName,  header,  archive.folders);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(fileName,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(fileName,  header,  archive.folders);	  readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	48	None	replace
885	[BUG]  [BUGGY]  readStreamsInfo(file,  header,  archive.folders);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(file,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(file,  header,  archive.folders);	  readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	48	None	replace
886	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.size());  [CE]  int  cannot  be  dereferenced  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.size());	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  int  cannot  be  dereferenced	107	None	replace
887	[BUG]  [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.size());  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.size());	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
888	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(file.size());  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(file.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(file.size());	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
889	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.deferredBlockSize);  [CE]  cannot  find  symbol  deferredBlockSize  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.deferredBlockSize);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.deferredBlockSize);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  cannot  find  symbol  deferredBlockSize	34	None	replace
890	[BUG]  [BUGGY]  ReadStreamInfo(file,  archive.folders);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  ReadStreamInfo(file,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	ReadStreamInfo(file,  archive.folders);	  readStreamInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
891	[BUG]  [BUGGY]  readStreamInfo(file,  NID.folders);  [CE]  cannot  find  symbol  folders  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(file,  NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(file,  NID.folders);	  readStreamInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol  folders	116	None	replace
892	[BUG]  [BUGGY]  readStreamInfo(file,  header,  archive.folders);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(file,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(file,  header,  archive.folders);	  readStreamInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
893	[BUG]  [BUGGY]  readStreamInfo(header,  archives.folders);  [CE]  cannot  find  symbol  archives  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(header,  archives.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(header,  archives.folders);	  readStreamInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  archives	60	None	replace
894	[BUG]  [BUGGY]  Reader.readStreamsInfo(inputStreamStack,  header,  archive);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  Reader.readStreamsInfo(inputStreamStack,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	Reader.readStreamsInfo(inputStreamStack,  header,  archive);	  Reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	44	None	replace
895	[BUG]  [BUGGY]  readPackInfo(header,  archive,  fileName,  nid,  WORD_SIZE);  [CE]  cannot  find  symbol  WORD_SIZE  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readPackInfo(header,  archive,  fileName,  nid,  WORD_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readPackInfo(header,  archive,  fileName,  nid,  WORD_SIZE);	  readPackInfo(header,    archive,    fileName,    nid);    	non-compiled	[CE]  cannot  find  symbol  WORD_SIZE	63	None	replace
896	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	66	None	add
897	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStack(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStack(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    InputStream  inputStreamStack  =  getInputStreamStack(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	66	None	add
898	[BUG]  [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStack(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readUnpackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStack(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readUnpackInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    InputStream  inputStreamStack  =  getInputStreamStack(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	66	None	add
899	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
900	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStack(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStack(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    InputStream  inputStreamStack  =  getInputStreamStack(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
901	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  int  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	16	None	add
902	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.deferredBlockStreams.addAll(deferredBlockStreams);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.deferredBlockStreams.addAll(deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.deferredBlockStreams.addAll(deferredBlockStreams);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	16	None	add
903	[BUG]  [BUGGY]  readStreamInfo(fileName,  archive.folders,  header);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(fileName,  archive.folders,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(fileName,  archive.folders,  header);	  readStreamInfo(fileName,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
904	[BUG]  [BUGGY]  readStreamInfo(fileName,  archive.header,  nid);  [CE]  cannot  find  symbol  header  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  readStreamInfo(fileName,  archive.header,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	readStreamInfo(fileName,  archive.header,  nid);	  readStreamInfo(fileName,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol  header	115	None	replace
905	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedInt();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {      [BUGGY]  int  nid  =  header.readUnsignedInt();  [BUGGY]      nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	323	323	12	replace	int  nid  =  header.readUnsignedInt();	          int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	25	None	replace
