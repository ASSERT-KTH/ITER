bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  NID);  [CE]  cannot  find  symbol  NID  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  NID);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  NID);	  readUnpackInfo(header,    archive,    nid,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  cannot  find  symbol  NID	24	None	replace
2	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid);	  readUnpackInfo(header,    archive,    nid,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	24	None	replace
3	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  NID.kUnpackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  NID.kUnpackInfo);	  readUnpackInfo(header,    archive,    nid,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	24	None	replace
4	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  NID.kUnpackInfo,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  NID.kUnpackInfo,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  NID.kUnpackInfo,  nid,  SIGNATURE_HEADER_SIZE);	  readUnpackInfo(header,    archive,    nid,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	24	None	replace
5	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  fileName,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  fileName,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  fileName,  nid,  SIGNATURE_HEADER_SIZE);	  readUnpackInfo(header,    archive,    nid,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	24	None	replace
6	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  NID.kPackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  NID.kPackInfo);	  readUnpackInfo(header,    archive,    nid,    SIGNATURE_HEADER_SIZE);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	24	None	replace
7	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();	  readPackInfo(header,    archive);    byte[]    nextHeader    =    header.readUnsignedByte();    	compilable	  [FE]  IOException  	37	12	replace
8	[BUG]  [BUGGY]  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  [FE]  IOException  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();	  readPackInfo(header,    archive);    byte[]    nextHeader    =    header.readUnsignedByte();    	compilable	  [FE]  IOException  	37	12	replace
9	[BUG]  [BUGGY]  byte[]  nextHeader  =  archive.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  byte[]  nextHeader  =  archive.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	byte[]  nextHeader  =  archive.readUnsignedByte();	  readPackInfo(header,    archive);    byte[]    nextHeader    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
10	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders);  byte[]  nextHeader  =  header.readUnsignedByte();  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders);  byte[]  nextHeader  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive.folders);  byte[]  nextHeader  =  header.readUnsignedByte();	  readPackInfo(header,    archive);    byte[]    nextHeader    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	37	None	replace
11	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);	  	non-compiled	[CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	84	None	add
12	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);	  	non-compiled	[CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	84	None	add
13	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  ReadStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [CE]  cannot  find  symbol  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  ReadStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    ReadStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);	  	non-compiled	[CE]  cannot  find  symbol	84	None	add
14	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  reader.readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [CE]  cannot  find  symbol  reader  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  reader.readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    reader.readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);	  	non-compiled	[CE]  cannot  find  symbol  reader	84	None	add
15	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(header);  [CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(header);	  	non-compiled	[CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	84	None	add
16	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid).folders;  [CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid).folders;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid).folders;	  	non-compiled	[CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	84	None	add
17	[BUG]  [BUGGY]  List  <  String>  archive.folders  =  new  ArrayList  <  String>();  [CE]  ';'  expected  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  List  <  String>  archive.folders  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	List  <  String>  archive.folders  =  new  ArrayList  <  String>();	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  ';'  expected	16	None	replace
18	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(1);  [CE]  ';'  expected  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(1);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  ';'  expected	16	None	replace
19	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(0);  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(0);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(0);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  ';'  expected	16	None	replace
20	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(2);  [CE]  ';'  expected  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(2);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(2);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  ';'  expected	16	None	replace
21	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  null);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  nid,  null);	  readUnpackInfo(header,    archive.folders,    null);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	48	None	replace
22	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  null,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  null,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  null,  nid);	  readUnpackInfo(header,    archive.folders,    null);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	48	None	replace
23	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  fileName,  null);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  fileName,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  fileName,  null);	  readUnpackInfo(header,    archive.folders,    null);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	48	None	replace
24	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[1];  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  int  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[1];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	int  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[1];	  int    nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	89	None	replace
25	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	Integer  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];	  int    nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	89	None	replace
26	[BUG]  [BUGGY]  ReadFolderInfo(header,  archive.folders,  nid);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadFolderInfo(header,  archive.folders,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadFolderInfo(header,  archive.folders,  nid);	  ReadFolderInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
27	[BUG]  [BUGGY]  ReadFolderInfo(header,  archive.folders,  NID.kUnpackInfo);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadFolderInfo(header,  archive.folders,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadFolderInfo(header,  archive.folders,  NID.kUnpackInfo);	  ReadFolderInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
28	[BUG]  [BUGGY]  ReadFolderInfo(header,  archive.folders,  null);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadFolderInfo(header,  archive.folders,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadFolderInfo(header,  archive.folders,  null);	  ReadFolderInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
29	[BUG]  [BUGGY]  ReadFolderInfo(header,  archive.folders,  false);  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadFolderInfo(header,  archive.folders,  false);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadFolderInfo(header,  archive.folders,  false);	  ReadFolderInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
30	[BUG]  [BUGGY]  ReadFolderInfo(header,  archive.folders,  fileName);  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadFolderInfo(header,  archive.folders,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadFolderInfo(header,  archive.folders,  fileName);	  ReadFolderInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
31	[BUG]  [BUGGY]  ReadFolderInfo(nid,  archive.folders);  [CE]  cannot  find  symbol  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadFolderInfo(nid,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadFolderInfo(nid,  archive.folders);	  ReadFolderInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
32	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  NID  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	NID  nid  =  header.readUnsignedByte();	  nid    =    NID.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	92	None	replace
33	[BUG]  [BUGGY]  nid  =  UID.readUnsignedByte();  [CE]  cannot  find  symbol  UID  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  UID.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  UID.readUnsignedByte();	  nid    =    NID.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  UID	92	None	replace
34	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive.folders,  nid);	  readPackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	53	None	replace
35	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  NID.kUnpackInfo);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive.folders,  NID.kUnpackInfo);	  readPackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	53	None	replace
36	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  signature);  [CE]  cannot  find  symbol  signature  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  signature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive.folders,  signature);	  readPackInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  signature	53	None	replace
37	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  null);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive.folders,  null);	  readPackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	53	None	replace
38	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  false);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  false);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive.folders,  false);	  readPackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	53	None	replace
39	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders,  fileName);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive.folders,  fileName);	  readPackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	53	None	replace
40	[BUG]  [BUGGY]  readPackInfo(header,  archive);  archive.folders  =  new  ArrayList  <  String>(nid);  [CE]  incompatible  types  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  archive.folders  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  archive.folders  =  new  ArrayList  <  String>(nid);	  readPackInfo(header,    archive);    ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  incompatible  types	36	None	replace
41	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(NID.kUnpackInfo);  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(NID.kUnpackInfo);	  readPackInfo(header,    archive);    ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  ';'  expected	36	None	replace
42	[BUG]  [BUGGY]  readPackInfo(header,  archive);  archive.folders  =  new  ArrayList  <  String>(length  +  1);  [CE]  cannot  find  symbol  length  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  archive.folders  =  new  ArrayList  <  String>(length  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  archive.folders  =  new  ArrayList  <  String>(length  +  1);	  readPackInfo(header,    archive);    ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  cannot  find  symbol  length	36	None	replace
43	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  String>(nid);  [CE]  incompatible  types  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  String>(nid);	  readPackInfo(header,    archive);    ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  incompatible  types	36	None	replace
44	[BUG]  [BUGGY]  int  nid  =  NID.kUnpackInfo.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  int  nid  =  NID.kUnpackInfo.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	int  nid  =  NID.kUnpackInfo.readUnsignedByte();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	74	None	replace
45	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	int  nid  =  header.readUnsignedByte()  +  1;	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	74	None	replace
46	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	Integer  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	74	None	replace
47	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  byte  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	byte  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	74	None	replace
48	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(length  +  1);  [CE]  ';'  expected  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(length  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(length  +  1);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  ';'  expected	17	None	replace
49	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(length  +  2);  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(length  +  2);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(length  +  2);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  ';'  expected	17	None	replace
50	[BUG]  [BUGGY]  List  <  String>  archive.folders  =  new  ArrayList  <  String>(length);  [CE]  ';'  expected  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  List  <  String>  archive.folders  =  new  ArrayList  <  String>(length);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	List  <  String>  archive.folders  =  new  ArrayList  <  String>(length);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  ';'  expected	17	None	replace
51	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(length);    	compilable	  [FE]  IOException  	98	12	replace
52	[BUG]  [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [FE]  IOException  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(length);    	compilable	  [FE]  IOException  	98	12	replace
53	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(length);    	compilable	  [FE]  IOException  	98	12	replace
54	[BUG]  [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [FE]  IOException  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(length);    	compilable	  [FE]  IOException  	98	12	replace
55	[BUG]  [BUGGY]  ReadPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
56	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(NID.kUnpackInfo);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(length);    	compilable	  [FE]  IOException  	98	12	replace
57	[BUG]  [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(NID.kUnpackInfo);  [FE]  IOException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(NID.kUnpackInfo);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(length);    	compilable	  [FE]  IOException  	98	12	replace
58	[BUG]  [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(length);  [CE]  cannot  find  symbol  length  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(length);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(length);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  cannot  find  symbol  length	98	None	replace
59	[BUG]  [BUGGY]  readPackInfo(header,  archive);  reader.readPackInfo(nid,  archive);  [CE]  cannot  find  symbol  reader  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  reader.readPackInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  reader.readPackInfo(nid,  archive);	  readPackInfo(header,    archive);    reader.readPackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	33	None	replace
60	[BUG]  [BUGGY]  readPackInfo(header,  archive);  nid  =  reader.readPackInfo(header,  archive);  [CE]  cannot  find  symbol  reader  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  nid  =  reader.readPackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  nid  =  reader.readPackInfo(header,  archive);	  readPackInfo(header,    archive);    reader.readPackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	33	None	replace
61	[BUG]  [BUGGY]  reader.readPackInfo(header,  archive);  [CE]  cannot  find  symbol  reader  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  reader.readPackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	reader.readPackInfo(header,  archive);	  readPackInfo(header,    archive);    reader.readPackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	33	None	replace
62	[BUG]  [BUGGY]  ReadPackInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(header,  archive);	  readPackInfo(header,    archive);    readPackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
63	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  null);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  null);	  readUnpackInfo(header,    null,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	71	None	replace
64	[BUG]  [BUGGY]  readUnpackInfo(header,  null,  archive.folders);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  null,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  null,  archive.folders);	  readUnpackInfo(header,    null,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	71	None	replace
65	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  null,  null);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  null,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  null,  null);	  readUnpackInfo(header,    null,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	71	None	replace
66	[BUG]  [BUGGY]  readUnpackInfo(header,  file,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  file,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  file,  nid);	  readUnpackInfo(file,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	95	None	replace
67	[BUG]  [BUGGY]  readUnpackInfo(file,  nid,  NID.kUnpackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(file,  nid,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(file,  nid,  NID.kUnpackInfo);	  readUnpackInfo(file,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	95	None	replace
68	[BUG]  [BUGGY]  readUnpackInfo(file,  nid,  header);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(file,  nid,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(file,  nid,  header);	  readUnpackInfo(file,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	95	None	replace
69	[BUG]  [BUGGY]  readUnpackInfo(file,  nid,  archive.folders);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(file,  nid,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(file,  nid,  archive.folders);	  readUnpackInfo(file,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	95	None	replace
70	[BUG]  [BUGGY]  readUnpackInfo(nid,  file);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(nid,  file);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  file);	  readUnpackInfo(file,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	95	None	replace
71	[BUG]  [BUGGY]  readUnpackInfo(file,  nid,  fileName);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(file,  nid,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(file,  nid,  fileName);	  readUnpackInfo(file,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	95	None	replace
72	[BUG]  [BUGGY]  readUnpackInfo(file,  nid,  currentFolderIndex);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(file,  nid,  currentFolderIndex);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(file,  nid,  currentFolderIndex);	  readUnpackInfo(file,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	95	None	replace
73	[BUG]  [BUGGY]  readUnpackInfo(header,  file,  nid,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  file,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  file,  nid,  archive);	  readUnpackInfo(file,    nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
74	[BUG]  [BUGGY]  readUnpackInfo(file,  nid,  header,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(file,  nid,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(file,  nid,  header,  archive);	  readUnpackInfo(file,    nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
75	[BUG]  [BUGGY]  readUnpackInfo(nid,  file,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(nid,  file,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  file,  archive);	  readUnpackInfo(file,    nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
76	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  fileName,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  fileName,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  fileName,  nid);	  readUnpackInfo(header,    archive,    nid,    fileName);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	27	None	replace
77	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  fileName,  signature);  [CE]  cannot  find  symbol  signature  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  fileName,  signature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  fileName,  signature);	  readUnpackInfo(header,    archive,    nid,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	27	None	replace
78	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  fileName,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  fileName,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  fileName,  SIGNATURE_HEADER_SIZE);	  readUnpackInfo(header,    archive,    nid,    fileName);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	27	None	replace
79	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  fileName,  NID);  [CE]  cannot  find  symbol  NID  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  fileName,  NID);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  fileName,  NID);	  readUnpackInfo(header,    archive,    nid,    fileName);    	non-compiled	[CE]  cannot  find  symbol  NID	27	None	replace
80	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  fileName);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE,  fileName);	  readUnpackInfo(header,    archive,    nid,    fileName);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	27	None	replace
81	[BUG]  [BUGGY]  readUnpackInfo(header,  NID.kUnpackInfo,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  NID.kUnpackInfo,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  NID.kUnpackInfo,  archive);	  readUnpackInfo(nid,    NID.kUnpackInfo,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	40	None	replace
82	[BUG]  [BUGGY]  readUnpackInfo(nid,  NID.kUnpackInfo,  header,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(nid,  NID.kUnpackInfo,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  NID.kUnpackInfo,  header,  archive);	  readUnpackInfo(nid,    NID.kUnpackInfo,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	40	None	replace
83	[BUG]  [BUGGY]  readUnpackInfo(header,  nid,  NID.kUnpackInfo,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  nid,  NID.kUnpackInfo,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  nid,  NID.kUnpackInfo,  archive);	  readUnpackInfo(nid,    NID.kUnpackInfo,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	40	None	replace
84	[BUG]  [BUGGY]  readUnpackInfo(nid,  NID.kUnpackInfo,  archive.folders);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(nid,  NID.kUnpackInfo,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  NID.kUnpackInfo,  archive.folders);	  readUnpackInfo(nid,    NID.kUnpackInfo,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	40	None	replace
85	[BUG]  [BUGGY]  readUnpackInfo(nid,  NID.kUnpackInfo,  fileName,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(nid,  NID.kUnpackInfo,  fileName,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  NID.kUnpackInfo,  fileName,  archive);	  readUnpackInfo(nid,    NID.kUnpackInfo,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	40	None	replace
86	[BUG]  [BUGGY]  readUnpackInfo(file,  NID.kUnpackInfo,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(file,  NID.kUnpackInfo,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(file,  NID.kUnpackInfo,  nid);	  readUnpackInfo(nid,    NID.kUnpackInfo,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	40	None	replace
87	[BUG]  [BUGGY]  [FE]  IOException  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);	  readStreamsInfo(header,    archive);    int    nid    =    header.readUnsignedByte();    readStreamsInfo(header,    archive);    	compilable	  [FE]  IOException  	6	12	replace
88	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  [FE]  IOException  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);	  readStreamsInfo(header,    archive);    int    nid    =    header.readUnsignedByte();    readStreamsInfo(header,    archive);    	compilable	  [FE]  IOException  	6	12	replace
89	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  int  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	int  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);	  readStreamsInfo(header,    archive);    int    nid    =    header.readUnsignedByte();    readStreamsInfo(header,    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	6	None	replace
90	[BUG]  [BUGGY]  ReadStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadStreamsInfo(header,  archive);	  readStreamsInfo(header,    archive);    int    nid    =    header.readUnsignedByte();    readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
91	[BUG]  [BUGGY]  reader.readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  reader  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  reader.readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	reader.readStreamsInfo(header,  archive);	  readStreamsInfo(header,    archive);    int    nid    =    header.readUnsignedByte();    readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	6	None	replace
92	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  readStreamsInfo(inputStreamStack,  header,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  int  nid  =  header.readUnsignedByte();  readStreamsInfo(inputStreamStack,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	int  nid  =  header.readUnsignedByte();  readStreamsInfo(inputStreamStack,  header,  archive);	  readStreamsInfo(header,    archive);    int    nid    =    header.readUnsignedByte();    readStreamsInfo(header,    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	6	None	replace
93	[BUG]  [BUGGY]  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(nid);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(nid);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    header    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	99	None	replace
94	[BUG]  [BUGGY]  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(length);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(length);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(length);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    header    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	99	None	replace
95	[BUG]  [BUGGY]  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(NID.kUnpackInfo);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(NID.kUnpackInfo);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    header    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	99	None	replace
96	[BUG]  [BUGGY]  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(length,  NID.kUnpackInfo);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(length,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(length,  NID.kUnpackInfo);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    header    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	99	None	replace
97	[BUG]  [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(nid);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(nid);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    header    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	99	None	replace
98	[BUG]  [BUGGY]  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(nid,  archive.folders);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(nid,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(nid,  archive.folders);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    header    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	99	None	replace
99	[BUG]  [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(NID.folders);  [CE]  cannot  find  symbol  folders  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(NID.folders);	  readStreamsInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(NID.folders);    	non-compiled	[CE]  cannot  find  symbol  folders	88	None	replace
100	[BUG]  [BUGGY]  ArrayList  <  Folder>  folders  =  new  ArrayList  <  Folder>(NID.folders);  [CE]  cannot  find  symbol  folders  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  folders  =  new  ArrayList  <  Folder>(NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  Folder>  folders  =  new  ArrayList  <  Folder>(NID.folders);	  readStreamsInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(NID.folders);    	non-compiled	[CE]  cannot  find  symbol  folders	88	None	replace
101	[BUG]  [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(NID.folders);  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(NID.folders);	  readStreamsInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(NID.folders);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
102	[BUG]  [BUGGY]  List  <  Folder>  folderers  =  new  ArrayList  <  Folder>(NID.folders);  [CE]  cannot  find  symbol  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  List  <  Folder>  folderers  =  new  ArrayList  <  Folder>(NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	List  <  Folder>  folderers  =  new  ArrayList  <  Folder>(NID.folders);	  readStreamsInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(NID.folders);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
103	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders,  nid);  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders,  nid);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(archive.folders);    	non-compiled	[CE]  ';'  expected	21	None	replace
104	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders,  fileName);  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders,  fileName);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(archive.folders);    	non-compiled	[CE]  ';'  expected	21	None	replace
105	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders,  1);  [CE]  ';'  expected  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders,  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders,  1);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(archive.folders);    	non-compiled	[CE]  ';'  expected	21	None	replace
106	[BUG]  [BUGGY]  List  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders);  [CE]  ';'  expected  [FE]                          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  List  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	List  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(archive.folders);    	non-compiled	[CE]  ';'  expected	21	None	replace
107	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders,  6);  [CE]  ';'  expected  [FE]                            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders,  6);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders,  6);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(archive.folders);    	non-compiled	[CE]  ';'  expected	21	None	replace
108	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.files);  [CE]  ';'  expected  [FE]                              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.files);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.files);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(archive.folders);    	non-compiled	[CE]  ';'  expected	21	None	replace
109	[BUG]  [BUGGY]  readBlockInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readBlockInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readBlockInfo(header,  archive.folders);	  readBlockInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
110	[BUG]  [BUGGY]  ReadBlockInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadBlockInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadBlockInfo(header,  archive.folders);	  readBlockInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
111	[BUG]  [BUGGY]  readBlockInfo(nid,  archive);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readBlockInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readBlockInfo(nid,  archive);	  readBlockInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
112	[BUG]  [BUGGY]  archive.folders  =  new  LinkedList  <  Folder>();  [CE]  incompatible  types  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  LinkedList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  LinkedList  <  Folder>();	  archive.folders    =    new    ArrayList    <    Folder>();    	non-compiled	[CE]  incompatible  types	75	None	replace
113	[BUG]  [BUGGY]  archive.folders  =  new  TreeSet  <  Folder>();  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  TreeSet  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  TreeSet  <  Folder>();	  archive.folders    =    new    ArrayList    <    Folder>();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
114	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(1);  [CE]  incompatible  types  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  Folder>(1);	  archive.folders    =    new    ArrayList    <    Folder>();    	non-compiled	[CE]  incompatible  types	75	None	replace
115	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(2);  [CE]  incompatible  types  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(2);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  Folder>(2);	  archive.folders    =    new    ArrayList    <    Folder>();    	non-compiled	[CE]  incompatible  types	75	None	replace
116	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(4);  [CE]  incompatible  types  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(4);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  Folder>(4);	  archive.folders    =    new    ArrayList    <    Folder>();    	non-compiled	[CE]  incompatible  types	75	None	replace
117	[BUG]  [BUGGY]  readPackInfo(header,  archive);  byte[]  nextHeader  =  archive.folders.get(nid);  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  byte[]  nextHeader  =  archive.folders.get(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  byte[]  nextHeader  =  archive.folders.get(nid);	  readPackInfo(header,    archive);    byte[]    nextHeader    =    inputStreamStack.get(nid);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
118	[BUG]  [BUGGY]  readPackInfo(header,  archive);  byte[]  nextHeader  =  archive.get(nid);  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  byte[]  nextHeader  =  archive.get(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  byte[]  nextHeader  =  archive.get(nid);	  readPackInfo(header,    archive);    byte[]    nextHeader    =    inputStreamStack.get(nid);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
119	[BUG]  [BUGGY]  readPackInfo(nid,  archive);  byte[]  nextHeader  =  archive.get(nid);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(nid,  archive);  byte[]  nextHeader  =  archive.get(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(nid,  archive);  byte[]  nextHeader  =  archive.get(nid);	  readPackInfo(header,    archive);    byte[]    nextHeader    =    inputStreamStack.get(nid);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	69	None	replace
120	[BUG]  [BUGGY]  ReadPackInfo(header,  archive);  byte[]  nextHeader  =  archive.folders.get(nid);  [CE]  cannot  find  symbol  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive);  byte[]  nextHeader  =  archive.folders.get(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(header,  archive);  byte[]  nextHeader  =  archive.folders.get(nid);	  readPackInfo(header,    archive);    byte[]    nextHeader    =    inputStreamStack.get(nid);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
121	[BUG]  [BUGGY]  readPackInfo(header,  archive);  byte[]  nextHeader  =  archive.readStreamsInfo(nid);  [CE]  cannot  find  symbol  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  byte[]  nextHeader  =  archive.readStreamsInfo(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  byte[]  nextHeader  =  archive.readStreamsInfo(nid);	  readPackInfo(header,    archive);    byte[]    nextHeader    =    inputStreamStack.get(nid);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
122	[BUG]  [BUGGY]  readFileInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFileInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFileInfo(header,  archive.folders);	  readFileInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
123	[BUG]  [BUGGY]  readFileInfo(file,  archive);  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFileInfo(file,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFileInfo(file,  archive);	  readFileInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
124	[BUG]  [BUGGY]  ReadFileInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadFileInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadFileInfo(header,  archive.folders);	  readFileInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
125	[BUG]  [BUGGY]  readFileInfo(nid,  archive);  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFileInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFileInfo(nid,  archive);	  readFileInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
126	[BUG]  [BUGGY]  readUnpackInfo(header,  fileName,  nid,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  fileName,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  fileName,  nid,  archive);	  readUnpackInfo(fileName,    nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	93	None	replace
127	[BUG]  [BUGGY]  readUnpackInfo(fileName,  nid,  NID.kUnpackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(fileName,  nid,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(fileName,  nid,  NID.kUnpackInfo);	  readUnpackInfo(fileName,    nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	93	None	replace
128	[BUG]  [BUGGY]  readUnpackInfo(fileName,  nid,  archive.folders);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(fileName,  nid,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(fileName,  nid,  archive.folders);	  readUnpackInfo(fileName,    nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	93	None	replace
129	[BUG]  [BUGGY]  readUnpackInfo(nid,  fileName,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(nid,  fileName,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  fileName,  archive);	  readUnpackInfo(fileName,    nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	93	None	replace
130	[BUG]  [BUGGY]  readUnpackInfo(fileName,  nid,  NID.kUnpackInfo,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(fileName,  nid,  NID.kUnpackInfo,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(fileName,  nid,  NID.kUnpackInfo,  archive);	  readUnpackInfo(fileName,    nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	93	None	replace
131	[BUG]  [BUGGY]  readUnpackInfo(fileName,  nid,  header,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(fileName,  nid,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(fileName,  nid,  header,  archive);	  readUnpackInfo(fileName,    nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	93	None	replace
132	[BUG]  [BUGGY]  readSubStreamsInfo(header,  archive.folders);  [CE]  method  readSubStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]    NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readSubStreamsInfo(header,  archive.folders);	  readSubStreamsInfo(header,    archive);    	non-compiled	[CE]  method  readSubStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	52	None	replace
133	[BUG]  [BUGGY]  readSubStreamsInfo(nid,  archive);  [CE]  method  readSubStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]      NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readSubStreamsInfo(nid,  archive);	  readSubStreamsInfo(header,    archive);    	non-compiled	[CE]  method  readSubStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	52	None	replace
134	[BUG]  [BUGGY]  readFoldersInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFoldersInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFoldersInfo(header,  archive.folders);	  readFoldersInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
135	[BUG]  [BUGGY]  readFoldersInfo(nid,  archive);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFoldersInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFoldersInfo(nid,  archive);	  readFoldersInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
136	[BUG]  [BUGGY]  ReadFoldersInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadFoldersInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadFoldersInfo(header,  archive.folders);	  readFoldersInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
137	[BUG]  [BUGGY]  readFoldersInfo(file,  header,  archive);  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFoldersInfo(file,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFoldersInfo(file,  header,  archive);	  readFoldersInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
138	[BUG]  [BUGGY]  readUnpackInfo(nid,  archive,  nid,  NID.bytes);  [CE]  cannot  find  symbol  bytes  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(nid,  archive,  nid,  NID.bytes);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  archive,  nid,  NID.bytes);	  readUnpackInfo(header,    archive,    nid,    NID.bytes);    	non-compiled	[CE]  cannot  find  symbol  bytes	77	None	replace
139	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  NID.bytes,  nid);  [CE]  cannot  find  symbol  bytes  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  NID.bytes,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  NID.bytes,  nid);	  readUnpackInfo(header,    archive,    nid,    NID.bytes);    	non-compiled	[CE]  cannot  find  symbol  bytes	77	None	replace
140	[BUG]  [BUGGY]  readFolderInfo(file,  archive.folders);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(file,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(file,  archive.folders);	  readFolderInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
141	[BUG]  [BUGGY]  readFolderInfo(file,  NID.kUnpackInfo);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(file,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(file,  NID.kUnpackInfo);	  readFolderInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
142	[BUG]  [BUGGY]  readFolderInfo(file,  nid);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(file,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(file,  nid);	  readFolderInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
143	[BUG]  [BUGGY]  ReadFolderInfo(file,  archive.folders);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadFolderInfo(file,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadFolderInfo(file,  archive.folders);	  readFolderInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
144	[BUG]  [BUGGY]  readFolderInfo(file,  NID.folders);  [CE]  cannot  find  symbol  folders  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(file,  NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(file,  NID.folders);	  readFolderInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol  folders	97	None	replace
145	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid  +  1);	  readStreamsInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    	compilable	  [FE]  IOException  	85	12	replace
146	[BUG]  [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid  +  1);  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid  +  1);	  readStreamsInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    	compilable	  [FE]  IOException  	85	12	replace
147	[BUG]  [BUGGY]  List  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  List  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	List  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);	  readStreamsInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
148	[BUG]  [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid.length);  [CE]  int  cannot  be  dereferenced  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid.length);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid.length);	  readStreamsInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  int  cannot  be  dereferenced	85	None	replace
149	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid  +  1);	  readStreamsInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    	compilable	  [FE]  IOException  	85	12	replace
150	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid  +  1);  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid  +  1);	  readStreamsInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    	compilable	  [FE]  IOException  	85	12	replace
151	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(archive.folders);  [CE]  no  suitable  constructor  found  for  ArrayList(Folder[])  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(archive.folders);	  readStreamsInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Folder[])	85	None	replace
152	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	                nid    =    header.readUnsignedByte();    nid  =  header.readUnsignedByte();	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	14	12	add
153	[BUG]  [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	                nid    =    header.readUnsignedByte();    nid  =  header.readUnsignedByte();	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	14	12	add
154	[BUG]  [BUGGY]          nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	                nid    =    header.readUnsignedByte();    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	14	None	add
155	[BUG]  [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  head.readUnsignedByte();  [CE]  cannot  find  symbol  head  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  head.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	                nid    =    header.readUnsignedByte();    nid  =  head.readUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol  head	14	None	add
156	[BUG]  [BUGGY]          nid  =  header.readUnsignedByte();  NID  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  NID  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  NID  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	                nid    =    header.readUnsignedByte();    NID  =  header.readUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol  NID	14	None	add
157	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	                nid    =    header.readUnsignedByte();    nid  =  header.readUnsignedByte()  +  1;	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	14	12	add
158	[BUG]  [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  [FE]  java.io.IOException:  Expected  kFolder  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	                nid    =    header.readUnsignedByte();    nid  =  header.readUnsignedByte()  +  1;	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	14	12	add
159	[BUG]  [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte(1);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte(1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	                nid    =    header.readUnsignedByte();    nid  =  header.readUnsignedByte(1);	  	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	14	None	add
160	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  true);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  true);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  true);	  readUnpackInfo(header,    archive.folders,    false);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	50	None	replace
161	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  false,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  false,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  false,  nid);	  readUnpackInfo(header,    archive.folders,    false);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	50	None	replace
162	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  false);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  false);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  nid,  false);	  readUnpackInfo(header,    archive.folders,    false);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	50	None	replace
163	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  null,  false);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  null,  false);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  null,  false);	  readUnpackInfo(header,    archive.folders,    false);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	50	None	replace
164	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	54	None	add
165	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	54	None	add
166	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
167	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.inputStreamStack.add(deferredBlockStreams);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.inputStreamStack.add(deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.inputStreamStack.add(deferredBlockStreams);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	54	None	add
168	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  fileName  =  header.readUnsignedByte();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  fileName  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  fileName  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	54	None	add
169	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  currentFolderInputStream.deferredBlockStreams.addAll(deferredBlockStreams);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  currentFolderInputStream.deferredBlockStreams.addAll(deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  currentFolderInputStream.deferredBlockStreams.addAll(deferredBlockStreams);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	54	None	add
170	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.inputStreamStack.add(deferredBlockStreams);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.inputStreamStack.add(deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.inputStreamStack.add(deferredBlockStreams);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	54	None	add
171	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();	  readStreamsInfo(header,    archive);    int    nid    =    header.readUnsignedByte();    	compilable	  [FE]  IOException  	4	12	replace
172	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [FE]  IOException  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();	  readStreamsInfo(header,    archive);    int    nid    =    header.readUnsignedByte();    	compilable	  [FE]  IOException  	4	12	replace
173	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  readPackInfo(header,  archive);  readPackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readPackInfo(header,        archive);        readPackInfo(header,    archive);    readPackInfo(header,  archive);  readPackInfo(header,  archive);	  	compilable	  [FE]  IOException  	30	12	add
174	[BUG]  [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  readPackInfo(header,  archive);  readPackInfo(header,  archive);  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  readPackInfo(header,  archive);  readPackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        readPackInfo(header,    archive);    readPackInfo(header,  archive);  readPackInfo(header,  archive);	  	compilable	  [FE]  IOException  	30	12	add
175	[BUG]  [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  ReadPackInfo(header,  archive);  readPackInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  ReadPackInfo(header,  archive);  readPackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        readPackInfo(header,    archive);    ReadPackInfo(header,  archive);  readPackInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol	30	None	add
176	[BUG]  [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  reader.readPackInfo(header,  archive);  readPackInfo(header,  archive);  [CE]  cannot  find  symbol  reader  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  reader.readPackInfo(header,  archive);  readPackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        readPackInfo(header,    archive);    reader.readPackInfo(header,  archive);  readPackInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol  reader	30	None	add
177	[BUG]  [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        readPackInfo(header,    archive);    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	30	None	add
178	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  nid,  SIGNATURE_HEADER_SIZE);	  readUnpackInfo(header,    archive,    nid,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	29	None	replace
179	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  nid,  nid);	  readUnpackInfo(header,    archive,    nid,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	29	None	replace
180	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  nid,  NID.kUnpackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  nid,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  nid,  NID.kUnpackInfo);	  readUnpackInfo(header,    archive,    nid,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	29	None	replace
181	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[1];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[1];	  nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	91	12	replace
182	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[1];  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[1];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[1];	  nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	91	12	replace
183	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[NID.kUnpackInfo];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[NID.kUnpackInfo];	  nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	91	12	replace
184	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[NID.kUnpackInfo];  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[NID.kUnpackInfo];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[NID.kUnpackInfo];	  nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	91	12	replace
185	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[2];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[2];	  nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	91	12	replace
186	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[2];  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[2];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[2];	  nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	91	12	replace
187	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[NID.kPackInfo];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[NID.kPackInfo];	  nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	91	12	replace
188	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[NID.kPackInfo];  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[NID.kPackInfo];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[NID.kPackInfo];	  nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	91	12	replace
189	[BUG]  [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);	  readStreamsInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
190	[BUG]  [BUGGY]  readPackInfo(header,  archive);  archive.folders  =  new  ArrayList  <  String>();  [CE]  incompatible  types  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  archive.folders  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  archive.folders  =  new  ArrayList  <  String>();	  readPackInfo(header,    archive);    ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  incompatible  types	34	None	replace
191	[BUG]  [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList();	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	60	None	replace
192	[BUG]  [BUGGY]  List  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  List  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	List  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList();	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
193	[BUG]  [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList();	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
194	[BUG]  [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  Collections.newArrayList();  [CE]  cannot  find  symbol  Collections  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  Collections.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  DataInput>  deferredBlockStreams  =  Collections.newArrayList();	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Collections	60	None	replace
195	[BUG]  [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList(nid);  [CE]  cannot  find  symbol  Lists  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList(nid);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	60	None	replace
196	[BUG]  [BUGGY]  readFolderInfo(header,  archive,  nid,  NID.kUnpackInfo);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(header,  archive,  nid,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  archive,  nid,  NID.kUnpackInfo);	  readFolderInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
197	[BUG]  [BUGGY]  readFolderInfo(header,  archive,  nid,  NID);  [CE]  cannot  find  symbol  NID  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(header,  archive,  nid,  NID);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  archive,  nid,  NID);	  readFolderInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  NID	62	None	replace
198	[BUG]  [BUGGY]  readFolderInfo(nid,  archive,  header);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(nid,  archive,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(nid,  archive,  header);	  readFolderInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
199	[BUG]  [BUGGY]  readFolderInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);	  readFolderInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
200	[BUG]  [BUGGY]  readFolderInfo(header,  archive.folders,  nid);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(header,  archive.folders,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  archive.folders,  nid);	  readFolderInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
201	[BUG]  [BUGGY]  readFolderInfo(header,  archive.folders,  NID.kUnpackInfo);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(header,  archive.folders,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  archive.folders,  NID.kUnpackInfo);	  readFolderInfo(header,    archive,    NID.kUnpackInfo);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
202	[BUG]  [BUGGY]  readFolderInfo(nid,  archive,  NID.kUnpackInfo);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(nid,  archive,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(nid,  archive,  NID.kUnpackInfo);	  readFolderInfo(header,    archive,    NID.kUnpackInfo);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
203	[BUG]  [BUGGY]  readFolderInfo(header,  archive,  NID.KUnpackInfo);  [CE]  cannot  find  symbol  KUnpackInfo  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(header,  archive,  NID.KUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  archive,  NID.KUnpackInfo);	  readFolderInfo(header,    archive,    NID.kUnpackInfo);    	non-compiled	[CE]  cannot  find  symbol  KUnpackInfo	63	None	replace
204	[BUG]  [BUGGY]  readUnpackInfo(currentFolderInput,  nid,  archive);  [CE]  cannot  find  symbol  currentFolderInput  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(currentFolderInput,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(currentFolderInput,  nid,  archive);	  readUnpackInfo(inputStreamStack,    nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  currentFolderInput	94	None	replace
205	[BUG]  [BUGGY]  readUnpackInfo(currentFolderInputStream,  nid,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(currentFolderInputStream,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(currentFolderInputStream,  nid,  archive);	  readUnpackInfo(inputStreamStack,    nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	94	None	replace
206	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  readSubStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readSubStreamsInfo(header,    archive);    readSubStreamsInfo(header,  archive);	  	compilable	  [FE]  NullPointerException  	51	12	add
207	[BUG]  [BUGGY]  readSubStreamsInfo(header,  archive);  readSubStreamsInfo(header,  archive);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  readSubStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readSubStreamsInfo(header,    archive);    readSubStreamsInfo(header,  archive);	  	compilable	  [FE]  NullPointerException  	51	12	add
208	[BUG]  [BUGGY]  readSubStreamsInfo(header,  archive);  ReadSubStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  ReadSubStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readSubStreamsInfo(header,    archive);    ReadSubStreamsInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol	51	None	add
209	[BUG]  [BUGGY]  readSubStreamsInfo(header,  archive);  reader.readSubStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  reader  [FE]        NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  reader.readSubStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readSubStreamsInfo(header,    archive);    reader.readSubStreamsInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol  reader	51	None	add
210	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readSubStreamsInfo(header,    archive);    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();	  	compilable	  [FE]  NullPointerException  	51	12	add
211	[BUG]  [BUGGY]  readSubStreamsInfo(header,  archive);  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readSubStreamsInfo(header,    archive);    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();	  	compilable	  [FE]  NullPointerException  	51	12	add
212	[BUG]  [BUGGY]  readSubStreamsInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(archive.folders);  [CE]  no  suitable  constructor  found  for  ArrayList(Folder[])  [FE]            NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readSubStreamsInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(archive.folders);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Folder[])	51	None	add
213	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  readSubStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readSubStreamsInfo(header,    archive);    readSubStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  	compilable	  [FE]  NullPointerException  	51	12	add
214	[BUG]  [BUGGY]  readSubStreamsInfo(header,  archive);  readSubStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [FE]  NullPointerException  [FE]              NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  readSubStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readSubStreamsInfo(header,    archive);    readSubStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  	compilable	  [FE]  NullPointerException  	51	12	add
215	[BUG]  [BUGGY]  ReadPackInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(header,  archive.folders);	  readPackInfo(header,    archive);    ReadPackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
216	[BUG]  [BUGGY]  ReadPackInfo(nid,  archive);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(nid,  archive);	  readPackInfo(header,    archive);    ReadPackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
217	[BUG]  [BUGGY]  readPackInfo(nid,  archive);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(nid,  archive);	  readPackInfo(header,    archive);    ReadPackInfo(header,    archive);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	32	None	replace
218	[BUG]  [BUGGY]  readPackInfo(header,  fileName,  archive);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  fileName,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  fileName,  archive);	  readPackInfo(fileName,    archive);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	82	None	replace
219	[BUG]  [BUGGY]  readPackInfo(fileName,  archive.folders);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(fileName,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(fileName,  archive.folders);	  readPackInfo(fileName,    archive);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	82	None	replace
220	[BUG]  [BUGGY]  readPackInfo(fileName,  nid,  archive);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(fileName,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(fileName,  nid,  archive);	  readPackInfo(fileName,    archive);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	82	None	replace
221	[BUG]  [BUGGY]  readPackInfo(fileName,  NID.kUnpackInfo);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(fileName,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(fileName,  NID.kUnpackInfo);	  readPackInfo(fileName,    archive);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	82	None	replace
222	[BUG]  [BUGGY]  readPackInfo(file,  archive.folders);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(file,  archive.folders);	  readPackInfo(fileName,    archive);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	82	None	replace
223	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);	  	compilable	  [FE]  IOException  	1	12	add
224	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);	  	compilable	  [FE]  IOException  	1	12	add
225	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ReadStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ReadStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ReadStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
226	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  reader.readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  reader  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  reader.readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    reader.readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol  reader	1	None	add
227	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	1	None	add
228	[BUG]  [BUGGY]  readFolderInfo(header,  archive.folders,  null);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(header,  archive.folders,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  archive.folders,  null);	  readFolderInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
229	[BUG]  [BUGGY]  readFolderInfo(header,  archive.folders,  false);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(header,  archive.folders,  false);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  archive.folders,  false);	  readFolderInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
230	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  header.peek();  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  InputStream  inputStreamStack  =  header.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	InputStream  inputStreamStack  =  header.peek();	          InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
231	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  currentFolderInputStream.peek();  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  InputStream  inputStreamStack  =  currentFolderInputStream.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	InputStream  inputStreamStack  =  currentFolderInputStream.peek();	          InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
232	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  this.inputStreamStack.peek();  [CE]  cannot  find  symbol  inputStreamStack  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  InputStream  inputStreamStack  =  this.inputStreamStack.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	InputStream  inputStreamStack  =  this.inputStreamStack.peek();	          InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	79	None	replace
233	[BUG]  [BUGGY]  InputStream  nid  =  inputStreamStack.peek();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  InputStream  nid  =  inputStreamStack.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	InputStream  nid  =  inputStreamStack.peek();	          InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	79	None	replace
234	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  archive.inputStreamStack.peek();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  InputStream  inputStreamStack  =  archive.inputStreamStack.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	InputStream  inputStreamStack  =  archive.inputStreamStack.peek();	          InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	79	None	replace
235	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  nid.peek();  [CE]  int  cannot  be  dereferenced  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  InputStream  inputStreamStack  =  nid.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	InputStream  inputStreamStack  =  nid.peek();	          InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  int  cannot  be  dereferenced	79	None	replace
236	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  archive.peek();  [CE]  cannot  find  symbol  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  InputStream  inputStreamStack  =  archive.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	InputStream  inputStreamStack  =  archive.peek();	          InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
237	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  fileName,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  fileName,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  fileName,  nid);	  readUnpackInfo(header,    archive.folders,    fileName);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	78	None	replace
238	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  fileName);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  nid,  fileName);	  readUnpackInfo(header,    archive.folders,    fileName);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	78	None	replace
239	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  signature,  fileName);  [CE]  cannot  find  symbol  signature  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  signature,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  signature,  fileName);	  readUnpackInfo(header,    archive.folders,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	78	None	replace
240	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  fileName,  signature);  [CE]  cannot  find  symbol  signature  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  fileName,  signature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  fileName,  signature);	  readUnpackInfo(header,    archive.folders,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	78	None	replace
241	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  fileName,  NID.kUnpackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  fileName,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  fileName,  NID.kUnpackInfo);	  readUnpackInfo(header,    archive.folders,    fileName);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	78	None	replace
242	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  fileName);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  fileName);	  readUnpackInfo(header,    fileName,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	72	None	replace
243	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.fileName,  fileName);  [CE]  cannot  find  symbol  fileName  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.fileName,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.fileName,  fileName);	  readUnpackInfo(header,    fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  fileName	72	None	replace
244	[BUG]  [BUGGY]  readUnpackInfo(fileName,  header,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(fileName,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(fileName,  header,  archive);	  readUnpackInfo(header,    fileName,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	72	None	replace
245	[BUG]  [BUGGY]  readUnpackInfo(archive,  fileName,  header);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(archive,  fileName,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(archive,  fileName,  header);	  readUnpackInfo(header,    fileName,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	72	None	replace
246	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.fileName,  nid);  [CE]  cannot  find  symbol  fileName  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.fileName,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.fileName,  nid);	  readUnpackInfo(header,    fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  fileName	72	None	replace
247	[BUG]  [BUGGY]  byte[]  nextHeaderSize  =  archive.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  byte[]  nextHeaderSize  =  archive.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	byte[]  nextHeaderSize  =  archive.readUnsignedByte();	  readPackInfo(header,    archive);    byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
248	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders);  byte[]  nextHeaderSize  =  header.readUnsignedByte();  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders);  byte[]  nextHeaderSize  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive.folders);  byte[]  nextHeaderSize  =  header.readUnsignedByte();	  readPackInfo(header,    archive);    byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	35	None	replace
249	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  1);  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  Folder>(nid  +  1);	          archive.folders    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  incompatible  types	22	None	replace
250	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid,  NID.kUnpackInfo);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  Folder>(nid,  NID.kUnpackInfo);	          archive.folders    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	22	None	replace
251	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid,  fileName);  [CE]  no  suitable  constructor  found  for  ArrayList(int,String)  [FE]                          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  Folder>(nid,  fileName);	          archive.folders    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,String)	22	None	replace
252	[BUG]  [BUGGY]  archive.folders  =  new  LinkedList  <  Folder>(nid);  [CE]  no  suitable  constructor  found  for  LinkedList(int)  [FE]                            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  LinkedList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  LinkedList  <  Folder>(nid);	          archive.folders    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  no  suitable  constructor  found  for  LinkedList(int)	22	None	replace
253	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid,  header);  [CE]  no  suitable  constructor  found  for  ArrayList(int,DataInput)  [FE]                              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  Folder>(nid,  header);	          archive.folders    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,DataInput)	22	None	replace
254	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid,  nid);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]                                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  Folder>(nid,  nid);	          archive.folders    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	22	None	replace
255	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  reader.readStreamsInfo(nid,  archive);  [CE]  cannot  find  symbol  reader  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  reader.readStreamsInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive);  reader.readStreamsInfo(nid,  archive);	  readStreamsInfo(header,    archive);    reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	5	None	replace
256	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  nid  =  reader.readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  reader  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  nid  =  reader.readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive);  nid  =  reader.readStreamsInfo(header,  archive);	  readStreamsInfo(header,    archive);    reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	5	None	replace
257	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	90	12	add
258	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  [FE]  java.io.IOException:  Expected  kFolder  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	90	12	add
259	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[1];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[1];	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	90	12	add
260	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[1];  [FE]  java.io.IOException:  Expected  kFolder  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[1];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[1];	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	90	12	add
261	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  int  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  int  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    int  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	90	None	add
262	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  DataInput  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  DataInput  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    DataInput  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	90	None	add
263	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[2];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[2];	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	90	12	add
264	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[2];  [FE]  java.io.IOException:  Expected  kFolder  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[2];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[2];	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	90	12	add
265	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  InputStream  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  InputStream  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    InputStream  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	90	None	add
266	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  nid  =  header.readUnsignedByte();  archives.folders  =  new  Folder[0];  [CE]  cannot  find  symbol  archives  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  nid  =  header.readUnsignedByte();  archives.folders  =  new  Folder[0];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    nid  =  header.readUnsignedByte();  archives.folders  =  new  Folder[0];	  	non-compiled	[CE]  cannot  find  symbol  archives	90	None	add
267	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  LinkedList  <  String>();  [CE]  incompatible  types  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  LinkedList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  header.readUnsignedByte();  archive.folders  =  new  LinkedList  <  String>();	          nid    =    header.readUnsignedByte();    archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  incompatible  types	20	None	replace
268	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  ArrayList  <  String>(nid);  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  header.readUnsignedByte();  archive.folders  =  new  ArrayList  <  String>(nid);	          nid    =    header.readUnsignedByte();    archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  incompatible  types	20	None	replace
269	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  archive.folders  =  new  ArrayList  <  String>();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  int  nid  =  header.readUnsignedByte();  archive.folders  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	int  nid  =  header.readUnsignedByte();  archive.folders  =  new  ArrayList  <  String>();	          nid    =    header.readUnsignedByte();    archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	20	None	replace
270	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  TreeSet  <  String>();  [CE]  cannot  find  symbol  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  TreeSet  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  header.readUnsignedByte();  archive.folders  =  new  TreeSet  <  String>();	          nid    =    header.readUnsignedByte();    archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
271	[BUG]  [BUGGY]  readUnpackInfo(header,  null,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  null,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  null,  nid);	  readUnpackInfo(nid,    header,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	42	None	replace
272	[BUG]  [BUGGY]  readUnpackInfo(header,  NID.kUnpackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  NID.kUnpackInfo);	  readUnpackInfo(nid,    header,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	42	None	replace
273	[BUG]  [BUGGY]  readFolders(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolders(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolders(header,  archive.folders);	  readFolders(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
274	[BUG]  [BUGGY]  readFolders(file,  archive);  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolders(file,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolders(file,  archive);	  readFolders(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
275	[BUG]  [BUGGY]  readFolders(fileName,  header,  archive);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolders(fileName,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolders(fileName,  header,  archive);	  readFolders(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
276	[BUG]  [BUGGY]  readFolders(nid,  archive);  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolders(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolders(nid,  archive);	  readFolders(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
277	[BUG]  [BUGGY]  readFolders(archive,  header);  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolders(archive,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolders(archive,  header);	  readFolders(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
278	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    header.readUnsignedByte();    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();	  	compilable	  [FE]  IOException  	7	12	add
279	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    header.readUnsignedByte();    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();	  	compilable	  [FE]  IOException  	7	12	add
280	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  ReadStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  ReadStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    header.readUnsignedByte();    ReadStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
281	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  reader.readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  reader  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  reader.readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    header.readUnsignedByte();    reader.readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol  reader	7	None	add
282	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    header.readUnsignedByte();    nid  =  header.readUnsignedByte();	  	compilable	  [FE]  IOException  	7	12	add
283	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    header.readUnsignedByte();    nid  =  header.readUnsignedByte();	  	compilable	  [FE]  IOException  	7	12	add
284	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.nid,  nid);  [CE]  cannot  find  symbol  nid  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.nid,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.nid,  nid);	  readUnpackInfo(header,    nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  nid	38	None	replace
285	[BUG]  [BUGGY]  readFolderInfo(nid,  NID.kUnpackInfo);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(nid,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(nid,  NID.kUnpackInfo);	  readFolderInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
286	[BUG]  [BUGGY]  readFolderInfo(nid,  archive.folders);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(nid,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(nid,  archive.folders);	  readFolderInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
287	[BUG]  [BUGGY]  ReadFolderInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadFolderInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadFolderInfo(header,  archive);	  readFolderInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
288	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  NID,  nid);  [CE]  cannot  find  symbol  NID  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  NID,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  NID,  nid);	  readUnpackInfo(header,    archive,    nid,    NID);    	non-compiled	[CE]  cannot  find  symbol  NID	25	None	replace
289	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  NID);  [CE]  cannot  find  symbol  NID  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  NID);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  NID);	  readUnpackInfo(header,    archive,    nid,    NID);    	non-compiled	[CE]  cannot  find  symbol  NID	25	None	replace
290	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  NID.kPackInfo,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  NID.kPackInfo,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  NID.kPackInfo,  nid);	  readUnpackInfo(header,    archive,    nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	26	None	replace
291	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid,  NID.kPackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid,  NID.kPackInfo);	  readUnpackInfo(header,    archive,    nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	26	None	replace
292	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  nid);	  readUnpackInfo(header,    archive,    nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	26	None	replace
293	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  header);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  header);	  readUnpackInfo(header,    archive,    nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	26	None	replace
294	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  signature);  [CE]  cannot  find  symbol  signature  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  signature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  signature);	  readUnpackInfo(header,    archive,    nid,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  signature	26	None	replace
295	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  fileName);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  fileName);	  readUnpackInfo(header,    archive,    nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	26	None	replace
296	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  null);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  null);	  readUnpackInfo(header,    archive,    nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	26	None	replace
297	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	58	None	replace
298	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	List  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
299	[BUG]  [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
300	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive.folders);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive.folders);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	58	None	replace
301	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList();  [CE]  cannot  find  symbol  Collections  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList();	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Collections	58	None	replace
302	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    	compilable	  [FE]  IOException  	57	12	replace
303	[BUG]  [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    	compilable	  [FE]  IOException  	57	12	replace
304	[BUG]  [BUGGY]  List  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  List  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	List  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
305	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(nid);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    	compilable	  [FE]  IOException  	57	12	replace
306	[BUG]  [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(nid);  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(nid);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    	compilable	  [FE]  IOException  	57	12	replace
307	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(2);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(2);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    	compilable	  [FE]  IOException  	57	12	replace
308	[BUG]  [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(2);  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(2);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(2);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    	compilable	  [FE]  IOException  	57	12	replace
309	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(1);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    	compilable	  [FE]  IOException  	57	12	replace
310	[BUG]  [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(1);  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(1);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    	compilable	  [FE]  IOException  	57	12	replace
311	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(0);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(0);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    	compilable	  [FE]  IOException  	57	12	replace
312	[BUG]  [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(0);  [FE]  IOException  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(0);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(0);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    	compilable	  [FE]  IOException  	57	12	replace
313	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	65	None	add
314	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	65	None	add
315	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  ReadPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  ReadPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    ReadPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	65	None	add
316	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  RandomAccessFile  file  =  inputStreamStack.getDataInput(nid);  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  inputStreamStack  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  RandomAccessFile  file  =  inputStreamStack.getDataInput(nid);  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    RandomAccessFile  file  =  inputStreamStack.getDataInput(nid);  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	65	None	add
317	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  RandomAccessFile  file  =  inputStreamStack.getDataInput(nid);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  inputStreamStack  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  RandomAccessFile  file  =  inputStreamStack.getDataInput(nid);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    RandomAccessFile  file  =  inputStreamStack.getDataInput(nid);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	65	None	add
318	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  inputStreamStack.getInputStream(fileName);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  inputStreamStack.getInputStream(fileName);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    InputStream  inputStreamStack  =  inputStreamStack.getInputStream(fileName);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	65	None	add
319	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  this.currentFolderIndex  =  currentFolderInputStream.readUnsignedByte();  [CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  this.currentFolderIndex  =  currentFolderInputStream.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  this.currentFolderIndex  =  currentFolderInputStream.readUnsignedByte();	  	non-compiled	[CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	65	None	add
320	[BUG]  [BUGGY]  ReadStreamsInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadStreamsInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadStreamsInfo(header,  archive.folders);	  readStreamsInfo(header,    archive);    ReadStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
321	[BUG]  [BUGGY]  ReadStreamsInfo(nid,  archive);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadStreamsInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadStreamsInfo(nid,  archive);	  readStreamsInfo(header,    archive);    ReadStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
322	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(file,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readUnpackInfo(file,  archive);	  readPackInfo(file,    archive);    	compilable	  [FE]  EOFException  	81	12	replace
323	[BUG]  [BUGGY]  readUnpackInfo(file,  archive);  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(file,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(file,  archive);	  readPackInfo(file,    archive);    	compilable	  [FE]  EOFException  	81	12	replace
324	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid  +  1);  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid  +  1);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  ';'  expected	18	None	replace
325	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid  +  2);  [CE]  ';'  expected  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid  +  2);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid  +  2);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  ';'  expected	18	None	replace
326	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid  +  6);  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid  +  6);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid  +  6);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  ';'  expected	18	None	replace
327	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid  +  3);  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid  +  3);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid  +  3);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  ';'  expected	18	None	replace
328	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid  +  4);  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid  +  4);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid  +  4);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  ';'  expected	18	None	replace
329	[BUG]  [BUGGY]  List  <  String>  archive.folders  =  new  ArrayList  <  String>(nid);  [CE]  ';'  expected  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  List  <  String>  archive.folders  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	List  <  String>  archive.folders  =  new  ArrayList  <  String>(nid);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  ';'  expected	18	None	replace
330	[BUG]  [BUGGY]  [FE]  IOException  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	66	12	replace
331	[BUG]  [BUGGY]  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [FE]  IOException  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	66	12	replace
332	[BUG]  [BUGGY]  [FE]  IOException  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	66	12	replace
333	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [FE]  IOException  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	66	12	replace
334	[BUG]  [BUGGY]  List  <  String>  folderers  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  List  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	List  <  String>  folderers  =  new  ArrayList  <  String>();	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
335	[BUG]  [BUGGY]  readPackInfo(header,  archive);  folderers  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  folderers  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  folderers  =  new  ArrayList  <  String>();	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol  folderers	66	None	replace
336	[BUG]  [BUGGY]  [FE]  IOException  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(nid);	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	66	12	replace
337	[BUG]  [BUGGY]  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(nid);  [FE]  IOException  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(nid);	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	66	12	replace
338	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  NID.folders,  nid);  [CE]  cannot  find  symbol  folders  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  NID.folders,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  NID.folders,  nid);	  readUnpackInfo(header,    archive,    nid,    NID.z);    	non-compiled	[CE]  cannot  find  symbol  folders	96	None	replace
339	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  NID.kUnpackInfo,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  NID.kUnpackInfo,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  NID.kUnpackInfo,  nid);	  readUnpackInfo(header,    archive,    nid,    NID.z);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	96	None	replace
340	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	56	None	add
341	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	56	None	add
342	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ReadStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [CE]  cannot  find  symbol  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ReadStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    ReadStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();	  	non-compiled	[CE]  cannot  find  symbol	56	None	add
343	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  currentFolderInputStream.deferredBlockStreams.addAll(deferredBlockStreams);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  currentFolderInputStream.deferredBlockStreams.addAll(deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  currentFolderInputStream.deferredBlockStreams.addAll(deferredBlockStreams);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	56	None	add
344	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  this.inputStreamStack.add(deferredBlockStreams);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  this.inputStreamStack.add(deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  this.inputStreamStack.add(deferredBlockStreams);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	56	None	add
345	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  currentFolderInputStream.deferredBlockStreams.add(nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  currentFolderInputStream.deferredBlockStreams.add(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  currentFolderInputStream.deferredBlockStreams.add(nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	56	None	add
346	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  fileName  =  header.readUnsignedByte();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  fileName  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  fileName  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	56	None	add
347	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  currentFolderInputStream.deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  currentFolderInputStream.deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  currentFolderInputStream.deferredBlockStreams  =  new  ArrayList  <  DataInput>();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	56	None	add
348	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  password);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  password);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  password);	  readUnpackInfo(header,    archive.folders,    signature);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	47	None	replace
349	[BUG]  [BUGGY]  [FE]  IOException  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  readPackInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    	compilable	  [FE]  IOException  	102	12	replace
350	[BUG]  [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [FE]  IOException  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  readPackInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    	compilable	  [FE]  IOException  	102	12	replace
351	[BUG]  [BUGGY]  List  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  cannot  find  symbol  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  List  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	List  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  readPackInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
352	[BUG]  [BUGGY]  readPackInfo(header,  archive);  folderers  =  new  ArrayList  <  Folder>();  [CE]  cannot  find  symbol  folderers  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  folderers  =  new  ArrayList  <  Folder>();	  readPackInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    	non-compiled	[CE]  cannot  find  symbol  folderers	102	None	replace
353	[BUG]  [BUGGY]  ReadPackInfo(currentFolderInputStream,  header);  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(currentFolderInputStream,  header);  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(currentFolderInputStream,  header);  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);	  readPackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack(header);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
354	[BUG]  [BUGGY]  InputStream  headerStack  =  getInputStreamStack(header);  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  InputStream  headerStack  =  getInputStreamStack(header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	InputStream  headerStack  =  getInputStreamStack(header);	  readPackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack(header);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
355	[BUG]  [BUGGY]  ReadPackInfo(header,  archive.folders);  InputStream  inputStreamStack  =  getInputStreamStack(header);  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive.folders);  InputStream  inputStreamStack  =  getInputStreamStack(header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(header,  archive.folders);  InputStream  inputStreamStack  =  getInputStreamStack(header);	  readPackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack(header);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
356	[BUG]  [BUGGY]  readPackInfo(header,  archive);  InputStream  streamStack  =  getInputStreamStack(currentFolderInputStream);  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  InputStream  streamStack  =  getInputStreamStack(currentFolderInputStream);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  InputStream  streamStack  =  getInputStreamStack(currentFolderInputStream);	  readPackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack(header);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
357	[BUG]  [BUGGY]  ReadPackInfo(header,  archive.folders);  InputStream  inputStreamStack  =  inputStreamStack.peek();  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive.folders);  InputStream  inputStreamStack  =  inputStreamStack.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(header,  archive.folders);  InputStream  inputStreamStack  =  inputStreamStack.peek();	  readPackInfo(header,    archive);    InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
358	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders);  InputStream  inputStreamStack  =  inputStreamStack.peek();  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders);  InputStream  inputStreamStack  =  inputStreamStack.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive.folders);  InputStream  inputStreamStack  =  inputStreamStack.peek();	  readPackInfo(header,    archive);    InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	67	None	replace
359	[BUG]  [BUGGY]  ReadPackInfo(currentFolderInputStream,  header,  archive);  InputStream  inputStreamStack  =  inputStreamStack.peek();  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(currentFolderInputStream,  header,  archive);  InputStream  inputStreamStack  =  inputStreamStack.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(currentFolderInputStream,  header,  archive);  InputStream  inputStreamStack  =  inputStreamStack.peek();	  readPackInfo(header,    archive);    InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
360	[BUG]  [BUGGY]  readPackInfo(header,  archive);  InputStream  inputStreamStack  =  this.inputStreamStack.peek();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  InputStream  inputStreamStack  =  this.inputStreamStack.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  InputStream  inputStreamStack  =  this.inputStreamStack.peek();	  readPackInfo(header,    archive);    InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	67	None	replace
361	[BUG]  [BUGGY]  readPackInfo(header,  archive);  InputStream  streamStack  =  inputStreamStack.peek();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  InputStream  streamStack  =  inputStreamStack.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  InputStream  streamStack  =  inputStreamStack.peek();	  readPackInfo(header,    archive);    InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	67	None	replace
362	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  NID.kUnpackInfo,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  NID.kUnpackInfo,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  NID.kUnpackInfo,  nid);	  readUnpackInfo(header,    archive.folders,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
363	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  NID.kUnpackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  nid,  NID.kUnpackInfo);	  readUnpackInfo(header,    archive.folders,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
364	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  SIGNATURE_HEADER_SIZE,  NID.kUnpackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  SIGNATURE_HEADER_SIZE,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  SIGNATURE_HEADER_SIZE,  NID.kUnpackInfo);	  readUnpackInfo(header,    archive.folders,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
365	[BUG]  [BUGGY]  readUnpackInfo(header,  nid,  archive.folders);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  nid,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  nid,  archive.folders);	  readUnpackInfo(nid,    archive.folders);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	39	None	replace
366	[BUG]  [BUGGY]  readUnpackInfo(nid,  archive.folders,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(nid,  archive.folders,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  archive.folders,  nid);	  readUnpackInfo(nid,    archive.folders);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	39	None	replace
367	[BUG]  [BUGGY]  readUnpackInfo(nid,  archive.folders,  signature);  [CE]  cannot  find  symbol  signature  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(nid,  archive.folders,  signature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  archive.folders,  signature);	  readUnpackInfo(nid,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  signature	39	None	replace
368	[BUG]  [BUGGY]  readUnpackInfo(nid,  archive.folders,  fileName);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(nid,  archive.folders,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  archive.folders,  fileName);	  readUnpackInfo(nid,    archive.folders);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	39	None	replace
369	[BUG]  [BUGGY]  readUnpackInfo(nid,  archive.folders,  header);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(nid,  archive.folders,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  archive.folders,  header);	  readUnpackInfo(nid,    archive.folders);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	39	None	replace
370	[BUG]  [BUGGY]  [FE]  IOException  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  NID.kUnpackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	nid  =  NID.kUnpackInfo;	          nid    =    header.readUnsignedByte();    	compilable	  [FE]  IOException  	15	12	replace
371	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  [FE]  IOException  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  NID.kUnpackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  NID.kUnpackInfo;	          nid    =    header.readUnsignedByte();    	compilable	  [FE]  IOException  	15	12	replace
372	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo.readUnsignedByte();  [CE]  int  cannot  be  dereferenced  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  NID.kUnpackInfo.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  NID.kUnpackInfo.readUnsignedByte();	          nid    =    header.readUnsignedByte();    	non-compiled	[CE]  int  cannot  be  dereferenced	15	None	replace
373	[BUG]  [BUGGY]  nid  =  header.readUnpackInfo();  [CE]  cannot  find  symbol  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnpackInfo();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  header.readUnpackInfo();	          nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
374	[BUG]  [BUGGY]  [FE]  IOException  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	nid  =  header.readUnsignedByte()  +  1;	          nid    =    header.readUnsignedByte();    	compilable	  [FE]  IOException  	15	12	replace
375	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  [FE]  IOException  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  header.readUnsignedByte()  +  1;	          nid    =    header.readUnsignedByte();    	compilable	  [FE]  IOException  	15	12	replace
376	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  header.readUnsignedByte(nid);	          nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	15	None	replace
377	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	101	None	add
378	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	101	None	add
379	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  ReadPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  cannot  find  symbol  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  ReadPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    ReadPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  cannot  find  symbol	101	None	add
380	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  inputStreamStack.getInputStream(header);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  cannot  find  symbol  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  inputStreamStack.getInputStream(header);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    InputStream  inputStreamStack  =  inputStreamStack.getInputStream(header);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  cannot  find  symbol	101	None	add
381	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  inputStreamStack.getInputStream(fileName);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  cannot  find  symbol  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  inputStreamStack.getInputStream(fileName);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    InputStream  inputStreamStack  =  inputStreamStack.getInputStream(fileName);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  cannot  find  symbol	101	None	add
382	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  RandomAccessFile  file  =  inputStreamStack.getDataInput(nid);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  cannot  find  symbol  inputStreamStack  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  RandomAccessFile  file  =  inputStreamStack.getDataInput(nid);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    RandomAccessFile  file  =  inputStreamStack.getDataInput(nid);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	101	None	add
383	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  inputStreamStack.getInputStream(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  cannot  find  symbol  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  inputStreamStack.getInputStream(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    InputStream  inputStreamStack  =  inputStreamStack.getInputStream(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  cannot  find  symbol	101	None	add
384	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(nid);	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>(length);    	compilable	  [FE]  IOException  	68	12	replace
385	[BUG]  [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(nid);  [FE]  IOException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(nid);	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>(length);    	compilable	  [FE]  IOException  	68	12	replace
386	[BUG]  [BUGGY]  [FE]  IOException  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(NID.kUnpackInfo);	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>(length);    	compilable	  [FE]  IOException  	68	12	replace
387	[BUG]  [BUGGY]  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(NID.kUnpackInfo);  [FE]  IOException  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(NID.kUnpackInfo);	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>(length);    	compilable	  [FE]  IOException  	68	12	replace
388	[BUG]  [BUGGY]  ReadPackInfo(fileName,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(length);  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(fileName,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(length);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(fileName,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(length);	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
389	[BUG]  [BUGGY]  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(length);  [CE]  cannot  find  symbol  length  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(length);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(length);	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  cannot  find  symbol  length	68	None	replace
390	[BUG]  [BUGGY]  ReadPackInfo(fileName,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(fileName);  [CE]  cannot  find  symbol  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(fileName,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(fileName,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(fileName);	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
391	[BUG]  [BUGGY]  ReadStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
392	[BUG]  [BUGGY]  readFolderInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  archive);  nid  =  header.readUnsignedByte();	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
393	[BUG]  [BUGGY]  reader.readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  reader  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  reader.readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	reader.readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  reader	8	None	replace
394	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  nid,  SIGNATURE_HEADER_SIZE);	  readUnpackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	28	None	replace
395	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  NID);  [CE]  cannot  find  symbol  NID  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  NID);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  nid,  NID);	  readUnpackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  cannot  find  symbol  NID	28	None	replace
396	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  NID.kPackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  nid,  NID.kPackInfo);	  readUnpackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	28	None	replace
397	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	86	None	add
398	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	86	None	add
399	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  ReadStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  cannot  find  symbol  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  ReadStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    ReadStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  cannot  find  symbol	86	None	add
400	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  FoldER>();  [CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  FoldER>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  FoldER>();	  	non-compiled	[CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	86	None	add
401	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(1);  [CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(1);	  	non-compiled	[CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	86	None	add
402	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  }  [CE]  illegal  start  of  type  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  }  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  }	  	non-compiled	[CE]  illegal  start  of  type	86	None	add
403	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  	compilable	  [FE]  IOException  	9	12	add
404	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  	compilable	  [FE]  IOException  	9	12	add
405	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  ReadStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  ReadStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    ReadStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
406	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  reader.readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  reader  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  reader.readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    reader.readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  	non-compiled	[CE]  cannot  find  symbol  reader	9	None	add
407	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;	  	compilable	  [FE]  IOException  	9	12	add
408	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;	  	compilable	  [FE]  IOException  	9	12	add
409	[BUG]  [BUGGY]  readUnpackInfo(header,  nid,  NID.kUnpackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  nid,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  nid,  NID.kUnpackInfo);	  readUnpackInfo(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	41	None	replace
410	[BUG]  [BUGGY]  readUnpackInfo(nid,  NID.kUnpackInfo,  header);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(nid,  NID.kUnpackInfo,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  NID.kUnpackInfo,  header);	  readUnpackInfo(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	41	None	replace
411	[BUG]  [BUGGY]  readUnpackInfo(nid,  NID.kUnpackInfo,  fileName);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(nid,  NID.kUnpackInfo,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  NID.kUnpackInfo,  fileName);	  readUnpackInfo(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	41	None	replace
412	[BUG]  [BUGGY]  readUnpackInfo(nid,  NID.kUnpackInfo,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(nid,  NID.kUnpackInfo,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  NID.kUnpackInfo,  nid);	  readUnpackInfo(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	41	None	replace
413	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid,  NID.kUnpackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid,  NID.kUnpackInfo);	  readUnpackInfo(header,    archive,    nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
414	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo,  SIGNATURE_HEADER_SIZE);	  readUnpackInfo(header,    archive,    nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
415	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo,  fileName);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo,  fileName);	  readUnpackInfo(header,    archive,    nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
416	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo,  header);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo,  header);	  readUnpackInfo(header,    archive,    nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
417	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo,  nid);	  readUnpackInfo(header,    archive,    nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
418	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo,  signature);  [CE]  cannot  find  symbol  signature  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo,  signature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo,  signature);	  readUnpackInfo(header,    archive,    nid,    NID.kUnpackInfo);    	non-compiled	[CE]  cannot  find  symbol  signature	23	None	replace
419	[BUG]  [BUGGY]  archive.folders  =  new  LinkedList  <  String>();  [CE]  incompatible  types  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  LinkedList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  LinkedList  <  String>();	          archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  incompatible  types	19	None	replace
420	[BUG]  [BUGGY]  archive.folders  =  new  TreeSet  <  String>();  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  TreeSet  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  TreeSet  <  String>();	          archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
421	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  String>(NID.kUnpackInfo);  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  String>(NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  String>(NID.kUnpackInfo);	          archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  incompatible  types	19	None	replace
422	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  String>(1);  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  String>(1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  String>(1);	          archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  incompatible  types	19	None	replace
423	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  String>(2);  [CE]  incompatible  types  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  String>(2);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  String>(2);	          archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  incompatible  types	19	None	replace
424	[BUG]  [BUGGY]  readUnpackInfo(nid,  archive,  nid,  NID.folders);  [CE]  cannot  find  symbol  folders  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(nid,  archive,  nid,  NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  archive,  nid,  NID.folders);	  readUnpackInfo(header,    archive,    nid,    NID.folders);    	non-compiled	[CE]  cannot  find  symbol  folders	76	None	replace
425	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kFolders);  [CE]  cannot  find  symbol  kFolders  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kFolders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.kFolders);	  readUnpackInfo(header,    archive,    nid,    NID.folders);    	non-compiled	[CE]  cannot  find  symbol  kFolders	76	None	replace
426	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders,  nid);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive.folders,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive.folders,  nid);	  readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	43	None	replace
427	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders,  NID.kUnpackInfo);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive.folders,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive.folders,  NID.kUnpackInfo);	  readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	43	None	replace
428	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders,  signature);  [CE]  cannot  find  symbol  signature  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive.folders,  signature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive.folders,  signature);	  readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  signature	43	None	replace
429	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders,  null);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive.folders,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive.folders,  null);	  readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	43	None	replace
430	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders,  fileName);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive.folders,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive.folders,  fileName);	  readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	43	None	replace
431	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders,  false);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive.folders,  false);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive.folders,  false);	  readStreamsInfo(header,    archive.folders);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	43	None	replace
432	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    	compilable	  [FE]  IOException  	10	12	replace
433	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    	compilable	  [FE]  IOException  	10	12	replace
434	[BUG]  [BUGGY]  ReadStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
435	[BUG]  [BUGGY]  reader.readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  reader  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  reader.readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	reader.readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  cannot  find  symbol  reader	10	None	replace
436	[BUG]  [BUGGY]  readFolderInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
437	[BUG]  [BUGGY]  readUnpackInfo(header,  null,  header,  archive.folders);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  null,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  null,  header,  archive.folders);	  readUnpackInfo(nid,    header,    archive.folders);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
438	[BUG]  [BUGGY]  readUnpackInfo(header,  NID.kUnpackInfo,  header,  archive.folders);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  NID.kUnpackInfo,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  NID.kUnpackInfo,  header,  archive.folders);	  readUnpackInfo(nid,    header,    archive.folders);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
439	[BUG]  [BUGGY]  readUnpackInfo(header,  header,  archive.folders);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  header,  archive.folders);	  readUnpackInfo(nid,    header,    archive.folders);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
440	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  archive);  readPackInfo(file,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readPackInfo(file,    archive);    readPackInfo(file,  archive);	  	compilable	  [FE]  EOFException  	80	12	add
441	[BUG]  [BUGGY]  readPackInfo(file,  archive);  readPackInfo(file,  archive);  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  archive);  readPackInfo(file,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(file,    archive);    readPackInfo(file,  archive);	  	compilable	  [FE]  EOFException  	80	12	add
442	[BUG]  [BUGGY]  readPackInfo(file,  archive);  ReadPackInfo(file,  archive);  [CE]  cannot  find  symbol  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  archive);  ReadPackInfo(file,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(file,    archive);    ReadPackInfo(file,  archive);	  	non-compiled	[CE]  cannot  find  symbol	80	None	add
443	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  archive);  readPackInfo(file,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readPackInfo(file,    archive);    readPackInfo(file,  archive);  nid  =  header.readUnsignedByte();	  	compilable	  [FE]  EOFException  	80	12	add
444	[BUG]  [BUGGY]  readPackInfo(file,  archive);  readPackInfo(file,  archive);  nid  =  header.readUnsignedByte();  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  archive);  readPackInfo(file,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(file,    archive);    readPackInfo(file,  archive);  nid  =  header.readUnsignedByte();	  	compilable	  [FE]  EOFException  	80	12	add
445	[BUG]  [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  String>  file  =  new  ArrayList  <  String>(file.length);  [CE]  cannot  find  symbol  length  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  String>  file  =  new  ArrayList  <  String>(file.length);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(file,    archive);    ArrayList  <  String>  file  =  new  ArrayList  <  String>(file.length);	  	non-compiled	[CE]  cannot  find  symbol  length	80	None	add
446	[BUG]  [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  String>  file  =  new  ArrayList  <  String>(file.folders);  [CE]  cannot  find  symbol  folders  [FE]            EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  String>  file  =  new  ArrayList  <  String>(file.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(file,    archive);    ArrayList  <  String>  file  =  new  ArrayList  <  String>(file.folders);	  	non-compiled	[CE]  cannot  find  symbol  folders	80	None	add
447	[BUG]  [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  String>  file  =  new  ArrayList  <  String>(file,  archive);  [CE]  no  suitable  constructor  found  for  ArrayList(ArrayList<String>,Archive)  [FE]              EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  String>  file  =  new  ArrayList  <  String>(file,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(file,    archive);    ArrayList  <  String>  file  =  new  ArrayList  <  String>(file,  archive);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(ArrayList<String>,Archive)	80	None	add
448	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	55	12	replace
449	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	55	12	replace
450	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
451	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	55	12	replace
452	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	55	12	replace
453	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kUnpackInfo);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	55	12	replace
454	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kUnpackInfo);  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kUnpackInfo);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	55	12	replace
455	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	55	12	replace
456	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	55	12	replace
457	[BUG]  [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(length);  [CE]  cannot  find  symbol  length  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(length);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(length);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>(length);    	non-compiled	[CE]  cannot  find  symbol  length	59	None	replace
458	[BUG]  [BUGGY]  ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(nid);  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(nid);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>(length);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
459	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(NID.kUnpackInfo);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>(length);    	compilable	  [FE]  IOException  	59	12	replace
460	[BUG]  [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(NID.kUnpackInfo);  [FE]  IOException  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(NID.kUnpackInfo);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>(length);    	compilable	  [FE]  IOException  	59	12	replace
461	[BUG]  [BUGGY]  List  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(nid);  [CE]  cannot  find  symbol  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  List  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	List  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(nid);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>(length);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
462	[BUG]  [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(inputStreamStack);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(inputStreamStack);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(inputStreamStack);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>(length);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	59	None	replace
463	[BUG]  [BUGGY]  ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(deferredBlockStreams);  [CE]  cannot  find  symbol  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadStreamsInfo(currentFolderInputStream,  header);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(deferredBlockStreams);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>(length);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
464	[BUG]  [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  readStreamsInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
465	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  new  ReadStreamsInfo(fileName,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadStreamsInfo  header  =  new  ReadStreamsInfo(fileName,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadStreamsInfo  header  =  new  ReadStreamsInfo(fileName,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  readStreamsInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
466	[BUG]  [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(fileName);  [CE]  no  suitable  constructor  found  for  ArrayList(String)  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(fileName);	  readStreamsInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String)	85	None	replace
467	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(fileName);  [CE]  no  suitable  constructor  found  for  ArrayList(String)  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(fileName);	  readStreamsInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String)	85	None	replace
468	[BUG]  [BUGGY]  readUnpackInfo(inputStreamStack,  header,  nid,  archive);  [CE]  cannot  find  symbol  inputStreamStack  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(inputStreamStack,  header,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(inputStreamStack,  header,  nid,  archive);	  readUnpackInfo(header,    nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	38	None	replace
469	[BUG]  [BUGGY]  readFileInfo(header,  archive,  nid);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFileInfo(header,  archive,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFileInfo(header,  archive,  nid);	  readFileInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
470	[BUG]  [BUGGY]  readFileInfo(header,  archive,  NID.kUnpackInfo);  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFileInfo(header,  archive,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFileInfo(header,  archive,  NID.kUnpackInfo);	  readFileInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
471	[BUG]  [BUGGY]  ReadPackInfo(header,  archive);  byte[]  nextHeader  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive);  byte[]  nextHeader  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(header,  archive);  byte[]  nextHeader  =  header.readUnsignedByte();	  readPackInfo(header,    archive);    byte[]    nextHeader    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
472	[BUG]  [BUGGY]  byte[]  nextHeader  =  header.readUnsignedByte();  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  byte[]  nextHeader  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	byte[]  nextHeader  =  header.readUnsignedByte();	  readPackInfo(header,    archive);    byte[]    nextHeader    =    header.readUnsignedByte();    	non-compiled	[CE]  incompatible  types	37	None	replace
473	[BUG]  [BUGGY]  NID  nid  =  NID.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  NID  nid  =  NID.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	NID  nid  =  NID.readUnsignedByte();	  nid    =    NID.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	92	None	replace
474	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  file.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	nid  =  file.readUnsignedByte();	  nid    =    NID.readUnsignedByte();    	compilable	  [FE]  EOFException  	92	12	replace
475	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  [FE]  EOFException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  file.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  file.readUnsignedByte();	  nid    =    NID.readUnsignedByte();    	compilable	  [FE]  EOFException  	92	12	replace
476	[BUG]  [BUGGY]  nid  =  reader.readUnsignedByte();  [CE]  cannot  find  symbol  reader  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  reader.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  reader.readUnsignedByte();	  nid    =    NID.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  reader	92	None	replace
477	[BUG]  [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(fileName);  [CE]  no  suitable  constructor  found  for  ArrayList(String)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(fileName);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String)	98	None	replace
478	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(0);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(0);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(length);    	compilable	  [FE]  IOException  	98	12	replace
479	[BUG]  [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(0);  [FE]  IOException  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(0);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(0);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(length);    	compilable	  [FE]  IOException  	98	12	replace
480	[BUG]  [BUGGY]  readFolderInfo(header,  archive,  NID.folders);  [CE]  cannot  find  symbol  folders  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(header,  archive,  NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  archive,  NID.folders);	  readFolderInfo(header,    archive,    NID.kUnpackInfo);    	non-compiled	[CE]  cannot  find  symbol  folders	63	None	replace
481	[BUG]  [BUGGY]  readFolderInfo(header,  archive,  NID.zUnpackInfo);  [CE]  cannot  find  symbol  zUnpackInfo  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(header,  archive,  NID.zUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  archive,  NID.zUnpackInfo);	  readFolderInfo(header,    archive,    NID.kUnpackInfo);    	non-compiled	[CE]  cannot  find  symbol  zUnpackInfo	63	None	replace
482	[BUG]  [BUGGY]  readFolderInfo(header,  NID.kUnpackInfo);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(header,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  NID.kUnpackInfo);	  readFolderInfo(header,    archive,    NID.kUnpackInfo);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
483	[BUG]  [BUGGY]  readFoldersInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFoldersInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFoldersInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
484	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(8);  [CE]  ';'  expected  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(8);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(8);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  ';'  expected	16	None	replace
485	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  fileName,  deferredBlockStreams);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  fileName,  deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  fileName,  deferredBlockStreams);	  readUnpackInfo(header,    archive.folders,    fileName);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	78	None	replace
486	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  fileName,  DEFERREDBlockStreams);  [CE]  cannot  find  symbol  DEFERREDBlockStreams  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  fileName,  DEFERREDBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  fileName,  DEFERREDBlockStreams);	  readUnpackInfo(header,    archive.folders,    fileName);    	non-compiled	[CE]  cannot  find  symbol  DEFERREDBlockStreams	78	None	replace
487	[BUG]  [BUGGY]  readSubStreamsInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readSubStreamsInfo(header,    archive);    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	51	None	add
488	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readSubStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	compilable	  [FE]  NullPointerException  	51	12	add
489	[BUG]  [BUGGY]  readSubStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readSubStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	compilable	  [FE]  NullPointerException  	51	12	add
490	[BUG]  [BUGGY]  readSubStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]        NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readSubStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  Lists	51	None	add
491	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readSubStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	compilable	  [FE]  NullPointerException  	51	12	add
492	[BUG]  [BUGGY]  readSubStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readSubStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	compilable	  [FE]  NullPointerException  	51	12	add
493	[BUG]  [BUGGY]  readSubStreamsInfo(header,  archive);  InputStream  inputStreamStack  =  inputStreamStack.values().iterator().next();  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  InputStream  inputStreamStack  =  inputStreamStack.values().iterator().next();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readSubStreamsInfo(header,    archive);    InputStream  inputStreamStack  =  inputStreamStack.values().iterator().next();	  	non-compiled	[CE]  cannot  find  symbol	51	None	add
494	[BUG]  [BUGGY]  readPackInfo(fileName,  NID.kUnpackInfo,  archive);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(fileName,  NID.kUnpackInfo,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(fileName,  NID.kUnpackInfo,  archive);	  readPackInfo(fileName,    archive);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	82	None	replace
495	[BUG]  [BUGGY]  readPackInfo(file,  nid,  archive);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(file,  nid,  archive);	  readPackInfo(fileName,    archive);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	82	None	replace
496	[BUG]  [BUGGY]  int  nid  =  NID.kUnpackInfo.readUnsignedByte();  readStreamsInfo(header,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  int  nid  =  NID.kUnpackInfo.readUnsignedByte();  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	int  nid  =  NID.kUnpackInfo.readUnsignedByte();  readStreamsInfo(header,  archive);	  readStreamsInfo(header,    archive);    int    nid    =    header.readUnsignedByte();    readStreamsInfo(header,    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	6	None	replace
497	[BUG]  [BUGGY]  int  nid  =  NID.readUnsignedByte();  readStreamsInfo(header,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  int  nid  =  NID.readUnsignedByte();  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	int  nid  =  NID.readUnsignedByte();  readStreamsInfo(header,  archive);	  readStreamsInfo(header,    archive);    int    nid    =    header.readUnsignedByte();    readStreamsInfo(header,    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	6	None	replace
498	[BUG]  [BUGGY]  int  nid  =  NID.deferredBlockInfo.readUnsignedByte();  readStreamsInfo(header,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  int  nid  =  NID.deferredBlockInfo.readUnsignedByte();  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	int  nid  =  NID.deferredBlockInfo.readUnsignedByte();  readStreamsInfo(header,  archive);	  readStreamsInfo(header,    archive);    int    nid    =    header.readUnsignedByte();    readStreamsInfo(header,    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	6	None	replace
499	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  NID.folders);  [CE]  cannot  find  symbol  folders  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  NID.folders);	  readUnpackInfo(header,    archive,    nid,    NID.bytes);    	non-compiled	[CE]  cannot  find  symbol  folders	77	None	replace
500	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid,  NID.bytes);  [CE]  cannot  find  symbol  bytes  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid,  NID.bytes);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  nid,  NID.bytes);	  readUnpackInfo(header,    archive,    nid,    NID.bytes);    	non-compiled	[CE]  cannot  find  symbol  bytes	77	None	replace
501	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  NID.bytes);  [CE]  cannot  find  symbol  bytes  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  NID.bytes);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  SIGNATURE_HEADER_SIZE,  NID.bytes);	  readUnpackInfo(header,    archive,    nid,    NID.bytes);    	non-compiled	[CE]  cannot  find  symbol  bytes	77	None	replace
502	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  signature);  [CE]  cannot  find  symbol  signature  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  signature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  nid,  signature);	  readUnpackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  cannot  find  symbol  signature	28	None	replace
503	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  header);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  nid,  header);	  readUnpackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	28	None	replace
504	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
505	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.size();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  int  nid  =  inputStreamStack.size();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	int  nid  =  inputStreamStack.size();	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	55	None	replace
506	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ReadStreamsInfo(nid,  archive);  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ReadStreamsInfo(nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive);  ReadStreamsInfo(nid,  archive);	  readStreamsInfo(header,    archive);    ReadStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
507	[BUG]  [BUGGY]  readBlockInfo(header,  archive);  ReadStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readBlockInfo(header,  archive);  ReadStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readBlockInfo(header,  archive);  ReadStreamsInfo(header,  archive);	  readStreamsInfo(header,    archive);    ReadStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
508	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ReadStreamsInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ReadStreamsInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive);  ReadStreamsInfo(header,  archive.folders);	  readStreamsInfo(header,    archive);    ReadStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
509	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    nid    =    header.readUnsignedByte();    	compilable	  [FE]  EOFException  	8	12	replace
510	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  [FE]  EOFException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    nid    =    header.readUnsignedByte();    	compilable	  [FE]  EOFException  	8	12	replace
511	[BUG]  [BUGGY]  readUnpackInfo(header,  null,  nid,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  null,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  null,  nid,  archive);	  readUnpackInfo(header,    null,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	71	None	replace
512	[BUG]  [BUGGY]  readUnpackInfo(header,  null,  nid,  archive.folders);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  null,  nid,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  null,  nid,  archive.folders);	  readUnpackInfo(header,    null,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	71	None	replace
513	[BUG]  [BUGGY]  readUnpackInfo(header,  null,  fileName,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  null,  fileName,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  null,  fileName,  archive);	  readUnpackInfo(header,    null,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	71	None	replace
514	[BUG]  [BUGGY]  readUnpackInfo(header,  null,  NID.kUnpackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  null,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  null,  NID.kUnpackInfo);	  readUnpackInfo(header,    null,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	71	None	replace
515	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(8);  [CE]  incompatible  types  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(8);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  Folder>(8);	  archive.folders    =    new    ArrayList    <    Folder>();    	non-compiled	[CE]  incompatible  types	75	None	replace
516	[BUG]  [BUGGY]  ReadFolderInfo(header,  archives.folders);  [CE]  cannot  find  symbol  archives  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadFolderInfo(header,  archives.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadFolderInfo(header,  archives.folders);	  ReadFolderInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  archives	13	None	replace
517	[BUG]  [BUGGY]  readUnpackInfo(file,  nid,  NID.bytes);  [CE]  cannot  find  symbol  bytes  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(file,  nid,  NID.bytes);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(file,  nid,  NID.bytes);	  readUnpackInfo(file,    nid);    	non-compiled	[CE]  cannot  find  symbol  bytes	95	None	replace
518	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(fileName);  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(fileName);	  readPackInfo(header,    archive);    ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  ';'  expected	36	None	replace
519	[BUG]  [BUGGY]  int  nid  =  NID.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  int  nid  =  NID.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	int  nid  =  NID.readUnsignedByte();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	74	None	replace
520	[BUG]  [BUGGY]  ReadPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(nid);  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(nid);	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
521	[BUG]  [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(fileName);  [CE]  no  suitable  constructor  found  for  ArrayList(String)  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(fileName);	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String)	68	None	replace
522	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(0);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(0);	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>(length);    	compilable	  [FE]  IOException  	68	12	replace
523	[BUG]  [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(0);  [FE]  IOException  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(0);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(0);	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>(length);    	compilable	  [FE]  IOException  	68	12	replace
524	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);	  	non-compiled	[CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	84	None	add
525	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(header);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(header);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(header);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);	  	non-compiled	[CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	84	None	add
526	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(NID);  [CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(NID);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(NID);	  	non-compiled	[CE]  variable  folderers  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	84	None	add
527	[BUG]  [BUGGY]  readPackInfo(header,  archive);  nid  =  reader.readUnsignedByte();  [CE]  cannot  find  symbol  reader  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  nid  =  reader.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  nid  =  reader.readUnsignedByte();	  readPackInfo(header,    archive);    reader.readPackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	33	None	replace
528	[BUG]  [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(deferredBlockStreams);  [CE]  variable  deferredBlockStreams  might  not  have  been  initialized  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(deferredBlockStreams);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>(length);    	non-compiled	[CE]  variable  deferredBlockStreams  might  not  have  been  initialized	59	None	replace
529	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  2);  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  2);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  Folder>(nid  +  2);	          archive.folders    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  incompatible  types	22	None	replace
530	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  3);  [CE]  incompatible  types  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  3);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  Folder>(nid  +  3);	          archive.folders    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  incompatible  types	22	None	replace
531	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  6);  [CE]  incompatible  types  [FE]                          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  6);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  Folder>(nid  +  6);	          archive.folders    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  incompatible  types	22	None	replace
532	[BUG]  [BUGGY]  readUnpackInfo(file,  nid,  NID.kUnpackInfo,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(file,  nid,  NID.kUnpackInfo,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(file,  nid,  NID.kUnpackInfo,  archive);	  readUnpackInfo(file,    nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
533	[BUG]  [BUGGY]  readUnpackInfo(header,  nid,  file);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  nid,  file);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  nid,  file);	  readUnpackInfo(file,    nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
534	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	compilable	  [FE]  IOException  	1	12	add
535	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	compilable	  [FE]  IOException  	1	12	add
536	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();	  	compilable	  [FE]  IOException  	1	12	add
537	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();	  	compilable	  [FE]  IOException  	1	12	add
538	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  Lists	1	None	add
539	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(length);  [CE]  cannot  find  symbol  length  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(length);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(length);	  	non-compiled	[CE]  cannot  find  symbol  length	1	None	add
540	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);	  	compilable	  [FE]  IOException  	9	12	add
541	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);	  	compilable	  [FE]  IOException  	9	12	add
542	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  ReadStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  ReadStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    ReadStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
543	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  String>(fileName);  [CE]  no  suitable  constructor  found  for  ArrayList(String)  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  String>(fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  String>(fileName);	          archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String)	19	None	replace
544	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  String>(8);  [CE]  incompatible  types  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  String>(8);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  String>(8);	          archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  incompatible  types	19	None	replace
545	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  String>(4);  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  String>(4);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  String>(4);	          archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  incompatible  types	19	None	replace
546	[BUG]  [BUGGY]  readFolderInfo(header,  archive.files);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(header,  archive.files);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  archive.files);	  readFolderInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
547	[BUG]  [BUGGY]  readBlockInfo(header,  archive,  nid);  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readBlockInfo(header,  archive,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readBlockInfo(header,  archive,  nid);	  readBlockInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
548	[BUG]  [BUGGY]  readBlockInfo(header,  archive,  NID.kUnpackInfo);  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readBlockInfo(header,  archive,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readBlockInfo(header,  archive,  NID.kUnpackInfo);	  readBlockInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
549	[BUG]  [BUGGY]  ReadPackInfo(header,  archive);  InputStream  inputStreamStack  =  inputStreamStack.peek();  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive);  InputStream  inputStreamStack  =  inputStreamStack.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(header,  archive);  InputStream  inputStreamStack  =  inputStreamStack.peek();	  readPackInfo(header,    archive);    InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
550	[BUG]  [BUGGY]  readPackInfo(header,  archive);  InputStream  inStreamStack  =  inputStreamStack.peek();  [CE]  cannot  find  symbol  inputStreamStack  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  InputStream  inStreamStack  =  inputStreamStack.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  InputStream  inStreamStack  =  inputStreamStack.peek();	  readPackInfo(header,    archive);    InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	67	None	replace
551	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	65	None	add
552	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStack(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStack(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    InputStream  inputStreamStack  =  getInputStreamStack(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	65	None	add
553	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	65	None	add
554	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStack();  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStack();  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    InputStream  inputStreamStack  =  getInputStreamStack();  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	65	None	add
555	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  [CE]  cannot  find  symbol  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    InputStream  inputStreamStack  =  inputStreamStack.peek();	  	non-compiled	[CE]  cannot  find  symbol	65	None	add
556	[BUG]  [BUGGY]  readUnpackInfo(inputStreamStack,  header,  fileName,  archive);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(inputStreamStack,  header,  fileName,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(inputStreamStack,  header,  fileName,  archive);	  readUnpackInfo(header,    fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	72	None	replace
557	[BUG]  [BUGGY]  ReadUnpackInfo(header,  archive,  fileName);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadUnpackInfo(header,  archive,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadUnpackInfo(header,  archive,  fileName);	  readUnpackInfo(header,    fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
558	[BUG]  [BUGGY]  readUnpackInfo(header,  NID.kUnpackInfo,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  NID.kUnpackInfo,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  NID.kUnpackInfo,  nid);	  readUnpackInfo(nid,    NID.kUnpackInfo,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	40	None	replace
559	[BUG]  [BUGGY]  readUnpackInfo(file,  NID.kUnpackInfo,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(file,  NID.kUnpackInfo,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(file,  NID.kUnpackInfo,  archive);	  readUnpackInfo(nid,    NID.kUnpackInfo,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	40	None	replace
560	[BUG]  [BUGGY]  readFoldersInfo(header,  archive,  nid);  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFoldersInfo(header,  archive,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFoldersInfo(header,  archive,  nid);	  readFoldersInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
561	[BUG]  [BUGGY]  readFoldersInfo(header,  archive,  NID.kUnpackInfo);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFoldersInfo(header,  archive,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFoldersInfo(header,  archive,  NID.kUnpackInfo);	  readFoldersInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
562	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    InputStream  inputStreamStack  =  inputStreamStack.peek();  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  cannot  find  symbol	86	None	add
563	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  cannot  find  symbol	86	None	add
564	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  cannot  find  symbol  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  cannot  find  symbol	86	None	add
565	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  getInputStreamStack(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  cannot  find  symbol  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  getInputStreamStack(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    InputStream  inputStreamStack  =  getInputStreamStack(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  cannot  find  symbol	86	None	add
566	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  [CE]  cannot  find  symbol  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    InputStream  inputStreamStack  =  inputStreamStack.peek();	  	non-compiled	[CE]  cannot  find  symbol	86	None	add
567	[BUG]  [BUGGY]  readFolders(header,  archive,  nid);  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolders(header,  archive,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolders(header,  archive,  nid);	  readFolders(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
568	[BUG]  [BUGGY]  readFolders(file,  header);  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolders(file,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolders(file,  header);	  readFolders(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
569	[BUG]  [BUGGY]  readPackInfo(header,  archive);  byte[]  nextHeader  =  currentFolderInputStream.get(nid);  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  byte[]  nextHeader  =  currentFolderInputStream.get(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  byte[]  nextHeader  =  currentFolderInputStream.get(nid);	  readPackInfo(header,    archive);    byte[]    nextHeader    =    inputStreamStack.get(nid);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
570	[BUG]  [BUGGY]  readPackInfo(header,  archive);  byte[]  nextHeader  =  file.get(nid);  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  byte[]  nextHeader  =  file.get(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  byte[]  nextHeader  =  file.get(nid);	  readPackInfo(header,    archive);    byte[]    nextHeader    =    inputStreamStack.get(nid);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
571	[BUG]  [BUGGY]  readPackInfo(header,  archive);  byte[]  nextHeader  =  archive.readStreams(nid);  [CE]  cannot  find  symbol  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  byte[]  nextHeader  =  archive.readStreams(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  byte[]  nextHeader  =  archive.readStreams(nid);	  readPackInfo(header,    archive);    byte[]    nextHeader    =    inputStreamStack.get(nid);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
572	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders,  header);  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders,  header);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(archive.folders);    	non-compiled	[CE]  ';'  expected	21	None	replace
573	[BUG]  [BUGGY]  ReadPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
574	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readUnpackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    	compilable	  [FE]  NoClassDefFoundError  	66	12	replace
575	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [FE]  NoClassDefFoundError  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    	compilable	  [FE]  NoClassDefFoundError  	66	12	replace
576	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  NID.folders,  nid,  NID.kUnpackInfo);  [CE]  cannot  find  symbol  folders  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  NID.folders,  nid,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  NID.folders,  nid,  NID.kUnpackInfo);	  readUnpackInfo(header,    archive,    nid,    NID.kUnpackInfo);    	non-compiled	[CE]  cannot  find  symbol  folders	23	None	replace
577	[BUG]  [BUGGY]  readFolderInfo(header,  archive,  SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(header,  archive,  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  archive,  SIGNATURE_HEADER_SIZE);	  readFolderInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
578	[BUG]  [BUGGY]  readPathInfo(header,  archive);  ReadPackInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPathInfo(header,  archive);  ReadPackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPathInfo(header,  archive);  ReadPackInfo(header,  archive);	  readPackInfo(header,    archive);    ReadPackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
579	[BUG]  [BUGGY]  readPackInfo(header,  archive);  ReadPackInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  ReadPackInfo(header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  ReadPackInfo(header,  archive.folders);	  readPackInfo(header,    archive);    ReadPackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
580	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  7ZSignature);  [CE]  ')'  expected  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  7ZSignature);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  7ZSignature);	  readUnpackInfo(header,    archive.folders,    signature);    	non-compiled	[CE]  ')'  expected	47	None	replace
581	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readPackInfo(header,        archive);        readPackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	compilable	  [FE]  IOException  	30	12	add
582	[BUG]  [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        readPackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	compilable	  [FE]  IOException  	30	12	add
583	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readPackInfo(header,        archive);        readPackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	compilable	  [FE]  IOException  	30	12	add
584	[BUG]  [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        readPackInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	compilable	  [FE]  IOException  	30	12	add
585	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readPackInfo(header,        archive);        readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  	compilable	  [FE]  IOException  	30	12	add
586	[BUG]  [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  	compilable	  [FE]  IOException  	30	12	add
587	[BUG]  [BUGGY]  readUnpackInfo(header,  nid,  fileName);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  nid,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  nid,  fileName);	  readUnpackInfo(fileName,    nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	93	None	replace
588	[BUG]  [BUGGY]  Integer  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  Integer  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	Integer  deferredBlockStreams  =  Lists.newArrayList();	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	58	None	replace
589	[BUG]  [BUGGY]  ReadPackInfo(header,  archive);  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>();  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive);  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(header,  archive);  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>();	  readPackInfo(header,    archive);    ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  ';'  expected	34	None	replace
590	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(0);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte(0);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  header.readUnsignedByte(0);	          nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	15	None	replace
591	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEAFDER_SIZE);  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEAFDER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEAFDER_SIZE);	  readUnpackInfo(header,    archive,    nid,    NID);    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	25	None	replace
592	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  UID);  [CE]  cannot  find  symbol  UID  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  UID);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  UID);	  readUnpackInfo(header,    archive,    nid,    NID);    	non-compiled	[CE]  cannot  find  symbol  UID	25	None	replace
593	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  WARNING);  [CE]  cannot  find  symbol  WARNING  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  WARNING);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  WARNING);	  readUnpackInfo(header,    archive,    nid,    NID);    	non-compiled	[CE]  cannot  find  symbol  WARNING	25	None	replace
594	[BUG]  [BUGGY]  readUnpackInfo(header,  null,  header.folders);  [CE]  cannot  find  symbol  folders  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  null,  header.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  null,  header.folders);	  readUnpackInfo(nid,    header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  folders	49	None	replace
595	[BUG]  [BUGGY]  readUnpackInfo(header,  node,  header.folders);  [CE]  cannot  find  symbol  node  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  node,  header.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  node,  header.folders);	  readUnpackInfo(nid,    header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  node	49	None	replace
596	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  NID.folders,  nid,  NID.kPackInfo);  [CE]  cannot  find  symbol  folders  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  NID.folders,  nid,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  NID.folders,  nid,  NID.kPackInfo);	  readUnpackInfo(header,    archive,    nid,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  folders	26	None	replace
597	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  file.peek();  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  InputStream  inputStreamStack  =  file.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	InputStream  inputStreamStack  =  file.peek();	          InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
598	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  inputStreams.peek();  [CE]  cannot  find  symbol  inputStreams  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  InputStream  inputStreamStack  =  inputStreams.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	InputStream  inputStreamStack  =  inputStreams.peek();	          InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  cannot  find  symbol  inputStreams	79	None	replace
599	[BUG]  [BUGGY]  readPackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(inputStreamStack);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(inputStreamStack);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(inputStreamStack);	  readPackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack(header);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
600	[BUG]  [BUGGY]  readPackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);	  readPackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack(header);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
601	[BUG]  [BUGGY]  ReadPackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(inputStreamStack);  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(inputStreamStack);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(inputStreamStack);	  readPackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack(header);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
602	[BUG]  [BUGGY]  readPackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(nid);  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(nid);	  readPackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack(header);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
603	[BUG]  [BUGGY]  ReadPackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);  [CE]  cannot  find  symbol  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);	  readPackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack(header);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
604	[BUG]  [BUGGY]  byte[]  nextHeaderSize  =  header.readUnsignedByte();  [CE]  incompatible  types  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  byte[]  nextHeaderSize  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	byte[]  nextHeaderSize  =  header.readUnsignedByte();	  readPackInfo(header,    archive);    byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  incompatible  types	35	None	replace
605	[BUG]  [BUGGY]  ReadPackInfo(header,  archive);  byte[]  nextHeaderSize  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive);  byte[]  nextHeaderSize  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(header,  archive);  byte[]  nextHeaderSize  =  header.readUnsignedByte();	  readPackInfo(header,    archive);    byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
606	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[6];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[6];	  nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	91	12	replace
607	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[6];  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[6];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[6];	  nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	91	12	replace
608	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[4];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[4];	  nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	91	12	replace
609	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[4];  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[4];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[4];	  nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	91	12	replace
610	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  System.arraycopy(deferredBlockStreams,  0,  deferredBlockStreams,  0,  nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  System.arraycopy(deferredBlockStreams,  0,  deferredBlockStreams,  0,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  System.arraycopy(deferredBlockStreams,  0,  deferredBlockStreams,  0,  nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	56	None	add
611	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  System.arraycopy(deferredBlockStreams,  0,  deferredBlockStreams,  0,  archive.folders.length);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  System.arraycopy(deferredBlockStreams,  0,  deferredBlockStreams,  0,  archive.folders.length);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  System.arraycopy(deferredBlockStreams,  0,  deferredBlockStreams,  0,  archive.folders.length);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	56	None	add
612	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  InputStream  inputStreamStack  =  new  ArrayList  <  DataInput>();  [CE]  incompatible  types  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  InputStream  inputStreamStack  =  new  ArrayList  <  DataInput>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    InputStream  inputStreamStack  =  new  ArrayList  <  DataInput>();	  	non-compiled	[CE]  incompatible  types	56	None	add
613	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  System.arraycopy(deferredBlockStreams,  0,  deferredBlockStreams,  1,  nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  System.arraycopy(deferredBlockStreams,  0,  deferredBlockStreams,  1,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  System.arraycopy(deferredBlockStreams,  0,  deferredBlockStreams,  1,  nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	56	None	add
614	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  fileName,  false);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  fileName,  false);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  fileName,  false);	  readUnpackInfo(header,    archive.folders,    false);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	50	None	replace
615	[BUG]  [BUGGY]  readFolderInfo(currentFolder,  archive);  [CE]  cannot  find  symbol  currentFolder  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(currentFolder,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(currentFolder,  archive);	  readFolderInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	12	None	replace
616	[BUG]  [BUGGY]  readFolderInfo(nid,  NID.folders);  [CE]  cannot  find  symbol  folders  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(nid,  NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(nid,  NID.folders);	  readFolderInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  folders	12	None	replace
617	[BUG]  [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>(file.length);  [CE]  cannot  find  symbol  length  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>(file.length);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(file,    archive);    ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>(file.length);	  	non-compiled	[CE]  cannot  find  symbol  length	80	None	add
618	[BUG]  [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>(file,  archive);  [CE]  no  suitable  constructor  found  for  ArrayList(ArrayList<RandomAccessFile>,Archive)  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>(file,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(file,    archive);    ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>(file,  archive);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(ArrayList<RandomAccessFile>,Archive)	80	None	add
619	[BUG]  [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>(file);  [CE]  variable  file  might  not  have  been  initialized  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>(file);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(file,    archive);    ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>(file);	  	non-compiled	[CE]  variable  file  might  not  have  been  initialized	80	None	add
620	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readPackInfo(file,    archive);    ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>();	  	compilable	  [FE]  EOFException  	80	12	add
621	[BUG]  [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>();  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(file,    archive);    ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>();	  	compilable	  [FE]  EOFException  	80	12	add
622	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  String>  file  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readPackInfo(file,    archive);    ArrayList  <  String>  file  =  new  ArrayList  <  String>();	  	compilable	  [FE]  EOFException  	80	12	add
623	[BUG]  [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  String>  file  =  new  ArrayList  <  String>();  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  String>  file  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(file,    archive);    ArrayList  <  String>  file  =  new  ArrayList  <  String>();	  	compilable	  [FE]  EOFException  	80	12	add
624	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.symbol);  [CE]  cannot  find  symbol  symbol  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.symbol);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.symbol);	  readUnpackInfo(header,    archive,    nid,    NID.z);    	non-compiled	[CE]  cannot  find  symbol  symbol	96	None	replace
625	[BUG]  [BUGGY]          nid  =  header.readUnsignedByte();  InputStream  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  InputStream  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	                nid    =    header.readUnsignedByte();    InputStream  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	14	None	add
626	[BUG]  [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.ReadUnsignedByte();  [CE]  cannot  find  symbol  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  nid  =  header.ReadUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	                nid    =    header.readUnsignedByte();    nid  =  header.ReadUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
627	[BUG]  [BUGGY]  ReadPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  cannot  find  symbol  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  readPackInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
628	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readUnpackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  readPackInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    	compilable	  [FE]  NoClassDefFoundError  	102	12	replace
629	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [FE]  NoClassDefFoundError  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  readPackInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    	compilable	  [FE]  NoClassDefFoundError  	102	12	replace
630	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  WARNING_SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  WARNING_SIGNATURE_HEADER_SIZE  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  WARNING_SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  WARNING_SIGNATURE_HEADER_SIZE);	  readUnpackInfo(header,    archive,    nid,    nid);    	non-compiled	[CE]  cannot  find  symbol  WARNING_SIGNATURE_HEADER_SIZE	29	None	replace
631	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kUnpack);  [CE]  cannot  find  symbol  kUnpack  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kUnpack);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.kUnpack);	  readUnpackInfo(header,    archive,    nid,    nid);    	non-compiled	[CE]  cannot  find  symbol  kUnpack	29	None	replace
632	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    header.readUnsignedByte();    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);	  	compilable	  [FE]  IOException  	7	12	add
633	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    header.readUnsignedByte();    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);	  	compilable	  [FE]  IOException  	7	12	add
634	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  ReadStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  ReadStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    header.readUnsignedByte();    ReadStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
635	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  reader.readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  reader  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  reader.readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    header.readUnsignedByte();    reader.readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol  reader	7	None	add
636	[BUG]  [BUGGY]  readUnpackInfo(header,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  nid);	  readUnpackInfo(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	41	None	replace
637	[BUG]  [BUGGY]  readUnpackInfo(fileName,  NID.kUnpackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(fileName,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(fileName,  NID.kUnpackInfo);	  readUnpackInfo(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	41	None	replace
638	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders);  ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive.folders);  ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive.folders);  ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList();	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	60	None	replace
639	[BUG]  [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newLinkedList();  [CE]  cannot  find  symbol  Lists  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newLinkedList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newLinkedList();	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	60	None	replace
640	[BUG]  [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	60	None	replace
641	[BUG]  [BUGGY]  readFolderInfo(file,  header);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(file,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(file,  header);	  readFolderInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
642	[BUG]  [BUGGY]  readFolderInfo(file,  header,  archive);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(file,  header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(file,  header,  archive);	  readFolderInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
643	[BUG]  [BUGGY]  readFolderInfo(file,  nid,  archive);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(file,  nid,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(file,  nid,  archive);	  readFolderInfo(file,    archive);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
644	[BUG]  [BUGGY]  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(fileName);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(fileName);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    header    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	99	None	replace
645	[BUG]  [BUGGY]  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(NID.folders);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(NID.folders);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    header    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	99	None	replace
646	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
647	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  inputStreamStack.get(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  inputStreamStack.get(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    InputStream  inputStreamStack  =  inputStreamStack.get(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
648	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.inputStreamStack.push(deferredBlockStreams);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.inputStreamStack.push(deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  this.inputStreamStack.push(deferredBlockStreams);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	54	None	add
649	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  [CE]  cannot  find  symbol  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    InputStream  inputStreamStack  =  inputStreamStack.peek();	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
650	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.inputFolders);  [CE]  cannot  find  symbol  inputFolders  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.inputFolders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.inputFolders);	  readUnpackInfo(header,    archive,    nid,    NID.folders);    	non-compiled	[CE]  cannot  find  symbol  inputFolders	76	None	replace
651	[BUG]  [BUGGY]  readUnpackInfo(header,  node,  archive);  [CE]  cannot  find  symbol  node  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  node,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  node,  archive);	  readUnpackInfo(nid,    header,    archive);    	non-compiled	[CE]  cannot  find  symbol  node	42	None	replace
652	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[nid];  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  int  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[nid];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	int  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[nid];	  int    nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	89	None	replace
653	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  byte  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	byte  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];	  int    nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	89	None	replace
654	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[nid];  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[nid];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	Integer  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[nid];	  int    nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	89	None	replace
655	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  cannot  find  symbol  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  cannot  find  symbol	101	None	add
656	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  cannot  find  symbol  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    InputStream  inputStreamStack  =  inputStreamStack.peek();  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  cannot  find  symbol	101	None	add
657	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  getInputStreamStack(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  cannot  find  symbol  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  getInputStreamStack(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    InputStream  inputStreamStack  =  getInputStreamStack(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  cannot  find  symbol	101	None	add
658	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  [CE]  cannot  find  symbol  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  inputStreamStack.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    InputStream  inputStreamStack  =  inputStreamStack.peek();	  	non-compiled	[CE]  cannot  find  symbol	101	None	add
659	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  null,  NID.kUnpackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  null,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  null,  NID.kUnpackInfo);	  readUnpackInfo(header,    archive.folders,    null);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	48	None	replace
660	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);	  readStreamsInfo(header,    archive);    reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
661	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  reader.readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  reader.readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  reader.readStreamsInfo(header,  archive);	  readStreamsInfo(header,    archive);    reader.readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
662	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo,  NID.kUnpackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo,  NID.kUnpackInfo);	  readUnpackInfo(header,    archive,    nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
663	[BUG]  [BUGGY]  readPackInfo(header,  archive);  byte[]  nextHeader  =  archive.inputStreamStack.get(nid);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  byte[]  nextHeader  =  archive.inputStreamStack.get(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  byte[]  nextHeader  =  archive.inputStreamStack.get(nid);	  readPackInfo(header,    archive);    byte[]    nextHeader    =    inputStreamStack.get(nid);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	69	None	replace
664	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo();  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  NID.kUnpackInfo();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  NID.kUnpackInfo();	  readPackInfo(header,    archive);    readPackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
665	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  NID.kUnpackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  NID.kUnpackInfo(header,  archive);	  readPackInfo(header,    archive);    readPackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
666	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
667	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  nid  =  NID.kPackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,  archive);  nid  =  NID.kPackInfo;	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    	compilable	  [FE]  IOException  	10	12	replace
668	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  nid  =  NID.kPackInfo;  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  nid  =  NID.kPackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive);  nid  =  NID.kPackInfo;	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    	compilable	  [FE]  IOException  	10	12	replace
669	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo  +  1;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo  +  1;	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    	compilable	  [FE]  IOException  	10	12	replace
670	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo  +  1;  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo  +  1;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo  +  1;	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    	compilable	  [FE]  IOException  	10	12	replace
671	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[NID.folders];  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  int  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[NID.folders];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	int  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[NID.folders];	  int    nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	89	None	replace
672	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  int  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	101	None	add
673	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  int  nid  =  header.readUnsignedByte();  archive.folders  =  new  ArrayList  <  Folder>();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  int  nid  =  header.readUnsignedByte();  archive.folders  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    int  nid  =  header.readUnsignedByte();  archive.folders  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	101	None	add
674	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.zip);  [CE]  cannot  find  symbol  zip  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.zip);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.zip);	  readUnpackInfo(header,    archive,    nid,    NID.z);    	non-compiled	[CE]  cannot  find  symbol  zip	96	None	replace
675	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  readPackInfo(header,  archive);  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readPackInfo(header,        archive);        readPackInfo(header,    archive);    readPackInfo(header,  archive);  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();	  	compilable	  [FE]  IOException  	30	12	add
676	[BUG]  [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  readPackInfo(header,  archive);  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  readPackInfo(header,  archive);  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        readPackInfo(header,    archive);    readPackInfo(header,  archive);  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();	  	compilable	  [FE]  IOException  	30	12	add
677	[BUG]  [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  readPackInfo(header,  archive);  readPackInfo(header,  archive).folders  =  new  ArrayList  <  Folder>();  [CE]  void  cannot  be  dereferenced  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  readPackInfo(header,  archive);  readPackInfo(header,  archive).folders  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        readPackInfo(header,    archive);    readPackInfo(header,  archive);  readPackInfo(header,  archive).folders  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  void  cannot  be  dereferenced	30	None	add
678	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  readPackInfo(header,  archive);  readPackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readPackInfo(header,        archive);        readPackInfo(header,    archive);    readPackInfo(header,  archive);  readPackInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  	compilable	  [FE]  IOException  	30	12	add
679	[BUG]  [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  readPackInfo(header,  archive);  readPackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    readPackInfo(header,  archive);  readPackInfo(header,  archive);  readPackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        readPackInfo(header,    archive);    readPackInfo(header,  archive);  readPackInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  	compilable	  [FE]  IOException  	30	12	add
680	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(file.folders);  [CE]  cannot  find  symbol  folders  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(file.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(file.folders);	  readStreamsInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  cannot  find  symbol  folders	83	None	replace
681	[BUG]  [BUGGY]  readFolders(fileName,  archive);  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolders(fileName,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolders(fileName,  archive);	  readFolders(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
682	[BUG]  [BUGGY]  ReadFolderInfo(file,  header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadFolderInfo(file,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadFolderInfo(file,  header,  archive.folders);	  ReadFolderInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
683	[BUG]  [BUGGY]  ReadFolderInfo(new  FileInputStream(file,  header,  archive.folders));  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadFolderInfo(new  FileInputStream(file,  header,  archive.folders));  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadFolderInfo(new  FileInputStream(file,  header,  archive.folders));	  ReadFolderInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
684	[BUG]  [BUGGY]  ReadFolderInfo(fileName,  header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadFolderInfo(fileName,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadFolderInfo(fileName,  header,  archive.folders);	  ReadFolderInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
685	[BUG]  [BUGGY]  ReadFolderInfo(new  FileInputStream(file,  nid),  archive.folders);  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadFolderInfo(new  FileInputStream(file,  nid),  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadFolderInfo(new  FileInputStream(file,  nid),  archive.folders);	  ReadFolderInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
686	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.deferredBlockInfo);  [CE]  cannot  find  symbol  deferredBlockInfo  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.deferredBlockInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.deferredBlockInfo);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol  deferredBlockInfo	55	None	replace
687	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	55	12	replace
688	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	55	12	replace
689	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  int  nid  =  header.readUnsignedByte();  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  int  nid  =  header.readUnsignedByte();  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    int  nid  =  header.readUnsignedByte();  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	65	None	add
690	[BUG]  [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  int  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,        archive);        ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	65	None	add
691	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  NID.kUnpackInfo,  null);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  NID.kUnpackInfo,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  NID.kUnpackInfo,  null);	  readUnpackInfo(header,    archive.folders,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
692	[BUG]  [BUGGY]  readFolderInfo(file,  header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(file,  header,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(file,  header,  archive.folders);	  readFolderInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
693	[BUG]  [BUGGY]  readFolderInfo(header,  archives.folders);  [CE]  cannot  find  symbol  archives  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(header,  archives.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  archives.folders);	  readFolderInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  archives	11	None	replace
694	[BUG]  [BUGGY]  ReadPackInfo  header  =  readPackInfo(header,  archive);  byte[]  nextHeader  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo  header  =  readPackInfo(header,  archive);  byte[]  nextHeader  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo  header  =  readPackInfo(header,  archive);  byte[]  nextHeader  =  header.readUnsignedByte();	  readPackInfo(header,    archive);    byte[]    nextHeader    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
695	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	Integer  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);	  readStreamsInfo(header,    archive);    int    nid    =    header.readUnsignedByte();    readStreamsInfo(header,    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	6	None	replace
696	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[NID.folders];  [CE]  cannot  find  symbol  folders  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[NID.folders];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[NID.folders];	  nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	non-compiled	[CE]  cannot  find  symbol  folders	91	None	replace
697	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[nid];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[nid];	  nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	91	12	replace
698	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[nid];  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[nid];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[nid];	  nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	91	12	replace
699	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  Folder[nid];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	archive.folders  =  new  Folder[nid];	  nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	91	12	replace
700	[BUG]  [BUGGY]  archive.folders  =  new  Folder[nid];  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  Folder[nid];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  Folder[nid];	  nid    =    header.readUnsignedByte();    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	91	12	replace
701	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
702	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive).folders  =  new  ArrayList  <  Folder>();  [CE]  void  cannot  be  dereferenced  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive).folders  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive).folders  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  void  cannot  be  dereferenced	1	None	add
703	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  NID>  headerSize  =  new  ArrayList  <  NID>(inputStreamStack.size());  [CE]  cannot  find  symbol  inputStreamStack  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  NID>  headerSize  =  new  ArrayList  <  NID>(inputStreamStack.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  NID>  headerSize  =  new  ArrayList  <  NID>(inputStreamStack.size());	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	1	None	add
704	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  NID>  headerSize  =  new  ArrayList  <  NID>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  NID>  headerSize  =  new  ArrayList  <  NID>();	  	compilable	  [FE]  IOException  	1	12	add
705	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  NID>  headerSize  =  new  ArrayList  <  NID>();  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  ArrayList  <  NID>  headerSize  =  new  ArrayList  <  NID>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    ArrayList  <  NID>  headerSize  =  new  ArrayList  <  NID>();	  	compilable	  [FE]  IOException  	1	12	add
706	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive).folders  =  new  Folder[0];  [CE]  void  cannot  be  dereferenced  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive).folders  =  new  Folder[0];  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive).folders  =  new  Folder[0];	  	non-compiled	[CE]  void  cannot  be  dereferenced	1	None	add
707	[BUG]  [BUGGY]  readFolderInfo(header,  archive,  nid,  NID.readUnsignedByte());  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFolderInfo(header,  archive,  nid,  NID.readUnsignedByte());  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  archive,  nid,  NID.readUnsignedByte());	  readFolderInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
708	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(NID.folders);  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(NID.folders);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  ';'  expected	18	None	replace
709	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid  *  SIGNATURE_HEADER_SIZE);  [CE]  ';'  expected  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid  *  SIGNATURE_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid  *  SIGNATURE_HEADER_SIZE);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  ';'  expected	18	None	replace
710	[BUG]  [BUGGY]  readPackInfo(fileName,  NID.folders);  [CE]  cannot  find  symbol  folders  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(fileName,  NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(fileName,  NID.folders);	  readPackInfo(fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  folders	82	None	replace
711	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readSubStreamsInfo(header,    archive);    nid  =  header.readUnsignedByte();	  	compilable	  [FE]  NullPointerException  	51	12	add
712	[BUG]  [BUGGY]  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readSubStreamsInfo(header,    archive);    nid  =  header.readUnsignedByte();	  	compilable	  [FE]  NullPointerException  	51	12	add
713	[BUG]  [BUGGY]  readSubStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(length);  [CE]  cannot  find  symbol  length  [FE]      NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(length);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readSubStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(length);	  	non-compiled	[CE]  cannot  find  symbol  length	51	None	add
714	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readSubStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);	  	compilable	  [FE]  NullPointerException  	51	12	add
715	[BUG]  [BUGGY]  readSubStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readSubStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);	  	compilable	  [FE]  NullPointerException  	51	12	add
716	[BUG]  [BUGGY]  readSubStreamsInfo(header,  archive);  ArrayList  <  Folder>  folders  =  new  ArrayList  <  Folder>(length);  [CE]  cannot  find  symbol  length  [FE]          NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  ArrayList  <  Folder>  folders  =  new  ArrayList  <  Folder>(length);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readSubStreamsInfo(header,    archive);    ArrayList  <  Folder>  folders  =  new  ArrayList  <  Folder>(length);	  	non-compiled	[CE]  cannot  find  symbol  length	51	None	add
717	[BUG]  [BUGGY]  readSubStreamsInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(header);  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readSubStreamsInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readSubStreamsInfo(header,    archive);    InputStream  inputStreamStack  =  getInputStreamStack(header);	  	non-compiled	[CE]  cannot  find  symbol	51	None	add
718	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  NID.bytes);  [CE]  cannot  find  symbol  bytes  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  NID.bytes);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  nid,  NID.bytes);	  readUnpackInfo(header,    archive,    nid,    NID.bytes);    	non-compiled	[CE]  cannot  find  symbol  bytes	77	None	replace
719	[BUG]  [BUGGY]          nid  =  header.readUnsignedByte();  Nid  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]          nid  =  header.readUnsignedByte();  Nid  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	                nid    =    header.readUnsignedByte();    Nid  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
720	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  NID.kName);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  NID.kName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  NID.kName);	  readUnpackInfo(header,    archive,    nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	26	None	replace
721	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  NID.kPackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.kPackInfo,  NID.kPackInfo);	  readUnpackInfo(header,    archive,    nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	26	None	replace
722	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  int  nid  =  archive.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	int  nid  =  archive.readUnsignedByte();	  readPackInfo(header,    archive);    int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	64	None	replace
723	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(0]);  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(0]);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(0]);	  readPackInfo(header,    archive);    ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  ';'  expected	36	None	replace
724	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(1]);  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(1]);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(1]);	  readPackInfo(header,    archive);    ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  ';'  expected	36	None	replace
725	[BUG]  [BUGGY]  readUnpackInfo(fileName,  archive,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(fileName,  archive,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(fileName,  archive,  nid);	  readUnpackInfo(header,    archive,    nid,    fileName);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	27	None	replace
726	[BUG]  [BUGGY]  readUnpackInfo(nid,  archive,  header);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(nid,  archive,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  archive,  header);	  readUnpackInfo(nid,    header,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	42	None	replace
727	[BUG]  [BUGGY]  nid  =  header.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedInt();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  header.readUnsignedInt();	          nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
728	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  header.readUnsignedByte(NID.kUnpackInfo);	          nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	15	None	replace
729	[BUG]  [BUGGY]  byte[]  headerSize  =  archive.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  byte[]  headerSize  =  archive.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	byte[]  headerSize  =  archive.readUnsignedByte();	  readPackInfo(header,    archive);    byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
730	[BUG]  [BUGGY]  readFoldersInfo(file,  archive);  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFoldersInfo(file,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFoldersInfo(file,  archive);	  readFoldersInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
731	[BUG]  [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(file.folders);  [CE]  cannot  find  symbol  folders  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(file.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(file.folders);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  cannot  find  symbol  folders	98	None	replace
732	[BUG]  [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.length);  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.length);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.length);	          ArrayList    <    String>    archive.folders    =    new    ArrayList    <    String>(archive.folders);    	non-compiled	[CE]  ';'  expected	21	None	replace
733	[BUG]  [BUGGY]  readUnpackInfo(fileName,  archive.folders,  header);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(fileName,  archive.folders,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(fileName,  archive.folders,  header);	  readUnpackInfo(header,    archive.folders,    fileName);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	78	None	replace
734	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList();	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
735	[BUG]  [BUGGY]  readUnpackInfo(fileName,  nid,  NID.folders);  [CE]  cannot  find  symbol  folders  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(fileName,  nid,  NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(fileName,  nid,  NID.folders);	  readUnpackInfo(fileName,    nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  folders	93	None	replace
736	[BUG]  [BUGGY]  ReadPackInfo(header,  archive.info);  InputStream  inputStreamStack  =  inputStreamStack.peek();  [CE]  cannot  find  symbol  info  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo(header,  archive.info);  InputStream  inputStreamStack  =  inputStreamStack.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo(header,  archive.info);  InputStream  inputStreamStack  =  inputStreamStack.peek();	  readPackInfo(header,    archive);    InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  cannot  find  symbol  info	67	None	replace
737	[BUG]  [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  RandomAccessFile>  file  =  inputStreamStack.values().iterator().next();  [CE]  cannot  find  symbol  inputStreamStack  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  RandomAccessFile>  file  =  inputStreamStack.values().iterator().next();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(file,    archive);    ArrayList  <  RandomAccessFile>  file  =  inputStreamStack.values().iterator().next();	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	80	None	add
738	[BUG]  [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>(length);  [CE]  cannot  find  symbol  length  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>(length);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(file,    archive);    ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>(length);	  	non-compiled	[CE]  cannot  find  symbol  length	80	None	add
739	[BUG]  [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>(inputStreamStack.size());  [CE]  cannot  find  symbol  inputStreamStack  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>(inputStreamStack.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(file,    archive);    ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>(inputStreamStack.size());	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	80	None	add
740	[BUG]  [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>(readPackInfo(file,  archive);  [CE]  ')'  expected  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(file,  archive);  ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>(readPackInfo(file,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(file,    archive);    ArrayList  <  RandomAccessFile>  file  =  new  ArrayList  <  RandomAccessFile>(readPackInfo(file,  archive);	  	non-compiled	[CE]  ')'  expected	80	None	add
741	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  false,  fileName);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  false,  fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  false,  fileName);	  readUnpackInfo(header,    archive.folders,    false);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	50	None	replace
742	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  false,  null);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  false,  null);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  false,  null);	  readUnpackInfo(header,    archive.folders,    false);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	50	None	replace
743	[BUG]  [BUGGY]  readUnpackInfo(inputStreamStack,  nid,  archive.folders);  [CE]  cannot  find  symbol  inputStreamStack  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(inputStreamStack,  nid,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(inputStreamStack,  nid,  archive.folders);	  readUnpackInfo(nid,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	39	None	replace
744	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(2);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(2);	  readStreamsInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    	compilable	  [FE]  IOException  	87	12	replace
745	[BUG]  [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(2);  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(2);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(2);	  readStreamsInfo(header,    archive);    ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    	compilable	  [FE]  IOException  	87	12	replace
746	[BUG]  [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(NID.deferredBlockInfo);  [CE]  cannot  find  symbol  deferredBlockInfo  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(NID.deferredBlockInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(NID.deferredBlockInfo);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>(length);    	non-compiled	[CE]  cannot  find  symbol  deferredBlockInfo	59	None	replace
747	[BUG]  [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(inputStreamStack.size());  [CE]  cannot  find  symbol  inputStreamStack  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(inputStreamStack.size());  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(inputStreamStack.size());	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>(length);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	59	None	replace
748	[BUG]  [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(NID.folders);  [CE]  cannot  find  symbol  folders  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(NID.folders);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>(length);    	non-compiled	[CE]  cannot  find  symbol  folders	59	None	replace
749	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  null,  header);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  null,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  null,  header);	  readUnpackInfo(header,    null,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	71	None	replace
750	[BUG]  [BUGGY]  readUnpackInfo(file,  null,  header);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(file,  null,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(file,  null,  header);	  readUnpackInfo(header,    null,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	71	None	replace
751	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    header.readUnsignedByte();    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	7	None	add
752	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  nid  =  NID.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  nid  =  NID.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    header.readUnsignedByte();    nid  =  NID.readUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
753	[BUG]  [BUGGY]  readUnpackInfo(base,  fileName,  header);  [CE]  cannot  find  symbol  base  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(base,  fileName,  header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(base,  fileName,  header);	  readUnpackInfo(header,    fileName,    archive);    	non-compiled	[CE]  cannot  find  symbol  base	72	None	replace
754	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  int  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	86	None	add
755	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  new  RandomAccessFileInputStream(fileName);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  new  RandomAccessFileInputStream(fileName);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    InputStream  inputStreamStack  =  new  RandomAccessFileInputStream(fileName);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	non-compiled	[CE]  cannot  find  symbol	86	None	add
756	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  getInputStreamStack(header);  [CE]  cannot  find  symbol  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  InputStream  inputStreamStack  =  getInputStreamStack(header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>();    InputStream  inputStreamStack  =  getInputStreamStack(header);	  	non-compiled	[CE]  cannot  find  symbol	86	None	add
757	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  String>(NID.folders);  [CE]  cannot  find  symbol  folders  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  String>(NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  String>(NID.folders);	          archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol  folders	19	None	replace
758	[BUG]  [BUGGY]  ReadPackInfo  header  =  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo  header  =  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo  header  =  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
759	[BUG]  [BUGGY]  Integer  nid  =  readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  Integer  nid  =  readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	Integer  nid  =  readUnsignedByte();	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	66	None	replace
760	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  NID.kUnpackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  NID.kUnpackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  NID.kUnpackInfo);	  readUnpackInfo(nid,    NID.kUnpackInfo,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	40	None	replace
761	[BUG]  [BUGGY]  readBlockInfo(file,  archive);  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readBlockInfo(file,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readBlockInfo(file,  archive);	  readBlockInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
762	[BUG]  [BUGGY]  ReadPackInfo  info  =  readPackInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadPackInfo  info  =  readPackInfo(header,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadPackInfo  info  =  readPackInfo(header,  archive);	  readPackInfo(header,    archive);    reader.readPackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
763	[BUG]  [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(length  +  1);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(length  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(length  +  1);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    header    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	99	None	replace
764	[BUG]  [BUGGY]  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(length  +  1);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(length  +  1);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(length  +  1);	  readPackInfo(header,    archive);    ArrayList    <    Folder>    header    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	99	None	replace
765	[BUG]  [BUGGY]  readUnpackInfo(file,  nid,  header.readUnsignedByte());  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(file,  nid,  header.readUnsignedByte());  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(file,  nid,  header.readUnsignedByte());	  readUnpackInfo(file,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	95	None	replace
766	[BUG]  [BUGGY]  readUnpackInfo(fileName,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(fileName,  nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(fileName,  nid);	  readUnpackInfo(file,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	95	None	replace
767	[BUG]  [BUGGY]  readUnpackInfo(file,  nid,  NID);  [CE]  cannot  find  symbol  NID  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(file,  nid,  NID);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(file,  nid,  NID);	  readUnpackInfo(file,    nid);    	non-compiled	[CE]  cannot  find  symbol  NID	95	None	replace
768	[BUG]  [BUGGY]  readUnpackInfo(file,  nid,  NID.folders);  [CE]  cannot  find  symbol  folders  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(file,  nid,  NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(file,  nid,  NID.folders);	  readUnpackInfo(file,    nid);    	non-compiled	[CE]  cannot  find  symbol  folders	95	None	replace
769	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders);  InputStream  inputStreamStack  =  getInputStreamStack(header);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readPackInfo(header,  archive.folders);  InputStream  inputStreamStack  =  getInputStreamStack(header);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive.folders);  InputStream  inputStreamStack  =  getInputStreamStack(header);	  readPackInfo(header,    archive);    InputStream    inputStreamStack    =    getInputStreamStack(header);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	100	None	replace
770	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();	  readStreamsInfo(header,    archive);    readStreamsInfo(header,    archive);    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
771	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  MISSING_HEADER_SIZE);  [CE]  cannot  find  symbol  MISSING_HEADER_SIZE  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive,  nid,  MISSING_HEADER_SIZE);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  MISSING_HEADER_SIZE);	  readUnpackInfo(header,    archive,    nid,    NID);    	non-compiled	[CE]  cannot  find  symbol  MISSING_HEADER_SIZE	25	None	replace
772	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
773	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  int  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  int  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    int  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	54	None	add
774	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    InputStream  inputStreamStack  =  getInputStreamStack(header);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
775	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStack(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  InputStream  inputStreamStack  =  getInputStreamStack(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    InputStream  inputStreamStack  =  getInputStreamStack(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
776	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  int  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	54	None	add
777	[BUG]  [BUGGY]  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(NID.folders);  [CE]  cannot  find  symbol  folders  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(NID.folders);	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  cannot  find  symbol  folders	68	None	replace
778	[BUG]  [BUGGY]  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(fileName);  [CE]  no  suitable  constructor  found  for  ArrayList(String)  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(fileName);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(fileName);	  readPackInfo(header,    archive);    ArrayList    <    String>    folderers    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String)	68	None	replace
779	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(NID.folders);  [CE]  cannot  find  symbol  folders  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(NID.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  Folder>(NID.folders);	          archive.folders    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  cannot  find  symbol  folders	22	None	replace
780	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  List  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  List  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    List  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();	  	non-compiled	[CE]  cannot  find  symbol	56	None	add
781	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  int  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  int  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    int  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	56	None	add
782	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  int  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	56	None	add
783	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  this.deferredBlockStreams.addAll(deferredBlockStreams);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  this.deferredBlockStreams.addAll(deferredBlockStreams);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  this.deferredBlockStreams.addAll(deferredBlockStreams);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	56	None	add
784	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  new  ArrayList  <  DataInput>();  [CE]  incompatible  types  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  InputStream  inputStreamStack  =  new  ArrayList  <  DataInput>();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	InputStream  inputStreamStack  =  new  ArrayList  <  DataInput>();	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    	non-compiled	[CE]  incompatible  types	57	None	replace
785	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(4);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(4);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    	compilable	  [FE]  IOException  	57	12	replace
786	[BUG]  [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(4);  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(4);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(4);	  readStreamsInfo(header,    archive);    ArrayList    <    DataInput>    deferredBlockStreams    =    new    ArrayList    <    DataInput>();    	compilable	  [FE]  IOException  	57	12	replace
787	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  0);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  nid,  0);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  nid,  0);	  readUnpackInfo(header,    archive.folders,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	28	None	replace
788	[BUG]  [BUGGY]  readUnpackInfo(header,  fileName,  archive.folders);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  fileName,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  fileName,  archive.folders);	  readUnpackInfo(nid,    header,    archive.folders);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
789	[BUG]  [BUGGY]  readUnpackInfo(header,  index,  archive.folders);  [CE]  cannot  find  symbol  index  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  index,  archive.folders);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  index,  archive.folders);	  readUnpackInfo(nid,    header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  index	49	None	replace
790	[BUG]  [BUGGY]  readFileInfo(fileName,  archive);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readFileInfo(fileName,  archive);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFileInfo(fileName,  archive);	  readFileInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
791	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  new  ArrayList  <  Folder>(header);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [CE]  no  suitable  constructor  found  for  ArrayList(DataInput)  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  new  ArrayList  <  Folder>(header);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    new  ArrayList  <  Folder>(header);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(DataInput)	84	None	add
792	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  int  nid  =  header.readUnsignedByte();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	84	None	add
793	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  new  ArrayList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    new  ArrayList  <  Folder>(nid);	  	compilable	  [FE]  IOException  	84	12	add
794	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  new  ArrayList  <  Folder>(nid);  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  new  ArrayList  <  Folder>(nid);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        ArrayList    <    Folder>    folderers    =    new    ArrayList    <    Folder>(nid);    new  ArrayList  <  Folder>(nid);	  	compilable	  [FE]  IOException  	84	12	add
795	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  inputStream.peek();  [CE]  cannot  find  symbol  inputStream  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  InputStream  inputStreamStack  =  inputStream.peek();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	InputStream  inputStreamStack  =  inputStream.peek();	          InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  cannot  find  symbol  inputStream	79	None	replace
796	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackinfo;  [CE]  cannot  find  symbol  kUnpackinfo  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackinfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackinfo;	  	non-compiled	[CE]  cannot  find  symbol  kUnpackinfo	9	None	add
797	[BUG]  [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archives);  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  archives  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archives);  nid  =  NID.kUnpackInfo;  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,        archive);        readStreamsInfo(header,    archive);    nid    =    NID.kUnpackInfo;    readStreamsInfo(header,  archive);  readStreamsInfo(header,  archives);  nid  =  NID.kUnpackInfo;	  	non-compiled	[CE]  cannot  find  symbol  archives	9	None	add
798	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  NID);  [CE]  cannot  find  symbol  NID  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  NID);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  NID);	  readUnpackInfo(header,    archive.folders,    signature);    	non-compiled	[CE]  cannot  find  symbol  NID	47	None	replace
799	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  NID.kPackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  readUnpackInfo(header,  archive.folders,  NID.kPackInfo);  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  NID.kPackInfo);	  readUnpackInfo(header,    archive.folders,    signature);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	47	None	replace
800	[BUG]  [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadStreamsInfo  header  =  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
801	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newLinkedList();  [CE]  cannot  find  symbol  Lists  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newLinkedList();  [BUGGY]      nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newLinkedList();	  readStreamsInfo(header,    archive);    ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	58	None	replace
