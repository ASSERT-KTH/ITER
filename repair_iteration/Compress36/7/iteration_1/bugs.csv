bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  readUnpackInfo(nid,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError  [CONTEXT]  private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  [BUGGY]  readUnpackInfo(nid,  archive);  [BUGGY]  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  archive);	readUnpackInfo(header,  archive);  	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	13	None	replace
2	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]      NoClassDefFoundError  [CONTEXT]  private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  [BUGGY]  readUnpackInfo(header,  archive.folders);  [BUGGY]  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders);	readUnpackInfo(header,  archive);  	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	13	None	replace
3	[BUG]  [BUGGY]  readFolderInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]        NoClassDefFoundError  [CONTEXT]  private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  [BUGGY]  readFolderInfo(header,  archive);  [BUGGY]  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  archive);	readUnpackInfo(header,  archive);  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
4	[BUG]  [BUGGY]  [FE]  IOException  [FE]          NoClassDefFoundError  [CONTEXT]  private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  [BUGGY]    [BUGGY]  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	  	readUnpackInfo(header,  archive);  	compilable	  [FE]  IOException  	13	12	replace
5	[BUG]  [BUGGY]    [FE]  IOException  [FE]          NoClassDefFoundError  [CONTEXT]  private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  [BUGGY]    [BUGGY]  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	  	readUnpackInfo(header,  archive);  	compilable	  [FE]  IOException  	13	12	replace
6	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError  [CONTEXT]  private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  [BUGGY]  readUnpackInfo(header,  archive,  nid);  [BUGGY]  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid);	readUnpackInfo(header,  archive);  	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	13	None	replace
7	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError  [CONTEXT]  private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  [BUGGY]  readPackInfo(header,  archive);  [BUGGY]  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readPackInfo(header,  archive);	readUnpackInfo(header,  archive);  	compilable	  [FE]  IOException  	13	12	replace
8	[BUG]  [BUGGY]  readPackInfo(header,  archive);  [FE]  IOException  [FE]      NoClassDefFoundError  [CONTEXT]  private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  [BUGGY]  readPackInfo(header,  archive);  [BUGGY]  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive);	readUnpackInfo(header,  archive);  	compilable	  [FE]  IOException  	13	12	replace
9	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError  [CONTEXT]  private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  [BUGGY]  readStreamsInfo(header,  archive);  [BUGGY]  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,  archive);	readUnpackInfo(header,  archive);  	compilable	  [FE]  IOException  	13	12	replace
10	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  [FE]  IOException  [FE]    NoClassDefFoundError  [CONTEXT]  private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  [BUGGY]  readStreamsInfo(header,  archive);  [BUGGY]  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive);	readUnpackInfo(header,  archive);  	compilable	  [FE]  IOException  	13	12	replace
