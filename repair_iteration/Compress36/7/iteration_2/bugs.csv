bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);	  	compilable	  [FE]  IOException  	9	12	add
2	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);	  	compilable	  [FE]  IOException  	9	12	add
3	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ReadStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ReadStreamsInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,    archive);    ReadStreamsInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
4	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,    archive);    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	9	None	add
5	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  reader.readStreamsInfo(header,  archive);  [CE]  cannot  find  symbol  reader  [FE]          IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  reader.readStreamsInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,    archive);    reader.readStreamsInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol  reader	9	None	add
6	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,    archive);    int  nid  =  header.readUnsignedByte();  readStreamsInfo(header,  archive);	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	9	None	add
7	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();	  	compilable	  [FE]  IOException  	9	12	add
8	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [FE]  IOException  [FE]              IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();	  	compilable	  [FE]  IOException  	9	12	add
9	[BUG]  [BUGGY]  [FE]  IOException  [FE]                IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  	compilable	  [FE]  IOException  	9	12	add
10	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [FE]  IOException  [FE]                IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,    archive);    readStreamsInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  	compilable	  [FE]  IOException  	9	12	add
11	[BUG]  [BUGGY]  readFolderInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readFolderInfo(header,  archive.folders);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  archive.folders);	  readFolderInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
12	[BUG]  [BUGGY]  readFolderInfo(nid,  archive);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readFolderInfo(nid,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(nid,  archive);	  readFolderInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
13	[BUG]  [BUGGY]  ReadFolderInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  ReadFolderInfo(header,  archive.folders);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	ReadFolderInfo(header,  archive.folders);	  readFolderInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
14	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]      nid  =  header.readUnsignedByte();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	        nid  =  header.readUnsignedByte();	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	4	12	add
15	[BUG]  [BUGGY]      nid  =  header.readUnsignedByte();  [FE]  java.io.IOException:  Expected  kFolder  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]      nid  =  header.readUnsignedByte();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	        nid  =  header.readUnsignedByte();	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	4	12	add
16	[BUG]  [BUGGY]      ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>();  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]      ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	        ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  ';'  expected	4	None	add
17	[BUG]  [BUGGY]      ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(length);  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]      ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(length);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	        ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(length);	  	non-compiled	[CE]  ';'  expected	4	None	add
18	[BUG]  [BUGGY]      ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid);  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]      ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	        ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  ';'  expected	4	None	add
19	[BUG]  [BUGGY]      archive.folders  =  new  ArrayList  <  String>();  [CE]  incompatible  types  [FE]            IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]      archive.folders  =  new  ArrayList  <  String>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	        archive.folders  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  incompatible  types	4	None	add
20	[BUG]  [BUGGY]      nid  =  header.readUnsignedByte();  archive.folders  =  new  ArrayList  <  String>();  [CE]  incompatible  types  [FE]              IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]      nid  =  header.readUnsignedByte();  archive.folders  =  new  ArrayList  <  String>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	        nid  =  header.readUnsignedByte();  archive.folders  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  incompatible  types	4	None	add
21	[BUG]  [BUGGY]      ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders);  [CE]  ';'  expected  [FE]                IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]      ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	        ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(archive.folders);	  	non-compiled	[CE]  ';'  expected	4	None	add
22	[BUG]  [BUGGY]      archive.folders  =  new  ArrayList  <  Folder>(nid);  [CE]  incompatible  types  [FE]                  IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]      archive.folders  =  new  ArrayList  <  Folder>(nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	        archive.folders  =  new  ArrayList  <  Folder>(nid);	  	non-compiled	[CE]  incompatible  types	4	None	add
23	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.kUnpackInfo);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	6	None	replace
24	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  SIGNATURE_HEADER_SIZE);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	6	None	replace
25	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID);  [CE]  cannot  find  symbol  NID  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  NID	6	None	replace
26	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kPackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.kPackInfo);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.kPackInfo);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	6	None	replace
27	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  fileName);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive,  nid,  fileName);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  fileName);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	6	None	replace
28	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive.folders,  nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  nid);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	6	None	replace
29	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive,  nid,  nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  nid);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	6	None	replace
30	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(header,  archive);  readPackInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readPackInfo(header,    archive);    readPackInfo(header,  archive);	  	compilable	  [FE]  IOException  	7	12	add
31	[BUG]  [BUGGY]  readPackInfo(header,  archive);  readPackInfo(header,  archive);  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(header,  archive);  readPackInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,    archive);    readPackInfo(header,  archive);	  	compilable	  [FE]  IOException  	7	12	add
32	[BUG]  [BUGGY]  readPackInfo(header,  archive);  ReadPackInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(header,  archive);  ReadPackInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,    archive);    ReadPackInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
33	[BUG]  [BUGGY]  readPackInfo(header,  archive);  reader.readPackInfo(header,  archive);  [CE]  cannot  find  symbol  reader  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(header,  archive);  reader.readPackInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,    archive);    reader.readPackInfo(header,  archive);	  	non-compiled	[CE]  cannot  find  symbol  reader	7	None	add
34	[BUG]  [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>();  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,    archive);    ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  ';'  expected	7	None	add
35	[BUG]  [BUGGY]  readPackInfo(header,  archive);  byte[]  nextHeaderSize  =  header.readUnsignedByte();  [CE]  incompatible  types  [FE]            IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(header,  archive);  byte[]  nextHeaderSize  =  header.readUnsignedByte();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,    archive);    byte[]  nextHeaderSize  =  header.readUnsignedByte();	  	non-compiled	[CE]  incompatible  types	7	None	add
36	[BUG]  [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(length);  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(length);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,    archive);    ArrayList  <  String>  archive.folders  =  new  ArrayList  <  String>(length);	  	non-compiled	[CE]  ';'  expected	7	None	add
37	[BUG]  [BUGGY]  readPackInfo(header,  archive);  byte[]  nextHeader  =  header.readUnsignedByte();  [CE]  incompatible  types  [FE]                IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(header,  archive);  byte[]  nextHeader  =  header.readUnsignedByte();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,    archive);    byte[]  nextHeader  =  header.readUnsignedByte();	  	non-compiled	[CE]  incompatible  types	7	None	add
38	[BUG]  [BUGGY]  readUnpackInfo(header,  nid,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(header,  nid,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  nid,  archive);	  readUnpackInfo(nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	1	None	replace
39	[BUG]  [BUGGY]  readUnpackInfo(nid,  archive.folders);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(nid,  archive.folders);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  archive.folders);	  readUnpackInfo(nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	1	None	replace
40	[BUG]  [BUGGY]  readUnpackInfo(nid,  NID.kUnpackInfo,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(nid,  NID.kUnpackInfo,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  NID.kUnpackInfo,  archive);	  readUnpackInfo(nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	1	None	replace
41	[BUG]  [BUGGY]  readUnpackInfo(nid,  NID.kUnpackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(nid,  NID.kUnpackInfo);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  NID.kUnpackInfo);	  readUnpackInfo(nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	1	None	replace
42	[BUG]  [BUGGY]  readUnpackInfo(nid,  header,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(nid,  header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  header,  archive);	  readUnpackInfo(nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	1	None	replace
43	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive.folders);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,  archive.folders);	  readStreamsInfo(header,    archive);    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	10	None	replace
44	[BUG]  [BUGGY]  readFoldersInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readFoldersInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFoldersInfo(header,  archive);	  readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
45	[BUG]  [BUGGY]  readFileInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readFileInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFileInfo(header,  archive);	  readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
46	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  NID.kUnpackInfo);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive.folders,  NID.kUnpackInfo);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  NID.kUnpackInfo);	  readUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	2	None	replace
47	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  signature);  [CE]  cannot  find  symbol  signature  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive.folders,  signature);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  signature);	  readUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  signature	2	None	replace
48	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  null);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive.folders,  null);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  null);	  readUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	2	None	replace
49	[BUG]  [BUGGY]  readUnpackInfo(nid,  header,  archive.folders);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(nid,  header,  archive.folders);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(nid,  header,  archive.folders);	  readUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	2	None	replace
50	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  false);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive.folders,  false);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  false);	  readUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	2	None	replace
51	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readSubStreamsInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readSubStreamsInfo(header,  archive);	  readPackInfo(header,    archive);    	compilable	  [FE]  NullPointerException  	8	12	replace
52	[BUG]  [BUGGY]  readSubStreamsInfo(header,  archive);  [FE]  NullPointerException  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readSubStreamsInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readSubStreamsInfo(header,  archive);	  readPackInfo(header,    archive);    	compilable	  [FE]  NullPointerException  	8	12	replace
53	[BUG]  [BUGGY]  readPackInfo(header,  archive.folders);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(header,  archive.folders);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,  archive.folders);	  readPackInfo(header,    archive);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	8	None	replace
54	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	compilable	  [FE]  IOException  	9	12	add
55	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	compilable	  [FE]  IOException  	9	12	add
56	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();	  	compilable	  [FE]  IOException  	9	12	add
57	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>();	  	compilable	  [FE]  IOException  	9	12	add
58	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,    archive);    ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  Lists	9	None	add
59	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(length);  [CE]  cannot  find  symbol  length  [FE]          IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(length);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  new  ArrayList  <  DataInput>(length);	  	non-compiled	[CE]  cannot  find  symbol  length	9	None	add
60	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]            IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,    archive);    ArrayList  <  DataInput>  deferredBlockStreams  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  Lists	9	None	add
61	[BUG]  [BUGGY]  readFolders(header,  archive);  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readFolders(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolders(header,  archive);	  readPackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
62	[BUG]  [BUGGY]  readFolderInfo(header,  archive,  nid);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readFolderInfo(header,  archive,  nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  archive,  nid);	  readFolderInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
63	[BUG]  [BUGGY]  readFolderInfo(header,  archive,  NID.kUnpackInfo);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readFolderInfo(header,  archive,  NID.kUnpackInfo);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(header,  archive,  NID.kUnpackInfo);	  readFolderInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
64	[BUG]  [BUGGY]  readPackInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(header,  archive);  int  nid  =  header.readUnsignedByte();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,    archive);    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	7	None	add
65	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	7	12	add
66	[BUG]  [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [FE]  java.io.IOException:  Expected  kFolder  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>();	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	7	12	add
67	[BUG]  [BUGGY]  readPackInfo(header,  archive);  InputStream  inputStreamStack  =  inputStreamStack.peek();  [CE]  cannot  find  symbol  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(header,  archive);  InputStream  inputStreamStack  =  inputStreamStack.peek();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,    archive);    InputStream  inputStreamStack  =  inputStreamStack.peek();	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
68	[BUG]  [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(length);  [CE]  cannot  find  symbol  length  [FE]          IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(length);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,    archive);    ArrayList  <  String>  folderers  =  new  ArrayList  <  String>(length);	  	non-compiled	[CE]  cannot  find  symbol  length	7	None	add
69	[BUG]  [BUGGY]  readPackInfo(header,  archive);  byte[]  nextHeader  =  inputStreamStack.get(nid);  [CE]  cannot  find  symbol  inputStreamStack  [FE]            IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(header,  archive);  byte[]  nextHeader  =  inputStreamStack.get(nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,    archive);    byte[]  nextHeader  =  inputStreamStack.get(nid);	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	7	None	add
70	[BUG]  [BUGGY]  readUnpackInfo(file,  nid,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(file,  nid,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(file,  nid,  archive);	  readUnpackInfo(nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	1	None	replace
71	[BUG]  [BUGGY]  readUnpackInfo(header,  null,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(header,  null,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  null,  archive);	  readUnpackInfo(nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	1	None	replace
72	[BUG]  [BUGGY]  readUnpackInfo(header,  fileName,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(header,  fileName,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  fileName,  archive);	  readUnpackInfo(nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	1	None	replace
73	[BUG]  [BUGGY]  readBlockInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readBlockInfo(header,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readBlockInfo(header,  archive);	  readStreamsInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
74	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  int  nid  =  header.readUnsignedByte();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	int  nid  =  header.readUnsignedByte();	      	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	5	None	replace
75	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>();  [CE]  incompatible  types  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	archive.folders  =  new  ArrayList  <  Folder>();	      	non-compiled	[CE]  incompatible  types	5	None	replace
76	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.folders);  [CE]  cannot  find  symbol  folders  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.folders);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.folders);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  folders	6	None	replace
77	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.bytes);  [CE]  cannot  find  symbol  bytes  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.bytes);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.bytes);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  bytes	6	None	replace
78	[BUG]  [BUGGY]  readUnpackInfo(header,  archive.folders,  fileName);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive.folders,  fileName);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive.folders,  fileName);	  readUnpackInfo(header,    archive.folders);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	2	None	replace
79	[BUG]  [BUGGY]      InputStream  inputStreamStack  =  inputStreamStack.peek();  [CE]  cannot  find  symbol  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]      InputStream  inputStreamStack  =  inputStreamStack.peek();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	        InputStream  inputStreamStack  =  inputStreamStack.peek();	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
80	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(file,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readPackInfo(file,  archive);	  readPackInfo(header,    archive);    	compilable	  [FE]  EOFException  	8	12	replace
81	[BUG]  [BUGGY]  readPackInfo(file,  archive);  [FE]  EOFException  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(file,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(file,  archive);	  readPackInfo(header,    archive);    	compilable	  [FE]  EOFException  	8	12	replace
82	[BUG]  [BUGGY]  readPackInfo(fileName,  archive);  [CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(fileName,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(fileName,  archive);	  readPackInfo(header,    archive);    	non-compiled	[CE]  method  readPackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	8	None	replace
83	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(length);  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(length);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(length);	  	non-compiled	[CE]  cannot  find  symbol  length	9	None	add
84	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);	  	compilable	  [FE]  IOException  	9	12	add
85	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(nid);	  	compilable	  [FE]  IOException  	9	12	add
86	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	compilable	  [FE]  IOException  	9	12	add
87	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [FE]  IOException  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	compilable	  [FE]  IOException  	9	12	add
88	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(NID.folders);  [CE]  cannot  find  symbol  folders  [FE]          IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readStreamsInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(NID.folders);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readStreamsInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(NID.folders);	  	non-compiled	[CE]  cannot  find  symbol  folders	9	None	add
89	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  int  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	int  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];	      	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	5	None	replace
90	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];	      	compilable	  [FE]  IOException  	5	12	replace
91	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  header.readUnsignedByte();  archive.folders  =  new  Folder[0];	      	compilable	  [FE]  IOException  	5	12	replace
92	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  nid  =  NID.readUnsignedByte();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	nid  =  NID.readUnsignedByte();	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
93	[BUG]  [BUGGY]  readUnpackInfo(fileName,  nid,  archive);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(fileName,  nid,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(fileName,  nid,  archive);	  readUnpackInfo(nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	1	None	replace
94	[BUG]  [BUGGY]  readUnpackInfo(inputStreamStack,  nid,  archive);  [CE]  cannot  find  symbol  inputStreamStack  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(inputStreamStack,  nid,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(inputStreamStack,  nid,  archive);	  readUnpackInfo(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	1	None	replace
95	[BUG]  [BUGGY]  readUnpackInfo(file,  nid);  [CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(file,  nid);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(file,  nid);	  readUnpackInfo(nid,    archive);    	non-compiled	[CE]  method  readUnpackInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	1	None	replace
96	[BUG]  [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.z);  [CE]  cannot  find  symbol  z  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readUnpackInfo(header,  archive,  nid,  NID.z);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readUnpackInfo(header,  archive,  nid,  NID.z);	  readUnpackInfo(header,    archive,    nid);    	non-compiled	[CE]  cannot  find  symbol  z	6	None	replace
97	[BUG]  [BUGGY]  readFolderInfo(file,  archive);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readFolderInfo(file,  archive);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readFolderInfo(file,  archive);	  readFolderInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
98	[BUG]  [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(length);  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(length);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>(length);	  	non-compiled	[CE]  cannot  find  symbol  length	7	None	add
99	[BUG]  [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(length);  [CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(length);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,    archive);    ArrayList  <  Folder>  header  =  new  ArrayList  <  Folder>(length);	  	non-compiled	[CE]  variable  header  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	7	None	add
100	[BUG]  [BUGGY]  readPackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(header);  [CE]  cannot  find  symbol  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(header,  archive);  InputStream  inputStreamStack  =  getInputStreamStack(header);  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,    archive);    InputStream  inputStreamStack  =  getInputStreamStack(header);	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
101	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]          IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	add	readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	7	12	add
102	[BUG]  [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [FE]  java.io.IOException:  Expected  kFolder  [FE]          IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {    [BUGGY]  readPackInfo(header,  archive);  ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();  [BUGGY]    nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	328	328	12	replace	readPackInfo(header,    archive);    ArrayList  <  Folder>  folderers  =  new  ArrayList  <  Folder>();	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	7	12	add
