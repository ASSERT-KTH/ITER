bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (nid!=  NID.bytesInfo)  {  [CE]  cannot  find  symbol  bytesInfo  [FE]        NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if  (nid!=  NID.bytesInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.bytesInfo)  {	  if    (nid!=    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	8	None	replace
2	[BUG]  [BUGGY]  if  (nid!=  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]          NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if  (nid!=  NID.length)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.length)  {	  if    (nid!=    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  length	8	None	replace
3	[BUG]  [BUGGY]  if  (nid!=  NID.BAR_SIZE)  {  [CE]  cannot  find  symbol  BAR_SIZE  [FE]            NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if  (nid!=  NID.BAR_SIZE)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.BAR_SIZE)  {	  if    (nid!=    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  BAR_SIZE	8	None	replace
4	[BUG]  [BUGGY]  if  (nid!=  NID.BAR_SIZE  ||  nid!=  NID.kStreamsInfo)  {  [CE]  cannot  find  symbol  BAR_SIZE  [FE]              NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if  (nid!=  NID.BAR_SIZE  ||  nid!=  NID.kStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.BAR_SIZE  ||  nid!=  NID.kStreamsInfo)  {	  if    (nid!=    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  BAR_SIZE	8	None	replace
5	[BUG]  [BUGGY]  if  (nid  ==  NID.kEnd)  {  if  (nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if  (nid  ==  NID.kEnd)  {  if  (nid  ==  NID.kEnd)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if    (nid    ==    NID.kEnd)    {    if  (nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
6	[BUG]  [BUGGY]  if  (nid  ==  NID.kEnd)  {  if  (nid  >=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if  (nid  ==  NID.kEnd)  {  if  (nid  >=  NID.kEnd)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if    (nid    ==    NID.kEnd)    {    if  (nid  >=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
7	[BUG]  [BUGGY]  if  (nid  ==  NID.kEnd)  {  if  (nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if  (nid  ==  NID.kEnd)  {  if  (nid!=  NID.kEnd)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if    (nid    ==    NID.kEnd)    {    if  (nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
8	[BUG]  [BUGGY]  if  (nid  ==  NID.kEnd)  {  If  (nid  ==  NID.kEnd)  {  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if  (nid  ==  NID.kEnd)  {  If  (nid  ==  NID.kEnd)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if    (nid    ==    NID.kEnd)    {    If  (nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
9	[BUG]  [BUGGY]  if  (nid  ==  NID.kEnd)  {  if  (nid  ==  NID.kStart)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if  (nid  ==  NID.kEnd)  {  if  (nid  ==  NID.kStart)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if    (nid    ==    NID.kEnd)    {    if  (nid  ==  NID.kStart)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
10	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    	compilable	  [FE]  IOException  	6	12	replace
11	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    	compilable	  [FE]  IOException  	6	12	replace
12	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    	compilable	  [FE]  IOException  	6	12	replace
13	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    	compilable	  [FE]  IOException  	6	12	replace
14	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	6	12	replace
15	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	6	12	replace
16	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
17	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo)    {    if(nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
18	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo)    {    if(nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
19	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid  >>  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid  >>  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo)    {    if(nid  >>  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
20	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
21	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  If(nid!=  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  If(nid!=  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo)    {    If(nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
22	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  class,  interface,  or  enum  expected  [FE]              NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
23	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  class,  interface,  or  enum  expected  [FE]                NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
24	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);  [CE]  class,  interface,  or  enum  expected  [FE]                  NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
25	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());  [CE]  class,  interface,  or  enum  expected  [FE]                    NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
26	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length());  [CE]  class,  interface,  or  enum  expected  [FE]                      NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length());  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
27	[BUG]  [BUGGY]  byte[]  nextHeaderSize  =  header.readUnsignedByte();  [CE]  class,  interface,  or  enum  expected  [FE]                        NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  byte[]  nextHeaderSize  =  header.readUnsignedByte();  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	byte[]  nextHeaderSize  =  header.readUnsignedByte();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
28	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length());  [CE]  class,  interface,  or  enum  expected  [FE]                          NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length());  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
29	[BUG]  [BUGGY]  if(nid  ==  null  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  incomparable  types:  int  and  <null>  [FE]    NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  null  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  null  ||  nid  ==  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	4	None	replace
30	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
31	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
32	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
33	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
34	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
35	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
36	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	10	12	replace
37	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	10	12	replace
38	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	10	12	replace
39	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	10	12	replace
40	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	10	12	replace
41	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	10	12	replace
42	[BUG]  [BUGGY]  [FE]  IOException  [FE]          NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	10	12	replace
43	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]          NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	10	12	replace
44	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kStart)  {  [CE]  cannot  find  symbol  kStart  [FE]            NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kStart)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kStart)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	10	None	replace
45	[BUG]  [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  if  (nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  if  (nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if    (nid    ==    NID.kSubStreamsInfo)    {    if  (nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
46	[BUG]  [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  if  (nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  if  (nid!=  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if    (nid    ==    NID.kSubStreamsInfo)    {    if  (nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
47	[BUG]  [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  If  (nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]        NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  If  (nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if    (nid    ==    NID.kSubStreamsInfo)    {    If  (nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
48	[BUG]  [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  if  (nid  >=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  if  (nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if    (nid    ==    NID.kSubStreamsInfo)    {    if  (nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
49	[BUG]  [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if    (nid    ==    NID.kSubStreamsInfo)    {    if  (nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
50	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
51	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
52	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
53	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >>  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >>  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >>  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
54	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  If(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  If(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    If(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
55	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  NID.kEnd  ||  nid  >=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  NID.kEnd  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  NID.kEnd  ||  nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
56	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	2	12	replace
57	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	2	12	replace
58	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	2	12	replace
59	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	2	12	replace
60	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	2	12	replace
61	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]        IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	2	12	replace
62	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	2	12	replace
63	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	2	12	replace
64	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	2	12	replace
65	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	2	12	replace
66	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  >=  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	2	12	replace
67	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  >=  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	2	12	replace
68	[BUG]  [BUGGY]  if  (nid!=  NID.kStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]        NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if  (nid!=  NID.kStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.kStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if    (nid!=    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	8	None	replace
69	[BUG]  [BUGGY]  if  (nid  ==  NID.kStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]          NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if  (nid  ==  NID.kStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid  ==  NID.kStreamsInfo)  {	  if    (nid!=    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	8	None	replace
70	[BUG]  [BUGGY]  if  (nid!=  NID.KStreamsInfo)  {  [CE]  cannot  find  symbol  KStreamsInfo  [FE]            NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if  (nid!=  NID.KStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.KStreamsInfo)  {	  if    (nid!=    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  KStreamsInfo	8	None	replace
71	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	10	12	replace
72	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	10	12	replace
73	[BUG]  [BUGGY]  if(nid!=  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  kStart  [FE]      NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	10	None	replace
74	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	10	12	replace
75	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	10	12	replace
76	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	10	12	replace
77	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	10	12	replace
78	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [CE]  class,  interface,  or  enum  expected  [FE]              NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
79	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnsignedByte)  {  [CE]  cannot  find  symbol  kUnsignedByte  [FE]    NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnsignedByte)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnsignedByte)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kUnsignedByte	4	None	replace
80	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kEnd)    {    	compilable	  [FE]  IOException  	6	12	replace
81	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kEnd)    {    	compilable	  [FE]  IOException  	6	12	replace
82	[BUG]  [BUGGY]  if  (nid  ==  NID.kEnd)  {  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if  (nid  ==  NID.kEnd)  {  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if    (nid    ==    NID.kEnd)    {    if  (nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
83	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
84	[BUG]  [BUGGY]  if(nid  ==  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]    NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  NID.length)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.length)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  length	4	None	replace
85	[BUG]  [BUGGY]  if(nid  ==  NID.kStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]      NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  NID.kStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	4	None	replace
86	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeadly  terminated)  {  [CE]  ')'  expected  [FE]        NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeadly  terminated)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeadly  terminated)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ')'  expected	4	None	replace
87	[BUG]  [BUGGY]  if(nid  ==  NID.readStreamsInfo)  {  [CE]  cannot  find  symbol  readStreamsInfo  [FE]          NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid  ==  NID.readStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.readStreamsInfo)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  readStreamsInfo	4	None	replace
88	[BUG]  [BUGGY]  if  (nid!=  NID.kStreamsInfo  ||  nid  ==  NID.kStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]        NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if  (nid!=  NID.kStreamsInfo  ||  nid  ==  NID.kStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.kStreamsInfo  ||  nid  ==  NID.kStreamsInfo)  {	  if    (nid!=    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	8	None	replace
89	[BUG]  [BUGGY]  if  (nid!=  NID.kStreamsInfo  ||  nid!=  NID.kStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]          NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if  (nid!=  NID.kStreamsInfo  ||  nid!=  NID.kStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.kStreamsInfo  ||  nid!=  NID.kStreamsInfo)  {	  if    (nid!=    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	8	None	replace
90	[BUG]  [BUGGY]  if(nid.length  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  int  cannot  be  dereferenced  [FE]    NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid.length  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid.length  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	10	None	replace
91	[BUG]  [BUGGY]  if(nid!=  NID.length  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  length  [FE]      NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.length  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.length  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  length	10	None	replace
92	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length());  [CE]  class,  interface,  or  enum  expected  [FE]              NoClassDefFoundError    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length());  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
93	[BUG]  [BUGGY]  if(nid!=  NID.kStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]    IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	2	None	replace
94	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeferredBlockStreams)  {  [CE]  cannot  find  symbol  kDeferredBlockStreams  [FE]      IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeferredBlockStreams)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeferredBlockStreams)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kDeferredBlockStreams	2	None	replace
95	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockStreams)  {  [CE]  cannot  find  symbol  kBlockStreams  [FE]        IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockStreams)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockStreams)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockStreams	2	None	replace
96	[BUG]  [BUGGY]  if(nid!=  NID.bindings)  {  [CE]  cannot  find  symbol  bindings  [FE]          IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.bindings)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.bindings)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  bindings	2	None	replace
97	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsinfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsinfo)  {  [BUGGY]    throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=  NID.kSubStreamsinfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
