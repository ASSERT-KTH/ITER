bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(nid  ==  null  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  incomparable  types:  int  and  <null>  [FE]        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  null  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  null  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid    ==    null    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	29	None	replace
2	[BUG]  [BUGGY]  if(nid!=  null  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  incomparable  types:  int  and  <null>  [FE]          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  null  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  null  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    null    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	29	None	replace
3	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  null)  {  [CE]  incomparable  types:  int  and  <null>  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  null)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  null)  {	  if(nid    ==    null    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	29	None	replace
4	[BUG]  [BUGGY]  if(nid  ==  null  ||  nid  >=  NID.kSubStreamsInfo)  {  [CE]  incomparable  types:  int  and  <null>  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  null  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  null  ||  nid  >=  NID.kSubStreamsInfo)  {	  if(nid    ==    null    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	29	None	replace
5	[BUG]  [BUGGY]  if  (nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kStreamsInfo)  {	  if    (nid!=    NID.BAR_SIZE    ||    nid!=    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	4	None	replace
6	[BUG]  [BUGGY]  if  (nid!=  NID.kStreamsInfo  ||  nid!=  NID.BAR_SIZE)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]                    NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.kStreamsInfo  ||  nid!=  NID.BAR_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.kStreamsInfo  ||  nid!=  NID.BAR_SIZE)  {	  if    (nid!=    NID.BAR_SIZE    ||    nid!=    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	4	None	replace
7	[BUG]  [BUGGY]  if  (nid  ==  NID.BAR_SIZE  ||  nid!=  NID.kStreamsInfo)  {  [CE]  cannot  find  symbol  BAR_SIZE  [FE]                      NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.BAR_SIZE  ||  nid!=  NID.kStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid  ==  NID.BAR_SIZE  ||  nid!=  NID.kStreamsInfo)  {	  if    (nid!=    NID.BAR_SIZE    ||    nid!=    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  BAR_SIZE	4	None	replace
8	[BUG]  [BUGGY]  if  (nid!=  NID.BAR_SIZE  ||  nid  ==  NID.kStreamsInfo)  {  [CE]  cannot  find  symbol  BAR_SIZE  [FE]                        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.BAR_SIZE  ||  nid  ==  NID.kStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.BAR_SIZE  ||  nid  ==  NID.kStreamsInfo)  {	  if    (nid!=    NID.BAR_SIZE    ||    nid!=    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  BAR_SIZE	4	None	replace
9	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kUnsignedByte)  {  [CE]  cannot  find  symbol  kUnsignedByte  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kUnsignedByte)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kUnsignedByte)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kUnsignedByte	41	None	replace
10	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kStart)  {  [CE]  cannot  find  symbol  kStart  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kStart)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kStart)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	41	None	replace
11	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockInfo)  {  [CE]  cannot  find  symbol  kBlockInfo  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockInfo)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockInfo	41	None	replace
12	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kByte)  {  [CE]  cannot  find  symbol  kByte  [FE]        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kByte)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kByte)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnsignedByte)    {    	non-compiled	[CE]  cannot  find  symbol  kByte	79	None	replace
13	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnsignedByte)  {  [CE]  cannot  find  symbol  kUnsignedByte  [FE]          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnsignedByte)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnsignedByte)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnsignedByte)    {    	non-compiled	[CE]  cannot  find  symbol  kUnsignedByte	79	None	replace
14	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kFolderSize)  {  [CE]  cannot  find  symbol  kFolderSize  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kFolderSize)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kFolderSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnsignedByte)    {    	non-compiled	[CE]  cannot  find  symbol  kFolderSize	79	None	replace
15	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kInteger)  {  [CE]  cannot  find  symbol  kInteger  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kInteger)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kInteger)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnsignedByte)    {    	non-compiled	[CE]  cannot  find  symbol  kInteger	79	None	replace
16	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnsignedByte)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	79	None	replace
17	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  IOException  	75	12	replace
18	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  IOException  	75	12	replace
19	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	75	12	replace
20	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	75	12	replace
21	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  IOException  	75	12	replace
22	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  IOException  	75	12	replace
23	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]          IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	75	12	replace
24	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [FE]  NoClassDefFoundError  [FE]          IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	75	12	replace
25	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart)  {  [CE]  cannot  find  symbol  kStart  [FE]            IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	75	None	replace
26	[BUG]  [BUGGY]  if  (nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.length)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.length)  {	  if    (nid!=    NID.length)    {    	non-compiled	[CE]  cannot  find  symbol  length	2	None	replace
27	[BUG]  [BUGGY]  if  (nid!=  SIGNATURE_HEADER_SIZE.length)  {  [CE]  int  cannot  be  dereferenced  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  SIGNATURE_HEADER_SIZE.length)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  SIGNATURE_HEADER_SIZE.length)  {	  if    (nid!=    NID.length)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	2	None	replace
28	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	59	12	replace
29	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	59	12	replace
30	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	59	12	replace
31	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	59	12	replace
32	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kSubStreamsInfo)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	59	12	replace
33	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kSubStreamsInfo)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	59	12	replace
34	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeadly)  {  [CE]  cannot  find  symbol  kDeadly  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeadly)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeadly)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kDeadly    terminated)    {    	non-compiled	[CE]  cannot  find  symbol  kDeadly	86	None	replace
35	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeadly  terminated)  {  [CE]  ')'  expected  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeadly  terminated)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeadly  terminated)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kDeadly    terminated)    {    	non-compiled	[CE]  ')'  expected	86	None	replace
36	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kDeadly  terminated)  {  [CE]  ')'  expected  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kDeadly  terminated)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kDeadly  terminated)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kDeadly    terminated)    {    	non-compiled	[CE]  ')'  expected	86	None	replace
37	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeadly  terminationd)  {  [CE]  ')'  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeadly  terminationd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeadly  terminationd)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kDeadly    terminated)    {    	non-compiled	[CE]  ')'  expected	86	None	replace
38	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  &&  nid  ==  NID.kDeadly  terminated)  {  [CE]  ')'  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  &&  nid  ==  NID.kDeadly  terminated)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  &&  nid  ==  NID.kDeadly  terminated)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kDeadly    terminated)    {    	non-compiled	[CE]  ')'  expected	86	None	replace
39	[BUG]  [BUGGY]  if(nid  ==  NID.kDeadly  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  kDeadly  [FE]                      NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kDeadly  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kDeadly  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kDeadly    terminated)    {    	non-compiled	[CE]  cannot  find  symbol  kDeadly	86	None	replace
40	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
41	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
42	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
43	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
44	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid!=  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
45	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    If(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	56	None	add
46	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
47	[BUG]  [BUGGY]  If(nid!=  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  If(nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	If(nid!=  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    If(nid!=    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
48	[BUG]  [BUGGY]  If(nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  If(nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	If(nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    If(nid!=    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
49	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	57	12	replace
50	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	57	12	replace
51	[BUG]  [BUGGY]  if  (nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.bytesInfo)  {  [CE]  cannot  find  symbol  bytesInfo  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.bytesInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.bytesInfo)  {	  if    (nid!=    NID.bytesInfo)    {    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	1	None	replace
52	[BUG]  [BUGGY]  if  (nid  ==  NID.bytesInfo)  {  [CE]  cannot  find  symbol  bytesInfo  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.bytesInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid  ==  NID.bytesInfo)  {	  if    (nid!=    NID.bytesInfo)    {    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	1	None	replace
53	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	31	12	replace
54	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	31	12	replace
55	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	31	12	replace
56	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	31	12	replace
57	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	31	12	replace
58	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	31	12	replace
59	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
60	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
61	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
62	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
63	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >>  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
64	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
65	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]                IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	60	None	add
66	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kSubStreamsInfo)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
67	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kSubStreamsInfo)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
68	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kSubStreamsInfo)    {    if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
69	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  If(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  If(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kSubStreamsInfo)    {    If(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	58	None	add
70	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
71	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >>  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >>  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kSubStreamsInfo)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  >>  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
72	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kSubStreamsInfo)    {    if(nid  >=  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
73	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
74	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
75	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
76	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
77	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  If(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  If(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    If(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
78	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
79	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
80	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
81	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
82	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
83	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kEnd  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kEnd  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kEnd  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
84	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
85	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
86	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]                IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	80	None	add
87	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	20	12	replace
88	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]                IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	20	12	replace
89	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    If    (nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
90	[BUG]  [BUGGY]  if  (nid!=  NID.bAR_SIZE)  {  [CE]  cannot  find  symbol  bAR_SIZE  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.bAR_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.bAR_SIZE)  {	  if    (nid!=    NID.BAR_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  bAR_SIZE	3	None	replace
91	[BUG]  [BUGGY]  if  (nid  ==  NID.BAR_SIZE)  {  [CE]  cannot  find  symbol  BAR_SIZE  [FE]                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.BAR_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid  ==  NID.BAR_SIZE)  {	  if    (nid!=    NID.BAR_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  BAR_SIZE	3	None	replace
92	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
93	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
94	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
95	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
96	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
97	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
98	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
99	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kEnd)  {  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    If    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
100	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kEnd)  {  [CE]  ';'  expected  [FE]                IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    If    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
101	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid!=  NID.kEnd)  {  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid!=  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid!=  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    If    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
102	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	61	12	replace
103	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	61	12	replace
104	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	61	12	replace
105	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	61	12	replace
106	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	82	12	replace
107	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]        IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	82	12	replace
108	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
109	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
110	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
111	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
112	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	38	None	add
113	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
114	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
115	[BUG]  [BUGGY]  if  (nid  ==  NID.kStreamsInfo  ||  nid!=  NID.kStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.kStreamsInfo  ||  nid!=  NID.kStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid  ==  NID.kStreamsInfo  ||  nid!=  NID.kStreamsInfo)  {	  if    (nid!=    NID.kStreamsInfo    ||    nid!=    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	89	None	replace
116	[BUG]  [BUGGY]  if  (nid!=  NID.kStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.kStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.kStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {	  if    (nid!=    NID.kStreamsInfo    ||    nid!=    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	89	None	replace
117	[BUG]  [BUGGY]  if  (nid!=  NID.kStreamsInfo  ||  nid!=  NID.KStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.kStreamsInfo  ||  nid!=  NID.KStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.kStreamsInfo  ||  nid!=  NID.KStreamsInfo)  {	  if    (nid!=    NID.kStreamsInfo    ||    nid!=    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	89	None	replace
118	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {	  if(nid    >=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	67	12	replace
119	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {	  if(nid    >=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	67	12	replace
120	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeferredBlockStreams)  {  [CE]  cannot  find  symbol  kDeferredBlockStreams  [FE]          IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeferredBlockStreams)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeferredBlockStreams)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kDeferredBlockStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kDeferredBlockStreams	94	None	replace
121	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kFolderSize)  {  [CE]  cannot  find  symbol  kFolderSize  [FE]            IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kFolderSize)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kFolderSize)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kDeferredBlockStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kFolderSize	94	None	replace
122	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kFolders)  {  [CE]  cannot  find  symbol  kFolders  [FE]              IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kFolders)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kFolders)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kDeferredBlockStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kFolders	94	None	replace
123	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  1);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
124	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  7ZSignature);  [CE]  ')'  expected  [FE]                        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  7ZSignature);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  7ZSignature);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  ')'  expected	24	None	replace
125	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [CE]  class,  interface,  or  enum  expected  [FE]                          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
126	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  class,  interface,  or  enum  expected  [FE]                            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
127	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  2);  [CE]  class,  interface,  or  enum  expected  [FE]                              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  2);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
128	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  6);  [CE]  class,  interface,  or  enum  expected  [FE]                                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  6);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  6);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
129	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());  [CE]  class,  interface,  or  enum  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
130	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());  [CE]  class,  interface,  or  enum  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
131	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  archive.folders.toArray(new  ArrayList  <  String>());  [CE]  class,  interface,  or  enum  expected  [FE]                      NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  archive.folders.toArray(new  ArrayList  <  String>());  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  archive.folders.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
132	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [CE]  class,  interface,  or  enum  expected  [FE]                        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  List  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	List  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
133	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(),  fileName);  [CE]  class,  interface,  or  enum  expected  [FE]                          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(),  fileName);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(),  fileName);	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
134	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(2));  [CE]  class,  interface,  or  enum  expected  [FE]                            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(2));  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(2));	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
135	[BUG]  [BUGGY]  byte[]  nextHeaderSize  =  archive.readUnsignedByte();  [CE]  class,  interface,  or  enum  expected  [FE]                            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  byte[]  nextHeaderSize  =  archive.readUnsignedByte();  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	byte[]  nextHeaderSize  =  archive.readUnsignedByte();	  byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
136	[BUG]  [BUGGY]  byte[]  nextHeaderSize  =  header.readUnsignedByte(nid);  [CE]  class,  interface,  or  enum  expected  [FE]                              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  byte[]  nextHeaderSize  =  header.readUnsignedByte(nid);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	byte[]  nextHeaderSize  =  header.readUnsignedByte(nid);	  byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
137	[BUG]  [BUGGY]  byte[]  nextHeaderSize  =  inputStreamStack.readUnsignedByte();  [CE]  class,  interface,  or  enum  expected  [FE]                                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  byte[]  nextHeaderSize  =  inputStreamStack.readUnsignedByte();  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	byte[]  nextHeaderSize  =  inputStreamStack.readUnsignedByte();	  byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
138	[BUG]  [BUGGY]  byte[]  nextHeaderSize  =  archive.folders.readUnsignedByte();  [CE]  class,  interface,  or  enum  expected  [FE]                                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  byte[]  nextHeaderSize  =  archive.folders.readUnsignedByte();  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	byte[]  nextHeaderSize  =  archive.folders.readUnsignedByte();	  byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
139	[BUG]  [BUGGY]  byte[]  nextHeaderSize  =  file.readUnsignedByte();  [CE]  class,  interface,  or  enum  expected  [FE]                                    NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  byte[]  nextHeaderSize  =  file.readUnsignedByte();  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	byte[]  nextHeaderSize  =  file.readUnsignedByte();	  byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
140	[BUG]  [BUGGY]  byte[]  nextHeaderSize  =  header.readEndByte();  [CE]  class,  interface,  or  enum  expected  [FE]                                      NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  byte[]  nextHeaderSize  =  header.readEndByte();  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	byte[]  nextHeaderSize  =  header.readEndByte();	  byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
141	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.length)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.length)  {	  if(nid    ==    NID.length)    {    	non-compiled	[CE]  cannot  find  symbol  length	84	None	replace
142	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.length)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.length)  {	  if(nid    ==    NID.length)    {    	non-compiled	[CE]  cannot  find  symbol  length	84	None	replace
143	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE.length)  {  [CE]  int  cannot  be  dereferenced  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE.length)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE.length)  {	  if(nid    ==    NID.length)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	84	None	replace
144	[BUG]  [BUGGY]  if(nid  ==  NID.sIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.sIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.sIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.length)    {    	non-compiled	[CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE	84	None	replace
145	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
146	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
147	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
148	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
149	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
150	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
151	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
152	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
153	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
154	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
155	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
156	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
157	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  class,  interface,  or  enum  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	List  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
158	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(length);  [CE]  class,  interface,  or  enum  expected  [FE]                      NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(length);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(length);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
159	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);  [CE]  class,  interface,  or  enum  expected  [FE]                        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
160	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(0);  [CE]  class,  interface,  or  enum  expected  [FE]                          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(0);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(0);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
161	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(1);  [CE]  class,  interface,  or  enum  expected  [FE]                            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(1);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(1);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
162	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	11	12	replace
163	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	11	12	replace
164	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
165	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
166	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
167	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  >>  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  >>  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    if(nid  >>  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
168	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
169	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  If(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  If(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    If(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  ';'  expected	36	None	add
170	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
171	[BUG]  [BUGGY]  if(nid  ==  NID.kStart)  {  [CE]  cannot  find  symbol  kStart  [FE]                IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kStart)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kStart)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	9	None	replace
172	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	33	12	replace
173	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	33	12	replace
174	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  NID.kSubStreamsInfo  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	33	12	replace
175	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	33	12	replace
176	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSubStreamsInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	63	12	replace
177	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSubStreamsInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	63	12	replace
178	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSubStreamsInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	63	12	replace
179	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSubStreamsInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	63	12	replace
180	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	63	12	replace
181	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	63	12	replace
182	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	63	12	replace
183	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]          IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	63	12	replace
184	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(currentFolderIndex!=  SIGNATURE_HEADER_SIZE  ||  currentFolderIndex  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(currentFolderIndex!=  SIGNATURE_HEADER_SIZE  ||  currentFolderIndex  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	83	12	replace
185	[BUG]  [BUGGY]  if(currentFolderIndex!=  SIGNATURE_HEADER_SIZE  ||  currentFolderIndex  ==  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(currentFolderIndex!=  SIGNATURE_HEADER_SIZE  ||  currentFolderIndex  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(currentFolderIndex!=  SIGNATURE_HEADER_SIZE  ||  currentFolderIndex  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	83	12	replace
186	[BUG]  [BUGGY]  if(nid!=  NID.bindings  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  bindings  [FE]              IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.bindings  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.bindings  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid!=    NID.bindings)    {    	non-compiled	[CE]  cannot  find  symbol  bindings	96	None	replace
187	[BUG]  [BUGGY]  if(nid!=  NID.bindings  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  bindings  [FE]                IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.bindings  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.bindings  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    NID.bindings)    {    	non-compiled	[CE]  cannot  find  symbol  bindings	96	None	replace
188	[BUG]  [BUGGY]  if(nid  ==  NID.bindings)  {  [CE]  cannot  find  symbol  bindings  [FE]                  IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.bindings)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.bindings)  {	  if(nid!=    NID.bindings)    {    	non-compiled	[CE]  cannot  find  symbol  bindings	96	None	replace
189	[BUG]  [BUGGY]  if(nid!=  NID.bindings  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  bindings  [FE]                    IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.bindings  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.bindings  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.bindings)    {    	non-compiled	[CE]  cannot  find  symbol  bindings	96	None	replace
190	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.bindings)  {  [CE]  cannot  find  symbol  bindings  [FE]                      IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.bindings)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.bindings)  {	  if(nid!=    NID.bindings)    {    	non-compiled	[CE]  cannot  find  symbol  bindings	96	None	replace
191	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  IOException  	37	12	replace
192	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  IOException  	37	12	replace
193	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
194	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  If(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  If(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    If(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
195	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
196	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
197	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
198	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
199	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
200	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
201	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
202	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
203	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
204	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
205	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  ';'  expected  [FE]                IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  ';'  expected	74	None	add
206	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	43	12	replace
207	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	43	12	replace
208	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	15	12	replace
209	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	15	12	replace
210	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	15	12	replace
211	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	15	12	replace
212	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
213	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
214	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
215	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
216	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  [BUGGY]  SIGNATURE_HEADER_SIZE)  {  [CE]  ')'  expected  [FE]            IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  [BUGGY]  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  [BUGGY]  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ')'  expected	64	None	add
217	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    If(nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	64	None	add
218	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    >=    NID.kSubStreamsInfo)    {    if(nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
219	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    >=    NID.kSubStreamsInfo)    {    if(nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
220	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    >=    NID.kSubStreamsInfo)    {    if(nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
221	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  >>  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  >>  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    >=    NID.kSubStreamsInfo)    {    if(nid  >>  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
222	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    >=    NID.kSubStreamsInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
223	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  If(nid  >=  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  If(nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    >=    NID.kSubStreamsInfo)    {    If(nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	66	None	add
224	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  [Delete]  NID.kSubStreamsInfo)  {  [CE]  ')'  expected  [FE]                NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  [Delete]  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    >=    NID.kSubStreamsInfo)    {    if(nid  [Delete]  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ')'  expected	66	None	add
225	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
226	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
227	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
228	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
229	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
230	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
231	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
232	[BUG]  [BUGGY]  [FE]  IOException  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSize)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSize)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kStart)    {    	compilable	  [FE]  IOException  	44	12	replace
233	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSize)  {  [FE]  IOException  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSize)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSize)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kStart)    {    	compilable	  [FE]  IOException  	44	12	replace
234	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kLong)  {  [CE]  cannot  find  symbol  kLong  [FE]                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kLong)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kLong)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kLong	44	None	replace
235	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockInfo)  {  [CE]  cannot  find  symbol  kBlockInfo  [FE]                    NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockInfo)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockInfo	44	None	replace
236	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kInt)  {  [CE]  cannot  find  symbol  kInt  [FE]                      NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kInt)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kInt)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kInt	44	None	replace
237	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kEnd    &&    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
238	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kEnd    &&    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
239	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >>  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >>  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kEnd    &&    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >>  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
240	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kEnd    &&    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
241	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  If(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  If(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kEnd    &&    nid    ==    NID.kSubStreamsInfo)    {    If(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	76	None	add
242	[BUG]  [BUGGY]  if  (nid  ==  NID.kStreamsInfo  ||  nid  ==  NID.kStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.kStreamsInfo  ||  nid  ==  NID.kStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid  ==  NID.kStreamsInfo  ||  nid  ==  NID.kStreamsInfo)  {	  if    (nid!=    NID.kStreamsInfo    ||    nid    ==    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	88	None	replace
243	[BUG]  [BUGGY]  if  (nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStreamsInfo)  {	  if    (nid!=    NID.kStreamsInfo    ||    nid    ==    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	88	None	replace
244	[BUG]  [BUGGY]  if  (nid!=  NID.kStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.kStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.kStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid!=    NID.kStreamsInfo    ||    nid    ==    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	88	None	replace
245	[BUG]  [BUGGY]  if  (nid!=  NID.kStreamsInfo  ||  nid  ==  NID.KStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.kStreamsInfo  ||  nid  ==  NID.KStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.kStreamsInfo  ||  nid  ==  NID.KStreamsInfo)  {	  if    (nid!=    NID.kStreamsInfo    ||    nid    ==    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	88	None	replace
246	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  +  1);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  +  1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
247	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  -  1);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  -  1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
248	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  +  2);  [CE]  class,  interface,  or  enum  expected  [FE]                              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  +  2);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  +  2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
249	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  -  2);  [CE]  class,  interface,  or  enum  expected  [FE]                                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  -  2);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  -  2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
250	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  *  2);  [CE]  class,  interface,  or  enum  expected  [FE]                                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  *  2);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  *  2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
251	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  +  4);  [CE]  class,  interface,  or  enum  expected  [FE]                                    NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  +  4);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  +  4);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
252	[BUG]  [BUGGY]  If(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  If(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	If(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    If(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
253	[BUG]  [BUGGY]  If(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  If(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	If(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    If(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
254	[BUG]  [BUGGY]  If(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  If(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	If(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    If(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
255	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
256	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]        IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kStreamsInfo)  {	  if(nid!=    NID.kStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	93	None	replace
257	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]          IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kStreamsInfo)  {	  if(nid!=    NID.kStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	93	None	replace
258	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  kSIGNATURE_HEADER_SIZE  [FE]            IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSIGNATURE_HEADER_SIZE)  {	  if(nid!=    NID.kStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kSIGNATURE_HEADER_SIZE	93	None	replace
259	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.zSubStreamsInfo)  {  [CE]  cannot  find  symbol  zSubStreamsInfo  [FE]              IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.zSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.zSubStreamsInfo)  {	  if(nid!=    NID.kStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  zSubStreamsInfo	93	None	replace
260	[BUG]  [BUGGY]  if  (nid!=  NID.kStreamsInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.kStreamsInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.kStreamsInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if    (nid!=    NID.kStreamsInfo    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	68	None	replace
261	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    &&    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	77	12	replace
262	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    &&    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	77	12	replace
263	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	72	12	replace
264	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	72	12	replace
265	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	72	12	replace
266	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid!=  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	72	12	replace
267	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	72	12	replace
268	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	72	12	replace
269	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  kStart  [FE]          IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	72	None	replace
270	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]            IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	72	12	replace
271	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]            IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	72	12	replace
272	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  +  1);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  +  1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
273	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  -  1);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  -  1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
274	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  *  2);  [CE]  class,  interface,  or  enum  expected  [FE]                      NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  *  2);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  *  2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
275	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  +  2);  [CE]  class,  interface,  or  enum  expected  [FE]                        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  +  2);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  +  2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
276	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
277	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  -  2);  [CE]  class,  interface,  or  enum  expected  [FE]                            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  -  2);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length()  -  2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
278	[BUG]  [BUGGY]  if  (nid  ==  NID.kStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.kStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid  ==  NID.kStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	69	None	replace
279	[BUG]  [BUGGY]  if  (nid  ==  NID.BACKSLASH)  {  [CE]  cannot  find  symbol  BACKSLASH  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.BACKSLASH)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid  ==  NID.BACKSLASH)  {	  if    (nid    ==    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  BACKSLASH	69	None	replace
280	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockStreams)  {  [CE]  cannot  find  symbol  kBlockStreams  [FE]            IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockStreams)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockStreams)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kBlockStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockStreams	95	None	replace
281	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBlockStreamsInfo)  {  [CE]  cannot  find  symbol  kBlockStreamsInfo  [FE]              IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBlockStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBlockStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kBlockStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockStreamsInfo	95	None	replace
282	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockStreams)  {  [CE]  cannot  find  symbol  kBlockStreams  [FE]                IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockStreams)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockStreams)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kBlockStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockStreams	95	None	replace
283	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockSize)  {  [CE]  cannot  find  symbol  kBlockSize  [FE]                  IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockSize)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockSize)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kBlockStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockSize	95	None	replace
284	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.KBBlockStreams)  {  [CE]  cannot  find  symbol  KBBlockStreams  [FE]                    IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.KBBlockStreams)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.KBBlockStreams)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kBlockStreams)    {    	non-compiled	[CE]  cannot  find  symbol  KBBlockStreams	95	None	replace
285	[BUG]  [BUGGY]  if(nid  ==  NID.zSubStreamsInfo  ||  nid  ==  NID.zSubStreamsInfo)  {  [CE]  cannot  find  symbol  zSubStreamsInfo  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.zSubStreamsInfo  ||  nid  ==  NID.zSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.zSubStreamsInfo  ||  nid  ==  NID.zSubStreamsInfo)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  zSubStreamsInfo	35	None	replace
286	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  class,  interface,  or  enum  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
287	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [CE]  class,  interface,  or  enum  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
288	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
289	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	32	None	add
290	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
291	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
292	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
293	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
294	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	65	12	replace
295	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	65	12	replace
296	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	65	12	replace
297	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	65	12	replace
298	[BUG]  [BUGGY]  if(nid  ==  NID.kStart  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  kStart  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kStart  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kStart  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	81	None	replace
299	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	81	12	replace
300	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	81	12	replace
301	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	81	12	replace
302	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	81	12	replace
303	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  kSIGNATURE_HEADER_SIZE  [FE]          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kSIGNATURE_HEADER_SIZE	85	None	replace
304	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.K_SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  K_SIGNATURE_HEADER_SIZE  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.K_SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.K_SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  K_SIGNATURE_HEADER_SIZE	85	None	replace
305	[BUG]  [BUGGY]  if(nid.length  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [CE]  int  cannot  be  dereferenced  [FE]        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid.length  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid.length  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  if(nid.length    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	90	None	replace
306	[BUG]  [BUGGY]  if(nid.kEnd  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  int  cannot  be  dereferenced  [FE]          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid.kEnd  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid.kEnd  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid.length    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	90	None	replace
307	[BUG]  [BUGGY]  if(nid.length  ==  NID.kEnd  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  int  cannot  be  dereferenced  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid.length  ==  NID.kEnd  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid.length  ==  NID.kEnd  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid.length    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	90	None	replace
308	[BUG]  [BUGGY]  if(nid.length  ==  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  int  cannot  be  dereferenced  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid.length  ==  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid.length  ==  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid.length    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	90	None	replace
309	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  +  1);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  +  1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
310	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  -  1);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  -  1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
311	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  -  2);  [CE]  class,  interface,  or  enum  expected  [FE]                                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  -  2);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  -  2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
312	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  +  2);  [CE]  class,  interface,  or  enum  expected  [FE]                                    NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  +  2);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  +  2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
313	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  +  6);  [CE]  class,  interface,  or  enum  expected  [FE]                                      NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  +  6);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length()  +  6);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
314	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
315	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kEnd  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kEnd  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  NID.kEnd  ||  nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
316	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
317	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
318	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  If(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  If(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    If(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	40	None	add
319	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
320	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kEnd  ||  nid  >=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kEnd  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  NID.kEnd  ||  nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
321	[BUG]  [BUGGY]  if  (nid!=  NID.BACKSLASH)  {  [CE]  cannot  find  symbol  BACKSLASH  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.BACKSLASH)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.BACKSLASH)  {	  if    (nid!=    NID.KStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  BACKSLASH	70	None	replace
322	[BUG]  [BUGGY]  if  (nid!=  NID.BASE_SIZE)  {  [CE]  cannot  find  symbol  BASE_SIZE  [FE]                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.BASE_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.BASE_SIZE)  {	  if    (nid!=    NID.KStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  BASE_SIZE	70	None	replace
323	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
324	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
325	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
326	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >>  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >>  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >>  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
327	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  If(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  If(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    If(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	42	None	add
328	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
329	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
330	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders.size());  [CE]  class,  interface,  or  enum  expected  [FE]                        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders.size());  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders.size());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
331	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.size());  [CE]  class,  interface,  or  enum  expected  [FE]                          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.size());  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.size());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
332	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length.size());  [CE]  class,  interface,  or  enum  expected  [FE]                            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length.size());  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length.size());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
333	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size()  -  1);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size()  -  1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
334	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());  [CE]  class,  interface,  or  enum  expected  [FE]                                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
335	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(readStreamsInfo.size());  [CE]  class,  interface,  or  enum  expected  [FE]                                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(readStreamsInfo.size());  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(readStreamsInfo.size());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
336	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.length)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.length)  {	  if(nid!=    NID.length    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  length	91	None	replace
337	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.fileName)  {  [CE]  cannot  find  symbol  fileName  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.fileName)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.fileName)  {	  if(nid!=    NID.length    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  fileName	91	None	replace
338	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.BINARY)  {  [CE]  cannot  find  symbol  BINARY  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.BINARY)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.BINARY)  {	  if(nid!=    NID.length    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  BINARY	91	None	replace
339	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
340	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSubStreamsInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
341	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
342	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSubStreamsInfo)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
343	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
344	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
345	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
346	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]                  IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSubStreamsInfo)    {    If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	62	None	add
347	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.readStreamsInfo)  {  [CE]  cannot  find  symbol  readStreamsInfo  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.readStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.readStreamsInfo)  {	  if(nid    ==    NID.readStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  readStreamsInfo	87	None	replace
348	[BUG]  [BUGGY]  if(nid  ==  NID.sIGNATURE_HEADER_SIZE  ||  nid  ==  NID.readStreamsInfo)  {  [CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.sIGNATURE_HEADER_SIZE  ||  nid  ==  NID.readStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.sIGNATURE_HEADER_SIZE  ||  nid  ==  NID.readStreamsInfo)  {	  if(nid    ==    NID.readStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE	87	None	replace
349	[BUG]  [BUGGY]  if(nid  ==  NID.KSubStreamsInfo)  {  [CE]  cannot  find  symbol  KSubStreamsInfo  [FE]                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.KSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.KSubStreamsInfo)  {	  if(nid    ==    NID.readStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  KSubStreamsInfo	87	None	replace
350	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(deferredBlockStreams);  [CE]  class,  interface,  or  enum  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(deferredBlockStreams);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(deferredBlockStreams);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
351	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
352	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
353	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
354	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.length)  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.length)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.length)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
355	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
356	[BUG]  [BUGGY]  byte[]  nextHeaderSize  =  header.readUnsignedByte(0);  [CE]  class,  interface,  or  enum  expected  [FE]                            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  byte[]  nextHeaderSize  =  header.readUnsignedByte(0);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	byte[]  nextHeaderSize  =  header.readUnsignedByte(0);	  byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
357	[BUG]  [BUGGY]  byte[]  nextHeaderSize  =  header.readStreamsInfo();  [CE]  class,  interface,  or  enum  expected  [FE]                              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  byte[]  nextHeaderSize  =  header.readStreamsInfo();  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	byte[]  nextHeaderSize  =  header.readStreamsInfo();	  byte[]    nextHeaderSize    =    header.readUnsignedByte();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
358	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    If    (nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
359	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid!=  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid!=  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    If    (nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
360	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
361	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
362	[BUG]  [BUGGY]  if(nid  ==  NID.kStreamSize  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamSize  [FE]          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kStreamSize  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kStreamSize  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    NID.kStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamSize	85	None	replace
363	[BUG]  [BUGGY]  if(nid  ==  NID.kStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid    ==    NID.kStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	85	None	replace
364	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart)  {  [CE]  cannot  find  symbol  kStart  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	75	None	replace
365	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kLength)  {  [CE]  cannot  find  symbol  kLength  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kLength)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kLength)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	non-compiled	[CE]  cannot  find  symbol  kLength	75	None	replace
366	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {	  if(nid    >=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	67	12	replace
367	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {	  if(nid    >=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	67	12	replace
368	[BUG]  [BUGGY]  if  (nid  ==  NID.kStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.kStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid  ==  NID.kStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if    (nid!=    NID.kStreamsInfo    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	68	None	replace
369	[BUG]  [BUGGY]  if(nid  ==  NID.subStreamsInfo  ||  nid  ==  NID.subStreamsInfo)  {  [CE]  cannot  find  symbol  subStreamsInfo  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.subStreamsInfo  ||  nid  ==  NID.subStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.subStreamsInfo  ||  nid  ==  NID.subStreamsInfo)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  subStreamsInfo	35	None	replace
370	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
371	[BUG]  [BUGGY]  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    If(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
372	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.bytesUnsignedByte)  {  [CE]  cannot  find  symbol  bytesUnsignedByte  [FE]        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.bytesUnsignedByte)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.bytesUnsignedByte)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnsignedByte)    {    	non-compiled	[CE]  cannot  find  symbol  bytesUnsignedByte	79	None	replace
373	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBlockStreamsInfo)  {  [CE]  cannot  find  symbol  kBlockStreamsInfo  [FE]          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBlockStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBlockStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnsignedByte)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockStreamsInfo	79	None	replace
374	[BUG]  [BUGGY]  if  (nid  ==  NID.KStreamsInfo)  {  [CE]  cannot  find  symbol  KStreamsInfo  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.KStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid  ==  NID.KStreamsInfo)  {	  if    (nid!=    NID.KStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  KStreamsInfo	70	None	replace
375	[BUG]  [BUGGY]  if(nid  ==  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  kStart  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	41	None	replace
376	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kFolderBlockStreams)  {  [CE]  cannot  find  symbol  kFolderBlockStreams  [FE]          IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kFolderBlockStreams)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kFolderBlockStreams)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kDeferredBlockStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kFolderBlockStreams	94	None	replace
377	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kEnd    &&    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
378	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kEnd    &&    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
379	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	81	12	replace
380	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	81	12	replace
381	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd())  {  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd())  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd())  {	  if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
382	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	82	12	replace
383	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]        IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	82	12	replace
384	[BUG]  [BUGGY]  if  (nid!=  NID.sIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.sIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.sIGNATURE_HEADER_SIZE)  {	  if    (nid!=    NID.bytesInfo)    {    	non-compiled	[CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE	1	None	replace
385	[BUG]  [BUGGY]  if  (nid!=  NID.sIGNATURE_HEADER_SIZE  ||  nid!=  NID.bytesInfo)  {  [CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.sIGNATURE_HEADER_SIZE  ||  nid!=  NID.bytesInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.sIGNATURE_HEADER_SIZE  ||  nid!=  NID.bytesInfo)  {	  if    (nid!=    NID.bytesInfo)    {    	non-compiled	[CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE	1	None	replace
386	[BUG]  [BUGGY]  If  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  If  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	If  (nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kEnd)    {    If    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
387	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	33	12	replace
388	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	33	12	replace
389	[BUG]  [BUGGY]  if  (nid!=  NID.BAR_SIZE  ||  nid!=  NID.KStreamsInfo)  {  [CE]  cannot  find  symbol  BAR_SIZE  [FE]                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.BAR_SIZE  ||  nid!=  NID.KStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.BAR_SIZE  ||  nid!=  NID.KStreamsInfo)  {	  if    (nid!=    NID.BAR_SIZE    ||    nid!=    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  BAR_SIZE	4	None	replace
390	[BUG]  [BUGGY]  if(nid  ==  null  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  incomparable  types:  int  and  <null>  [FE]        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  null  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  null  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    null    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	29	None	replace
391	[BUG]  [BUGGY]  if(nid  ==  null  ||  nid  <  NID.kSubStreamsInfo)  {  [CE]  incomparable  types:  int  and  <null>  [FE]          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  null  ||  nid  <  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  null  ||  nid  <  NID.kSubStreamsInfo)  {	  if(nid    ==    null    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	29	None	replace
392	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  kStart  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	72	None	replace
393	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams.length());  [CE]  class,  interface,  or  enum  expected  [FE]                              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams.length());  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams.length());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid.length());    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
394	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    &&    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	77	12	replace
395	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    &&    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	77	12	replace
396	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    &&    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	77	12	replace
397	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    &&    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	77	12	replace
398	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    &&    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	77	12	replace
399	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kEnd  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    &&    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	77	12	replace
400	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  >=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid.length    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	90	12	replace
401	[BUG]  [BUGGY]  if(nid  >=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  >=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid.length    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	90	12	replace
402	[BUG]  [BUGGY]  if(nid.length  ==  NID.KEND  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  int  cannot  be  dereferenced  [FE]          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid.length  ==  NID.KEND  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid.length  ==  NID.KEND  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid.length    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	90	None	replace
403	[BUG]  [BUGGY]  if(nid  ==  NID.KEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  KEnd  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.KEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.KEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid.length    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  KEnd	90	None	replace
404	[BUG]  [BUGGY]  if  (nid!=  NID.kStreamsInfo  ||  nid  ==  NID.kStreams)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.kStreamsInfo  ||  nid  ==  NID.kStreams)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.kStreamsInfo  ||  nid  ==  NID.kStreams)  {	  if    (nid!=    NID.kStreamsInfo    ||    nid    ==    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	88	None	replace
405	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid!=    NID.kEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
406	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kLength)  {  [CE]  cannot  find  symbol  kLength  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kLength)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kLength)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kLength	44	None	replace
407	[BUG]  [BUGGY]  if(nid!=  NID.kStreamsinfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsinfo  [FE]        IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kStreamsinfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kStreamsinfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsinfo	93	None	replace
408	[BUG]  [BUGGY]  if(nid!=  NID.kStreamSize  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamSize  [FE]          IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kStreamSize  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kStreamSize  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamSize	93	None	replace
409	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid!=  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid!=  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    If(nid!=    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
410	[BUG]  [BUGGY]  if(nid!=  NID.sIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE  [FE]          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.sIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.sIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.length    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE	91	None	replace
411	[BUG]  [BUGGY]  if(nid!=  NID.KIND  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  KIND  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.KIND  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.KIND  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.length    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  KIND	91	None	replace
412	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    >=    NID.kEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
413	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    >=    NID.kEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
414	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [CE]  class,  interface,  or  enum  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
415	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [CE]  class,  interface,  or  enum  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
416	[BUG]  [BUGGY]  if(nid!=  NID.blockStreams)  {  [CE]  cannot  find  symbol  blockStreams  [FE]              IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.blockStreams)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.blockStreams)  {	  if(nid!=    NID.bindings)    {    	non-compiled	[CE]  cannot  find  symbol  blockStreams	96	None	replace
417	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.bindings)  {  [CE]  cannot  find  symbol  bindings  [FE]                IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.bindings)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.bindings)  {	  if(nid!=    NID.bindings)    {    	non-compiled	[CE]  cannot  find  symbol  bindings	96	None	replace
418	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	71	None	add
419	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
420	[BUG]  [BUGGY]  [FE]  IOException  [FE]          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSize  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  NID.kSize  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kStart    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	73	12	replace
421	[BUG]  [BUGGY]  if(nid!=  NID.kSize  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSize  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSize  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kStart    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	73	12	replace
422	[BUG]  [BUGGY]  if(nid!=  NID.kInt  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  kInt  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kInt  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kInt  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kStart    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kInt	73	None	replace
423	[BUG]  [BUGGY]  if(nid!=  NID.kType  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  kType  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kType  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kType  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kStart    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kType	73	None	replace
424	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
425	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
426	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kDeadly  terminated)  {  [CE]  ')'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kDeadly  terminated)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kDeadly  terminated)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kDeadly    terminated)    {    	non-compiled	[CE]  ')'  expected	86	None	replace
427	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kDeadly)  {  [CE]  cannot  find  symbol  kDeadly  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kDeadly)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kDeadly)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kDeadly    terminated)    {    	non-compiled	[CE]  cannot  find  symbol  kDeadly	86	None	replace
428	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  int  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  int  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE)    {    int  nid  =  SIGNATURE_HEADER_SIZE;	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
429	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kStart)  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kStart)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kStart)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    NID.kStart)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
430	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kStart)  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kStart)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kStart)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    NID.kStart)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
431	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(currentFolderIndex  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(currentFolderIndex  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	49	12	replace
432	[BUG]  [BUGGY]  if(currentFolderIndex  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(currentFolderIndex  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(currentFolderIndex  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	49	12	replace
433	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBlockStreams)  {  [CE]  cannot  find  symbol  kBlockStreams  [FE]            IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBlockStreams)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBlockStreams)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kBlockStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockStreams	95	None	replace
434	[BUG]  [BUGGY]  if(nid!=  NID.kBlockStreamsInfo  ||  nid  ==  NID.kSubStreams)  {  [CE]  cannot  find  symbol  kBlockStreamsInfo  [FE]              IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kBlockStreamsInfo  ||  nid  ==  NID.kSubStreams)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kBlockStreamsInfo  ||  nid  ==  NID.kSubStreams)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kBlockStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockStreamsInfo	95	None	replace
435	[BUG]  [BUGGY]  if(nid!=  NID.kStreamsInfo  ||  nid  ==  NID.kBlockStreams)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]                IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kStreamsInfo  ||  nid  ==  NID.kBlockStreams)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kStreamsInfo  ||  nid  ==  NID.kBlockStreams)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kBlockStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	95	None	replace
436	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.KBLOCK)  {  [CE]  cannot  find  symbol  KBLOCK  [FE]                  IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.KBLOCK)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.KBLOCK)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kBlockStreams)    {    	non-compiled	[CE]  cannot  find  symbol  KBLOCK	95	None	replace
437	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(file.size());  [CE]  class,  interface,  or  enum  expected  [FE]                        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(file.size());  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(file.size());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
438	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams.size());  [CE]  class,  interface,  or  enum  expected  [FE]                          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams.size());  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(deferredBlockStreams.size());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
439	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kStart  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kStart  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kStart  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
440	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(8));  [CE]  class,  interface,  or  enum  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(8));  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(8));	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
441	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(1));  [CE]  class,  interface,  or  enum  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(1));  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(1));	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
442	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(0));  [CE]  class,  interface,  or  enum  expected  [FE]                      NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(0));  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(0));	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
443	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kEnd)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  IOException  	13	12	replace
444	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kEnd)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kEnd)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  IOException  	13	12	replace
445	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kLength)  {  [CE]  cannot  find  symbol  kLength  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kLength)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kLength)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	non-compiled	[CE]  cannot  find  symbol  kLength	13	None	replace
446	[BUG]  [BUGGY]  if(nid  ==  NID.readBlockStreamsInfo)  {  [CE]  cannot  find  symbol  readBlockStreamsInfo  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.readBlockStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.readBlockStreamsInfo)  {	  if(nid    ==    NID.readStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  readBlockStreamsInfo	87	None	replace
447	[BUG]  [BUGGY]  if(nid  ==  NID.deferredBlockStreams)  {  [CE]  cannot  find  symbol  deferredBlockStreams  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.deferredBlockStreams)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.deferredBlockStreams)  {	  if(nid    ==    NID.readStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  deferredBlockStreams	87	None	replace
448	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  7ZSignature.length);  [CE]  ')'  expected  [FE]                      NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  7ZSignature.length);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  7ZSignature.length);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  ')'  expected	24	None	replace
449	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length-1);  [CE]  class,  interface,  or  enum  expected  [FE]                        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length-1);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length-1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
450	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
451	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    if    (nid    >=    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
452	[BUG]  [BUGGY]  if  (nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.length)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.length)  {	  if    (nid!=    NID.length)    {    	non-compiled	[CE]  cannot  find  symbol  length	2	None	replace
453	[BUG]  [BUGGY]  if  (nid!=  NID.bAR_SIZE  ||  nid!=  NID.kStreamsInfo)  {  [CE]  cannot  find  symbol  bAR_SIZE  [FE]                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.bAR_SIZE  ||  nid!=  NID.kStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.bAR_SIZE  ||  nid!=  NID.kStreamsInfo)  {	  if    (nid!=    NID.BAR_SIZE    ||    nid!=    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  bAR_SIZE	4	None	replace
454	[BUG]  [BUGGY]  if(nid  ==  NID.kUnsignedByte  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  kUnsignedByte  [FE]        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kUnsignedByte  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kUnsignedByte  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnsignedByte)    {    	non-compiled	[CE]  cannot  find  symbol  kUnsignedByte	79	None	replace
455	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnsignedByte)  {  [CE]  cannot  find  symbol  kUnsignedByte  [FE]          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnsignedByte)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnsignedByte)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnsignedByte)    {    	non-compiled	[CE]  cannot  find  symbol  kUnsignedByte	79	None	replace
456	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnsignedByte)  {  [CE]  cannot  find  symbol  kUnsignedByte  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnsignedByte)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnsignedByte)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnsignedByte)    {    	non-compiled	[CE]  cannot  find  symbol  kUnsignedByte	79	None	replace
457	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnsignedByte)  {  [CE]  cannot  find  symbol  kUnsignedByte  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnsignedByte)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnsignedByte)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnsignedByte)    {    	non-compiled	[CE]  cannot  find  symbol  kUnsignedByte	79	None	replace
458	[BUG]  [BUGGY]  if(nid  ==  NID.kStreamsInfo  ||  nid  ==  NID.kEnd)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kStreamsInfo  ||  nid  ==  NID.kEnd)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	11	None	replace
459	[BUG]  [BUGGY]  if(nid  ==  NID.readStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  readStreamsInfo  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.readStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.readStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    NID.readStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  readStreamsInfo	87	None	replace
460	[BUG]  [BUGGY]  if(nid  ==  NID.readStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  readStreamsInfo  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.readStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.readStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.readStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  readStreamsInfo	87	None	replace
461	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.length)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.length)  {	  if(nid!=    NID.length    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  length	91	None	replace
462	[BUG]  [BUGGY]  if(nid  ==  NID.length  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  length  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.length  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.length  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.length    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  length	91	None	replace
463	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  NID.kSubStreamsInfo  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	61	12	replace
464	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	61	12	replace
465	[BUG]  [BUGGY]  if  (nid!=  NID.kBlocksInfo)  {  [CE]  cannot  find  symbol  kBlocksInfo  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.kBlocksInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.kBlocksInfo)  {	  if    (nid!=    NID.bytesInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kBlocksInfo	1	None	replace
466	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  NID.kSubStreamsInfo  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	43	12	replace
467	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  &&  nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	43	12	replace
468	[BUG]  [BUGGY]  if(nid!=  NID.length  ||  nid  ==  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.length  ||  nid  ==  NID.length)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.length  ||  nid  ==  NID.length)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  length	43	None	replace
469	[BUG]  [BUGGY]  If  (nid  ==  NID.kEnd)  {  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  If  (nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	If  (nid  ==  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    If    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
470	[BUG]  [BUGGY]  if(nid  ==  NID.k)  {  [CE]  cannot  find  symbol  k  [FE]                IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.k)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.k)  {	  if    (nid    ==    NID.kEnd)    {    If    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  cannot  find  symbol  k	8	None	replace
471	[BUG]  [BUGGY]  if  (nid!=  NID.kBlockStreamsInfo)  {  [CE]  cannot  find  symbol  kBlockStreamsInfo  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.kBlockStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.kBlockStreamsInfo)  {	  if    (nid!=    NID.BAR_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockStreamsInfo	3	None	replace
472	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSize  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  NID.kSize  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	41	12	replace
473	[BUG]  [BUGGY]  if(nid  ==  NID.kSize  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSize  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSize  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	41	12	replace
474	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  ==  NID.kEnd  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	41	12	replace
475	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid!=  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kEnd  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	41	12	replace
476	[BUG]  [BUGGY]  if(nid  ==  NID.kLength  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  kLength  [FE]        IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kLength  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kLength  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kLength	41	None	replace
477	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
478	[BUG]  [BUGGY]  if(nid!=  NID.binders)  {  [CE]  cannot  find  symbol  binders  [FE]              IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.binders)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.binders)  {	  if(nid!=    NID.bindings)    {    	non-compiled	[CE]  cannot  find  symbol  binders	96	None	replace
479	[BUG]  [BUGGY]  if(nid!=  NID.bindings())  {  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.bindings())  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.bindings())  {	  if(nid!=    NID.bindings)    {    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
480	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  &&  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  NID.kSubStreamsInfo  &&  nid  ==  NID.kEnd)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  IOException  	37	12	replace
481	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  &&  nid  ==  NID.kEnd)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  &&  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  &&  nid  ==  NID.kEnd)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  IOException  	37	12	replace
482	[BUG]  [BUGGY]  if(nid!=  NID.kStreamsInfo  ||  nid  ==  NID.kEnd)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kStreamsInfo  ||  nid  ==  NID.kEnd)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	37	None	replace
483	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size()  -  2);  [CE]  class,  interface,  or  enum  expected  [FE]                        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size()  -  2);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size()  -  2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(inputStreamStack.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
484	[BUG]  [BUGGY]  if(nid!=  NID.kBlock)  {  [CE]  cannot  find  symbol  kBlock  [FE]            IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kBlock)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kBlock)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid!=    NID.kEnd)    {    	non-compiled	[CE]  cannot  find  symbol  kBlock	7	None	replace
485	[BUG]  [BUGGY]  if(nid!=  NID.kStart)  {  [CE]  cannot  find  symbol  kStart  [FE]              IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kStart)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kStart)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid!=    NID.kEnd)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	7	None	replace
486	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
487	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
488	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
489	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockStreams())  {  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockStreams())  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockStreams())  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kBlockStreams)    {    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
490	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  NID.kBlockStreams)  {  [CE]  cannot  find  symbol  kBlockStreams  [FE]              IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  NID.kBlockStreams)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  NID.kBlockStreams)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kBlockStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockStreams	95	None	replace
491	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockStreamsSize)  {  [CE]  cannot  find  symbol  kBlockStreamsSize  [FE]                IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockStreamsSize)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kBlockStreamsSize)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kBlockStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockStreamsSize	95	None	replace
492	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsinfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsinfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kSubStreamsInfo)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kSubStreamsinfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
493	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kStart)  {  [CE]  cannot  find  symbol  kStart  [FE]                IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kStart)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kEnd  ||  nid  ==  NID.kStart)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	9	None	replace
494	[BUG]  [BUGGY]  if(nid!=  NID.subStreamsInfo  ||  nid  ==  NID.subStreamsInfo)  {  [CE]  cannot  find  symbol  subStreamsInfo  [FE]            IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.subStreamsInfo  ||  nid  ==  NID.subStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.subStreamsInfo  ||  nid  ==  NID.subStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    if(nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  subStreamsInfo	18	None	replace
495	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsinfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsinfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsinfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
496	[BUG]  [BUGGY]  if  (nid!=  NID.Badly  terminated  StreamsInfo)  {  [CE]  ')'  expected  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.Badly  terminated  StreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.Badly  terminated  StreamsInfo)  {	  if    (nid!=    NID.KStreamsInfo)    {    	non-compiled	[CE]  ')'  expected	70	None	replace
497	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  else  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  'else'  without  'if'  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  else  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE)    {    else  if(nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  'else'  without  'if'	14	None	add
498	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	72	12	replace
499	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	72	12	replace
500	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	72	12	replace
501	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	72	12	replace
502	[BUG]  [BUGGY]  if(nid!=  NID.k)  {  [CE]  cannot  find  symbol  k  [FE]          IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.k)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.k)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    >=    NID.kEnd)    {    	non-compiled	[CE]  cannot  find  symbol  k	6	None	replace
503	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  NID.kSubStreamsInfo  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    >=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	67	12	replace
504	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    >=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	67	12	replace
505	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  NID.kSubStreamsInfo  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    >=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	67	12	replace
506	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    >=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	67	12	replace
507	[BUG]  [BUGGY]  if(nid  <  =  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  =  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  <  =  NID.kSubStreamsInfo)  {	  if(nid    >=    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
508	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid  >=  NID.kSubStreamsInfo  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    >=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	67	12	replace
509	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  >=  NID.kSubStreamsInfo  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    >=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	67	12	replace
510	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  this.inputStreamStack.toArray(new  ArrayList  <  String>());  [CE]  class,  interface,  or  enum  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  this.inputStreamStack.toArray(new  ArrayList  <  String>());  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  this.inputStreamStack.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
511	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsinfo)  {  [CE]  cannot  find  symbol  kSubStreamsinfo  [FE]        IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsinfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsinfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=    NID.kSubStreamsinfo)    {    	non-compiled	[CE]  cannot  find  symbol  kSubStreamsinfo	97	None	replace
512	[BUG]  [BUGGY]  if(nid!=  NID.kSIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  kSIGNATURE_HEADER_SIZE  [FE]        IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kSIGNATURE_HEADER_SIZE	93	None	replace
513	[BUG]  [BUGGY]  if(nid!=  NID.kStreamsInfo  ||  nid  >=  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]          IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kStreamsInfo  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kStreamsInfo  ||  nid  >=  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	93	None	replace
514	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsinfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsinfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsinfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
515	[BUG]  [BUGGY]  If(nid!=  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  If(nid!=  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	If(nid!=  NID.kStart  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    If(nid!=    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	54	None	replace
516	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  IOException  	75	12	replace
517	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  IOException  	75	12	replace
518	[BUG]  [BUGGY]  if(nid!=  NID.kStreamsInfo  ||  nid  ==  NID.kDeferredBlockStreams)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]          IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kStreamsInfo  ||  nid  ==  NID.kDeferredBlockStreams)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kStreamsInfo  ||  nid  ==  NID.kDeferredBlockStreams)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kDeferredBlockStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	94	None	replace
519	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeferredBlockStreams())  {  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeferredBlockStreams())  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeferredBlockStreams())  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kDeferredBlockStreams)    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
520	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeferREDBlockStreams)  {  [CE]  cannot  find  symbol  kDeferREDBlockStreams  [FE]              IOException      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeferREDBlockStreams)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeferREDBlockStreams)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kDeferredBlockStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kDeferREDBlockStreams	94	None	replace
521	[BUG]  [BUGGY]  if(nid!=  NID.kStart  &&  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  kStart  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kStart  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kStart  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kEnd    &&    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	77	None	replace
522	[BUG]  [BUGGY]  if(nid!=  NID.length  &&  nid  ==  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]      NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.length  &&  nid  ==  NID.length)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.length  &&  nid  ==  NID.length)  {	  if(nid!=    NID.kEnd    &&    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  length	77	None	replace
523	[BUG]  [BUGGY]  if(nid  ==  NID.kDeadly)  {  [CE]  cannot  find  symbol  kDeadly  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kDeadly)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kDeadly)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kDeadly    terminated)    {    	non-compiled	[CE]  cannot  find  symbol  kDeadly	86	None	replace
524	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeadly  1)  {  [CE]  ')'  expected  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeadly  1)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeadly  1)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kDeadly    terminated)    {    	non-compiled	[CE]  ')'  expected	86	None	replace
525	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeadly  terminated)  {  [CE]  ')'  expected  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeadly  terminated)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kDeadly  terminated)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kDeadly    terminated)    {    	non-compiled	[CE]  ')'  expected	86	None	replace
526	[BUG]  [BUGGY]  if(nid  ==  NID.length  ||  nid  ==  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]    NoClassDefFoundError    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.length  ||  nid  ==  NID.length)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.length  ||  nid  ==  NID.length)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  length	35	None	replace
527	[BUG]  [BUGGY]  if(nid  ==  NID.kSIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  kSIGNATURE_HEADER_SIZE  [FE]          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    NID.kStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kSIGNATURE_HEADER_SIZE	85	None	replace
528	[BUG]  [BUGGY]  if(nid  ==  NID.kHighStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  kHighStreamsInfo  [FE]            NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kHighStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kHighStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    NID.kStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kHighStreamsInfo	85	None	replace
529	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kHighStreamsInfo)  {  [CE]  cannot  find  symbol  kHighStreamsInfo  [FE]              NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kHighStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kHighStreamsInfo)  {	  if(nid    ==    NID.kStreamsInfo    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kHighStreamsInfo	85	None	replace
530	[BUG]  [BUGGY]  if(nid  ==  null  ||  nid.length  ==  NID.kSubStreamsInfo)  {  [CE]  incomparable  types:  int  and  <null>  [FE]        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  null  ||  nid.length  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  null  ||  nid.length  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    null    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	29	None	replace
531	[BUG]  [BUGGY]  if(nid  ==  null  ||  nid.kSubStreamsInfo)  {  [CE]  incomparable  types:  int  and  <null>  [FE]          NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  null  ||  nid.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid  ==  null  ||  nid.kSubStreamsInfo)  {	  if(nid    ==    null    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	29	None	replace
532	[BUG]  [BUGGY]  if(nid.length  ==  NID.KEN  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  int  cannot  be  dereferenced  [FE]        NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid.length  ==  NID.KEN  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid.length  ==  NID.KEN  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid.length    ==    NID.kEnd    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	90	None	replace
533	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kPrettyPrinter)  {  [CE]  cannot  find  symbol  kPrettyPrinter  [FE]                NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kPrettyPrinter)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kPrettyPrinter)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kPrettyPrinter	44	None	replace
534	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(length);  [CE]  class,  interface,  or  enum  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(length);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(length);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
535	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(1);  [CE]  class,  interface,  or  enum  expected  [FE]                      NoClassDefFoundError      [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(1);  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(1);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
536	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
537	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID)  {  [BUGGY]      throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
