bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError  [CONTEXT]  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  [BUGGY]  throw  new  IOException( "Badly  terminated  StreamsInfo ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  NID.kSubStreamsInfo)  {	if  (nid  !=  NID.kEnd)  {  	compilable	  [FE]  IOException  	19	12	replace
2	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]    NoClassDefFoundError  [CONTEXT]  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  [BUGGY]  throw  new  IOException( "Badly  terminated  StreamsInfo ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kSubStreamsInfo)  {	if  (nid  !=  NID.kEnd)  {  	compilable	  [FE]  IOException  	19	12	replace
3	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError  [CONTEXT]  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]  throw  new  IOException( "Badly  terminated  StreamsInfo ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if  (nid  ==  NID.kSubStreamsInfo)  {	if  (nid  !=  NID.kEnd)  {  	compilable	  [FE]  NoClassDefFoundError  	19	12	replace
4	[BUG]  [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError  [CONTEXT]  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]  throw  new  IOException( "Badly  terminated  StreamsInfo ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid  ==  NID.kSubStreamsInfo)  {	if  (nid  !=  NID.kEnd)  {  	compilable	  [FE]  NoClassDefFoundError  	19	12	replace
5	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NoClassDefFoundError  [CONTEXT]  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [BUGGY]  if  (nid  ==  NID.kEnd)  {  [BUGGY]  throw  new  IOException( "Badly  terminated  StreamsInfo ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if  (nid  ==  NID.kEnd)  {	if  (nid  !=  NID.kEnd)  {  	compilable	  [FE]  IOException  	19	12	replace
6	[BUG]  [BUGGY]  if  (nid  ==  NID.kEnd)  {  [FE]  IOException  [FE]        NoClassDefFoundError  [CONTEXT]  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [BUGGY]  if  (nid  ==  NID.kEnd)  {  [BUGGY]  throw  new  IOException( "Badly  terminated  StreamsInfo ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid  ==  NID.kEnd)  {	if  (nid  !=  NID.kEnd)  {  	compilable	  [FE]  IOException  	19	12	replace
7	[BUG]  [BUGGY]    [CE]  class,  interface,  or  enum  expected  [FE]          NoClassDefFoundError  [CONTEXT]  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [BUGGY]    [BUGGY]  throw  new  IOException( "Badly  terminated  StreamsInfo ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	  	if  (nid  !=  NID.kEnd)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
8	[BUG]  [BUGGY]  if  (nid!=  NID.kStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]    NoClassDefFoundError  [CONTEXT]  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [BUGGY]  if  (nid!=  NID.kStreamsInfo)  {  [BUGGY]  throw  new  IOException( "Badly  terminated  StreamsInfo ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if  (nid!=  NID.kStreamsInfo)  {	if  (nid  !=  NID.kEnd)  {  	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	19	None	replace
9	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError  [CONTEXT]  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]  throw  new  IOException( "Badly  terminated  StreamsInfo ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	add	if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	if  (nid  !=  NID.kEnd)  {  	compilable	  [FE]  NoClassDefFoundError  	19	12	replace
10	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError  [CONTEXT]  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]  throw  new  IOException( "Badly  terminated  StreamsInfo ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	340	340	12	replace	if(nid!=  NID.kEnd  ||  nid  ==  NID.kSubStreamsInfo)  {	if  (nid  !=  NID.kEnd)  {  	compilable	  [FE]  NoClassDefFoundError  	19	12	replace
