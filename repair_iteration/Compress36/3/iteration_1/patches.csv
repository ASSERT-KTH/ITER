bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	11	12	replace
2	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	11	12	replace
3	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	11	12	replace
4	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	11	12	replace
5	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
6	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
7	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
8	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
9	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
10	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
11	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  int  nid  =  header.readUnsignedByte();  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  header.readUnsignedByte();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
12	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
13	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
14	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  Integer  nid  =  inputStreamStack.size();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  Integer  nid  =  inputStreamStack.size();  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	Integer  nid  =  inputStreamStack.size();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
16	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kUnpackInfo);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kUnpackInfo);  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kUnpackInfo);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
17	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
18	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
19	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
20	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
21	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
22	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
23	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid!=  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	2	12	replace
24	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	2	12	replace
25	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	8	12	replace
26	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	8	12	replace
27	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	8	12	replace
28	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	8	12	replace
29	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	8	12	replace
30	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	8	12	replace
31	[BUG]  [BUGGY]  [FE]  IOException  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	8	12	replace
32	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [FE]  IOException  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	8	12	replace
33	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE)  {  if  (nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE)  {  if  (nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE)    {    if  (nid  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
34	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE)  {  If  (nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE)  {  If  (nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE)    {    If  (nid  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
35	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE)    {    if  (nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
36	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE)  {  if  (nid  <  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE)  {  if  (nid  <  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE)    {    if  (nid  <  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
37	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE)    {    (nid  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  not  a  statement	5	None	add
38	[BUG]  [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    if  (nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
39	[BUG]  [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    if  (nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
40	[BUG]  [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    if  (nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
41	[BUG]  [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    If  (nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
42	[BUG]  [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    if  (nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
43	[BUG]  [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    if  (nid  ==  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
44	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
45	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
46	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
47	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
48	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
49	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
50	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
51	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
52	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	13	12	replace
53	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	13	12	replace
54	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	13	12	replace
55	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	13	12	replace
56	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	13	12	replace
57	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	13	12	replace
58	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	13	12	replace
59	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	13	12	replace
60	[BUG]  [BUGGY]  [FE]  IOException  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	13	12	replace
61	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	13	12	replace
62	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	13	12	replace
63	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	13	12	replace
64	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
65	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
66	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
67	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  if  (Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  if  (Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    if  (Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
68	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
69	[BUG]  [BUGGY]  if  (nid  <  =  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  =  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  =  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
70	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.length)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.length)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  length	11	None	replace
71	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	2	12	replace
72	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	2	12	replace
73	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	2	12	replace
74	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	2	12	replace
75	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	13	12	replace
76	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	13	12	replace
77	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
78	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
79	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
80	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.peek();  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.peek();  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  inputStreamStack.peek();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
81	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.size();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  int  nid  =  inputStreamStack.size();  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  inputStreamStack.size();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
82	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if  (nid  >=  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	6	12	replace
83	[BUG]  [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  >=  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	6	12	replace
84	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  if  (NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  if  (NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    if  (NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
85	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
86	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE)  {  int  nid  =  header.readUnsignedByte();  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE)  {  int  nid  =  header.readUnsignedByte();  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE)    {    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
87	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
88	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid);  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid);  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(nid);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
89	[BUG]  [BUGGY]  int  nid  =  NID.kUnpackInfo.length;  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  int  nid  =  NID.kUnpackInfo.length;  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  NID.kUnpackInfo.length;	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
90	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack();  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  getInputStreamStack();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
91	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	8	12	replace
92	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	8	12	replace
93	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	13	12	replace
94	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	13	12	replace
95	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.z)  {  [CE]  cannot  find  symbol  z  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();    [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.z)  {  [BUGGY]    readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.z)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  z	11	None	replace
